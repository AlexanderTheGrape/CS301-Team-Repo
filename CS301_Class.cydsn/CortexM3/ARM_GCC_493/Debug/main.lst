ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	prevVoltage,2,2
 263              		.comm	prevVoltage2,2,2
 264              		.global	displaystring
 265 0009 000000   		.align	2
 266              		.type	displaystring, %object
 267              		.size	displaystring, 64
 268              	displaystring:
 269 000c 43533330 		.ascii	"CS301 2016\012\000"
 269      31203230 
 269      31360A00 
 270 0018 00000000 		.space	52
 270      00000000 
 270      00000000 
 270      00000000 
 270      00000000 
 271              		.comm	line,64,4
 272              		.comm	entry,64,4
 273              		.comm	usbBuffer,64,4
 274              		.comm	buffer_state,32,4
 275              		.comm	system_state,32,4
 276              		.global	prev_movement_state
 277              		.type	prev_movement_state, %object
 278              		.size	prev_movement_state, 1
 279              	prev_movement_state:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 6


 280 004c 03       		.byte	3
 281              		.global	movement_state
 282              		.type	movement_state, %object
 283              		.size	movement_state, 1
 284              	movement_state:
 285 004d 03       		.byte	3
 286              		.global	track_mode
 287              		.bss
 288              		.type	track_mode, %object
 289              		.size	track_mode, 1
 290              	track_mode:
 291 003c 00       		.space	1
 292              		.global	byteCount
 293              		.type	byteCount, %object
 294              		.size	byteCount, 1
 295              	byteCount:
 296 003d 00       		.space	1
 297              		.comm	packet,2,4
 298              		.global	speed
 299              		.data
 300 004e 0000     		.align	3
 301              		.type	speed, %object
 302              		.size	speed, 8
 303              	speed:
 304 0050 00000000 		.word	0
 305 0054 00002E40 		.word	1076756480
 306              		.comm	tracked_direction,4,4
 307              		.global	instructions
 308              		.bss
 309 003e 0000     		.align	2
 310              		.type	instructions, %object
 311              		.size	instructions, 800
 312              	instructions:
 313 0040 00000000 		.space	800
 313      00000000 
 313      00000000 
 313      00000000 
 313      00000000 
 314              		.global	instructionCount
 315              		.align	1
 316              		.type	instructionCount, %object
 317              		.size	instructionCount, 2
 318              	instructionCount:
 319 0360 0000     		.space	2
 320              		.global	instructionLength
 321              		.align	1
 322              		.type	instructionLength, %object
 323              		.size	instructionLength, 2
 324              	instructionLength:
 325 0362 0000     		.space	2
 326              		.global	sensorsDisabled
 327              		.align	2
 328              		.type	sensorsDisabled, %object
 329              		.size	sensorsDisabled, 4
 330              	sensorsDisabled:
 331 0364 00000000 		.space	4
 332              		.global	robot_direction
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 7


 333              		.data
 334              		.align	2
 335              		.type	robot_direction, %object
 336              		.size	robot_direction, 4
 337              	robot_direction:
 338 0058 02000000 		.word	2
 339              		.global	path
 340              		.bss
 341              		.align	2
 342              		.type	path, %object
 343              		.size	path, 9600
 344              	path:
 345 0368 00000000 		.space	9600
 345      00000000 
 345      00000000 
 345      00000000 
 345      00000000 
 346              		.global	start
 347              		.data
 348              		.align	2
 349              		.type	start, %object
 350              		.size	start, 8
 351              	start:
 352 005c 01000000 		.word	1
 353 0060 01000000 		.word	1
 354              		.global	destination
 355              		.align	2
 356              		.type	destination, %object
 357              		.size	destination, 8
 358              	destination:
 359 0064 0D000000 		.word	13
 360 0068 0B000000 		.word	11
 361              		.global	map
 362              		.align	2
 363              		.type	map, %object
 364              		.size	map, 1140
 365              	map:
 366 006c 01000000 		.word	1
 367 0070 01000000 		.word	1
 368 0074 01000000 		.word	1
 369 0078 01000000 		.word	1
 370 007c 01000000 		.word	1
 371 0080 01000000 		.word	1
 372 0084 01000000 		.word	1
 373 0088 01000000 		.word	1
 374 008c 01000000 		.word	1
 375 0090 01000000 		.word	1
 376 0094 01000000 		.word	1
 377 0098 01000000 		.word	1
 378 009c 01000000 		.word	1
 379 00a0 01000000 		.word	1
 380 00a4 01000000 		.word	1
 381 00a8 01000000 		.word	1
 382 00ac 01000000 		.word	1
 383 00b0 01000000 		.word	1
 384 00b4 01000000 		.word	1
 385 00b8 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 8


 386 00bc 00000000 		.word	0
 387 00c0 00000000 		.word	0
 388 00c4 00000000 		.word	0
 389 00c8 00000000 		.word	0
 390 00cc 00000000 		.word	0
 391 00d0 01000000 		.word	1
 392 00d4 00000000 		.word	0
 393 00d8 01000000 		.word	1
 394 00dc 00000000 		.word	0
 395 00e0 00000000 		.word	0
 396 00e4 00000000 		.word	0
 397 00e8 00000000 		.word	0
 398 00ec 00000000 		.word	0
 399 00f0 00000000 		.word	0
 400 00f4 00000000 		.word	0
 401 00f8 00000000 		.word	0
 402 00fc 00000000 		.word	0
 403 0100 01000000 		.word	1
 404 0104 01000000 		.word	1
 405 0108 01000000 		.word	1
 406 010c 01000000 		.word	1
 407 0110 01000000 		.word	1
 408 0114 01000000 		.word	1
 409 0118 00000000 		.word	0
 410 011c 01000000 		.word	1
 411 0120 00000000 		.word	0
 412 0124 01000000 		.word	1
 413 0128 00000000 		.word	0
 414 012c 01000000 		.word	1
 415 0130 00000000 		.word	0
 416 0134 01000000 		.word	1
 417 0138 01000000 		.word	1
 418 013c 01000000 		.word	1
 419 0140 01000000 		.word	1
 420 0144 01000000 		.word	1
 421 0148 00000000 		.word	0
 422 014c 01000000 		.word	1
 423 0150 01000000 		.word	1
 424 0154 00000000 		.word	0
 425 0158 00000000 		.word	0
 426 015c 00000000 		.word	0
 427 0160 01000000 		.word	1
 428 0164 00000000 		.word	0
 429 0168 01000000 		.word	1
 430 016c 00000000 		.word	0
 431 0170 00000000 		.word	0
 432 0174 00000000 		.word	0
 433 0178 01000000 		.word	1
 434 017c 00000000 		.word	0
 435 0180 00000000 		.word	0
 436 0184 00000000 		.word	0
 437 0188 00000000 		.word	0
 438 018c 00000000 		.word	0
 439 0190 01000000 		.word	1
 440 0194 00000000 		.word	0
 441 0198 01000000 		.word	1
 442 019c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 9


 443 01a0 00000000 		.word	0
 444 01a4 01000000 		.word	1
 445 01a8 00000000 		.word	0
 446 01ac 01000000 		.word	1
 447 01b0 00000000 		.word	0
 448 01b4 01000000 		.word	1
 449 01b8 00000000 		.word	0
 450 01bc 01000000 		.word	1
 451 01c0 01000000 		.word	1
 452 01c4 01000000 		.word	1
 453 01c8 01000000 		.word	1
 454 01cc 01000000 		.word	1
 455 01d0 01000000 		.word	1
 456 01d4 01000000 		.word	1
 457 01d8 00000000 		.word	0
 458 01dc 01000000 		.word	1
 459 01e0 00000000 		.word	0
 460 01e4 01000000 		.word	1
 461 01e8 01000000 		.word	1
 462 01ec 00000000 		.word	0
 463 01f0 01000000 		.word	1
 464 01f4 00000000 		.word	0
 465 01f8 00000000 		.word	0
 466 01fc 00000000 		.word	0
 467 0200 00000000 		.word	0
 468 0204 00000000 		.word	0
 469 0208 00000000 		.word	0
 470 020c 00000000 		.word	0
 471 0210 00000000 		.word	0
 472 0214 00000000 		.word	0
 473 0218 00000000 		.word	0
 474 021c 00000000 		.word	0
 475 0220 01000000 		.word	1
 476 0224 00000000 		.word	0
 477 0228 01000000 		.word	1
 478 022c 00000000 		.word	0
 479 0230 01000000 		.word	1
 480 0234 01000000 		.word	1
 481 0238 00000000 		.word	0
 482 023c 01000000 		.word	1
 483 0240 01000000 		.word	1
 484 0244 01000000 		.word	1
 485 0248 01000000 		.word	1
 486 024c 01000000 		.word	1
 487 0250 01000000 		.word	1
 488 0254 01000000 		.word	1
 489 0258 01000000 		.word	1
 490 025c 01000000 		.word	1
 491 0260 00000000 		.word	0
 492 0264 01000000 		.word	1
 493 0268 00000000 		.word	0
 494 026c 01000000 		.word	1
 495 0270 00000000 		.word	0
 496 0274 01000000 		.word	1
 497 0278 01000000 		.word	1
 498 027c 01000000 		.word	1
 499 0280 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 10


 500 0284 00000000 		.word	0
 501 0288 00000000 		.word	0
 502 028c 00000000 		.word	0
 503 0290 00000000 		.word	0
 504 0294 00000000 		.word	0
 505 0298 00000000 		.word	0
 506 029c 00000000 		.word	0
 507 02a0 00000000 		.word	0
 508 02a4 00000000 		.word	0
 509 02a8 00000000 		.word	0
 510 02ac 00000000 		.word	0
 511 02b0 01000000 		.word	1
 512 02b4 00000000 		.word	0
 513 02b8 01000000 		.word	1
 514 02bc 00000000 		.word	0
 515 02c0 00000000 		.word	0
 516 02c4 00000000 		.word	0
 517 02c8 01000000 		.word	1
 518 02cc 01000000 		.word	1
 519 02d0 01000000 		.word	1
 520 02d4 01000000 		.word	1
 521 02d8 01000000 		.word	1
 522 02dc 01000000 		.word	1
 523 02e0 01000000 		.word	1
 524 02e4 01000000 		.word	1
 525 02e8 00000000 		.word	0
 526 02ec 01000000 		.word	1
 527 02f0 01000000 		.word	1
 528 02f4 01000000 		.word	1
 529 02f8 01000000 		.word	1
 530 02fc 01000000 		.word	1
 531 0300 00000000 		.word	0
 532 0304 01000000 		.word	1
 533 0308 01000000 		.word	1
 534 030c 01000000 		.word	1
 535 0310 00000000 		.word	0
 536 0314 01000000 		.word	1
 537 0318 01000000 		.word	1
 538 031c 00000000 		.word	0
 539 0320 00000000 		.word	0
 540 0324 00000000 		.word	0
 541 0328 00000000 		.word	0
 542 032c 00000000 		.word	0
 543 0330 00000000 		.word	0
 544 0334 00000000 		.word	0
 545 0338 00000000 		.word	0
 546 033c 00000000 		.word	0
 547 0340 00000000 		.word	0
 548 0344 00000000 		.word	0
 549 0348 01000000 		.word	1
 550 034c 00000000 		.word	0
 551 0350 00000000 		.word	0
 552 0354 00000000 		.word	0
 553 0358 01000000 		.word	1
 554 035c 00000000 		.word	0
 555 0360 01000000 		.word	1
 556 0364 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 11


 557 0368 00000000 		.word	0
 558 036c 01000000 		.word	1
 559 0370 01000000 		.word	1
 560 0374 01000000 		.word	1
 561 0378 01000000 		.word	1
 562 037c 01000000 		.word	1
 563 0380 00000000 		.word	0
 564 0384 01000000 		.word	1
 565 0388 01000000 		.word	1
 566 038c 01000000 		.word	1
 567 0390 00000000 		.word	0
 568 0394 01000000 		.word	1
 569 0398 00000000 		.word	0
 570 039c 01000000 		.word	1
 571 03a0 00000000 		.word	0
 572 03a4 01000000 		.word	1
 573 03a8 00000000 		.word	0
 574 03ac 01000000 		.word	1
 575 03b0 01000000 		.word	1
 576 03b4 00000000 		.word	0
 577 03b8 00000000 		.word	0
 578 03bc 00000000 		.word	0
 579 03c0 00000000 		.word	0
 580 03c4 00000000 		.word	0
 581 03c8 01000000 		.word	1
 582 03cc 00000000 		.word	0
 583 03d0 00000000 		.word	0
 584 03d4 00000000 		.word	0
 585 03d8 01000000 		.word	1
 586 03dc 00000000 		.word	0
 587 03e0 00000000 		.word	0
 588 03e4 00000000 		.word	0
 589 03e8 01000000 		.word	1
 590 03ec 00000000 		.word	0
 591 03f0 00000000 		.word	0
 592 03f4 00000000 		.word	0
 593 03f8 01000000 		.word	1
 594 03fc 01000000 		.word	1
 595 0400 00000000 		.word	0
 596 0404 01000000 		.word	1
 597 0408 01000000 		.word	1
 598 040c 01000000 		.word	1
 599 0410 00000000 		.word	0
 600 0414 01000000 		.word	1
 601 0418 01000000 		.word	1
 602 041c 01000000 		.word	1
 603 0420 00000000 		.word	0
 604 0424 01000000 		.word	1
 605 0428 01000000 		.word	1
 606 042c 01000000 		.word	1
 607 0430 00000000 		.word	0
 608 0434 01000000 		.word	1
 609 0438 01000000 		.word	1
 610 043c 01000000 		.word	1
 611 0440 00000000 		.word	0
 612 0444 01000000 		.word	1
 613 0448 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 12


 614 044c 00000000 		.word	0
 615 0450 00000000 		.word	0
 616 0454 00000000 		.word	0
 617 0458 01000000 		.word	1
 618 045c 00000000 		.word	0
 619 0460 00000000 		.word	0
 620 0464 00000000 		.word	0
 621 0468 00000000 		.word	0
 622 046c 00000000 		.word	0
 623 0470 00000000 		.word	0
 624 0474 00000000 		.word	0
 625 0478 01000000 		.word	1
 626 047c 00000000 		.word	0
 627 0480 00000000 		.word	0
 628 0484 00000000 		.word	0
 629 0488 00000000 		.word	0
 630 048c 00000000 		.word	0
 631 0490 01000000 		.word	1
 632 0494 01000000 		.word	1
 633 0498 01000000 		.word	1
 634 049c 01000000 		.word	1
 635 04a0 01000000 		.word	1
 636 04a4 01000000 		.word	1
 637 04a8 01000000 		.word	1
 638 04ac 01000000 		.word	1
 639 04b0 01000000 		.word	1
 640 04b4 01000000 		.word	1
 641 04b8 01000000 		.word	1
 642 04bc 01000000 		.word	1
 643 04c0 01000000 		.word	1
 644 04c4 01000000 		.word	1
 645 04c8 01000000 		.word	1
 646 04cc 01000000 		.word	1
 647 04d0 01000000 		.word	1
 648 04d4 01000000 		.word	1
 649 04d8 01000000 		.word	1
 650 04dc 01000000 		.word	1
 651              		.global	food_list
 652              		.align	2
 653              		.type	food_list, %object
 654              		.size	food_list, 48
 655              	food_list:
 656 04e0 05000000 		.word	5
 657 04e4 09000000 		.word	9
 658 04e8 05000000 		.word	5
 659 04ec 03000000 		.word	3
 660 04f0 0D000000 		.word	13
 661 04f4 02000000 		.word	2
 662 04f8 00000000 		.space	24
 662      00000000 
 662      00000000 
 662      00000000 
 662      00000000 
 663              		.global	food_length
 664              		.align	2
 665              		.type	food_length, %object
 666              		.size	food_length, 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 13


 667              	food_length:
 668 0510 03000000 		.word	3
 669 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 670              		.align	2
 671              		.global	BT_txInt
 672              		.thumb
 673              		.thumb_func
 674              		.type	BT_txInt, %function
 675              	BT_txInt:
 676              	.LFB63:
 677              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 134
  29:.\main.c      **** #define U_OFFSET 93
  30:.\main.c      **** 
  31:.\main.c      **** #define U_DEADZONE 90000
  32:.\main.c      **** #define TURN_DEADZONE 50000
  33:.\main.c      **** #define S_DEADZONE 10000
  34:.\main.c      **** #define QUAD_PER_UNIT 140
  35:.\main.c      **** 
  36:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  37:.\main.c      **** uint16 instructionCount = 0;
  38:.\main.c      **** uint16 instructionLength = 0;
  39:.\main.c      **** uint32_t sensorsDisabled = 0;
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t robot_direction = 2;
  42:.\main.c      **** 
  43:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  44:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  45:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  46:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 14


  47:.\main.c      **** 
  48:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  49:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  50:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  51:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  52:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  53:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  54:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  55:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  56:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  57:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  58:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  59:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  60:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  61:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  62:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  63:.\main.c      **** 
  64:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  65:.\main.c      **** //first number is the y coord, second is x
  66:.\main.c      **** //first number is row, second column
  67:.\main.c      **** 
  68:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  69:.\main.c      **** uint32_t food_list[6][2] = {{5, 9},{5,3}, {13, 2}};
  70:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}};
  71:.\main.c      **** uint32_t food_length = 3;
  72:.\main.c      **** 
  73:.\main.c      **** void changeToRF();
  74:.\main.c      **** void changeToBT();
  75:.\main.c      **** void brakeMotor();
  76:.\main.c      **** void driveForwards();
  77:.\main.c      **** void initTurnLeft();
  78:.\main.c      **** void initTurnRight();
  79:.\main.c      **** void inittrackLineZ();
  80:.\main.c      **** void trackLineU();
  81:.\main.c      **** void trackLine();
  82:.\main.c      **** void trackLineZ();
  83:.\main.c      **** void initTrackU();
  84:.\main.c      **** void turnLeft();
  85:.\main.c      **** void turnRight();
  86:.\main.c      **** void initForward();
  87:.\main.c      **** void initTurnU();
  88:.\main.c      **** void turnU();
  89:.\main.c      **** void initBrake();
  90:.\main.c      **** void print_ADC();
  91:.\main.c      **** void Quad_Dec_response();
  92:.\main.c      **** void handle_rx_binary();
  93:.\main.c      **** void readFrontSensors();
  94:.\main.c      **** void print_RF();
  95:.\main.c      **** 
  96:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  97:.\main.c      **** //BT
  98:.\main.c      **** CY_ISR(BT_txInt)
  99:.\main.c      **** {
 678              		.loc 1 99 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 15


 682              		@ link register save eliminated.
 683 0000 80B4     		push	{r7}
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 100:.\main.c      ****     
 101:.\main.c      **** }
 688              		.loc 1 101 0
 689 0004 BD46     		mov	sp, r7
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 0006 5DF8047B 		ldr	r7, [sp], #4
 693              		.cfi_restore 7
 694              		.cfi_def_cfa_offset 0
 695 000a 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE63:
 698              		.size	BT_txInt, .-BT_txInt
 699              		.section	.text.adc_isr,"ax",%progbits
 700              		.align	2
 701              		.global	adc_isr
 702              		.thumb
 703              		.thumb_func
 704              		.type	adc_isr, %function
 705              	adc_isr:
 706              	.LFB64:
 102:.\main.c      **** 
 103:.\main.c      **** //ADC:
 104:.\main.c      **** CY_ISR (adc_isr)
 105:.\main.c      **** {
 707              		.loc 1 105 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 106:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 107:.\main.c      ****     adc_result = ADC_GetResult16();
 717              		.loc 1 107 0
 718 0004 FFF7FEFF 		bl	ADC_GetResult16
 719 0008 0346     		mov	r3, r0
 720 000a 1A46     		mov	r2, r3
 721 000c 044B     		ldr	r3, .L3
 722 000e 1A80     		strh	r2, [r3]	@ movhi
 108:.\main.c      ****     flag_receive_ADC = 1;
 723              		.loc 1 108 0
 724 0010 044B     		ldr	r3, .L3+4
 725 0012 0122     		movs	r2, #1
 726 0014 1A70     		strb	r2, [r3]
 109:.\main.c      ****     flag_print_rf = 1;
 727              		.loc 1 109 0
 728 0016 044B     		ldr	r3, .L3+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 16


 729 0018 0122     		movs	r2, #1
 730 001a 1A70     		strb	r2, [r3]
 110:.\main.c      ****     //LED_Write(~LED_Read());
 111:.\main.c      **** }
 731              		.loc 1 111 0
 732 001c 80BD     		pop	{r7, pc}
 733              	.L4:
 734 001e 00BF     		.align	2
 735              	.L3:
 736 0020 00000000 		.word	adc_result
 737 0024 00000000 		.word	flag_receive_ADC
 738 0028 00000000 		.word	flag_print_rf
 739              		.cfi_endproc
 740              	.LFE64:
 741              		.size	adc_isr, .-adc_isr
 742              		.global	__aeabi_i2d
 743              		.global	__aeabi_dsub
 744              		.global	__aeabi_dcmpge
 745              		.global	__aeabi_dadd
 746              		.section	.text.isr_quad1,"ax",%progbits
 747              		.align	2
 748              		.global	isr_quad1
 749              		.thumb
 750              		.thumb_func
 751              		.type	isr_quad1, %function
 752              	isr_quad1:
 753              	.LFB65:
 112:.\main.c      **** 
 113:.\main.c      **** CY_ISR (isr_quad1)
 114:.\main.c      **** {
 754              		.loc 1 114 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 B0B5     		push	{r4, r5, r7, lr}
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 4, -16
 761              		.cfi_offset 5, -12
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 115:.\main.c      ****     
 116:.\main.c      ****     //LED_Write(~LED_Read());
 117:.\main.c      ****     last_quad_count1 = quad_count1;
 766              		.loc 1 117 0
 767 0004 574B     		ldr	r3, .L13
 768 0006 1A88     		ldrh	r2, [r3]
 769 0008 574B     		ldr	r3, .L13+4
 770 000a 1A80     		strh	r2, [r3]	@ movhi
 118:.\main.c      ****     last_quad_count2 = quad_count2;
 771              		.loc 1 118 0
 772 000c 574B     		ldr	r3, .L13+8
 773 000e 1A88     		ldrh	r2, [r3]
 774 0010 574B     		ldr	r3, .L13+12
 775 0012 1A80     		strh	r2, [r3]	@ movhi
 119:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 17


 776              		.loc 1 119 0
 777 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 778 0018 0346     		mov	r3, r0
 779 001a 1A46     		mov	r2, r3
 780 001c 514B     		ldr	r3, .L13
 781 001e 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 782              		.loc 1 120 0
 783 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 784 0024 0346     		mov	r3, r0
 785 0026 1A46     		mov	r2, r3
 786 0028 504B     		ldr	r3, .L13+8
 787 002a 1A80     		strh	r2, [r3]	@ movhi
 121:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 788              		.loc 1 121 0
 789 002c 4D4B     		ldr	r3, .L13
 790 002e 1B88     		ldrh	r3, [r3]
 791 0030 9AB2     		uxth	r2, r3
 792 0032 4D4B     		ldr	r3, .L13+4
 793 0034 1B88     		ldrh	r3, [r3]
 794 0036 9BB2     		uxth	r3, r3
 795 0038 D31A     		subs	r3, r2, r3
 796 003a 9BB2     		uxth	r3, r3
 797 003c 9AB2     		uxth	r2, r3
 798 003e 4D4B     		ldr	r3, .L13+16
 799 0040 1A80     		strh	r2, [r3]	@ movhi
 122:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 800              		.loc 1 122 0
 801 0042 4A4B     		ldr	r3, .L13+8
 802 0044 1B88     		ldrh	r3, [r3]
 803 0046 9AB2     		uxth	r2, r3
 804 0048 494B     		ldr	r3, .L13+12
 805 004a 1B88     		ldrh	r3, [r3]
 806 004c 9BB2     		uxth	r3, r3
 807 004e D31A     		subs	r3, r2, r3
 808 0050 9BB2     		uxth	r3, r3
 809 0052 9AB2     		uxth	r2, r3
 810 0054 484B     		ldr	r3, .L13+20
 811 0056 1A80     		strh	r2, [r3]	@ movhi
 123:.\main.c      ****     
 124:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 812              		.loc 1 124 0
 813 0058 424B     		ldr	r3, .L13
 814 005a 1B88     		ldrh	r3, [r3]
 815 005c 1BB2     		sxth	r3, r3
 816 005e 002B     		cmp	r3, #0
 817 0060 B8BF     		it	lt
 818 0062 5B42     		rsblt	r3, r3, #0
 819 0064 40F6B832 		movw	r2, #3000
 820 0068 9342     		cmp	r3, r2
 821 006a 17DD     		ble	.L6
 822              		.loc 1 124 0 is_stmt 0 discriminator 1
 823 006c 434B     		ldr	r3, .L13+24
 824 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 825 0070 012B     		cmp	r3, #1
 826 0072 13D0     		beq	.L6
 827              		.loc 1 124 0 discriminator 2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 18


 828 0074 414B     		ldr	r3, .L13+24
 829 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0078 022B     		cmp	r3, #2
 831 007a 0FD0     		beq	.L6
 832              		.loc 1 124 0 discriminator 3
 833 007c 3F4B     		ldr	r3, .L13+24
 834 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 835 0080 072B     		cmp	r3, #7
 836 0082 0BD0     		beq	.L6
 125:.\main.c      ****     {
 126:.\main.c      ****         QuadDec_M1_SetCounter(0);
 837              		.loc 1 126 0 is_stmt 1
 838 0084 0020     		movs	r0, #0
 839 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 127:.\main.c      ****         QuadDec_M2_SetCounter(0);
 840              		.loc 1 127 0
 841 008a 0020     		movs	r0, #0
 842 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 128:.\main.c      ****         quad_count1 = 0;
 843              		.loc 1 128 0
 844 0090 344B     		ldr	r3, .L13
 845 0092 0022     		movs	r2, #0
 846 0094 1A80     		strh	r2, [r3]	@ movhi
 129:.\main.c      ****         quad_count2 = 0;
 847              		.loc 1 129 0
 848 0096 354B     		ldr	r3, .L13+8
 849 0098 0022     		movs	r2, #0
 850 009a 1A80     		strh	r2, [r3]	@ movhi
 851              	.L6:
 130:.\main.c      ****     }
 131:.\main.c      **** 
 132:.\main.c      ****     flag_calc_wheelspeed = 1;
 852              		.loc 1 132 0
 853 009c 384B     		ldr	r3, .L13+28
 854 009e 0122     		movs	r2, #1
 855 00a0 1A70     		strb	r2, [r3]
 133:.\main.c      ****     
 134:.\main.c      ****     
 135:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 856              		.loc 1 135 0
 857 00a2 384B     		ldr	r3, .L13+32
 858 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 00a6 062B     		cmp	r3, #6
 860 00a8 5AD1     		bne	.L5
 861              		.loc 1 135 0 is_stmt 0 discriminator 1
 862 00aa 344B     		ldr	r3, .L13+24
 863 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 00ae 062B     		cmp	r3, #6
 865 00b0 56D1     		bne	.L5
 136:.\main.c      ****     {
 137:.\main.c      ****         //track the distance
 138:.\main.c      ****         accum_dist += quad_diff1;
 866              		.loc 1 138 0 is_stmt 1
 867 00b2 354B     		ldr	r3, .L13+36
 868 00b4 1B88     		ldrh	r3, [r3]
 869 00b6 9AB2     		uxth	r2, r3
 870 00b8 2E4B     		ldr	r3, .L13+16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 19


 871 00ba 1B88     		ldrh	r3, [r3]
 872 00bc 9BB2     		uxth	r3, r3
 873 00be 1344     		add	r3, r3, r2
 874 00c0 9BB2     		uxth	r3, r3
 875 00c2 9AB2     		uxth	r2, r3
 876 00c4 304B     		ldr	r3, .L13+36
 877 00c6 1A80     		strh	r2, [r3]	@ movhi
 139:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 878              		.loc 1 139 0
 879 00c8 2F4B     		ldr	r3, .L13+36
 880 00ca 1B88     		ldrh	r3, [r3]
 881 00cc 1BB2     		sxth	r3, r3
 882 00ce 002B     		cmp	r3, #0
 883 00d0 B8BF     		it	lt
 884 00d2 5B42     		rsblt	r3, r3, #0
 885 00d4 1846     		mov	r0, r3
 886 00d6 FFF7FEFF 		bl	__aeabi_i2d
 887 00da 0446     		mov	r4, r0
 888 00dc 0D46     		mov	r5, r1
 889 00de 2B4B     		ldr	r3, .L13+40
 890 00e0 1B88     		ldrh	r3, [r3]
 891 00e2 1BB2     		sxth	r3, r3
 892 00e4 1846     		mov	r0, r3
 893 00e6 FFF7FEFF 		bl	__aeabi_i2d
 894 00ea 0246     		mov	r2, r0
 895 00ec 0B46     		mov	r3, r1
 896 00ee 1046     		mov	r0, r2
 897 00f0 1946     		mov	r1, r3
 898 00f2 4FF00002 		mov	r2, #0
 899 00f6 264B     		ldr	r3, .L13+44
 900 00f8 FFF7FEFF 		bl	__aeabi_dsub
 901 00fc 0246     		mov	r2, r0
 902 00fe 0B46     		mov	r3, r1
 903 0100 2046     		mov	r0, r4
 904 0102 2946     		mov	r1, r5
 905 0104 FFF7FEFF 		bl	__aeabi_dcmpge
 906 0108 0346     		mov	r3, r0
 907 010a 002B     		cmp	r3, #0
 908 010c 02D0     		beq	.L8
 140:.\main.c      ****         {
 141:.\main.c      ****             reached_target = 1;
 909              		.loc 1 141 0
 910 010e 214B     		ldr	r3, .L13+48
 911 0110 0122     		movs	r2, #1
 912 0112 1A70     		strb	r2, [r3]
 913              	.L8:
 142:.\main.c      ****         }
 143:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad + QUAD_PER_UNIT * 0.5))
 914              		.loc 1 143 0
 915 0114 1C4B     		ldr	r3, .L13+36
 916 0116 1B88     		ldrh	r3, [r3]
 917 0118 1BB2     		sxth	r3, r3
 918 011a 002B     		cmp	r3, #0
 919 011c B8BF     		it	lt
 920 011e 5B42     		rsblt	r3, r3, #0
 921 0120 1846     		mov	r0, r3
 922 0122 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 20


 923 0126 0446     		mov	r4, r0
 924 0128 0D46     		mov	r5, r1
 925 012a 184B     		ldr	r3, .L13+40
 926 012c 1B88     		ldrh	r3, [r3]
 927 012e 1BB2     		sxth	r3, r3
 928 0130 1846     		mov	r0, r3
 929 0132 FFF7FEFF 		bl	__aeabi_i2d
 930 0136 0246     		mov	r2, r0
 931 0138 0B46     		mov	r3, r1
 932 013a 1046     		mov	r0, r2
 933 013c 1946     		mov	r1, r3
 934 013e 4FF00002 		mov	r2, #0
 935 0142 134B     		ldr	r3, .L13+44
 936 0144 FFF7FEFF 		bl	__aeabi_dadd
 937 0148 0246     		mov	r2, r0
 938 014a 0B46     		mov	r3, r1
 939 014c 2046     		mov	r0, r4
 940 014e 2946     		mov	r1, r5
 941 0150 FFF7FEFF 		bl	__aeabi_dcmpge
 942 0154 0346     		mov	r3, r0
 943 0156 002B     		cmp	r3, #0
 944 0158 02D0     		beq	.L5
 144:.\main.c      ****         {
 145:.\main.c      ****             overshot_target = 1;
 945              		.loc 1 145 0
 946 015a 0F4B     		ldr	r3, .L13+52
 947 015c 0122     		movs	r2, #1
 948 015e 1A70     		strb	r2, [r3]
 949              	.L5:
 146:.\main.c      ****         }
 147:.\main.c      ****     }
 148:.\main.c      **** }
 950              		.loc 1 148 0
 951 0160 B0BD     		pop	{r4, r5, r7, pc}
 952              	.L14:
 953 0162 00BF     		.align	2
 954              	.L13:
 955 0164 00000000 		.word	quad_count1
 956 0168 00000000 		.word	last_quad_count1
 957 016c 00000000 		.word	quad_count2
 958 0170 00000000 		.word	last_quad_count2
 959 0174 00000000 		.word	quad_diff1
 960 0178 00000000 		.word	quad_diff2
 961 017c 00000000 		.word	movement_state
 962 0180 00000000 		.word	flag_calc_wheelspeed
 963 0184 00000000 		.word	track_mode
 964 0188 00000000 		.word	accum_dist
 965 018c 00000000 		.word	target_distance_quad
 966 0190 00805140 		.word	1079083008
 967 0194 00000000 		.word	reached_target
 968 0198 00000000 		.word	overshot_target
 969              		.cfi_endproc
 970              	.LFE65:
 971              		.size	isr_quad1, .-isr_quad1
 972              		.section	.text.isr_turn_timer,"ax",%progbits
 973              		.align	2
 974              		.global	isr_turn_timer
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 21


 975              		.thumb
 976              		.thumb_func
 977              		.type	isr_turn_timer, %function
 978              	isr_turn_timer:
 979              	.LFB66:
 149:.\main.c      **** 
 150:.\main.c      **** CY_ISR(isr_turn_timer)
 151:.\main.c      **** {
 980              		.loc 1 151 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 82B0     		sub	sp, sp, #8
 989              		.cfi_def_cfa_offset 16
 990 0004 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
 152:.\main.c      ****     if(movement_state == LTURN)
 992              		.loc 1 152 0
 993 0006 464B     		ldr	r3, .L23
 994 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 995 000a 012B     		cmp	r3, #1
 996 000c 33D1     		bne	.L16
 997              	.LBB2:
 153:.\main.c      ****     {
 154:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 998              		.loc 1 154 0
 999 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1000 0012 0346     		mov	r3, r0
 1001 0014 1A46     		mov	r2, r3
 1002 0016 434B     		ldr	r3, .L23+4
 1003 0018 1B88     		ldrh	r3, [r3]
 1004 001a 1BB2     		sxth	r3, r3
 1005 001c D31A     		subs	r3, r2, r3
 1006 001e 002B     		cmp	r3, #0
 1007 0020 B8BF     		it	lt
 1008 0022 5B42     		rsblt	r3, r3, #0
 1009 0024 404A     		ldr	r2, .L23+8
 1010 0026 82FB0312 		smull	r1, r2, r2, r3
 1011 002a 1112     		asrs	r1, r2, #8
 1012 002c DA17     		asrs	r2, r3, #31
 1013 002e 8A1A     		subs	r2, r1, r2
 1014 0030 4FF45071 		mov	r1, #832
 1015 0034 01FB02F2 		mul	r2, r1, r2
 1016 0038 9A1A     		subs	r2, r3, r2
 1017 003a 1346     		mov	r3, r2	@ movhi
 1018 003c FB80     		strh	r3, [r7, #6]	@ movhi
 155:.\main.c      ****   
 156:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1019              		.loc 1 156 0
 1020 003e FB88     		ldrh	r3, [r7, #6]
 1021 0040 B82B     		cmp	r3, #184
 1022 0042 17D9     		bls	.L17
 1023              		.loc 1 156 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 22


 1024 0044 FB88     		ldrh	r3, [r7, #6]
 1025 0046 E02B     		cmp	r3, #224
 1026 0048 14D8     		bhi	.L17
 1027              		.loc 1 156 0 discriminator 2
 1028 004a 384B     		ldr	r3, .L23+12
 1029 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1030 004e 012B     		cmp	r3, #1
 1031 0050 07D0     		beq	.L18
 1032              		.loc 1 156 0 discriminator 3
 1033 0052 364B     		ldr	r3, .L23+12
 1034 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1035 0056 012B     		cmp	r3, #1
 1036 0058 03D0     		beq	.L18
 1037              		.loc 1 156 0 discriminator 4
 1038 005a 344B     		ldr	r3, .L23+12
 1039 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1040 005e 012B     		cmp	r3, #1
 1041 0060 08D1     		bne	.L17
 1042              	.L18:
 157:.\main.c      ****         {
 158:.\main.c      ****             //movement_state = STOPPED;
 159:.\main.c      ****             brakeMotor();
 1043              		.loc 1 159 0 is_stmt 1
 1044 0062 FFF7FEFF 		bl	brakeMotor
 160:.\main.c      ****             movement_state = prev_movement_state;
 1045              		.loc 1 160 0
 1046 0066 324B     		ldr	r3, .L23+16
 1047 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1048 006a 2D4B     		ldr	r3, .L23
 1049 006c 1A70     		strb	r2, [r3]
 161:.\main.c      ****             Timer_2_Stop();
 1050              		.loc 1 161 0
 1051 006e FFF7FEFF 		bl	Timer_2_Stop
 1052              	.LBE2:
 1053 0072 51E0     		b	.L15
 1054              	.L17:
 1055 0074 50E0     		b	.L15
 1056              	.L16:
 162:.\main.c      ****         }
 163:.\main.c      ****     }
 164:.\main.c      ****     else if (movement_state == RTURN)
 1057              		.loc 1 164 0
 1058 0076 2A4B     		ldr	r3, .L23
 1059 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 007a 022B     		cmp	r3, #2
 1061 007c 33D1     		bne	.L20
 1062              	.LBB3:
 165:.\main.c      ****     {
 166:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1063              		.loc 1 166 0
 1064 007e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1065 0082 0346     		mov	r3, r0
 1066 0084 1A46     		mov	r2, r3
 1067 0086 274B     		ldr	r3, .L23+4
 1068 0088 1B88     		ldrh	r3, [r3]
 1069 008a 1BB2     		sxth	r3, r3
 1070 008c D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 23


 1071 008e 002B     		cmp	r3, #0
 1072 0090 B8BF     		it	lt
 1073 0092 5B42     		rsblt	r3, r3, #0
 1074 0094 244A     		ldr	r2, .L23+8
 1075 0096 82FB0312 		smull	r1, r2, r2, r3
 1076 009a 1112     		asrs	r1, r2, #8
 1077 009c DA17     		asrs	r2, r3, #31
 1078 009e 8A1A     		subs	r2, r1, r2
 1079 00a0 4FF45071 		mov	r1, #832
 1080 00a4 01FB02F2 		mul	r2, r1, r2
 1081 00a8 9A1A     		subs	r2, r3, r2
 1082 00aa 1346     		mov	r3, r2	@ movhi
 1083 00ac BB80     		strh	r3, [r7, #4]	@ movhi
 167:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1084              		.loc 1 167 0
 1085 00ae BB88     		ldrh	r3, [r7, #4]
 1086 00b0 B82B     		cmp	r3, #184
 1087 00b2 17D9     		bls	.L21
 1088              		.loc 1 167 0 is_stmt 0 discriminator 1
 1089 00b4 BB88     		ldrh	r3, [r7, #4]
 1090 00b6 E02B     		cmp	r3, #224
 1091 00b8 14D8     		bhi	.L21
 1092              		.loc 1 167 0 discriminator 2
 1093 00ba 1C4B     		ldr	r3, .L23+12
 1094 00bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1095 00be 012B     		cmp	r3, #1
 1096 00c0 07D0     		beq	.L22
 1097              		.loc 1 167 0 discriminator 3
 1098 00c2 1A4B     		ldr	r3, .L23+12
 1099 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1100 00c6 012B     		cmp	r3, #1
 1101 00c8 03D0     		beq	.L22
 1102              		.loc 1 167 0 discriminator 4
 1103 00ca 184B     		ldr	r3, .L23+12
 1104 00cc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1105 00ce 012B     		cmp	r3, #1
 1106 00d0 08D1     		bne	.L21
 1107              	.L22:
 168:.\main.c      ****         {
 169:.\main.c      ****             //movement_state = STOPPED;
 170:.\main.c      ****             brakeMotor();
 1108              		.loc 1 170 0 is_stmt 1
 1109 00d2 FFF7FEFF 		bl	brakeMotor
 171:.\main.c      ****             movement_state = prev_movement_state;
 1110              		.loc 1 171 0
 1111 00d6 164B     		ldr	r3, .L23+16
 1112 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1113 00da 114B     		ldr	r3, .L23
 1114 00dc 1A70     		strb	r2, [r3]
 172:.\main.c      ****             Timer_2_Stop();
 1115              		.loc 1 172 0
 1116 00de FFF7FEFF 		bl	Timer_2_Stop
 1117              	.LBE3:
 1118 00e2 19E0     		b	.L15
 1119              	.L21:
 1120 00e4 18E0     		b	.L15
 1121              	.L20:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 24


 173:.\main.c      ****         }
 174:.\main.c      ****     }
 175:.\main.c      ****     else if (movement_state == UTURN)
 1122              		.loc 1 175 0
 1123 00e6 0E4B     		ldr	r3, .L23
 1124 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 00ea 072B     		cmp	r3, #7
 1126 00ec 14D1     		bne	.L15
 176:.\main.c      ****     {
 177:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1127              		.loc 1 177 0
 1128 00ee FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1129 00f2 0346     		mov	r3, r0
 1130 00f4 1A46     		mov	r2, r3
 1131 00f6 0B4B     		ldr	r3, .L23+4
 1132 00f8 1B88     		ldrh	r3, [r3]
 1133 00fa 1BB2     		sxth	r3, r3
 1134 00fc D31A     		subs	r3, r2, r3
 1135 00fe 002B     		cmp	r3, #0
 1136 0100 B8BF     		it	lt
 1137 0102 5B42     		rsblt	r3, r3, #0
 1138 0104 CF2B     		cmp	r3, #207
 1139 0106 07DD     		ble	.L15
 178:.\main.c      ****         {
 179:.\main.c      ****             //movement_state = STOPPED;
 180:.\main.c      ****             brakeMotor();
 1140              		.loc 1 180 0
 1141 0108 FFF7FEFF 		bl	brakeMotor
 181:.\main.c      ****             movement_state = prev_movement_state;
 1142              		.loc 1 181 0
 1143 010c 084B     		ldr	r3, .L23+16
 1144 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1145 0110 034B     		ldr	r3, .L23
 1146 0112 1A70     		strb	r2, [r3]
 182:.\main.c      ****             Timer_2_Stop();
 1147              		.loc 1 182 0
 1148 0114 FFF7FEFF 		bl	Timer_2_Stop
 1149              	.L15:
 183:.\main.c      ****         }
 184:.\main.c      ****     }
 185:.\main.c      **** }
 1150              		.loc 1 185 0
 1151 0118 0837     		adds	r7, r7, #8
 1152              		.cfi_def_cfa_offset 8
 1153 011a BD46     		mov	sp, r7
 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 011c 80BD     		pop	{r7, pc}
 1157              	.L24:
 1158 011e 00BF     		.align	2
 1159              	.L23:
 1160 0120 00000000 		.word	movement_state
 1161 0124 00000000 		.word	start_turn_count
 1162 0128 4FECC44E 		.word	1321528399
 1163 012c 00000000 		.word	frontSensors
 1164 0130 00000000 		.word	prev_movement_state
 1165              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 25


 1166              	.LFE66:
 1167              		.size	isr_turn_timer, .-isr_turn_timer
 1168              		.section	.text.Stop_on_line,"ax",%progbits
 1169              		.align	2
 1170              		.global	Stop_on_line
 1171              		.thumb
 1172              		.thumb_func
 1173              		.type	Stop_on_line, %function
 1174              	Stop_on_line:
 1175              	.LFB67:
 186:.\main.c      **** 
 187:.\main.c      **** 
 188:.\main.c      **** CY_ISR (Stop_on_line)
 189:.\main.c      **** {
 1176              		.loc 1 189 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 1, uses_anonymous_args = 0
 1180              		@ link register save eliminated.
 1181 0000 80B4     		push	{r7}
 1182              		.cfi_def_cfa_offset 4
 1183              		.cfi_offset 7, -4
 1184 0002 00AF     		add	r7, sp, #0
 1185              		.cfi_def_cfa_register 7
 190:.\main.c      ****     movement_state = STOPPED;
 1186              		.loc 1 190 0
 1187 0004 054B     		ldr	r3, .L27
 1188 0006 0322     		movs	r2, #3
 1189 0008 1A70     		strb	r2, [r3]
 191:.\main.c      ****     if(movement_state != DRIVE) return;
 1190              		.loc 1 191 0
 1191 000a 044B     		ldr	r3, .L27
 1192 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 000e 002B     		cmp	r3, #0
 1194 0010 00D0     		beq	.L25
 1195 0012 00BF     		nop
 1196              	.L25:
 192:.\main.c      ****     //initTurnLeft();
 193:.\main.c      **** }
 1197              		.loc 1 193 0
 1198 0014 BD46     		mov	sp, r7
 1199              		.cfi_def_cfa_register 13
 1200              		@ sp needed
 1201 0016 5DF8047B 		ldr	r7, [sp], #4
 1202              		.cfi_restore 7
 1203              		.cfi_def_cfa_offset 0
 1204 001a 7047     		bx	lr
 1205              	.L28:
 1206              		.align	2
 1207              	.L27:
 1208 001c 00000000 		.word	movement_state
 1209              		.cfi_endproc
 1210              	.LFE67:
 1211              		.size	Stop_on_line, .-Stop_on_line
 1212              		.section	.rodata
 1213              		.align	2
 1214              	.LC0:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 26


 1215 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1215      74696E67 
 1215      20726F62 
 1215      6F74210D 
 1215      0A00
 1216              		.section	.text.button,"ax",%progbits
 1217              		.align	2
 1218              		.global	button
 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	button, %function
 1222              	button:
 1223              	.LFB68:
 194:.\main.c      **** 
 195:.\main.c      **** CY_ISR (button)
 196:.\main.c      **** {
 1224              		.loc 1 196 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 1, uses_anonymous_args = 0
 1228 0000 80B5     		push	{r7, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 7, -8
 1231              		.cfi_offset 14, -4
 1232 0002 00AF     		add	r7, sp, #0
 1233              		.cfi_def_cfa_register 7
 197:.\main.c      ****     if(BT_ENABLED)
 1234              		.loc 1 197 0
 1235 0004 054B     		ldr	r3, .L31
 1236 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1237 0008 002B     		cmp	r3, #0
 1238 000a 02D0     		beq	.L30
 198:.\main.c      ****     {
 199:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1239              		.loc 1 199 0
 1240 000c 0448     		ldr	r0, .L31+4
 1241 000e FFF7FEFF 		bl	UART_PutString
 1242              	.L30:
 200:.\main.c      ****     }
 201:.\main.c      ****     movement_state = DRIVE;
 1243              		.loc 1 201 0
 1244 0012 044B     		ldr	r3, .L31+8
 1245 0014 0022     		movs	r2, #0
 1246 0016 1A70     		strb	r2, [r3]
 202:.\main.c      **** }
 1247              		.loc 1 202 0
 1248 0018 80BD     		pop	{r7, pc}
 1249              	.L32:
 1250 001a 00BF     		.align	2
 1251              	.L31:
 1252 001c 00000000 		.word	BT_ENABLED
 1253 0020 00000000 		.word	.LC0
 1254 0024 00000000 		.word	movement_state
 1255              		.cfi_endproc
 1256              	.LFE68:
 1257              		.size	button, .-button
 1258              		.section	.text.isr_adcTimer,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 27


 1259              		.align	2
 1260              		.global	isr_adcTimer
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	isr_adcTimer, %function
 1264              	isr_adcTimer:
 1265              	.LFB69:
 203:.\main.c      **** 
 204:.\main.c      **** CY_ISR(isr_adcTimer)
 205:.\main.c      **** {
 1266              		.loc 1 205 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 206:.\main.c      ****     ADC_StartConvert();
 1276              		.loc 1 206 0
 1277 0004 FFF7FEFF 		bl	ADC_StartConvert
 207:.\main.c      **** }
 1278              		.loc 1 207 0
 1279 0008 80BD     		pop	{r7, pc}
 1280              		.cfi_endproc
 1281              	.LFE69:
 1282              		.size	isr_adcTimer, .-isr_adcTimer
 1283 000a 00BF     		.section	.rodata
 1284 0012 0000     		.align	2
 1285              	.LC1:
 1286 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1286      7A6F6E65 
 1286      206C6566 
 1286      740D0A00 
 1287              		.section	.text.isr_deadzone,"ax",%progbits
 1288              		.align	2
 1289              		.global	isr_deadzone
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	isr_deadzone, %function
 1293              	isr_deadzone:
 1294              	.LFB70:
 208:.\main.c      **** 
 209:.\main.c      **** CY_ISR(isr_deadzone)
 210:.\main.c      **** {
 1295              		.loc 1 210 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 80B5     		push	{r7, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 7, -8
 1302              		.cfi_offset 14, -4
 1303 0002 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 28


 211:.\main.c      ****     sensorsDisabled = 0;
 1305              		.loc 1 211 0
 1306 0004 054B     		ldr	r3, .L35
 1307 0006 0022     		movs	r2, #0
 1308 0008 1A60     		str	r2, [r3]
 212:.\main.c      ****     deadzone = 0;
 1309              		.loc 1 212 0
 1310 000a 054B     		ldr	r3, .L35+4
 1311 000c 0022     		movs	r2, #0
 1312 000e 1A70     		strb	r2, [r3]
 213:.\main.c      ****     Timer_Deadzone_Stop();
 1313              		.loc 1 213 0
 1314 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 214:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1315              		.loc 1 214 0
 1316 0014 0348     		ldr	r0, .L35+8
 1317 0016 FFF7FEFF 		bl	UART_PutString
 215:.\main.c      **** }
 1318              		.loc 1 215 0
 1319 001a 80BD     		pop	{r7, pc}
 1320              	.L36:
 1321              		.align	2
 1322              	.L35:
 1323 001c 00000000 		.word	sensorsDisabled
 1324 0020 00000000 		.word	deadzone
 1325 0024 14000000 		.word	.LC1
 1326              		.cfi_endproc
 1327              	.LFE70:
 1328              		.size	isr_deadzone, .-isr_deadzone
 1329              		.section	.rodata
 1330              		.align	2
 1331              	.LC2:
 1332 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1332      20747261 
 1332      76656C3A 
 1332      2025640D 
 1332      0A00
 1333 0036 0000     		.align	2
 1334              	.LC3:
 1335 0038 54726967 		.ascii	"Trigger intersection\015\012\000"
 1335      67657220 
 1335      696E7465 
 1335      72736563 
 1335      74696F6E 
 1336 004f 00       		.align	2
 1337              	.LC4:
 1338 0050 44656164 		.ascii	"Deadzone enter\015\012\000"
 1338      7A6F6E65 
 1338      20656E74 
 1338      65720D0A 
 1338      00
 1339 0061 000000   		.align	2
 1340              	.LC5:
 1341 0064 54617267 		.ascii	"Target dist: %d\015\012\000"
 1341      65742064 
 1341      6973743A 
 1341      2025640D 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 29


 1341      0A00
 1342 0076 0000     		.align	2
 1343              	.LC6:
 1344 0078 696E7374 		.ascii	"instr count:%d\015\012\000"
 1344      7220636F 
 1344      756E743A 
 1344      25640D0A 
 1344      00
 1345 0089 000000   		.align	2
 1346              	.LC7:
 1347 008c 54726967 		.ascii	"Trigger white light\015\012\000"
 1347      67657220 
 1347      77686974 
 1347      65206C69 
 1347      6768740D 
 1348 00a2 0000     		.align	2
 1349              	.LC8:
 1350 00a4 54726967 		.ascii	"Trigger quad\015\012\000"
 1350      67657220 
 1350      71756164 
 1350      0D0A00
 1351              		.section	.text.main,"ax",%progbits
 1352              		.align	2
 1353              		.global	main
 1354              		.thumb
 1355              		.thumb_func
 1356              		.type	main, %function
 1357              	main:
 1358              	.LFB71:
 216:.\main.c      **** 
 217:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 218:.\main.c      **** 
 219:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 220:.\main.c      **** int main()
 221:.\main.c      **** {  
 1359              		.loc 1 221 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 56
 1362              		@ frame_needed = 1, uses_anonymous_args = 0
 1363 0000 80B5     		push	{r7, lr}
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 8EB0     		sub	sp, sp, #56
 1368              		.cfi_def_cfa_offset 64
 1369 0004 00AF     		add	r7, sp, #0
 1370              		.cfi_def_cfa_register 7
 222:.\main.c      **** 
 223:.\main.c      **** // ----- INITIALIZATIONS ----------
 224:.\main.c      ****     CYGlobalIntEnable;
 1371              		.loc 1 224 0
 1372              	@ 224 ".\main.c" 1
 1373 0006 62B6     		CPSIE   i
 1374              	@ 0 "" 2
 225:.\main.c      ****     if(ENABLE_PWM)
 226:.\main.c      ****     {
 227:.\main.c      ****         PWM_1_Start();// starting the pwm
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 30


 1375              		.loc 1 227 0
 1376              		.thumb
 1377 0008 FFF7FEFF 		bl	PWM_1_Start
 228:.\main.c      ****         PWM_2_Start();// starting the pwm
 1378              		.loc 1 228 0
 1379 000c FFF7FEFF 		bl	PWM_2_Start
 229:.\main.c      ****     }
 230:.\main.c      ****     
 231:.\main.c      ****     if(ENABLE_ADC)
 232:.\main.c      ****     {
 233:.\main.c      ****         ADC_Start();
 234:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 235:.\main.c      ****         //ADC_StartConvert();
 236:.\main.c      ****         
 237:.\main.c      ****         //start the ADC timer for software trigger mode
 238:.\main.c      ****         Timer_TS_Start();
 239:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 240:.\main.c      ****     }
 241:.\main.c      ****     
 242:.\main.c      ****     if (ENABLE_QUAD)
 243:.\main.c      ****     {
 244:.\main.c      ****         QuadDec_M1_Start();
 1380              		.loc 1 244 0
 1381 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 245:.\main.c      ****         QuadDec_M2_Start();
 1382              		.loc 1 245 0
 1383 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 246:.\main.c      ****         
 247:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1384              		.loc 1 247 0
 1385 0018 AD48     		ldr	r0, .L98
 1386 001a FFF7FEFF 		bl	isr_quad1_StartEx
 248:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1387              		.loc 1 248 0
 1388 001e AD48     		ldr	r0, .L98+4
 1389 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 249:.\main.c      ****         
 250:.\main.c      ****         Timer_1_Start();
 1390              		.loc 1 250 0
 1391 0024 FFF7FEFF 		bl	Timer_1_Start
 251:.\main.c      ****     }
 252:.\main.c      ****     
 253:.\main.c      ****     if(ENABLE_STOP){
 254:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 255:.\main.c      ****         
 256:.\main.c      ****     }
 257:.\main.c      ****     isr_button_StartEx(button);
 1392              		.loc 1 257 0
 1393 0028 AB48     		ldr	r0, .L98+8
 1394 002a FFF7FEFF 		bl	isr_button_StartEx
 258:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1395              		.loc 1 258 0
 1396 002e AB48     		ldr	r0, .L98+12
 1397 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 259:.\main.c      **** 
 260:.\main.c      ****     // ------USB SETUP ----------------    
 261:.\main.c      ****     if (USE_USB){    
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 31


 262:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1398              		.loc 1 262 0
 1399 0034 0020     		movs	r0, #0
 1400 0036 0121     		movs	r1, #1
 1401 0038 FFF7FEFF 		bl	USBUART_Start
 263:.\main.c      ****         if (USBUART_GetConfiguration())
 1402              		.loc 1 263 0
 1403 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1404 0040 0346     		mov	r3, r0
 1405 0042 002B     		cmp	r3, #0
 1406 0044 01D0     		beq	.L38
 264:.\main.c      ****             {
 265:.\main.c      ****                  USBUART_CDC_Init();
 1407              		.loc 1 265 0
 1408 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1409              	.L38:
 266:.\main.c      ****             }
 267:.\main.c      ****     }
 268:.\main.c      ****     
 269:.\main.c      ****     if(BIN_ENABLED){
 1410              		.loc 1 269 0
 1411 004a A54B     		ldr	r3, .L98+16
 1412 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1413 004e 002B     		cmp	r3, #0
 1414 0050 01D0     		beq	.L39
 270:.\main.c      ****         changeToRF();
 1415              		.loc 1 270 0
 1416 0052 FFF7FEFF 		bl	changeToRF
 1417              	.L39:
 271:.\main.c      ****     }
 272:.\main.c      ****     
 273:.\main.c      ****     if(BT_ENABLED){
 1418              		.loc 1 273 0
 1419 0056 A34B     		ldr	r3, .L98+20
 1420 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1421 005a 002B     		cmp	r3, #0
 1422 005c 01D0     		beq	.L40
 274:.\main.c      ****         changeToBT();
 1423              		.loc 1 274 0
 1424 005e FFF7FEFF 		bl	changeToBT
 1425              	.L40:
 275:.\main.c      ****     }
 276:.\main.c      ****     
 277:.\main.c      ****     uint16 actionDebounce = 0;
 1426              		.loc 1 277 0
 1427 0062 0023     		movs	r3, #0
 1428 0064 FB86     		strh	r3, [r7, #54]	@ movhi
 1429              	.L95:
 278:.\main.c      ****     
 279:.\main.c      ****     //usbPutString("Started");
 280:.\main.c      ****     for(;;)
 281:.\main.c      ****     {
 282:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 283:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1430              		.loc 1 283 0
 1431 0066 FFF7FEFF 		bl	Quad_Dec_response
 284:.\main.c      ****         if(BIN_ENABLED == 1)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 32


 1432              		.loc 1 284 0
 1433 006a 9D4B     		ldr	r3, .L98+16
 1434 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1435 006e 012B     		cmp	r3, #1
 1436 0070 03D1     		bne	.L41
 285:.\main.c      ****         {
 286:.\main.c      ****             handle_rx_binary();
 1437              		.loc 1 286 0
 1438 0072 FFF7FEFF 		bl	handle_rx_binary
 287:.\main.c      ****             print_RF();
 1439              		.loc 1 287 0
 1440 0076 FFF7FEFF 		bl	print_RF
 1441              	.L41:
 288:.\main.c      ****         }
 289:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 290:.\main.c      ****        
 291:.\main.c      ****         readFrontSensors(frontSensors);
 1442              		.loc 1 291 0
 1443 007a 9B48     		ldr	r0, .L98+24
 1444 007c FFF7FEFF 		bl	readFrontSensors
 292:.\main.c      ****         
 293:.\main.c      ****         switch(track_mode)
 1445              		.loc 1 293 0
 1446 0080 9A4B     		ldr	r3, .L98+28
 1447 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0084 072B     		cmp	r3, #7
 1449 0086 00F21483 		bhi	.L42
 1450 008a 01A2     		adr	r2, .L44
 1451 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1452              		.p2align 2
 1453              	.L44:
 1454 0090 B3060000 		.word	.L42+1
 1455 0094 B3060000 		.word	.L42+1
 1456 0098 B3060000 		.word	.L42+1
 1457 009c B1000000 		.word	.L47+1
 1458 00a0 B3060000 		.word	.L42+1
 1459 00a4 F5000000 		.word	.L49+1
 1460 00a8 1B010000 		.word	.L50+1
 1461 00ac 1B010000 		.word	.L50+1
 1462              		.p2align 1
 1463              	.L47:
 294:.\main.c      ****         {
 295:.\main.c      ****             case SQUARE_TRACK:
 296:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1464              		.loc 1 296 0
 1465 00b0 8F4B     		ldr	r3, .L98+32
 1466 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 00b4 012B     		cmp	r3, #1
 1468 00b6 1CD0     		beq	.L51
 1469              		.loc 1 296 0 is_stmt 0 discriminator 1
 1470 00b8 8D4B     		ldr	r3, .L98+32
 1471 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1472 00bc 022B     		cmp	r3, #2
 1473 00be 18D0     		beq	.L51
 297:.\main.c      ****                 {
 298:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1474              		.loc 1 298 0 is_stmt 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 33


 1475 00c0 894B     		ldr	r3, .L98+24
 1476 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1477 00c4 012B     		cmp	r3, #1
 1478 00c6 06D1     		bne	.L52
 1479              		.loc 1 298 0 is_stmt 0 discriminator 1
 1480 00c8 874B     		ldr	r3, .L98+24
 1481 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1482 00cc 012B     		cmp	r3, #1
 1483 00ce 02D1     		bne	.L52
 299:.\main.c      ****                         initTurnLeft();
 1484              		.loc 1 299 0 is_stmt 1
 1485 00d0 FFF7FEFF 		bl	initTurnLeft
 1486 00d4 0DE0     		b	.L51
 1487              	.L52:
 300:.\main.c      ****                     }
 301:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1488              		.loc 1 301 0
 1489 00d6 844B     		ldr	r3, .L98+24
 1490 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1491 00da 012B     		cmp	r3, #1
 1492 00dc 06D1     		bne	.L53
 1493              		.loc 1 301 0 is_stmt 0 discriminator 1
 1494 00de 824B     		ldr	r3, .L98+24
 1495 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1496 00e2 012B     		cmp	r3, #1
 1497 00e4 02D1     		bne	.L53
 302:.\main.c      ****                     {
 303:.\main.c      ****                         initTurnRight();
 1498              		.loc 1 303 0 is_stmt 1
 1499 00e6 FFF7FEFF 		bl	initTurnRight
 1500 00ea 02E0     		b	.L51
 1501              	.L53:
 304:.\main.c      ****                     }
 305:.\main.c      ****                     else inittrackLineZ();
 1502              		.loc 1 305 0
 1503 00ec FFF7FEFF 		bl	inittrackLineZ
 306:.\main.c      ****                 }
 307:.\main.c      ****             break;
 1504              		.loc 1 307 0
 1505 00f0 DFE2     		b	.L42
 1506              	.L51:
 1507 00f2 DEE2     		b	.L42
 1508              	.L49:
 308:.\main.c      ****             case NO_TRACK:
 309:.\main.c      ****             break;
 310:.\main.c      ****             case CURVE_TRACK:
 311:.\main.c      ****             break;
 312:.\main.c      ****             case U_TRACK:
 313:.\main.c      ****             break;
 314:.\main.c      ****             case QUAD_STOP:
 315:.\main.c      ****             break;
 316:.\main.c      ****             case RF_STOP:
 317:.\main.c      ****                 if(initial_pos_valid == 1)
 1509              		.loc 1 317 0
 1510 00f4 7F4B     		ldr	r3, .L98+36
 1511 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1512 00f8 012B     		cmp	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 34


 1513 00fa 0DD1     		bne	.L54
 318:.\main.c      ****                 {
 319:.\main.c      ****                     //changeToBT();
 320:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 321:.\main.c      ****                     //changeToRF();
 322:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1514              		.loc 1 322 0
 1515 00fc 7E4B     		ldr	r3, .L98+40
 1516 00fe 5A88     		ldrh	r2, [r3, #2]
 1517 0100 7E4B     		ldr	r3, .L98+44
 1518 0102 1A80     		strh	r2, [r3]	@ movhi
 323:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1519              		.loc 1 323 0
 1520 0104 7C4B     		ldr	r3, .L98+40
 1521 0106 9A88     		ldrh	r2, [r3, #4]
 1522 0108 7D4B     		ldr	r3, .L98+48
 1523 010a 1A80     		strh	r2, [r3]	@ movhi
 324:.\main.c      ****                     initial_pos_valid = 2;
 1524              		.loc 1 324 0
 1525 010c 794B     		ldr	r3, .L98+36
 1526 010e 0222     		movs	r2, #2
 1527 0110 1A70     		strb	r2, [r3]
 325:.\main.c      ****                     initForward();
 1528              		.loc 1 325 0
 1529 0112 FFF7FEFF 		bl	initForward
 326:.\main.c      ****                 }
 327:.\main.c      ****             break;
 1530              		.loc 1 327 0
 1531 0116 CCE2     		b	.L42
 1532              	.L54:
 1533 0118 CBE2     		b	.L42
 1534              	.L50:
 328:.\main.c      ****             case MAP_TRAVERSE:
 329:.\main.c      ****             case DEST_TEST:
 330:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1535              		.loc 1 330 0
 1536 011a 754B     		ldr	r3, .L98+32
 1537 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 011e 012B     		cmp	r3, #1
 1539 0120 00F0C682 		beq	.L55
 1540              		.loc 1 330 0 is_stmt 0 discriminator 1
 1541 0124 724B     		ldr	r3, .L98+32
 1542 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1543 0128 022B     		cmp	r3, #2
 1544 012a 00F0C182 		beq	.L55
 1545              		.loc 1 330 0 discriminator 2
 1546 012e 704B     		ldr	r3, .L98+32
 1547 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 0132 072B     		cmp	r3, #7
 1549 0134 00F0BC82 		beq	.L55
 1550              	.LBB4:
 331:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 332:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1551              		.loc 1 332 0 is_stmt 1
 1552 0138 724B     		ldr	r3, .L98+52
 1553 013a 1B88     		ldrh	r3, [r3]
 1554 013c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 35


 1555 013e 724B     		ldr	r3, .L98+56
 1556 0140 9B5C     		ldrb	r3, [r3, r2]
 1557 0142 87F83530 		strb	r3, [r7, #53]
 333:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1558              		.loc 1 333 0
 1559 0146 684B     		ldr	r3, .L98+24
 1560 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1561 014a 012B     		cmp	r3, #1
 1562 014c 03D1     		bne	.L56
 1563              		.loc 1 333 0 is_stmt 0 discriminator 1
 1564 014e 664B     		ldr	r3, .L98+24
 1565 0150 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1566 0152 012B     		cmp	r3, #1
 1567 0154 09D0     		beq	.L57
 1568              	.L56:
 1569              		.loc 1 333 0 discriminator 3
 1570 0156 644B     		ldr	r3, .L98+24
 1571 0158 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1572 015a 012B     		cmp	r3, #1
 1573 015c 40F02081 		bne	.L58
 1574              		.loc 1 333 0 discriminator 4
 1575 0160 614B     		ldr	r3, .L98+24
 1576 0162 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1577 0164 012B     		cmp	r3, #1
 1578 0166 40F01B81 		bne	.L58
 1579              	.L57:
 334:.\main.c      ****                         if(sensorsDisabled == 0)
 1580              		.loc 1 334 0 is_stmt 1
 1581 016a 684B     		ldr	r3, .L98+60
 1582 016c 1B68     		ldr	r3, [r3]
 1583 016e 002B     		cmp	r3, #0
 1584 0170 40F01581 		bne	.L59
 335:.\main.c      ****                         {
 336:.\main.c      ****                             actionDebounce++;
 1585              		.loc 1 336 0
 1586 0174 FB8E     		ldrh	r3, [r7, #54]
 1587 0176 0133     		adds	r3, r3, #1
 1588 0178 FB86     		strh	r3, [r7, #54]	@ movhi
 337:.\main.c      ****                             if(actionDebounce >= 500)
 1589              		.loc 1 337 0
 1590 017a FB8E     		ldrh	r3, [r7, #54]
 1591 017c B3F5FA7F 		cmp	r3, #500
 1592 0180 C0F00D81 		bcc	.L59
 1593              	.LBB5:
 338:.\main.c      ****                             {
 339:.\main.c      ****                                 char mes[16];
 340:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1594              		.loc 1 340 0
 1595 0184 624B     		ldr	r3, .L98+64
 1596 0186 1B88     		ldrh	r3, [r3]
 1597 0188 1BB2     		sxth	r3, r3
 1598 018a 07F12002 		add	r2, r7, #32
 1599 018e 1046     		mov	r0, r2
 1600 0190 6049     		ldr	r1, .L98+68
 1601 0192 1A46     		mov	r2, r3
 1602 0194 FFF7FEFF 		bl	sprintf
 341:.\main.c      ****                                  UART_PutString(mes);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 36


 1603              		.loc 1 341 0
 1604 0198 07F12003 		add	r3, r7, #32
 1605 019c 1846     		mov	r0, r3
 1606 019e FFF7FEFF 		bl	UART_PutString
 342:.\main.c      ****                             if(reached_target == 1)
 1607              		.loc 1 342 0
 1608 01a2 5D4B     		ldr	r3, .L98+72
 1609 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1610 01a6 012B     		cmp	r3, #1
 1611 01a8 40F0F980 		bne	.L59
 1612              	.LBB6:
 343:.\main.c      ****                             {
 344:.\main.c      ****                                 if(nextStep == 'D')
 1613              		.loc 1 344 0
 1614 01ac 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1615 01b0 442B     		cmp	r3, #68
 1616 01b2 0CD1     		bne	.L61
 345:.\main.c      ****                                 {
 346:.\main.c      ****                                     instructionCount += 2;
 1617              		.loc 1 346 0
 1618 01b4 534B     		ldr	r3, .L98+52
 1619 01b6 1B88     		ldrh	r3, [r3]
 1620 01b8 0233     		adds	r3, r3, #2
 1621 01ba 9AB2     		uxth	r2, r3
 1622 01bc 514B     		ldr	r3, .L98+52
 1623 01be 1A80     		strh	r2, [r3]	@ movhi
 347:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1624              		.loc 1 347 0
 1625 01c0 504B     		ldr	r3, .L98+52
 1626 01c2 1B88     		ldrh	r3, [r3]
 1627 01c4 1A46     		mov	r2, r3
 1628 01c6 504B     		ldr	r3, .L98+56
 1629 01c8 9B5C     		ldrb	r3, [r3, r2]
 1630 01ca 87F83530 		strb	r3, [r7, #53]
 1631              	.L61:
 348:.\main.c      ****                                 }
 349:.\main.c      ****                                 
 350:.\main.c      ****                                 sensorsDisabled = 1;
 1632              		.loc 1 350 0
 1633 01ce 4F4B     		ldr	r3, .L98+60
 1634 01d0 0122     		movs	r2, #1
 1635 01d2 1A60     		str	r2, [r3]
 351:.\main.c      ****                                 UART_PutString("Trigger intersection\r\n");
 1636              		.loc 1 351 0
 1637 01d4 5148     		ldr	r0, .L98+76
 1638 01d6 FFF7FEFF 		bl	UART_PutString
 352:.\main.c      ****                                 UART_PutString("Deadzone enter\r\n");
 1639              		.loc 1 352 0
 1640 01da 5148     		ldr	r0, .L98+80
 1641 01dc FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****                                 deadzone = 1;
 1642              		.loc 1 353 0
 1643 01e0 504B     		ldr	r3, .L98+84
 1644 01e2 0122     		movs	r2, #1
 1645 01e4 1A70     		strb	r2, [r3]
 354:.\main.c      ****                                 
 355:.\main.c      ****                                 accum_dist = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 37


 1646              		.loc 1 355 0
 1647 01e6 4A4B     		ldr	r3, .L98+64
 1648 01e8 0022     		movs	r2, #0
 1649 01ea 1A80     		strh	r2, [r3]	@ movhi
 356:.\main.c      ****                                 uint8 nextStepDist;
 357:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1650              		.loc 1 357 0
 1651 01ec 454B     		ldr	r3, .L98+52
 1652 01ee 1B88     		ldrh	r3, [r3]
 1653 01f0 1A46     		mov	r2, r3
 1654 01f2 4D4B     		ldr	r3, .L98+88
 1655 01f4 1B88     		ldrh	r3, [r3]
 1656 01f6 053B     		subs	r3, r3, #5
 1657 01f8 9A42     		cmp	r2, r3
 1658 01fa 07DC     		bgt	.L62
 1659              		.loc 1 357 0 is_stmt 0 discriminator 1
 1660 01fc 414B     		ldr	r3, .L98+52
 1661 01fe 1B88     		ldrh	r3, [r3]
 1662 0200 0333     		adds	r3, r3, #3
 1663 0202 414A     		ldr	r2, .L98+56
 1664 0204 D35C     		ldrb	r3, [r2, r3]
 1665 0206 87F83430 		strb	r3, [r7, #52]
 1666 020a 02E0     		b	.L63
 1667              	.L62:
 358:.\main.c      ****                                 else nextStepDist = 0;
 1668              		.loc 1 358 0 is_stmt 1
 1669 020c 0023     		movs	r3, #0
 1670 020e 87F83430 		strb	r3, [r7, #52]
 1671              	.L63:
 359:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1672              		.loc 1 359 0
 1673 0212 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1674 0216 9BB2     		uxth	r3, r3
 1675 0218 1A46     		mov	r2, r3	@ movhi
 1676 021a 9200     		lsls	r2, r2, #2
 1677 021c 1344     		add	r3, r3, r2
 1678 021e 1A46     		mov	r2, r3	@ movhi
 1679 0220 D200     		lsls	r2, r2, #3
 1680 0222 D31A     		subs	r3, r2, r3
 1681 0224 9B00     		lsls	r3, r3, #2
 1682 0226 9BB2     		uxth	r3, r3
 1683 0228 9AB2     		uxth	r2, r3
 1684 022a 404B     		ldr	r3, .L98+92
 1685 022c 1A80     		strh	r2, [r3]	@ movhi
 360:.\main.c      ****                                 
 361:.\main.c      ****                                 
 362:.\main.c      ****                                 
 363:.\main.c      ****                                 switch(nextStep)
 1686              		.loc 1 363 0
 1687 022e 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1688 0232 4C3B     		subs	r3, r3, #76
 1689 0234 092B     		cmp	r3, #9
 1690 0236 7DD8     		bhi	.L96
 1691 0238 01A2     		adr	r2, .L66
 1692 023a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1693 023e 00BF     		.p2align 2
 1694              	.L66:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 38


 1695 0240 77020000 		.word	.L65+1
 1696 0244 35030000 		.word	.L96+1
 1697 0248 35030000 		.word	.L96+1
 1698 024c 35030000 		.word	.L96+1
 1699 0250 35030000 		.word	.L96+1
 1700 0254 35030000 		.word	.L96+1
 1701 0258 95020000 		.word	.L67+1
 1702 025c 69020000 		.word	.L68+1
 1703 0260 35030000 		.word	.L96+1
 1704 0264 B3020000 		.word	.L69+1
 1705              		.p2align 1
 1706              	.L68:
 364:.\main.c      ****                                 {
 365:.\main.c      ****                                     case 'S':
 366:.\main.c      ****                                         inittrackLineZ();
 1707              		.loc 1 366 0
 1708 0268 FFF7FEFF 		bl	inittrackLineZ
 367:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1709              		.loc 1 367 0
 1710 026c 42F21070 		movw	r0, #10000
 1711 0270 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 368:.\main.c      ****                                         //do nothing
 369:.\main.c      ****                                     break;
 1712              		.loc 1 369 0
 1713 0274 5FE0     		b	.L70
 1714              	.L65:
 370:.\main.c      ****                                     case 'L':
 371:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 372:.\main.c      ****                                         initTurnLeft();
 1715              		.loc 1 372 0
 1716 0276 FFF7FEFF 		bl	initTurnLeft
 373:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1717              		.loc 1 373 0
 1718 027a 4CF25030 		movw	r0, #50000
 1719 027e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 374:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1720              		.loc 1 374 0
 1721 0282 2A4B     		ldr	r3, .L98+92
 1722 0284 1B88     		ldrh	r3, [r3]
 1723 0286 9BB2     		uxth	r3, r3
 1724 0288 863B     		subs	r3, r3, #134
 1725 028a 9BB2     		uxth	r3, r3
 1726 028c 9AB2     		uxth	r2, r3
 1727 028e 274B     		ldr	r3, .L98+92
 1728 0290 1A80     		strh	r2, [r3]	@ movhi
 375:.\main.c      ****                                     break;
 1729              		.loc 1 375 0
 1730 0292 50E0     		b	.L70
 1731              	.L67:
 376:.\main.c      ****                                     case 'R':
 377:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 378:.\main.c      ****                                         initTurnRight();
 1732              		.loc 1 378 0
 1733 0294 FFF7FEFF 		bl	initTurnRight
 379:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1734              		.loc 1 379 0
 1735 0298 244B     		ldr	r3, .L98+92
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 39


 1736 029a 1B88     		ldrh	r3, [r3]
 1737 029c 9BB2     		uxth	r3, r3
 1738 029e 863B     		subs	r3, r3, #134
 1739 02a0 9BB2     		uxth	r3, r3
 1740 02a2 9AB2     		uxth	r2, r3
 1741 02a4 214B     		ldr	r3, .L98+92
 1742 02a6 1A80     		strh	r2, [r3]	@ movhi
 380:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 381:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1743              		.loc 1 381 0
 1744 02a8 4CF25030 		movw	r0, #50000
 1745 02ac FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 382:.\main.c      ****                                     break;
 1746              		.loc 1 382 0
 1747 02b0 41E0     		b	.L70
 1748              	.L69:
 383:.\main.c      ****                                     case 'U':
 384:.\main.c      ****                                         // Direction not tracked any more
 385:.\main.c      ****                                         initTurnU();
 1749              		.loc 1 385 0
 1750 02b2 FFF7FEFF 		bl	initTurnU
 386:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1751              		.loc 1 386 0
 1752 02b6 1E48     		ldr	r0, .L98+96
 1753 02b8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 387:.\main.c      ****                                         target_distance_quad -= U_OFFSET;
 1754              		.loc 1 387 0
 1755 02bc 1B4B     		ldr	r3, .L98+92
 1756 02be 1B88     		ldrh	r3, [r3]
 1757 02c0 9BB2     		uxth	r3, r3
 1758 02c2 5D3B     		subs	r3, r3, #93
 1759 02c4 9BB2     		uxth	r3, r3
 1760 02c6 9AB2     		uxth	r2, r3
 1761 02c8 184B     		ldr	r3, .L98+92
 1762 02ca 1A80     		strh	r2, [r3]	@ movhi
 388:.\main.c      ****                                         //target_distance_quad += 208;
 389:.\main.c      ****                                     break;
 1763              		.loc 1 389 0
 1764 02cc 33E0     		b	.L70
 1765              	.L99:
 1766 02ce 00BF     		.align	2
 1767              	.L98:
 1768 02d0 00000000 		.word	isr_quad1
 1769 02d4 00000000 		.word	isr_turn_timer
 1770 02d8 00000000 		.word	button
 1771 02dc 00000000 		.word	isr_deadzone
 1772 02e0 00000000 		.word	BIN_ENABLED
 1773 02e4 00000000 		.word	BT_ENABLED
 1774 02e8 00000000 		.word	frontSensors
 1775 02ec 00000000 		.word	track_mode
 1776 02f0 00000000 		.word	movement_state
 1777 02f4 00000000 		.word	initial_pos_valid
 1778 02f8 00000000 		.word	system_state
 1779 02fc 00000000 		.word	initial_x_pos
 1780 0300 00000000 		.word	initial_y_pos
 1781 0304 00000000 		.word	instructionCount
 1782 0308 00000000 		.word	instructions
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 40


 1783 030c 00000000 		.word	sensorsDisabled
 1784 0310 00000000 		.word	accum_dist
 1785 0314 24000000 		.word	.LC2
 1786 0318 00000000 		.word	reached_target
 1787 031c 38000000 		.word	.LC3
 1788 0320 50000000 		.word	.LC4
 1789 0324 00000000 		.word	deadzone
 1790 0328 00000000 		.word	instructionLength
 1791 032c 00000000 		.word	target_distance_quad
 1792 0330 905F0100 		.word	90000
 1793              	.L96:
 390:.\main.c      ****                                     
 391:.\main.c      ****                                     default:
 392:.\main.c      ****                                         //do nothing
 393:.\main.c      ****                                         break;
 1794              		.loc 1 393 0
 1795 0334 00BF     		nop
 1796              	.L70:
 394:.\main.c      ****                                 }
 395:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1797              		.loc 1 395 0
 1798 0336 9E4B     		ldr	r3, .L100
 1799 0338 1B88     		ldrh	r3, [r3]
 1800 033a 1BB2     		sxth	r3, r3
 1801 033c 002B     		cmp	r3, #0
 1802 033e 02DA     		bge	.L71
 1803              		.loc 1 395 0 is_stmt 0 discriminator 1
 1804 0340 9B4B     		ldr	r3, .L100
 1805 0342 0022     		movs	r2, #0
 1806 0344 1A80     		strh	r2, [r3]	@ movhi
 1807              	.L71:
 396:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1808              		.loc 1 396 0 is_stmt 1
 1809 0346 9A4B     		ldr	r3, .L100
 1810 0348 1B88     		ldrh	r3, [r3]
 1811 034a 1BB2     		sxth	r3, r3
 1812 034c 07F12002 		add	r2, r7, #32
 1813 0350 1046     		mov	r0, r2
 1814 0352 9849     		ldr	r1, .L100+4
 1815 0354 1A46     		mov	r2, r3
 1816 0356 FFF7FEFF 		bl	sprintf
 397:.\main.c      ****                                  UART_PutString(mes);
 1817              		.loc 1 397 0
 1818 035a 07F12003 		add	r3, r7, #32
 1819 035e 1846     		mov	r0, r3
 1820 0360 FFF7FEFF 		bl	UART_PutString
 398:.\main.c      ****                                 
 399:.\main.c      ****                                 Timer_Deadzone_Start();
 1821              		.loc 1 399 0
 1822 0364 FFF7FEFF 		bl	Timer_Deadzone_Start
 400:.\main.c      ****                                 reached_target = 0;
 1823              		.loc 1 400 0
 1824 0368 934B     		ldr	r3, .L100+8
 1825 036a 0022     		movs	r2, #0
 1826 036c 1A70     		strb	r2, [r3]
 401:.\main.c      ****                                 overshot_target = 0;
 1827              		.loc 1 401 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 41


 1828 036e 934B     		ldr	r3, .L100+12
 1829 0370 0022     		movs	r2, #0
 1830 0372 1A70     		strb	r2, [r3]
 402:.\main.c      ****                                 instructionCount += 2;
 1831              		.loc 1 402 0
 1832 0374 924B     		ldr	r3, .L100+16
 1833 0376 1B88     		ldrh	r3, [r3]
 1834 0378 0233     		adds	r3, r3, #2
 1835 037a 9AB2     		uxth	r2, r3
 1836 037c 904B     		ldr	r3, .L100+16
 1837 037e 1A80     		strh	r2, [r3]	@ movhi
 403:.\main.c      ****                                 sprintf(mes, "instr count:%d\r\n", instructionCount);
 1838              		.loc 1 403 0
 1839 0380 8F4B     		ldr	r3, .L100+16
 1840 0382 1B88     		ldrh	r3, [r3]
 1841 0384 1A46     		mov	r2, r3
 1842 0386 07F12003 		add	r3, r7, #32
 1843 038a 1846     		mov	r0, r3
 1844 038c 8D49     		ldr	r1, .L100+20
 1845 038e FFF7FEFF 		bl	sprintf
 404:.\main.c      ****                                 UART_PutString(mes);
 1846              		.loc 1 404 0
 1847 0392 07F12003 		add	r3, r7, #32
 1848 0396 1846     		mov	r0, r3
 1849 0398 FFF7FEFF 		bl	UART_PutString
 1850              	.LBE6:
 1851              	.LBE5:
 334:.\main.c      ****                         {
 1852              		.loc 1 334 0
 1853 039c 88E1     		b	.L55
 1854              	.L59:
 334:.\main.c      ****                         {
 1855              		.loc 1 334 0 is_stmt 0 discriminator 1
 1856 039e 87E1     		b	.L55
 1857              	.L58:
 405:.\main.c      ****                                 
 406:.\main.c      ****                             }
 407:.\main.c      ****                             }
 408:.\main.c      ****                         }
 409:.\main.c      ****                     }
 410:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1858              		.loc 1 410 0 is_stmt 1
 1859 03a0 894B     		ldr	r3, .L100+24
 1860 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1861 03a4 002B     		cmp	r3, #0
 1862 03a6 40F0D480 		bne	.L72
 1863              		.loc 1 410 0 is_stmt 0 discriminator 1
 1864 03aa 874B     		ldr	r3, .L100+24
 1865 03ac 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1866 03ae 002B     		cmp	r3, #0
 1867 03b0 40F0CF80 		bne	.L72
 1868              		.loc 1 410 0 discriminator 2
 1869 03b4 844B     		ldr	r3, .L100+24
 1870 03b6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1871 03b8 002B     		cmp	r3, #0
 1872 03ba 40F0CA80 		bne	.L72
 1873              		.loc 1 410 0 discriminator 3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 42


 1874 03be 824B     		ldr	r3, .L100+24
 1875 03c0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1876 03c2 002B     		cmp	r3, #0
 1877 03c4 40F0C580 		bne	.L72
 1878              		.loc 1 410 0 discriminator 4
 1879 03c8 7F4B     		ldr	r3, .L100+24
 1880 03ca 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1881 03cc 002B     		cmp	r3, #0
 1882 03ce 40F0C080 		bne	.L72
 1883              		.loc 1 410 0 discriminator 5
 1884 03d2 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1885 03d6 552B     		cmp	r3, #85
 1886 03d8 04D0     		beq	.L73
 1887              		.loc 1 410 0 discriminator 6
 1888 03da 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1889 03de 442B     		cmp	r3, #68
 1890 03e0 40F0B780 		bne	.L72
 1891              	.L73:
 411:.\main.c      ****                     {
 412:.\main.c      ****                         if(sensorsDisabled == 0)
 1892              		.loc 1 412 0 is_stmt 1
 1893 03e4 794B     		ldr	r3, .L100+28
 1894 03e6 1B68     		ldr	r3, [r3]
 1895 03e8 002B     		cmp	r3, #0
 1896 03ea 40F0B180 		bne	.L74
 413:.\main.c      ****                         {
 414:.\main.c      ****                                 if(nextStep == 'D')
 1897              		.loc 1 414 0
 1898 03ee 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1899 03f2 442B     		cmp	r3, #68
 1900 03f4 17D1     		bne	.L75
 1901              	.LBB7:
 415:.\main.c      ****                                 {
 416:.\main.c      ****                                     char nextInstruction = instructions[instructionCount+2];
 1902              		.loc 1 416 0
 1903 03f6 724B     		ldr	r3, .L100+16
 1904 03f8 1B88     		ldrh	r3, [r3]
 1905 03fa 0233     		adds	r3, r3, #2
 1906 03fc 744A     		ldr	r2, .L100+32
 1907 03fe D35C     		ldrb	r3, [r2, r3]
 1908 0400 87F83130 		strb	r3, [r7, #49]
 417:.\main.c      ****                                     if(nextInstruction == 'U')
 1909              		.loc 1 417 0
 1910 0404 97F83130 		ldrb	r3, [r7, #49]	@ zero_extendqisi2
 1911 0408 552B     		cmp	r3, #85
 1912 040a 0CD1     		bne	.L75
 418:.\main.c      ****                                     {
 419:.\main.c      ****                                         instructionCount += 2;
 1913              		.loc 1 419 0
 1914 040c 6C4B     		ldr	r3, .L100+16
 1915 040e 1B88     		ldrh	r3, [r3]
 1916 0410 0233     		adds	r3, r3, #2
 1917 0412 9AB2     		uxth	r2, r3
 1918 0414 6A4B     		ldr	r3, .L100+16
 1919 0416 1A80     		strh	r2, [r3]	@ movhi
 420:.\main.c      ****                                         nextStep = instructions[instructionCount];
 1920              		.loc 1 420 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 43


 1921 0418 694B     		ldr	r3, .L100+16
 1922 041a 1B88     		ldrh	r3, [r3]
 1923 041c 1A46     		mov	r2, r3
 1924 041e 6C4B     		ldr	r3, .L100+32
 1925 0420 9B5C     		ldrb	r3, [r3, r2]
 1926 0422 87F83530 		strb	r3, [r7, #53]
 1927              	.L75:
 1928              	.LBE7:
 421:.\main.c      ****                                     }
 422:.\main.c      ****                                 }
 423:.\main.c      ****                                 
 424:.\main.c      ****                                 if(nextStep == 'U')
 1929              		.loc 1 424 0
 1930 0426 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1931 042a 552B     		cmp	r3, #85
 1932 042c 40F09080 		bne	.L74
 425:.\main.c      ****                                 {
 426:.\main.c      ****                                     actionDebounce++;
 1933              		.loc 1 426 0
 1934 0430 FB8E     		ldrh	r3, [r7, #54]
 1935 0432 0133     		adds	r3, r3, #1
 1936 0434 FB86     		strh	r3, [r7, #54]	@ movhi
 427:.\main.c      ****                                     if(actionDebounce >= 2600)
 1937              		.loc 1 427 0
 1938 0436 FB8E     		ldrh	r3, [r7, #54]
 1939 0438 40F62722 		movw	r2, #2599
 1940 043c 9342     		cmp	r3, r2
 1941 043e 40F28780 		bls	.L74
 428:.\main.c      ****                                     {
 429:.\main.c      ****                                         if(reached_target == 1)
 1942              		.loc 1 429 0
 1943 0442 5D4B     		ldr	r3, .L100+8
 1944 0444 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1945 0446 012B     		cmp	r3, #1
 1946 0448 40F08280 		bne	.L74
 1947              	.LBB8:
 430:.\main.c      ****                                         {
 431:.\main.c      ****                                     char mes[16];
 432:.\main.c      ****                                     sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1948              		.loc 1 432 0
 1949 044c 614B     		ldr	r3, .L100+36
 1950 044e 1B88     		ldrh	r3, [r3]
 1951 0450 1BB2     		sxth	r3, r3
 1952 0452 07F11002 		add	r2, r7, #16
 1953 0456 1046     		mov	r0, r2
 1954 0458 5F49     		ldr	r1, .L100+40
 1955 045a 1A46     		mov	r2, r3
 1956 045c FFF7FEFF 		bl	sprintf
 433:.\main.c      ****                                      UART_PutString(mes);
 1957              		.loc 1 433 0
 1958 0460 07F11003 		add	r3, r7, #16
 1959 0464 1846     		mov	r0, r3
 1960 0466 FFF7FEFF 		bl	UART_PutString
 434:.\main.c      ****                                          accum_dist = 0;
 1961              		.loc 1 434 0
 1962 046a 5A4B     		ldr	r3, .L100+36
 1963 046c 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 44


 1964 046e 1A80     		strh	r2, [r3]	@ movhi
 435:.\main.c      ****                                     uint8 nextStepDist;
 436:.\main.c      ****                                     if(instructionCount <= instructionLength - 5) nextStepDist = in
 1965              		.loc 1 436 0
 1966 0470 534B     		ldr	r3, .L100+16
 1967 0472 1B88     		ldrh	r3, [r3]
 1968 0474 1A46     		mov	r2, r3
 1969 0476 594B     		ldr	r3, .L100+44
 1970 0478 1B88     		ldrh	r3, [r3]
 1971 047a 053B     		subs	r3, r3, #5
 1972 047c 9A42     		cmp	r2, r3
 1973 047e 07DC     		bgt	.L76
 1974              		.loc 1 436 0 is_stmt 0 discriminator 1
 1975 0480 4F4B     		ldr	r3, .L100+16
 1976 0482 1B88     		ldrh	r3, [r3]
 1977 0484 0333     		adds	r3, r3, #3
 1978 0486 524A     		ldr	r2, .L100+32
 1979 0488 D35C     		ldrb	r3, [r2, r3]
 1980 048a 87F83330 		strb	r3, [r7, #51]
 1981 048e 02E0     		b	.L77
 1982              	.L76:
 437:.\main.c      ****                                     else nextStepDist = 0;
 1983              		.loc 1 437 0 is_stmt 1
 1984 0490 0023     		movs	r3, #0
 1985 0492 87F83330 		strb	r3, [r7, #51]
 1986              	.L77:
 438:.\main.c      ****                                     
 439:.\main.c      ****                                     target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1987              		.loc 1 439 0
 1988 0496 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 1989 049a 9BB2     		uxth	r3, r3
 1990 049c 1A46     		mov	r2, r3	@ movhi
 1991 049e 9200     		lsls	r2, r2, #2
 1992 04a0 1344     		add	r3, r3, r2
 1993 04a2 1A46     		mov	r2, r3	@ movhi
 1994 04a4 D200     		lsls	r2, r2, #3
 1995 04a6 D31A     		subs	r3, r2, r3
 1996 04a8 9B00     		lsls	r3, r3, #2
 1997 04aa 9BB2     		uxth	r3, r3
 1998 04ac 9AB2     		uxth	r2, r3
 1999 04ae 404B     		ldr	r3, .L100
 2000 04b0 1A80     		strh	r2, [r3]	@ movhi
 440:.\main.c      ****                                     target_distance_quad -= U_OFFSET;
 2001              		.loc 1 440 0
 2002 04b2 3F4B     		ldr	r3, .L100
 2003 04b4 1B88     		ldrh	r3, [r3]
 2004 04b6 9BB2     		uxth	r3, r3
 2005 04b8 5D3B     		subs	r3, r3, #93
 2006 04ba 9BB2     		uxth	r3, r3
 2007 04bc 9AB2     		uxth	r2, r3
 2008 04be 3C4B     		ldr	r3, .L100
 2009 04c0 1A80     		strh	r2, [r3]	@ movhi
 441:.\main.c      ****                                     //target_distance_quad += 208;
 442:.\main.c      ****                                     
 443:.\main.c      ****                                         UART_PutString("Trigger white light\r\n");
 2010              		.loc 1 443 0
 2011 04c2 4748     		ldr	r0, .L100+48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 45


 2012 04c4 FFF7FEFF 		bl	UART_PutString
 444:.\main.c      ****                                         UART_PutString("Deadzone enter\r\n");
 2013              		.loc 1 444 0
 2014 04c8 4648     		ldr	r0, .L100+52
 2015 04ca FFF7FEFF 		bl	UART_PutString
 445:.\main.c      ****                                         
 446:.\main.c      ****                                         deadzone = 1;
 2016              		.loc 1 446 0
 2017 04ce 464B     		ldr	r3, .L100+56
 2018 04d0 0122     		movs	r2, #1
 2019 04d2 1A70     		strb	r2, [r3]
 447:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2020              		.loc 1 447 0
 2021 04d4 4548     		ldr	r0, .L100+60
 2022 04d6 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 448:.\main.c      ****                                         if(target_distance_quad < 0) target_distance_quad = 0;
 2023              		.loc 1 448 0
 2024 04da 354B     		ldr	r3, .L100
 2025 04dc 1B88     		ldrh	r3, [r3]
 2026 04de 1BB2     		sxth	r3, r3
 2027 04e0 002B     		cmp	r3, #0
 2028 04e2 02DA     		bge	.L78
 2029              		.loc 1 448 0 is_stmt 0 discriminator 1
 2030 04e4 324B     		ldr	r3, .L100
 2031 04e6 0022     		movs	r2, #0
 2032 04e8 1A80     		strh	r2, [r3]	@ movhi
 2033              	.L78:
 449:.\main.c      ****                                         Timer_Deadzone_Start();
 2034              		.loc 1 449 0 is_stmt 1
 2035 04ea FFF7FEFF 		bl	Timer_Deadzone_Start
 450:.\main.c      ****                                         actionDebounce = 0;
 2036              		.loc 1 450 0
 2037 04ee 0023     		movs	r3, #0
 2038 04f0 FB86     		strh	r3, [r7, #54]	@ movhi
 451:.\main.c      ****                                         sensorsDisabled = 1;
 2039              		.loc 1 451 0
 2040 04f2 364B     		ldr	r3, .L100+28
 2041 04f4 0122     		movs	r2, #1
 2042 04f6 1A60     		str	r2, [r3]
 452:.\main.c      ****                                         initTurnU();
 2043              		.loc 1 452 0
 2044 04f8 FFF7FEFF 		bl	initTurnU
 453:.\main.c      ****                                         reached_target = 0;
 2045              		.loc 1 453 0
 2046 04fc 2E4B     		ldr	r3, .L100+8
 2047 04fe 0022     		movs	r2, #0
 2048 0500 1A70     		strb	r2, [r3]
 454:.\main.c      ****                                         overshot_target = 0;
 2049              		.loc 1 454 0
 2050 0502 2E4B     		ldr	r3, .L100+12
 2051 0504 0022     		movs	r2, #0
 2052 0506 1A70     		strb	r2, [r3]
 455:.\main.c      ****                                         instructionCount += 2;
 2053              		.loc 1 455 0
 2054 0508 2D4B     		ldr	r3, .L100+16
 2055 050a 1B88     		ldrh	r3, [r3]
 2056 050c 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 46


 2057 050e 9AB2     		uxth	r2, r3
 2058 0510 2B4B     		ldr	r3, .L100+16
 2059 0512 1A80     		strh	r2, [r3]	@ movhi
 456:.\main.c      ****                                         
 457:.\main.c      ****                                         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2060              		.loc 1 457 0
 2061 0514 264B     		ldr	r3, .L100
 2062 0516 1B88     		ldrh	r3, [r3]
 2063 0518 1BB2     		sxth	r3, r3
 2064 051a 07F11002 		add	r2, r7, #16
 2065 051e 1046     		mov	r0, r2
 2066 0520 2449     		ldr	r1, .L100+4
 2067 0522 1A46     		mov	r2, r3
 2068 0524 FFF7FEFF 		bl	sprintf
 458:.\main.c      ****                                         UART_PutString(mes);
 2069              		.loc 1 458 0
 2070 0528 07F11003 		add	r3, r7, #16
 2071 052c 1846     		mov	r0, r3
 2072 052e FFF7FEFF 		bl	UART_PutString
 459:.\main.c      ****                                         sprintf(mes, "instr count:%d\r\n", instructionCount);
 2073              		.loc 1 459 0
 2074 0532 234B     		ldr	r3, .L100+16
 2075 0534 1B88     		ldrh	r3, [r3]
 2076 0536 1A46     		mov	r2, r3
 2077 0538 07F11003 		add	r3, r7, #16
 2078 053c 1846     		mov	r0, r3
 2079 053e 2149     		ldr	r1, .L100+20
 2080 0540 FFF7FEFF 		bl	sprintf
 460:.\main.c      ****                                         UART_PutString(mes);
 2081              		.loc 1 460 0
 2082 0544 07F11003 		add	r3, r7, #16
 2083 0548 1846     		mov	r0, r3
 2084 054a FFF7FEFF 		bl	UART_PutString
 2085              	.LBE8:
 412:.\main.c      ****                         {
 2086              		.loc 1 412 0
 2087 054e AFE0     		b	.L55
 2088              	.L74:
 412:.\main.c      ****                         {
 2089              		.loc 1 412 0 is_stmt 0 discriminator 3
 2090 0550 AEE0     		b	.L55
 2091              	.L72:
 461:.\main.c      ****                                 }
 462:.\main.c      ****                                 }
 463:.\main.c      ****                             }
 464:.\main.c      ****                         }
 465:.\main.c      ****                     }
 466:.\main.c      ****                     else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U'))
 2092              		.loc 1 466 0 is_stmt 1
 2093 0552 1A4B     		ldr	r3, .L100+12
 2094 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2095 0556 012B     		cmp	r3, #1
 2096 0558 40F0A580 		bne	.L79
 2097              		.loc 1 466 0 is_stmt 0 discriminator 1
 2098 055c 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2099 0560 442B     		cmp	r3, #68
 2100 0562 04D0     		beq	.L80
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 47


 2101              		.loc 1 466 0 discriminator 2
 2102 0564 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2103 0568 552B     		cmp	r3, #85
 2104 056a 40F09C80 		bne	.L79
 2105              	.L80:
 2106              	.LBB9:
 467:.\main.c      ****                     {
 468:.\main.c      ****                         
 469:.\main.c      ****                                 //instructionCount += 2;
 470:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 471:.\main.c      ****                                 char mes[16];
 472:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 2107              		.loc 1 472 0 is_stmt 1
 2108 056e 194B     		ldr	r3, .L100+36
 2109 0570 1B88     		ldrh	r3, [r3]
 2110 0572 1BB2     		sxth	r3, r3
 2111 0574 3A46     		mov	r2, r7
 2112 0576 1046     		mov	r0, r2
 2113 0578 1749     		ldr	r1, .L100+40
 2114 057a 1A46     		mov	r2, r3
 2115 057c FFF7FEFF 		bl	sprintf
 473:.\main.c      ****                                  UART_PutString(mes);
 2116              		.loc 1 473 0
 2117 0580 3B46     		mov	r3, r7
 2118 0582 1846     		mov	r0, r3
 2119 0584 FFF7FEFF 		bl	UART_PutString
 474:.\main.c      ****                                  accum_dist = 0;
 2120              		.loc 1 474 0
 2121 0588 124B     		ldr	r3, .L100+36
 2122 058a 0022     		movs	r2, #0
 2123 058c 1A80     		strh	r2, [r3]	@ movhi
 475:.\main.c      ****                                 uint8 nextStepDist;
 476:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2124              		.loc 1 476 0
 2125 058e 0C4B     		ldr	r3, .L100+16
 2126 0590 1B88     		ldrh	r3, [r3]
 2127 0592 1A46     		mov	r2, r3
 2128 0594 114B     		ldr	r3, .L100+44
 2129 0596 1B88     		ldrh	r3, [r3]
 2130 0598 053B     		subs	r3, r3, #5
 2131 059a 9A42     		cmp	r2, r3
 2132 059c 28DC     		bgt	.L81
 2133              		.loc 1 476 0 is_stmt 0 discriminator 1
 2134 059e 084B     		ldr	r3, .L100+16
 2135 05a0 1B88     		ldrh	r3, [r3]
 2136 05a2 0333     		adds	r3, r3, #3
 2137 05a4 0A4A     		ldr	r2, .L100+32
 2138 05a6 D35C     		ldrb	r3, [r2, r3]
 2139 05a8 87F83230 		strb	r3, [r7, #50]
 2140 05ac 23E0     		b	.L82
 2141              	.L101:
 2142 05ae 00BF     		.align	2
 2143              	.L100:
 2144 05b0 00000000 		.word	target_distance_quad
 2145 05b4 64000000 		.word	.LC5
 2146 05b8 00000000 		.word	reached_target
 2147 05bc 00000000 		.word	overshot_target
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 48


 2148 05c0 00000000 		.word	instructionCount
 2149 05c4 78000000 		.word	.LC6
 2150 05c8 00000000 		.word	frontSensors
 2151 05cc 00000000 		.word	sensorsDisabled
 2152 05d0 00000000 		.word	instructions
 2153 05d4 00000000 		.word	accum_dist
 2154 05d8 24000000 		.word	.LC2
 2155 05dc 00000000 		.word	instructionLength
 2156 05e0 8C000000 		.word	.LC7
 2157 05e4 50000000 		.word	.LC4
 2158 05e8 00000000 		.word	deadzone
 2159 05ec 905F0100 		.word	90000
 2160              	.L81:
 477:.\main.c      ****                                 else nextStepDist = 0;
 2161              		.loc 1 477 0 is_stmt 1
 2162 05f0 0023     		movs	r3, #0
 2163 05f2 87F83230 		strb	r3, [r7, #50]
 2164              	.L82:
 478:.\main.c      ****                                 
 479:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2165              		.loc 1 479 0
 2166 05f6 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 2167 05fa 9BB2     		uxth	r3, r3
 2168 05fc 1A46     		mov	r2, r3	@ movhi
 2169 05fe 9200     		lsls	r2, r2, #2
 2170 0600 1344     		add	r3, r3, r2
 2171 0602 1A46     		mov	r2, r3	@ movhi
 2172 0604 D200     		lsls	r2, r2, #3
 2173 0606 D31A     		subs	r3, r2, r3
 2174 0608 9B00     		lsls	r3, r3, #2
 2175 060a 9BB2     		uxth	r3, r3
 2176 060c 9AB2     		uxth	r2, r3
 2177 060e 414B     		ldr	r3, .L102
 2178 0610 1A80     		strh	r2, [r3]	@ movhi
 480:.\main.c      ****                                 target_distance_quad -= U_OFFSET;
 2179              		.loc 1 480 0
 2180 0612 404B     		ldr	r3, .L102
 2181 0614 1B88     		ldrh	r3, [r3]
 2182 0616 9BB2     		uxth	r3, r3
 2183 0618 5D3B     		subs	r3, r3, #93
 2184 061a 9BB2     		uxth	r3, r3
 2185 061c 9AB2     		uxth	r2, r3
 2186 061e 3D4B     		ldr	r3, .L102
 2187 0620 1A80     		strh	r2, [r3]	@ movhi
 481:.\main.c      ****                                 
 482:.\main.c      ****                                     UART_PutString("Trigger quad\r\n");
 2188              		.loc 1 482 0
 2189 0622 3D48     		ldr	r0, .L102+4
 2190 0624 FFF7FEFF 		bl	UART_PutString
 483:.\main.c      ****                                     if(nextStep == 'U')
 2191              		.loc 1 483 0
 2192 0628 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2193 062c 552B     		cmp	r3, #85
 2194 062e 0CD1     		bne	.L83
 484:.\main.c      ****                                     {
 485:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2195              		.loc 1 485 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 49


 2196 0630 3A48     		ldr	r0, .L102+8
 2197 0632 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 486:.\main.c      ****                                         initTurnU();
 2198              		.loc 1 486 0
 2199 0636 FFF7FEFF 		bl	initTurnU
 487:.\main.c      ****                                         //target_distance_quad += 208;
 488:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2200              		.loc 1 488 0
 2201 063a 364B     		ldr	r3, .L102
 2202 063c 1B88     		ldrh	r3, [r3]
 2203 063e 9BB2     		uxth	r3, r3
 2204 0640 863B     		subs	r3, r3, #134
 2205 0642 9BB2     		uxth	r3, r3
 2206 0644 9AB2     		uxth	r2, r3
 2207 0646 334B     		ldr	r3, .L102
 2208 0648 1A80     		strh	r2, [r3]	@ movhi
 2209              	.L83:
 489:.\main.c      ****                                     }
 490:.\main.c      ****                                     else if (nextStep == 'D')
 491:.\main.c      ****                                     {
 492:.\main.c      ****                                         //do nothing
 493:.\main.c      ****                                     }
 494:.\main.c      **** //                                    UART_PutString("Deadzone entered!\r\n");
 495:.\main.c      **** //                                    
 496:.\main.c      **** //                                    
 497:.\main.c      **** //                                    actionDebounce = 0;
 498:.\main.c      **** //                                    sensorsDisabled = 1;
 499:.\main.c      **** //                                    
 500:.\main.c      **** //                                     switch(nextStep)
 501:.\main.c      **** //                                {
 502:.\main.c      **** //                                    case 'S':
 503:.\main.c      **** //                                        inittrackLineZ();
 504:.\main.c      **** //                                         Timer_Deadzone_WriteCounter(S_DEADZONE);
 505:.\main.c      **** //                                        //do nothing
 506:.\main.c      **** //                                    break;
 507:.\main.c      **** //                                    case 'L':
 508:.\main.c      **** //                                        //if(tracked_direction == 1) tracked_direction = 4; else 
 509:.\main.c      **** //                                        initTurnLeft();
 510:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 511:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 512:.\main.c      **** //                                    break;
 513:.\main.c      **** //                                    case 'R':
 514:.\main.c      **** //                                        //if(tracked_direction == 4) tracked_direction = 1; else 
 515:.\main.c      **** //                                        initTurnRight();
 516:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 517:.\main.c      **** //                                        //target_distance_quad += (208 - TURN_OFFSET);
 518:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 519:.\main.c      **** //                                        
 520:.\main.c      **** //                                    break;
 521:.\main.c      **** //                                    case 'U':
 522:.\main.c      **** //                                        // Direction not tracked any more
 523:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(U_DEADZONE);
 524:.\main.c      **** //                                        initTurnU();
 525:.\main.c      **** //                                        //target_distance_quad += 208;
 526:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 527:.\main.c      **** //                                    break;
 528:.\main.c      **** //                                    default:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 50


 529:.\main.c      **** //                                        //do nothing
 530:.\main.c      **** //                                        break;
 531:.\main.c      **** //                                }
 532:.\main.c      **** //                                    
 533:.\main.c      ****                                     reached_target = 0;
 2210              		.loc 1 533 0
 2211 064a 354B     		ldr	r3, .L102+12
 2212 064c 0022     		movs	r2, #0
 2213 064e 1A70     		strb	r2, [r3]
 534:.\main.c      ****                                     overshot_target = 0;
 2214              		.loc 1 534 0
 2215 0650 344B     		ldr	r3, .L102+16
 2216 0652 0022     		movs	r2, #0
 2217 0654 1A70     		strb	r2, [r3]
 535:.\main.c      ****                                     instructionCount += 2;
 2218              		.loc 1 535 0
 2219 0656 344B     		ldr	r3, .L102+20
 2220 0658 1B88     		ldrh	r3, [r3]
 2221 065a 0233     		adds	r3, r3, #2
 2222 065c 9AB2     		uxth	r2, r3
 2223 065e 324B     		ldr	r3, .L102+20
 2224 0660 1A80     		strh	r2, [r3]	@ movhi
 536:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2225              		.loc 1 536 0
 2226 0662 2C4B     		ldr	r3, .L102
 2227 0664 1B88     		ldrh	r3, [r3]
 2228 0666 1BB2     		sxth	r3, r3
 2229 0668 002B     		cmp	r3, #0
 2230 066a 02DA     		bge	.L84
 2231              		.loc 1 536 0 is_stmt 0 discriminator 1
 2232 066c 294B     		ldr	r3, .L102
 2233 066e 0022     		movs	r2, #0
 2234 0670 1A80     		strh	r2, [r3]	@ movhi
 2235              	.L84:
 537:.\main.c      ****                                     //Timer_Deadzone_Start();
 538:.\main.c      ****                                     //deadzone = 1;
 539:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2236              		.loc 1 539 0 is_stmt 1 discriminator 5
 2237 0672 284B     		ldr	r3, .L102
 2238 0674 1B88     		ldrh	r3, [r3]
 2239 0676 1BB2     		sxth	r3, r3
 2240 0678 3A46     		mov	r2, r7
 2241 067a 1046     		mov	r0, r2
 2242 067c 2B49     		ldr	r1, .L102+24
 2243 067e 1A46     		mov	r2, r3
 2244 0680 FFF7FEFF 		bl	sprintf
 540:.\main.c      ****                                     UART_PutString(mes);
 2245              		.loc 1 540 0 discriminator 5
 2246 0684 3B46     		mov	r3, r7
 2247 0686 1846     		mov	r0, r3
 2248 0688 FFF7FEFF 		bl	UART_PutString
 541:.\main.c      ****                                     sprintf(mes, "instr count:%d\r\n", instructionCount);
 2249              		.loc 1 541 0 discriminator 5
 2250 068c 264B     		ldr	r3, .L102+20
 2251 068e 1B88     		ldrh	r3, [r3]
 2252 0690 1A46     		mov	r2, r3
 2253 0692 3B46     		mov	r3, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 51


 2254 0694 1846     		mov	r0, r3
 2255 0696 2649     		ldr	r1, .L102+28
 2256 0698 FFF7FEFF 		bl	sprintf
 542:.\main.c      ****                                     UART_PutString(mes);
 2257              		.loc 1 542 0 discriminator 5
 2258 069c 3B46     		mov	r3, r7
 2259 069e 1846     		mov	r0, r3
 2260 06a0 FFF7FEFF 		bl	UART_PutString
 2261              	.LBE9:
 467:.\main.c      ****                         
 2262              		.loc 1 467 0 discriminator 5
 2263 06a4 04E0     		b	.L55
 2264              	.L79:
 543:.\main.c      ****                     }
 544:.\main.c      ****                     else
 545:.\main.c      ****                     {
 546:.\main.c      ****                         inittrackLineZ();
 2265              		.loc 1 546 0
 2266 06a6 FFF7FEFF 		bl	inittrackLineZ
 547:.\main.c      ****                         actionDebounce = 0;
 2267              		.loc 1 547 0
 2268 06aa 0023     		movs	r3, #0
 2269 06ac FB86     		strh	r3, [r7, #54]	@ movhi
 2270              	.LBE4:
 548:.\main.c      ****                     }
 549:.\main.c      ****                 }
 550:.\main.c      ****                 break;
 2271              		.loc 1 550 0
 2272 06ae FFE7     		b	.L97
 2273              	.L55:
 2274              	.L97:
 2275 06b0 00BF     		nop
 2276              	.L42:
 551:.\main.c      ****         }
 552:.\main.c      ****         
 553:.\main.c      ****         switch(movement_state)
 2277              		.loc 1 553 0
 2278 06b2 204B     		ldr	r3, .L102+32
 2279 06b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2280 06b6 072B     		cmp	r3, #7
 2281 06b8 3FF6D5AC 		bhi	.L95
 2282 06bc 01A2     		adr	r2, .L87
 2283 06be 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2284 06c2 00BF     		.p2align 2
 2285              	.L87:
 2286 06c4 E5060000 		.word	.L86+1
 2287 06c8 EB060000 		.word	.L88+1
 2288 06cc F1060000 		.word	.L89+1
 2289 06d0 FD060000 		.word	.L90+1
 2290 06d4 03070000 		.word	.L91+1
 2291 06d8 09070000 		.word	.L92+1
 2292 06dc 0F070000 		.word	.L93+1
 2293 06e0 F7060000 		.word	.L94+1
 2294              		.p2align 1
 2295              	.L86:
 554:.\main.c      ****         {
 555:.\main.c      ****             case DRIVE:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 52


 556:.\main.c      ****                 driveForwards();
 2296              		.loc 1 556 0
 2297 06e4 FFF7FEFF 		bl	driveForwards
 557:.\main.c      ****             break;
 2298              		.loc 1 557 0
 2299 06e8 13E0     		b	.L85
 2300              	.L88:
 558:.\main.c      ****             case LTURN:
 559:.\main.c      ****                 turnLeft();
 2301              		.loc 1 559 0
 2302 06ea FFF7FEFF 		bl	turnLeft
 560:.\main.c      ****             break;
 2303              		.loc 1 560 0
 2304 06ee 10E0     		b	.L85
 2305              	.L89:
 561:.\main.c      ****             case RTURN:
 562:.\main.c      ****                 turnRight();
 2306              		.loc 1 562 0
 2307 06f0 FFF7FEFF 		bl	turnRight
 563:.\main.c      ****             break;
 2308              		.loc 1 563 0
 2309 06f4 0DE0     		b	.L85
 2310              	.L94:
 564:.\main.c      ****             case UTURN:
 565:.\main.c      ****                 turnU();
 2311              		.loc 1 565 0
 2312 06f6 FFF7FEFF 		bl	turnU
 566:.\main.c      ****             break;
 2313              		.loc 1 566 0
 2314 06fa 0AE0     		b	.L85
 2315              	.L90:
 567:.\main.c      ****             case STOPPED:
 568:.\main.c      ****                 brakeMotor();
 2316              		.loc 1 568 0
 2317 06fc FFF7FEFF 		bl	brakeMotor
 569:.\main.c      ****             break;
 2318              		.loc 1 569 0
 2319 0700 07E0     		b	.L85
 2320              	.L91:
 570:.\main.c      ****             case TRACKING:
 571:.\main.c      ****                 trackLine();
 2321              		.loc 1 571 0
 2322 0702 FFF7FEFF 		bl	trackLine
 572:.\main.c      ****             break;
 2323              		.loc 1 572 0
 2324 0706 04E0     		b	.L85
 2325              	.L92:
 573:.\main.c      ****             case TRACKING_U:
 574:.\main.c      ****                 trackLineU();
 2326              		.loc 1 574 0
 2327 0708 FFF7FEFF 		bl	trackLineU
 575:.\main.c      ****             break;
 2328              		.loc 1 575 0
 2329 070c 01E0     		b	.L85
 2330              	.L93:
 576:.\main.c      ****             case TRACKING_SOFT:
 577:.\main.c      ****                 trackLineZ();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 53


 2331              		.loc 1 577 0
 2332 070e FFF7FEFF 		bl	trackLineZ
 2333              	.L85:
 578:.\main.c      ****         }      
 579:.\main.c      ****     }   
 2334              		.loc 1 579 0
 2335 0712 A8E4     		b	.L95
 2336              	.L103:
 2337              		.align	2
 2338              	.L102:
 2339 0714 00000000 		.word	target_distance_quad
 2340 0718 A4000000 		.word	.LC8
 2341 071c 905F0100 		.word	90000
 2342 0720 00000000 		.word	reached_target
 2343 0724 00000000 		.word	overshot_target
 2344 0728 00000000 		.word	instructionCount
 2345 072c 64000000 		.word	.LC5
 2346 0730 78000000 		.word	.LC6
 2347 0734 00000000 		.word	movement_state
 2348              		.cfi_endproc
 2349              	.LFE71:
 2350              		.size	main, .-main
 2351              		.section	.text.handle_rx_binary,"ax",%progbits
 2352              		.align	2
 2353              		.global	handle_rx_binary
 2354              		.thumb
 2355              		.thumb_func
 2356              		.type	handle_rx_binary, %function
 2357              	handle_rx_binary:
 2358              	.LFB72:
 580:.\main.c      **** }
 581:.\main.c      **** 
 582:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 583:.\main.c      **** 
 584:.\main.c      **** void handle_rx_binary()
 585:.\main.c      **** {
 2359              		.loc 1 585 0
 2360              		.cfi_startproc
 2361              		@ args = 0, pretend = 0, frame = 32
 2362              		@ frame_needed = 1, uses_anonymous_args = 0
 2363              		@ link register save eliminated.
 2364 0000 80B4     		push	{r7}
 2365              		.cfi_def_cfa_offset 4
 2366              		.cfi_offset 7, -4
 2367 0002 89B0     		sub	sp, sp, #36
 2368              		.cfi_def_cfa_offset 40
 2369 0004 00AF     		add	r7, sp, #0
 2370              		.cfi_def_cfa_register 7
 586:.\main.c      ****     if(flag_rx == 1)
 2371              		.loc 1 586 0
 2372 0006 524B     		ldr	r3, .L124
 2373 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2374 000a 012B     		cmp	r3, #1
 2375 000c 40F09A80 		bne	.L104
 2376              	.LBB10:
 587:.\main.c      ****     {    
 588:.\main.c      ****         flag_rx = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 54


 2377              		.loc 1 588 0
 2378 0010 4F4B     		ldr	r3, .L124
 2379 0012 0022     		movs	r2, #0
 2380 0014 1A70     		strb	r2, [r3]
 589:.\main.c      ****         
 590:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2381              		.loc 1 590 0
 2382 0016 4F4B     		ldr	r3, .L124+4
 2383 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2384 001a 1B02     		lsls	r3, r3, #8
 2385 001c 9AB2     		uxth	r2, r3
 2386 001e 4D4B     		ldr	r3, .L124+4
 2387 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2388 0022 9BB2     		uxth	r3, r3
 2389 0024 1343     		orrs	r3, r3, r2
 2390 0026 9BB2     		uxth	r3, r3
 2391 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 591:.\main.c      ****         char byte_packet[12];
 592:.\main.c      ****         char string_packet[12];
 593:.\main.c      ****         
 594:.\main.c      ****         switch(byteCount)
 2392              		.loc 1 594 0
 2393 002a 4B4B     		ldr	r3, .L124+8
 2394 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2395 002e 043B     		subs	r3, r3, #4
 2396 0030 1E2B     		cmp	r3, #30
 2397 0032 00F28780 		bhi	.L104
 2398 0036 01A2     		adr	r2, .L108
 2399 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2400              		.p2align 2
 2401              	.L108:
 2402 003c B9000000 		.word	.L107+1
 2403 0040 45010000 		.word	.L104+1
 2404 0044 CD000000 		.word	.L109+1
 2405 0048 45010000 		.word	.L104+1
 2406 004c D5000000 		.word	.L110+1
 2407 0050 45010000 		.word	.L104+1
 2408 0054 DD000000 		.word	.L111+1
 2409 0058 45010000 		.word	.L104+1
 2410 005c E5000000 		.word	.L112+1
 2411 0060 45010000 		.word	.L104+1
 2412 0064 ED000000 		.word	.L113+1
 2413 0068 45010000 		.word	.L104+1
 2414 006c F5000000 		.word	.L114+1
 2415 0070 45010000 		.word	.L104+1
 2416 0074 FD000000 		.word	.L115+1
 2417 0078 45010000 		.word	.L104+1
 2418 007c 05010000 		.word	.L116+1
 2419 0080 45010000 		.word	.L104+1
 2420 0084 0D010000 		.word	.L117+1
 2421 0088 45010000 		.word	.L104+1
 2422 008c 15010000 		.word	.L118+1
 2423 0090 45010000 		.word	.L104+1
 2424 0094 1D010000 		.word	.L119+1
 2425 0098 45010000 		.word	.L104+1
 2426 009c 25010000 		.word	.L120+1
 2427 00a0 45010000 		.word	.L104+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 55


 2428 00a4 2D010000 		.word	.L121+1
 2429 00a8 45010000 		.word	.L104+1
 2430 00ac 35010000 		.word	.L122+1
 2431 00b0 45010000 		.word	.L104+1
 2432 00b4 3D010000 		.word	.L123+1
 2433              		.p2align 1
 2434              	.L107:
 595:.\main.c      ****         {
 596:.\main.c      ****             case 4:
 597:.\main.c      ****                 buffer_state.rssi = packet[0];
 2435              		.loc 1 597 0
 2436 00b8 264B     		ldr	r3, .L124+4
 2437 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2438 00bc DAB2     		uxtb	r2, r3
 2439 00be 274B     		ldr	r3, .L124+12
 2440 00c0 1A70     		strb	r2, [r3]
 598:.\main.c      ****                 buffer_state.index = packet[1];
 2441              		.loc 1 598 0
 2442 00c2 244B     		ldr	r3, .L124+4
 2443 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2444 00c6 254B     		ldr	r3, .L124+12
 2445 00c8 5A70     		strb	r2, [r3, #1]
 599:.\main.c      ****             break;
 2446              		.loc 1 599 0
 2447 00ca 3BE0     		b	.L104
 2448              	.L109:
 600:.\main.c      ****             case 6:
 601:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2449              		.loc 1 601 0
 2450 00cc FA8B     		ldrh	r2, [r7, #30]
 2451 00ce 234B     		ldr	r3, .L124+12
 2452 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 602:.\main.c      ****             break;
 2453              		.loc 1 602 0
 2454 00d2 37E0     		b	.L104
 2455              	.L110:
 603:.\main.c      ****             case 8:
 604:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2456              		.loc 1 604 0
 2457 00d4 FA8B     		ldrh	r2, [r7, #30]
 2458 00d6 214B     		ldr	r3, .L124+12
 2459 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 605:.\main.c      ****             break;
 2460              		.loc 1 605 0
 2461 00da 33E0     		b	.L104
 2462              	.L111:
 606:.\main.c      ****             case 10:
 607:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2463              		.loc 1 607 0
 2464 00dc FA8B     		ldrh	r2, [r7, #30]
 2465 00de 1F4B     		ldr	r3, .L124+12
 2466 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 608:.\main.c      ****             break;
 2467              		.loc 1 608 0
 2468 00e2 2FE0     		b	.L104
 2469              	.L112:
 609:.\main.c      ****             case 12:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 56


 610:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2470              		.loc 1 610 0
 2471 00e4 FA8B     		ldrh	r2, [r7, #30]
 2472 00e6 1D4B     		ldr	r3, .L124+12
 2473 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 611:.\main.c      ****             break;
 2474              		.loc 1 611 0
 2475 00ea 2BE0     		b	.L104
 2476              	.L113:
 612:.\main.c      ****             case 14:
 613:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2477              		.loc 1 613 0
 2478 00ec FA8B     		ldrh	r2, [r7, #30]
 2479 00ee 1B4B     		ldr	r3, .L124+12
 2480 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 614:.\main.c      ****             break;
 2481              		.loc 1 614 0
 2482 00f2 27E0     		b	.L104
 2483              	.L114:
 615:.\main.c      ****             case 16:
 616:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2484              		.loc 1 616 0
 2485 00f4 FA8B     		ldrh	r2, [r7, #30]
 2486 00f6 194B     		ldr	r3, .L124+12
 2487 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 617:.\main.c      ****             break;
 2488              		.loc 1 617 0
 2489 00fa 23E0     		b	.L104
 2490              	.L115:
 618:.\main.c      ****             case 18:
 619:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2491              		.loc 1 619 0
 2492 00fc FA8B     		ldrh	r2, [r7, #30]
 2493 00fe 174B     		ldr	r3, .L124+12
 2494 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 620:.\main.c      ****             break;
 2495              		.loc 1 620 0
 2496 0102 1FE0     		b	.L104
 2497              	.L116:
 621:.\main.c      ****             case 20:
 622:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2498              		.loc 1 622 0
 2499 0104 FA8B     		ldrh	r2, [r7, #30]
 2500 0106 154B     		ldr	r3, .L124+12
 2501 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 623:.\main.c      ****             break;
 2502              		.loc 1 623 0
 2503 010a 1BE0     		b	.L104
 2504              	.L117:
 624:.\main.c      ****             case 22:
 625:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2505              		.loc 1 625 0
 2506 010c FA8B     		ldrh	r2, [r7, #30]
 2507 010e 134B     		ldr	r3, .L124+12
 2508 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 626:.\main.c      ****             break;
 2509              		.loc 1 626 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 57


 2510 0112 17E0     		b	.L104
 2511              	.L118:
 627:.\main.c      ****             case 24:
 628:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2512              		.loc 1 628 0
 2513 0114 FA8B     		ldrh	r2, [r7, #30]
 2514 0116 114B     		ldr	r3, .L124+12
 2515 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 629:.\main.c      ****             break;
 2516              		.loc 1 629 0
 2517 011a 13E0     		b	.L104
 2518              	.L119:
 630:.\main.c      ****             case 26:
 631:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2519              		.loc 1 631 0
 2520 011c FA8B     		ldrh	r2, [r7, #30]
 2521 011e 0F4B     		ldr	r3, .L124+12
 2522 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 632:.\main.c      ****             break;
 2523              		.loc 1 632 0
 2524 0122 0FE0     		b	.L104
 2525              	.L120:
 633:.\main.c      ****             case 28:
 634:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2526              		.loc 1 634 0
 2527 0124 FA8B     		ldrh	r2, [r7, #30]
 2528 0126 0D4B     		ldr	r3, .L124+12
 2529 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 635:.\main.c      ****             break;
 2530              		.loc 1 635 0
 2531 012a 0BE0     		b	.L104
 2532              	.L121:
 636:.\main.c      ****             case 30:
 637:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2533              		.loc 1 637 0
 2534 012c FA8B     		ldrh	r2, [r7, #30]
 2535 012e 0B4B     		ldr	r3, .L124+12
 2536 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 638:.\main.c      ****             break;
 2537              		.loc 1 638 0
 2538 0132 07E0     		b	.L104
 2539              	.L122:
 639:.\main.c      ****             case 32:
 640:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2540              		.loc 1 640 0
 2541 0134 FA8B     		ldrh	r2, [r7, #30]
 2542 0136 094B     		ldr	r3, .L124+12
 2543 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 641:.\main.c      ****             break;
 2544              		.loc 1 641 0
 2545 013a 03E0     		b	.L104
 2546              	.L123:
 642:.\main.c      ****             case 34:
 643:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2547              		.loc 1 643 0
 2548 013c FA8B     		ldrh	r2, [r7, #30]
 2549 013e 074B     		ldr	r3, .L124+12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 58


 2550 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 644:.\main.c      ****             break;
 2551              		.loc 1 644 0
 2552 0142 00BF     		nop
 2553              	.L104:
 2554              	.LBE10:
 645:.\main.c      ****         }
 646:.\main.c      ****     }
 647:.\main.c      **** }
 2555              		.loc 1 647 0
 2556 0144 2437     		adds	r7, r7, #36
 2557              		.cfi_def_cfa_offset 4
 2558 0146 BD46     		mov	sp, r7
 2559              		.cfi_def_cfa_register 13
 2560              		@ sp needed
 2561 0148 5DF8047B 		ldr	r7, [sp], #4
 2562              		.cfi_restore 7
 2563              		.cfi_def_cfa_offset 0
 2564 014c 7047     		bx	lr
 2565              	.L125:
 2566 014e 00BF     		.align	2
 2567              	.L124:
 2568 0150 00000000 		.word	flag_rx
 2569 0154 00000000 		.word	packet
 2570 0158 00000000 		.word	byteCount
 2571 015c 00000000 		.word	buffer_state
 2572              		.cfi_endproc
 2573              	.LFE72:
 2574              		.size	handle_rx_binary, .-handle_rx_binary
 2575              		.section	.text.setLeftDir,"ax",%progbits
 2576              		.align	2
 2577              		.global	setLeftDir
 2578              		.thumb
 2579              		.thumb_func
 2580              		.type	setLeftDir, %function
 2581              	setLeftDir:
 2582              	.LFB73:
 648:.\main.c      **** 
 649:.\main.c      **** void setLeftDir(uint8 dir)
 650:.\main.c      **** {
 2583              		.loc 1 650 0
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 8
 2586              		@ frame_needed = 1, uses_anonymous_args = 0
 2587 0000 80B5     		push	{r7, lr}
 2588              		.cfi_def_cfa_offset 8
 2589              		.cfi_offset 7, -8
 2590              		.cfi_offset 14, -4
 2591 0002 82B0     		sub	sp, sp, #8
 2592              		.cfi_def_cfa_offset 16
 2593 0004 00AF     		add	r7, sp, #0
 2594              		.cfi_def_cfa_register 7
 2595 0006 0346     		mov	r3, r0
 2596 0008 FB71     		strb	r3, [r7, #7]
 651:.\main.c      ****     M2_IN2_Write(dir);
 2597              		.loc 1 651 0
 2598 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 59


 2599 000c 1846     		mov	r0, r3
 2600 000e FFF7FEFF 		bl	M2_IN2_Write
 652:.\main.c      **** }
 2601              		.loc 1 652 0
 2602 0012 0837     		adds	r7, r7, #8
 2603              		.cfi_def_cfa_offset 8
 2604 0014 BD46     		mov	sp, r7
 2605              		.cfi_def_cfa_register 13
 2606              		@ sp needed
 2607 0016 80BD     		pop	{r7, pc}
 2608              		.cfi_endproc
 2609              	.LFE73:
 2610              		.size	setLeftDir, .-setLeftDir
 2611              		.section	.text.setRightDir,"ax",%progbits
 2612              		.align	2
 2613              		.global	setRightDir
 2614              		.thumb
 2615              		.thumb_func
 2616              		.type	setRightDir, %function
 2617              	setRightDir:
 2618              	.LFB74:
 653:.\main.c      **** 
 654:.\main.c      **** void setRightDir(uint8 dir)
 655:.\main.c      **** {
 2619              		.loc 1 655 0
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 8
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623 0000 80B5     		push	{r7, lr}
 2624              		.cfi_def_cfa_offset 8
 2625              		.cfi_offset 7, -8
 2626              		.cfi_offset 14, -4
 2627 0002 82B0     		sub	sp, sp, #8
 2628              		.cfi_def_cfa_offset 16
 2629 0004 00AF     		add	r7, sp, #0
 2630              		.cfi_def_cfa_register 7
 2631 0006 0346     		mov	r3, r0
 2632 0008 FB71     		strb	r3, [r7, #7]
 656:.\main.c      ****     M1_IN2_Write(dir);
 2633              		.loc 1 656 0
 2634 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2635 000c 1846     		mov	r0, r3
 2636 000e FFF7FEFF 		bl	M1_IN2_Write
 657:.\main.c      **** }
 2637              		.loc 1 657 0
 2638 0012 0837     		adds	r7, r7, #8
 2639              		.cfi_def_cfa_offset 8
 2640 0014 BD46     		mov	sp, r7
 2641              		.cfi_def_cfa_register 13
 2642              		@ sp needed
 2643 0016 80BD     		pop	{r7, pc}
 2644              		.cfi_endproc
 2645              	.LFE74:
 2646              		.size	setRightDir, .-setRightDir
 2647              		.section	.rodata
 2648 00b3 00       		.align	2
 2649              	.LC9:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 60


 2650 00b4 6469723A 		.ascii	"dir: %d\015\012\000"
 2650      2025640D 
 2650      0A00
 2651              		.section	.text.reverseDirection,"ax",%progbits
 2652              		.align	2
 2653              		.global	reverseDirection
 2654              		.thumb
 2655              		.thumb_func
 2656              		.type	reverseDirection, %function
 2657              	reverseDirection:
 2658              	.LFB75:
 658:.\main.c      **** 
 659:.\main.c      **** void reverseDirection()
 660:.\main.c      **** {
 2659              		.loc 1 660 0
 2660              		.cfi_startproc
 2661              		@ args = 0, pretend = 0, frame = 16
 2662              		@ frame_needed = 1, uses_anonymous_args = 0
 2663 0000 80B5     		push	{r7, lr}
 2664              		.cfi_def_cfa_offset 8
 2665              		.cfi_offset 7, -8
 2666              		.cfi_offset 14, -4
 2667 0002 84B0     		sub	sp, sp, #16
 2668              		.cfi_def_cfa_offset 24
 2669 0004 00AF     		add	r7, sp, #0
 2670              		.cfi_def_cfa_register 7
 661:.\main.c      ****     direction = !direction;
 2671              		.loc 1 661 0
 2672 0006 114B     		ldr	r3, .L129
 2673 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2674 000a 002B     		cmp	r3, #0
 2675 000c 0CBF     		ite	eq
 2676 000e 0123     		moveq	r3, #1
 2677 0010 0023     		movne	r3, #0
 2678 0012 DBB2     		uxtb	r3, r3
 2679 0014 1A46     		mov	r2, r3
 2680 0016 0D4B     		ldr	r3, .L129
 2681 0018 1A70     		strb	r2, [r3]
 662:.\main.c      ****     setLeftDir(direction);
 2682              		.loc 1 662 0
 2683 001a 0C4B     		ldr	r3, .L129
 2684 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2685 001e 1846     		mov	r0, r3
 2686 0020 FFF7FEFF 		bl	setLeftDir
 663:.\main.c      ****     setRightDir(direction);
 2687              		.loc 1 663 0
 2688 0024 094B     		ldr	r3, .L129
 2689 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2690 0028 1846     		mov	r0, r3
 2691 002a FFF7FEFF 		bl	setRightDir
 664:.\main.c      ****     char mes[16];
 665:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2692              		.loc 1 665 0
 2693 002e 074B     		ldr	r3, .L129
 2694 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2695 0032 1A46     		mov	r2, r3
 2696 0034 3B46     		mov	r3, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 61


 2697 0036 1846     		mov	r0, r3
 2698 0038 0549     		ldr	r1, .L129+4
 2699 003a FFF7FEFF 		bl	sprintf
 666:.\main.c      ****     UART_PutString(mes);
 2700              		.loc 1 666 0
 2701 003e 3B46     		mov	r3, r7
 2702 0040 1846     		mov	r0, r3
 2703 0042 FFF7FEFF 		bl	UART_PutString
 667:.\main.c      **** }
 2704              		.loc 1 667 0
 2705 0046 1037     		adds	r7, r7, #16
 2706              		.cfi_def_cfa_offset 8
 2707 0048 BD46     		mov	sp, r7
 2708              		.cfi_def_cfa_register 13
 2709              		@ sp needed
 2710 004a 80BD     		pop	{r7, pc}
 2711              	.L130:
 2712              		.align	2
 2713              	.L129:
 2714 004c 00000000 		.word	direction
 2715 0050 B4000000 		.word	.LC9
 2716              		.cfi_endproc
 2717              	.LFE75:
 2718              		.size	reverseDirection, .-reverseDirection
 2719              		.global	__aeabi_dcmplt
 2720              		.global	__aeabi_ddiv
 2721              		.global	__aeabi_d2iz
 2722              		.section	.text.setSpeed,"ax",%progbits
 2723              		.align	2
 2724              		.global	setSpeed
 2725              		.thumb
 2726              		.thumb_func
 2727              		.type	setSpeed, %function
 2728              	setSpeed:
 2729              	.LFB76:
 668:.\main.c      **** 
 669:.\main.c      **** void setSpeed(double left, double right){
 2730              		.loc 1 669 0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 24
 2733              		@ frame_needed = 1, uses_anonymous_args = 0
 2734 0000 80B5     		push	{r7, lr}
 2735              		.cfi_def_cfa_offset 8
 2736              		.cfi_offset 7, -8
 2737              		.cfi_offset 14, -4
 2738 0002 86B0     		sub	sp, sp, #24
 2739              		.cfi_def_cfa_offset 32
 2740 0004 00AF     		add	r7, sp, #0
 2741              		.cfi_def_cfa_register 7
 2742 0006 C7E90201 		strd	r0, [r7, #8]
 2743 000a C7E90023 		strd	r2, [r7]
 670:.\main.c      ****     if(right < 0.0)
 2744              		.loc 1 670 0
 2745 000e D7E90001 		ldrd	r0, [r7]
 2746 0012 4FF00002 		mov	r2, #0
 2747 0016 4FF00003 		mov	r3, #0
 2748 001a FFF7FEFF 		bl	__aeabi_dcmplt
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 62


 2749 001e 0346     		mov	r3, r0
 2750 0020 002B     		cmp	r3, #0
 2751 0022 10D0     		beq	.L140
 671:.\main.c      ****     {
 672:.\main.c      ****         //char mes[16];
 673:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 674:.\main.c      ****        // UART_PutString(mes);
 675:.\main.c      ****         setRightDir(!direction);
 2752              		.loc 1 675 0
 2753 0024 304B     		ldr	r3, .L142+8
 2754 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2755 0028 002B     		cmp	r3, #0
 2756 002a 0CBF     		ite	eq
 2757 002c 0123     		moveq	r3, #1
 2758 002e 0023     		movne	r3, #0
 2759 0030 DBB2     		uxtb	r3, r3
 2760 0032 1846     		mov	r0, r3
 2761 0034 FFF7FEFF 		bl	setRightDir
 676:.\main.c      ****         right = -right;
 2762              		.loc 1 676 0
 2763 0038 3B68     		ldr	r3, [r7]
 2764 003a 3B60     		str	r3, [r7]
 2765 003c 7B68     		ldr	r3, [r7, #4]
 2766 003e 83F00043 		eor	r3, r3, #-2147483648
 2767 0042 7B60     		str	r3, [r7, #4]
 2768 0044 04E0     		b	.L134
 2769              	.L140:
 677:.\main.c      ****     }
 678:.\main.c      ****     else setRightDir(direction);
 2770              		.loc 1 678 0
 2771 0046 284B     		ldr	r3, .L142+8
 2772 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 004a 1846     		mov	r0, r3
 2774 004c FFF7FEFF 		bl	setRightDir
 2775              	.L134:
 679:.\main.c      ****     
 680:.\main.c      ****     if(left < 0.0)
 2776              		.loc 1 680 0
 2777 0050 D7E90201 		ldrd	r0, [r7, #8]
 2778 0054 4FF00002 		mov	r2, #0
 2779 0058 4FF00003 		mov	r3, #0
 2780 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2781 0060 0346     		mov	r3, r0
 2782 0062 002B     		cmp	r3, #0
 2783 0064 10D0     		beq	.L141
 681:.\main.c      ****     {
 682:.\main.c      ****        // char mes[16];
 683:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 684:.\main.c      ****         //UART_PutString(mes);
 685:.\main.c      ****         setLeftDir(!direction);
 2784              		.loc 1 685 0
 2785 0066 204B     		ldr	r3, .L142+8
 2786 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2787 006a 002B     		cmp	r3, #0
 2788 006c 0CBF     		ite	eq
 2789 006e 0123     		moveq	r3, #1
 2790 0070 0023     		movne	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 63


 2791 0072 DBB2     		uxtb	r3, r3
 2792 0074 1846     		mov	r0, r3
 2793 0076 FFF7FEFF 		bl	setLeftDir
 686:.\main.c      ****         left = -left;
 2794              		.loc 1 686 0
 2795 007a BB68     		ldr	r3, [r7, #8]
 2796 007c BB60     		str	r3, [r7, #8]
 2797 007e FB68     		ldr	r3, [r7, #12]
 2798 0080 83F00043 		eor	r3, r3, #-2147483648
 2799 0084 FB60     		str	r3, [r7, #12]
 2800 0086 04E0     		b	.L137
 2801              	.L141:
 687:.\main.c      ****     }
 688:.\main.c      ****     else setLeftDir(direction);
 2802              		.loc 1 688 0
 2803 0088 174B     		ldr	r3, .L142+8
 2804 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2805 008c 1846     		mov	r0, r3
 2806 008e FFF7FEFF 		bl	setLeftDir
 2807              	.L137:
 689:.\main.c      ****     
 690:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2808              		.loc 1 690 0
 2809 0092 D7E90201 		ldrd	r0, [r7, #8]
 2810 0096 12A3     		adr	r3, .L142
 2811 0098 D3E90023 		ldrd	r2, [r3]
 2812 009c FFF7FEFF 		bl	__aeabi_ddiv
 2813 00a0 0246     		mov	r2, r0
 2814 00a2 0B46     		mov	r3, r1
 2815 00a4 1046     		mov	r0, r2
 2816 00a6 1946     		mov	r1, r3
 2817 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2818 00ac 0346     		mov	r3, r0
 2819 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 691:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2820              		.loc 1 691 0
 2821 00b0 D7E90001 		ldrd	r0, [r7]
 2822 00b4 0AA3     		adr	r3, .L142
 2823 00b6 D3E90023 		ldrd	r2, [r3]
 2824 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2825 00be 0246     		mov	r2, r0
 2826 00c0 0B46     		mov	r3, r1
 2827 00c2 1046     		mov	r0, r2
 2828 00c4 1946     		mov	r1, r3
 2829 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2830 00ca 0346     		mov	r3, r0
 2831 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 692:.\main.c      ****     
 693:.\main.c      ****     leftSpeedLimit = countsRight;
 2832              		.loc 1 693 0
 2833 00ce 074A     		ldr	r2, .L142+12
 2834 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2835 00d2 1380     		strh	r3, [r2]	@ movhi
 694:.\main.c      ****     rightSpeedLimit = countsLeft;
 2836              		.loc 1 694 0
 2837 00d4 064A     		ldr	r2, .L142+16
 2838 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 64


 2839 00d8 1380     		strh	r3, [r2]	@ movhi
 695:.\main.c      **** }
 2840              		.loc 1 695 0
 2841 00da 1837     		adds	r7, r7, #24
 2842              		.cfi_def_cfa_offset 8
 2843 00dc BD46     		mov	sp, r7
 2844              		.cfi_def_cfa_register 13
 2845              		@ sp needed
 2846 00de 80BD     		pop	{r7, pc}
 2847              	.L143:
 2848              		.align	3
 2849              	.L142:
 2850 00e0 969526A5 		.word	-1524197994
 2851 00e4 A0DBEF3F 		.word	1072683936
 2852 00e8 00000000 		.word	direction
 2853 00ec 00000000 		.word	leftSpeedLimit
 2854 00f0 00000000 		.word	rightSpeedLimit
 2855              		.cfi_endproc
 2856              	.LFE76:
 2857              		.size	setSpeed, .-setSpeed
 2858 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2859              		.align	2
 2860              		.global	brakeLeft
 2861              		.thumb
 2862              		.thumb_func
 2863              		.type	brakeLeft, %function
 2864              	brakeLeft:
 2865              	.LFB77:
 696:.\main.c      **** 
 697:.\main.c      **** void brakeLeft()
 698:.\main.c      **** {
 2866              		.loc 1 698 0
 2867              		.cfi_startproc
 2868              		@ args = 0, pretend = 0, frame = 0
 2869              		@ frame_needed = 1, uses_anonymous_args = 0
 2870 0000 80B5     		push	{r7, lr}
 2871              		.cfi_def_cfa_offset 8
 2872              		.cfi_offset 7, -8
 2873              		.cfi_offset 14, -4
 2874 0002 00AF     		add	r7, sp, #0
 2875              		.cfi_def_cfa_register 7
 699:.\main.c      ****     PWM_1_WriteCompare(0);
 2876              		.loc 1 699 0
 2877 0004 0020     		movs	r0, #0
 2878 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 700:.\main.c      ****     left_duty_cycle = 0;
 2879              		.loc 1 700 0
 2880 000a 024B     		ldr	r3, .L145
 2881 000c 0022     		movs	r2, #0
 2882 000e 1A80     		strh	r2, [r3]	@ movhi
 701:.\main.c      **** }
 2883              		.loc 1 701 0
 2884 0010 80BD     		pop	{r7, pc}
 2885              	.L146:
 2886 0012 00BF     		.align	2
 2887              	.L145:
 2888 0014 00000000 		.word	left_duty_cycle
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 65


 2889              		.cfi_endproc
 2890              	.LFE77:
 2891              		.size	brakeLeft, .-brakeLeft
 2892              		.section	.text.brakeRight,"ax",%progbits
 2893              		.align	2
 2894              		.global	brakeRight
 2895              		.thumb
 2896              		.thumb_func
 2897              		.type	brakeRight, %function
 2898              	brakeRight:
 2899              	.LFB78:
 702:.\main.c      **** 
 703:.\main.c      **** void brakeRight()
 704:.\main.c      **** {
 2900              		.loc 1 704 0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 0
 2903              		@ frame_needed = 1, uses_anonymous_args = 0
 2904 0000 80B5     		push	{r7, lr}
 2905              		.cfi_def_cfa_offset 8
 2906              		.cfi_offset 7, -8
 2907              		.cfi_offset 14, -4
 2908 0002 00AF     		add	r7, sp, #0
 2909              		.cfi_def_cfa_register 7
 705:.\main.c      ****      PWM_2_WriteCompare(0);
 2910              		.loc 1 705 0
 2911 0004 0020     		movs	r0, #0
 2912 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 706:.\main.c      ****      right_duty_cycle = 0;
 2913              		.loc 1 706 0
 2914 000a 024B     		ldr	r3, .L148
 2915 000c 0022     		movs	r2, #0
 2916 000e 1A80     		strh	r2, [r3]	@ movhi
 707:.\main.c      **** }
 2917              		.loc 1 707 0
 2918 0010 80BD     		pop	{r7, pc}
 2919              	.L149:
 2920 0012 00BF     		.align	2
 2921              	.L148:
 2922 0014 00000000 		.word	right_duty_cycle
 2923              		.cfi_endproc
 2924              	.LFE78:
 2925              		.size	brakeRight, .-brakeRight
 2926              		.section	.text.brakeMotor,"ax",%progbits
 2927              		.align	2
 2928              		.global	brakeMotor
 2929              		.thumb
 2930              		.thumb_func
 2931              		.type	brakeMotor, %function
 2932              	brakeMotor:
 2933              	.LFB79:
 708:.\main.c      **** 
 709:.\main.c      **** void brakeMotor(){
 2934              		.loc 1 709 0
 2935              		.cfi_startproc
 2936              		@ args = 0, pretend = 0, frame = 0
 2937              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 66


 2938 0000 80B5     		push	{r7, lr}
 2939              		.cfi_def_cfa_offset 8
 2940              		.cfi_offset 7, -8
 2941              		.cfi_offset 14, -4
 2942 0002 00AF     		add	r7, sp, #0
 2943              		.cfi_def_cfa_register 7
 710:.\main.c      ****     setSpeed(0, 0);
 2944              		.loc 1 710 0
 2945 0004 4FF00000 		mov	r0, #0
 2946 0008 4FF00001 		mov	r1, #0
 2947 000c 4FF00002 		mov	r2, #0
 2948 0010 4FF00003 		mov	r3, #0
 2949 0014 FFF7FEFF 		bl	setSpeed
 711:.\main.c      ****     brakeLeft();
 2950              		.loc 1 711 0
 2951 0018 FFF7FEFF 		bl	brakeLeft
 712:.\main.c      ****     brakeRight();
 2952              		.loc 1 712 0
 2953 001c FFF7FEFF 		bl	brakeRight
 713:.\main.c      **** }
 2954              		.loc 1 713 0
 2955 0020 80BD     		pop	{r7, pc}
 2956              		.cfi_endproc
 2957              	.LFE79:
 2958              		.size	brakeMotor, .-brakeMotor
 2959 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2960              		.align	2
 2961              		.global	driveForwards
 2962              		.thumb
 2963              		.thumb_func
 2964              		.type	driveForwards, %function
 2965              	driveForwards:
 2966              	.LFB80:
 714:.\main.c      **** 
 715:.\main.c      **** void driveForwards()
 716:.\main.c      **** {
 2967              		.loc 1 716 0
 2968              		.cfi_startproc
 2969              		@ args = 0, pretend = 0, frame = 0
 2970              		@ frame_needed = 1, uses_anonymous_args = 0
 2971 0000 80B5     		push	{r7, lr}
 2972              		.cfi_def_cfa_offset 8
 2973              		.cfi_offset 7, -8
 2974              		.cfi_offset 14, -4
 2975 0002 00AF     		add	r7, sp, #0
 2976              		.cfi_def_cfa_register 7
 717:.\main.c      ****     setSpeed(speed, speed);
 2977              		.loc 1 717 0
 2978 0004 044B     		ldr	r3, .L152
 2979 0006 D3E90001 		ldrd	r0, [r3]
 2980 000a 034B     		ldr	r3, .L152
 2981 000c D3E90023 		ldrd	r2, [r3]
 2982 0010 FFF7FEFF 		bl	setSpeed
 718:.\main.c      **** }
 2983              		.loc 1 718 0
 2984 0014 80BD     		pop	{r7, pc}
 2985              	.L153:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 67


 2986 0016 00BF     		.align	2
 2987              	.L152:
 2988 0018 00000000 		.word	speed
 2989              		.cfi_endproc
 2990              	.LFE80:
 2991              		.size	driveForwards, .-driveForwards
 2992              		.global	__aeabi_dmul
 2993              		.section	.text.turnRight,"ax",%progbits
 2994              		.align	2
 2995              		.global	turnRight
 2996              		.thumb
 2997              		.thumb_func
 2998              		.type	turnRight, %function
 2999              	turnRight:
 3000              	.LFB81:
 719:.\main.c      **** 
 720:.\main.c      **** void turnRight()
 721:.\main.c      **** {
 3001              		.loc 1 721 0
 3002              		.cfi_startproc
 3003              		@ args = 0, pretend = 0, frame = 0
 3004              		@ frame_needed = 1, uses_anonymous_args = 0
 3005 0000 80B5     		push	{r7, lr}
 3006              		.cfi_def_cfa_offset 8
 3007              		.cfi_offset 7, -8
 3008              		.cfi_offset 14, -4
 3009 0002 00AF     		add	r7, sp, #0
 3010              		.cfi_def_cfa_register 7
 722:.\main.c      ****     setSpeed(0,speed * 1.5);
 3011              		.loc 1 722 0
 3012 0004 094B     		ldr	r3, .L155
 3013 0006 D3E90023 		ldrd	r2, [r3]
 3014 000a 1046     		mov	r0, r2
 3015 000c 1946     		mov	r1, r3
 3016 000e 4FF00002 		mov	r2, #0
 3017 0012 074B     		ldr	r3, .L155+4
 3018 0014 FFF7FEFF 		bl	__aeabi_dmul
 3019 0018 0246     		mov	r2, r0
 3020 001a 0B46     		mov	r3, r1
 3021 001c 4FF00000 		mov	r0, #0
 3022 0020 4FF00001 		mov	r1, #0
 3023 0024 FFF7FEFF 		bl	setSpeed
 723:.\main.c      **** }
 3024              		.loc 1 723 0
 3025 0028 80BD     		pop	{r7, pc}
 3026              	.L156:
 3027 002a 00BF     		.align	2
 3028              	.L155:
 3029 002c 00000000 		.word	speed
 3030 0030 0000F83F 		.word	1073217536
 3031              		.cfi_endproc
 3032              	.LFE81:
 3033              		.size	turnRight, .-turnRight
 3034              		.section	.text.turnLeft,"ax",%progbits
 3035              		.align	2
 3036              		.global	turnLeft
 3037              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 68


 3038              		.thumb_func
 3039              		.type	turnLeft, %function
 3040              	turnLeft:
 3041              	.LFB82:
 724:.\main.c      **** 
 725:.\main.c      **** void turnLeft()
 726:.\main.c      **** {
 3042              		.loc 1 726 0
 3043              		.cfi_startproc
 3044              		@ args = 0, pretend = 0, frame = 0
 3045              		@ frame_needed = 1, uses_anonymous_args = 0
 3046 0000 80B5     		push	{r7, lr}
 3047              		.cfi_def_cfa_offset 8
 3048              		.cfi_offset 7, -8
 3049              		.cfi_offset 14, -4
 3050 0002 00AF     		add	r7, sp, #0
 3051              		.cfi_def_cfa_register 7
 727:.\main.c      ****     setSpeed(speed * 1.5,0);
 3052              		.loc 1 727 0
 3053 0004 0A4B     		ldr	r3, .L158
 3054 0006 D3E90023 		ldrd	r2, [r3]
 3055 000a 1046     		mov	r0, r2
 3056 000c 1946     		mov	r1, r3
 3057 000e 4FF00002 		mov	r2, #0
 3058 0012 084B     		ldr	r3, .L158+4
 3059 0014 FFF7FEFF 		bl	__aeabi_dmul
 3060 0018 0246     		mov	r2, r0
 3061 001a 0B46     		mov	r3, r1
 3062 001c 1046     		mov	r0, r2
 3063 001e 1946     		mov	r1, r3
 3064 0020 4FF00002 		mov	r2, #0
 3065 0024 4FF00003 		mov	r3, #0
 3066 0028 FFF7FEFF 		bl	setSpeed
 728:.\main.c      **** }
 3067              		.loc 1 728 0
 3068 002c 80BD     		pop	{r7, pc}
 3069              	.L159:
 3070 002e 00BF     		.align	2
 3071              	.L158:
 3072 0030 00000000 		.word	speed
 3073 0034 0000F83F 		.word	1073217536
 3074              		.cfi_endproc
 3075              	.LFE82:
 3076              		.size	turnLeft, .-turnLeft
 3077              		.section	.text.turnU,"ax",%progbits
 3078              		.align	2
 3079              		.global	turnU
 3080              		.thumb
 3081              		.thumb_func
 3082              		.type	turnU, %function
 3083              	turnU:
 3084              	.LFB83:
 729:.\main.c      **** 
 730:.\main.c      **** void turnU()
 731:.\main.c      **** {
 3085              		.loc 1 731 0
 3086              		.cfi_startproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 69


 3087              		@ args = 0, pretend = 0, frame = 0
 3088              		@ frame_needed = 1, uses_anonymous_args = 0
 3089 0000 B0B5     		push	{r4, r5, r7, lr}
 3090              		.cfi_def_cfa_offset 16
 3091              		.cfi_offset 4, -16
 3092              		.cfi_offset 5, -12
 3093              		.cfi_offset 7, -8
 3094              		.cfi_offset 14, -4
 3095 0002 00AF     		add	r7, sp, #0
 3096              		.cfi_def_cfa_register 7
 732:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3097              		.loc 1 732 0
 3098 0004 0F4B     		ldr	r3, .L161
 3099 0006 D3E90023 		ldrd	r2, [r3]
 3100 000a 1046     		mov	r0, r2
 3101 000c 83F00041 		eor	r1, r3, #-2147483648
 3102 0010 4FF00002 		mov	r2, #0
 3103 0014 0C4B     		ldr	r3, .L161+4
 3104 0016 FFF7FEFF 		bl	__aeabi_dmul
 3105 001a 0246     		mov	r2, r0
 3106 001c 0B46     		mov	r3, r1
 3107 001e 1446     		mov	r4, r2
 3108 0020 1D46     		mov	r5, r3
 3109 0022 084B     		ldr	r3, .L161
 3110 0024 D3E90023 		ldrd	r2, [r3]
 3111 0028 1046     		mov	r0, r2
 3112 002a 1946     		mov	r1, r3
 3113 002c 4FF00002 		mov	r2, #0
 3114 0030 054B     		ldr	r3, .L161+4
 3115 0032 FFF7FEFF 		bl	__aeabi_dmul
 3116 0036 0246     		mov	r2, r0
 3117 0038 0B46     		mov	r3, r1
 3118 003a 2046     		mov	r0, r4
 3119 003c 2946     		mov	r1, r5
 3120 003e FFF7FEFF 		bl	setSpeed
 733:.\main.c      **** }
 3121              		.loc 1 733 0
 3122 0042 B0BD     		pop	{r4, r5, r7, pc}
 3123              	.L162:
 3124              		.align	2
 3125              	.L161:
 3126 0044 00000000 		.word	speed
 3127 0048 0000F83F 		.word	1073217536
 3128              		.cfi_endproc
 3129              	.LFE83:
 3130              		.size	turnU, .-turnU
 3131              		.section	.text.initTurnLeft,"ax",%progbits
 3132              		.align	2
 3133              		.global	initTurnLeft
 3134              		.thumb
 3135              		.thumb_func
 3136              		.type	initTurnLeft, %function
 3137              	initTurnLeft:
 3138              	.LFB84:
 734:.\main.c      **** 
 735:.\main.c      **** void initTurnLeft(){
 3139              		.loc 1 735 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 70


 3140              		.cfi_startproc
 3141              		@ args = 0, pretend = 0, frame = 0
 3142              		@ frame_needed = 1, uses_anonymous_args = 0
 3143 0000 80B5     		push	{r7, lr}
 3144              		.cfi_def_cfa_offset 8
 3145              		.cfi_offset 7, -8
 3146              		.cfi_offset 14, -4
 3147 0002 00AF     		add	r7, sp, #0
 3148              		.cfi_def_cfa_register 7
 736:.\main.c      ****     Timer_2_Stop();
 3149              		.loc 1 736 0
 3150 0004 FFF7FEFF 		bl	Timer_2_Stop
 737:.\main.c      ****     prev_movement_state = movement_state;
 3151              		.loc 1 737 0
 3152 0008 084B     		ldr	r3, .L164
 3153 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3154 000c 084B     		ldr	r3, .L164+4
 3155 000e 1A70     		strb	r2, [r3]
 738:.\main.c      ****     movement_state = LTURN;
 3156              		.loc 1 738 0
 3157 0010 064B     		ldr	r3, .L164
 3158 0012 0122     		movs	r2, #1
 3159 0014 1A70     		strb	r2, [r3]
 739:.\main.c      ****     brakeLeft();
 3160              		.loc 1 739 0
 3161 0016 FFF7FEFF 		bl	brakeLeft
 740:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3162              		.loc 1 740 0
 3163 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3164 001e 0346     		mov	r3, r0
 3165 0020 1A46     		mov	r2, r3
 3166 0022 044B     		ldr	r3, .L164+8
 3167 0024 1A80     		strh	r2, [r3]	@ movhi
 741:.\main.c      ****     Timer_2_Start();
 3168              		.loc 1 741 0
 3169 0026 FFF7FEFF 		bl	Timer_2_Start
 742:.\main.c      **** }
 3170              		.loc 1 742 0
 3171 002a 80BD     		pop	{r7, pc}
 3172              	.L165:
 3173              		.align	2
 3174              	.L164:
 3175 002c 00000000 		.word	movement_state
 3176 0030 00000000 		.word	prev_movement_state
 3177 0034 00000000 		.word	start_turn_count
 3178              		.cfi_endproc
 3179              	.LFE84:
 3180              		.size	initTurnLeft, .-initTurnLeft
 3181              		.section	.text.initTurnRight,"ax",%progbits
 3182              		.align	2
 3183              		.global	initTurnRight
 3184              		.thumb
 3185              		.thumb_func
 3186              		.type	initTurnRight, %function
 3187              	initTurnRight:
 3188              	.LFB85:
 743:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 71


 744:.\main.c      **** void initTurnRight(){
 3189              		.loc 1 744 0
 3190              		.cfi_startproc
 3191              		@ args = 0, pretend = 0, frame = 0
 3192              		@ frame_needed = 1, uses_anonymous_args = 0
 3193 0000 80B5     		push	{r7, lr}
 3194              		.cfi_def_cfa_offset 8
 3195              		.cfi_offset 7, -8
 3196              		.cfi_offset 14, -4
 3197 0002 00AF     		add	r7, sp, #0
 3198              		.cfi_def_cfa_register 7
 745:.\main.c      ****     Timer_2_Stop();
 3199              		.loc 1 745 0
 3200 0004 FFF7FEFF 		bl	Timer_2_Stop
 746:.\main.c      ****     prev_movement_state = movement_state;
 3201              		.loc 1 746 0
 3202 0008 084B     		ldr	r3, .L167
 3203 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3204 000c 084B     		ldr	r3, .L167+4
 3205 000e 1A70     		strb	r2, [r3]
 747:.\main.c      ****     movement_state = RTURN;
 3206              		.loc 1 747 0
 3207 0010 064B     		ldr	r3, .L167
 3208 0012 0222     		movs	r2, #2
 3209 0014 1A70     		strb	r2, [r3]
 748:.\main.c      ****     brakeRight();
 3210              		.loc 1 748 0
 3211 0016 FFF7FEFF 		bl	brakeRight
 749:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3212              		.loc 1 749 0
 3213 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3214 001e 0346     		mov	r3, r0
 3215 0020 1A46     		mov	r2, r3
 3216 0022 044B     		ldr	r3, .L167+8
 3217 0024 1A80     		strh	r2, [r3]	@ movhi
 750:.\main.c      ****     Timer_2_Start();
 3218              		.loc 1 750 0
 3219 0026 FFF7FEFF 		bl	Timer_2_Start
 751:.\main.c      **** }
 3220              		.loc 1 751 0
 3221 002a 80BD     		pop	{r7, pc}
 3222              	.L168:
 3223              		.align	2
 3224              	.L167:
 3225 002c 00000000 		.word	movement_state
 3226 0030 00000000 		.word	prev_movement_state
 3227 0034 00000000 		.word	start_turn_count
 3228              		.cfi_endproc
 3229              	.LFE85:
 3230              		.size	initTurnRight, .-initTurnRight
 3231              		.section	.text.initTurnU,"ax",%progbits
 3232              		.align	2
 3233              		.global	initTurnU
 3234              		.thumb
 3235              		.thumb_func
 3236              		.type	initTurnU, %function
 3237              	initTurnU:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 72


 3238              	.LFB86:
 752:.\main.c      **** 
 753:.\main.c      **** void initTurnU(){
 3239              		.loc 1 753 0
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 0
 3242              		@ frame_needed = 1, uses_anonymous_args = 0
 3243 0000 80B5     		push	{r7, lr}
 3244              		.cfi_def_cfa_offset 8
 3245              		.cfi_offset 7, -8
 3246              		.cfi_offset 14, -4
 3247 0002 00AF     		add	r7, sp, #0
 3248              		.cfi_def_cfa_register 7
 754:.\main.c      ****     Timer_2_Stop();
 3249              		.loc 1 754 0
 3250 0004 FFF7FEFF 		bl	Timer_2_Stop
 755:.\main.c      ****     prev_movement_state = movement_state;
 3251              		.loc 1 755 0
 3252 0008 084B     		ldr	r3, .L170
 3253 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3254 000c 084B     		ldr	r3, .L170+4
 3255 000e 1A70     		strb	r2, [r3]
 756:.\main.c      ****     movement_state = UTURN;
 3256              		.loc 1 756 0
 3257 0010 064B     		ldr	r3, .L170
 3258 0012 0722     		movs	r2, #7
 3259 0014 1A70     		strb	r2, [r3]
 757:.\main.c      ****     brakeMotor();
 3260              		.loc 1 757 0
 3261 0016 FFF7FEFF 		bl	brakeMotor
 758:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3262              		.loc 1 758 0
 3263 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3264 001e 0346     		mov	r3, r0
 3265 0020 1A46     		mov	r2, r3
 3266 0022 044B     		ldr	r3, .L170+8
 3267 0024 1A80     		strh	r2, [r3]	@ movhi
 759:.\main.c      ****     Timer_2_Start();
 3268              		.loc 1 759 0
 3269 0026 FFF7FEFF 		bl	Timer_2_Start
 760:.\main.c      **** }
 3270              		.loc 1 760 0
 3271 002a 80BD     		pop	{r7, pc}
 3272              	.L171:
 3273              		.align	2
 3274              	.L170:
 3275 002c 00000000 		.word	movement_state
 3276 0030 00000000 		.word	prev_movement_state
 3277 0034 00000000 		.word	start_turn_count
 3278              		.cfi_endproc
 3279              	.LFE86:
 3280              		.size	initTurnU, .-initTurnU
 3281              		.section	.text.initForward,"ax",%progbits
 3282              		.align	2
 3283              		.global	initForward
 3284              		.thumb
 3285              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 73


 3286              		.type	initForward, %function
 3287              	initForward:
 3288              	.LFB87:
 761:.\main.c      **** 
 762:.\main.c      **** void initForward(){
 3289              		.loc 1 762 0
 3290              		.cfi_startproc
 3291              		@ args = 0, pretend = 0, frame = 0
 3292              		@ frame_needed = 1, uses_anonymous_args = 0
 3293 0000 80B5     		push	{r7, lr}
 3294              		.cfi_def_cfa_offset 8
 3295              		.cfi_offset 7, -8
 3296              		.cfi_offset 14, -4
 3297 0002 00AF     		add	r7, sp, #0
 3298              		.cfi_def_cfa_register 7
 763:.\main.c      ****     brakeMotor();
 3299              		.loc 1 763 0
 3300 0004 FFF7FEFF 		bl	brakeMotor
 764:.\main.c      ****     movement_state = DRIVE;
 3301              		.loc 1 764 0
 3302 0008 014B     		ldr	r3, .L173
 3303 000a 0022     		movs	r2, #0
 3304 000c 1A70     		strb	r2, [r3]
 765:.\main.c      **** }
 3305              		.loc 1 765 0
 3306 000e 80BD     		pop	{r7, pc}
 3307              	.L174:
 3308              		.align	2
 3309              	.L173:
 3310 0010 00000000 		.word	movement_state
 3311              		.cfi_endproc
 3312              	.LFE87:
 3313              		.size	initForward, .-initForward
 3314              		.section	.text.initBrake,"ax",%progbits
 3315              		.align	2
 3316              		.global	initBrake
 3317              		.thumb
 3318              		.thumb_func
 3319              		.type	initBrake, %function
 3320              	initBrake:
 3321              	.LFB88:
 766:.\main.c      **** 
 767:.\main.c      **** void initBrake(){
 3322              		.loc 1 767 0
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 0
 3325              		@ frame_needed = 1, uses_anonymous_args = 0
 3326              		@ link register save eliminated.
 3327 0000 80B4     		push	{r7}
 3328              		.cfi_def_cfa_offset 4
 3329              		.cfi_offset 7, -4
 3330 0002 00AF     		add	r7, sp, #0
 3331              		.cfi_def_cfa_register 7
 768:.\main.c      ****     movement_state = STOPPED;
 3332              		.loc 1 768 0
 3333 0004 034B     		ldr	r3, .L176
 3334 0006 0322     		movs	r2, #3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 74


 3335 0008 1A70     		strb	r2, [r3]
 769:.\main.c      **** }
 3336              		.loc 1 769 0
 3337 000a BD46     		mov	sp, r7
 3338              		.cfi_def_cfa_register 13
 3339              		@ sp needed
 3340 000c 5DF8047B 		ldr	r7, [sp], #4
 3341              		.cfi_restore 7
 3342              		.cfi_def_cfa_offset 0
 3343 0010 7047     		bx	lr
 3344              	.L177:
 3345 0012 00BF     		.align	2
 3346              	.L176:
 3347 0014 00000000 		.word	movement_state
 3348              		.cfi_endproc
 3349              	.LFE88:
 3350              		.size	initBrake, .-initBrake
 3351              		.section	.text.initTrack,"ax",%progbits
 3352              		.align	2
 3353              		.global	initTrack
 3354              		.thumb
 3355              		.thumb_func
 3356              		.type	initTrack, %function
 3357              	initTrack:
 3358              	.LFB89:
 770:.\main.c      **** 
 771:.\main.c      **** void initTrack()
 772:.\main.c      **** {
 3359              		.loc 1 772 0
 3360              		.cfi_startproc
 3361              		@ args = 0, pretend = 0, frame = 0
 3362              		@ frame_needed = 1, uses_anonymous_args = 0
 3363              		@ link register save eliminated.
 3364 0000 80B4     		push	{r7}
 3365              		.cfi_def_cfa_offset 4
 3366              		.cfi_offset 7, -4
 3367 0002 00AF     		add	r7, sp, #0
 3368              		.cfi_def_cfa_register 7
 773:.\main.c      ****     movement_state = TRACKING;
 3369              		.loc 1 773 0
 3370 0004 034B     		ldr	r3, .L179
 3371 0006 0422     		movs	r2, #4
 3372 0008 1A70     		strb	r2, [r3]
 774:.\main.c      **** }
 3373              		.loc 1 774 0
 3374 000a BD46     		mov	sp, r7
 3375              		.cfi_def_cfa_register 13
 3376              		@ sp needed
 3377 000c 5DF8047B 		ldr	r7, [sp], #4
 3378              		.cfi_restore 7
 3379              		.cfi_def_cfa_offset 0
 3380 0010 7047     		bx	lr
 3381              	.L180:
 3382 0012 00BF     		.align	2
 3383              	.L179:
 3384 0014 00000000 		.word	movement_state
 3385              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 75


 3386              	.LFE89:
 3387              		.size	initTrack, .-initTrack
 3388              		.section	.text.initTrackU,"ax",%progbits
 3389              		.align	2
 3390              		.global	initTrackU
 3391              		.thumb
 3392              		.thumb_func
 3393              		.type	initTrackU, %function
 3394              	initTrackU:
 3395              	.LFB90:
 775:.\main.c      **** 
 776:.\main.c      **** void initTrackU(){
 3396              		.loc 1 776 0
 3397              		.cfi_startproc
 3398              		@ args = 0, pretend = 0, frame = 0
 3399              		@ frame_needed = 1, uses_anonymous_args = 0
 3400              		@ link register save eliminated.
 3401 0000 80B4     		push	{r7}
 3402              		.cfi_def_cfa_offset 4
 3403              		.cfi_offset 7, -4
 3404 0002 00AF     		add	r7, sp, #0
 3405              		.cfi_def_cfa_register 7
 777:.\main.c      ****     movement_state = TRACKING_U;
 3406              		.loc 1 777 0
 3407 0004 034B     		ldr	r3, .L182
 3408 0006 0522     		movs	r2, #5
 3409 0008 1A70     		strb	r2, [r3]
 778:.\main.c      **** }
 3410              		.loc 1 778 0
 3411 000a BD46     		mov	sp, r7
 3412              		.cfi_def_cfa_register 13
 3413              		@ sp needed
 3414 000c 5DF8047B 		ldr	r7, [sp], #4
 3415              		.cfi_restore 7
 3416              		.cfi_def_cfa_offset 0
 3417 0010 7047     		bx	lr
 3418              	.L183:
 3419 0012 00BF     		.align	2
 3420              	.L182:
 3421 0014 00000000 		.word	movement_state
 3422              		.cfi_endproc
 3423              	.LFE90:
 3424              		.size	initTrackU, .-initTrackU
 3425              		.section	.text.inittrackLineZ,"ax",%progbits
 3426              		.align	2
 3427              		.global	inittrackLineZ
 3428              		.thumb
 3429              		.thumb_func
 3430              		.type	inittrackLineZ, %function
 3431              	inittrackLineZ:
 3432              	.LFB91:
 779:.\main.c      **** 
 780:.\main.c      **** void inittrackLineZ(){
 3433              		.loc 1 780 0
 3434              		.cfi_startproc
 3435              		@ args = 0, pretend = 0, frame = 0
 3436              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 76


 3437              		@ link register save eliminated.
 3438 0000 80B4     		push	{r7}
 3439              		.cfi_def_cfa_offset 4
 3440              		.cfi_offset 7, -4
 3441 0002 00AF     		add	r7, sp, #0
 3442              		.cfi_def_cfa_register 7
 781:.\main.c      ****     movement_state = TRACKING_SOFT;
 3443              		.loc 1 781 0
 3444 0004 034B     		ldr	r3, .L185
 3445 0006 0622     		movs	r2, #6
 3446 0008 1A70     		strb	r2, [r3]
 782:.\main.c      **** }
 3447              		.loc 1 782 0
 3448 000a BD46     		mov	sp, r7
 3449              		.cfi_def_cfa_register 13
 3450              		@ sp needed
 3451 000c 5DF8047B 		ldr	r7, [sp], #4
 3452              		.cfi_restore 7
 3453              		.cfi_def_cfa_offset 0
 3454 0010 7047     		bx	lr
 3455              	.L186:
 3456 0012 00BF     		.align	2
 3457              	.L185:
 3458 0014 00000000 		.word	movement_state
 3459              		.cfi_endproc
 3460              	.LFE91:
 3461              		.size	inittrackLineZ, .-inittrackLineZ
 3462              		.section	.text.rxInt,"ax",%progbits
 3463              		.align	2
 3464              		.global	rxInt
 3465              		.thumb
 3466              		.thumb_func
 3467              		.type	rxInt, %function
 3468              	rxInt:
 3469              	.LFB92:
 783:.\main.c      **** 
 784:.\main.c      **** 
 785:.\main.c      **** 
 786:.\main.c      **** //Binary RF Data
 787:.\main.c      **** CY_ISR(rxInt){
 3470              		.loc 1 787 0
 3471              		.cfi_startproc
 3472              		@ args = 0, pretend = 0, frame = 8
 3473              		@ frame_needed = 1, uses_anonymous_args = 0
 3474 0000 B0B5     		push	{r4, r5, r7, lr}
 3475              		.cfi_def_cfa_offset 16
 3476              		.cfi_offset 4, -16
 3477              		.cfi_offset 5, -12
 3478              		.cfi_offset 7, -8
 3479              		.cfi_offset 14, -4
 3480 0002 82B0     		sub	sp, sp, #8
 3481              		.cfi_def_cfa_offset 24
 3482 0004 00AF     		add	r7, sp, #0
 3483              		.cfi_def_cfa_register 7
 788:.\main.c      ****     char rf_char = UART_GetChar();
 3484              		.loc 1 788 0
 3485 0006 FFF7FEFF 		bl	UART_GetChar
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 77


 3486 000a 0346     		mov	r3, r0
 3487 000c FB71     		strb	r3, [r7, #7]
 789:.\main.c      ****     if(rf_char == SOP){
 3488              		.loc 1 789 0
 3489 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3490 0010 AA2B     		cmp	r3, #170
 3491 0012 2BD1     		bne	.L188
 790:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 791:.\main.c      ****             if(byteCount == 34)
 3492              		.loc 1 791 0
 3493 0014 224B     		ldr	r3, .L192
 3494 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3495 0018 222B     		cmp	r3, #34
 3496 001a 20D1     		bne	.L189
 792:.\main.c      ****             {
 793:.\main.c      ****                 system_state = buffer_state;
 3497              		.loc 1 793 0
 3498 001c 214B     		ldr	r3, .L192+4
 3499 001e 224A     		ldr	r2, .L192+8
 3500 0020 1568     		ldr	r5, [r2]	@ unaligned
 3501 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3502 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3503 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3504 0028 1D60     		str	r5, [r3]	@ unaligned
 3505 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3506 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3507 002e D960     		str	r1, [r3, #12]	@ unaligned
 3508 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3509 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3510 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3511 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3512 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3513 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3514 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3515 003e D961     		str	r1, [r3, #28]	@ unaligned
 794:.\main.c      ****                 if(initial_pos_valid == 0)
 3516              		.loc 1 794 0
 3517 0040 1A4B     		ldr	r3, .L192+12
 3518 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3519 0044 002B     		cmp	r3, #0
 3520 0046 0AD1     		bne	.L189
 795:.\main.c      ****                 {
 796:.\main.c      ****                     LED_Write(~LED_Read());
 3521              		.loc 1 796 0
 3522 0048 FFF7FEFF 		bl	LED_Read
 3523 004c 0346     		mov	r3, r0
 3524 004e DB43     		mvns	r3, r3
 3525 0050 DBB2     		uxtb	r3, r3
 3526 0052 1846     		mov	r0, r3
 3527 0054 FFF7FEFF 		bl	LED_Write
 797:.\main.c      ****                     initial_pos_valid = 1;
 3528              		.loc 1 797 0
 3529 0058 144B     		ldr	r3, .L192+12
 3530 005a 0122     		movs	r2, #1
 3531 005c 1A70     		strb	r2, [r3]
 3532              	.L189:
 798:.\main.c      ****                 }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 78


 799:.\main.c      ****             }
 800:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3533              		.loc 1 800 0
 3534 005e 104B     		ldr	r3, .L192
 3535 0060 0222     		movs	r2, #2
 3536 0062 1A70     		strb	r2, [r3]
 801:.\main.c      ****             flag_rx = 0;
 3537              		.loc 1 801 0
 3538 0064 124B     		ldr	r3, .L192+16
 3539 0066 0022     		movs	r2, #0
 3540 0068 1A70     		strb	r2, [r3]
 3541 006a 16E0     		b	.L187
 3542              	.L188:
 802:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 803:.\main.c      ****         }
 804:.\main.c      ****         else
 805:.\main.c      ****         {
 806:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3543              		.loc 1 806 0
 3544 006c 0C4B     		ldr	r3, .L192
 3545 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3546 0070 03F00103 		and	r3, r3, #1
 3547 0074 0F49     		ldr	r1, .L192+20
 3548 0076 FA79     		ldrb	r2, [r7, #7]
 3549 0078 CA54     		strb	r2, [r1, r3]
 807:.\main.c      ****            
 808:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3550              		.loc 1 808 0
 3551 007a 094B     		ldr	r3, .L192
 3552 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3553 007e 03F00103 		and	r3, r3, #1
 3554 0082 DBB2     		uxtb	r3, r3
 3555 0084 002B     		cmp	r3, #0
 3556 0086 02D0     		beq	.L191
 809:.\main.c      ****             {
 810:.\main.c      ****                 flag_rx = 1;
 3557              		.loc 1 810 0
 3558 0088 094B     		ldr	r3, .L192+16
 3559 008a 0122     		movs	r2, #1
 3560 008c 1A70     		strb	r2, [r3]
 3561              	.L191:
 811:.\main.c      ****             }
 812:.\main.c      ****             byteCount = (byteCount + 1);
 3562              		.loc 1 812 0
 3563 008e 044B     		ldr	r3, .L192
 3564 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3565 0092 0133     		adds	r3, r3, #1
 3566 0094 DAB2     		uxtb	r2, r3
 3567 0096 024B     		ldr	r3, .L192
 3568 0098 1A70     		strb	r2, [r3]
 3569              	.L187:
 813:.\main.c      ****         }
 814:.\main.c      **** }
 3570              		.loc 1 814 0
 3571 009a 0837     		adds	r7, r7, #8
 3572              		.cfi_def_cfa_offset 16
 3573 009c BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 79


 3574              		.cfi_def_cfa_register 13
 3575              		@ sp needed
 3576 009e B0BD     		pop	{r4, r5, r7, pc}
 3577              	.L193:
 3578              		.align	2
 3579              	.L192:
 3580 00a0 00000000 		.word	byteCount
 3581 00a4 00000000 		.word	system_state
 3582 00a8 00000000 		.word	buffer_state
 3583 00ac 00000000 		.word	initial_pos_valid
 3584 00b0 00000000 		.word	flag_rx
 3585 00b4 00000000 		.word	packet
 3586              		.cfi_endproc
 3587              	.LFE92:
 3588              		.size	rxInt, .-rxInt
 3589              		.global	__aeabi_i2f
 3590              		.global	__aeabi_fmul
 3591              		.global	__aeabi_f2iz
 3592              		.section	.rodata
 3593 00be 0000     		.align	2
 3594              	.LC10:
 3595 00c0 74617267 		.ascii	"target quad: %d\015\012\000"
 3595      65742071 
 3595      7561643A 
 3595      2025640D 
 3595      0A00
 3596 00d2 0000     		.align	2
 3597              	.LC11:
 3598 00d4 0D0A00   		.ascii	"\015\012\000"
 3599 00d7 00       		.align	2
 3600              	.LC12:
 3601 00d8 72656365 		.ascii	"received: \000"
 3601      69766564 
 3601      3A2000
 3602 00e3 00       		.align	2
 3603              	.LC13:
 3604 00e4 73746172 		.ascii	"starting from instruction %d\015\012\000"
 3604      74696E67 
 3604      2066726F 
 3604      6D20696E 
 3604      73747275 
 3605              		.section	.text.BT_rxInt,"ax",%progbits
 3606              		.align	2
 3607              		.global	BT_rxInt
 3608              		.thumb
 3609              		.thumb_func
 3610              		.type	BT_rxInt, %function
 3611              	BT_rxInt:
 3612              	.LFB93:
 815:.\main.c      **** 
 816:.\main.c      **** CY_ISR(BT_rxInt)
 817:.\main.c      **** {
 3613              		.loc 1 817 0
 3614              		.cfi_startproc
 3615              		@ args = 0, pretend = 0, frame = 32
 3616              		@ frame_needed = 1, uses_anonymous_args = 0
 3617 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 80


 3618              		.cfi_def_cfa_offset 8
 3619              		.cfi_offset 7, -8
 3620              		.cfi_offset 14, -4
 3621 0002 88B0     		sub	sp, sp, #32
 3622              		.cfi_def_cfa_offset 40
 3623 0004 00AF     		add	r7, sp, #0
 3624              		.cfi_def_cfa_register 7
 818:.\main.c      ****     char rf_char = UART_GetChar();
 3625              		.loc 1 818 0
 3626 0006 FFF7FEFF 		bl	UART_GetChar
 3627 000a 0346     		mov	r3, r0
 3628 000c FB77     		strb	r3, [r7, #31]
 819:.\main.c      ****     switch(rf_char){
 3629              		.loc 1 819 0
 3630 000e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3631 0010 313B     		subs	r3, r3, #49
 3632 0012 492B     		cmp	r3, #73
 3633 0014 00F2F281 		bhi	.L194
 3634 0018 01A2     		adr	r2, .L197
 3635 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3636 001e 00BF     		.p2align 2
 3637              	.L197:
 3638 0020 CB020000 		.word	.L196+1
 3639 0024 15020000 		.word	.L198+1
 3640 0028 FD030000 		.word	.L194+1
 3641 002c FD030000 		.word	.L194+1
 3642 0030 FD030000 		.word	.L194+1
 3643 0034 FD030000 		.word	.L194+1
 3644 0038 FD030000 		.word	.L194+1
 3645 003c FD030000 		.word	.L194+1
 3646 0040 FD030000 		.word	.L194+1
 3647 0044 FD030000 		.word	.L194+1
 3648 0048 FD030000 		.word	.L194+1
 3649 004c FD030000 		.word	.L194+1
 3650 0050 FD030000 		.word	.L194+1
 3651 0054 FD030000 		.word	.L194+1
 3652 0058 FD030000 		.word	.L194+1
 3653 005c FD030000 		.word	.L194+1
 3654 0060 FD030000 		.word	.L194+1
 3655 0064 FD030000 		.word	.L194+1
 3656 0068 FD030000 		.word	.L194+1
 3657 006c FD030000 		.word	.L194+1
 3658 0070 FD030000 		.word	.L194+1
 3659 0074 FD030000 		.word	.L194+1
 3660 0078 FD030000 		.word	.L194+1
 3661 007c FD030000 		.word	.L194+1
 3662 0080 FD030000 		.word	.L194+1
 3663 0084 FD030000 		.word	.L194+1
 3664 0088 FD030000 		.word	.L194+1
 3665 008c FD030000 		.word	.L194+1
 3666 0090 FD030000 		.word	.L194+1
 3667 0094 FD030000 		.word	.L194+1
 3668 0098 FD030000 		.word	.L194+1
 3669 009c FD030000 		.word	.L194+1
 3670 00a0 FD030000 		.word	.L194+1
 3671 00a4 FD030000 		.word	.L194+1
 3672 00a8 FD030000 		.word	.L194+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 81


 3673 00ac FD030000 		.word	.L194+1
 3674 00b0 FD030000 		.word	.L194+1
 3675 00b4 FD030000 		.word	.L194+1
 3676 00b8 FD030000 		.word	.L194+1
 3677 00bc FD030000 		.word	.L194+1
 3678 00c0 FD030000 		.word	.L194+1
 3679 00c4 FD030000 		.word	.L194+1
 3680 00c8 FD030000 		.word	.L194+1
 3681 00cc FD030000 		.word	.L194+1
 3682 00d0 FD030000 		.word	.L194+1
 3683 00d4 FD030000 		.word	.L194+1
 3684 00d8 FD030000 		.word	.L194+1
 3685 00dc FD030000 		.word	.L194+1
 3686 00e0 49010000 		.word	.L199+1
 3687 00e4 FD030000 		.word	.L194+1
 3688 00e8 FD030000 		.word	.L194+1
 3689 00ec 6D010000 		.word	.L200+1
 3690 00f0 FD030000 		.word	.L194+1
 3691 00f4 79010000 		.word	.L201+1
 3692 00f8 FD030000 		.word	.L194+1
 3693 00fc FD030000 		.word	.L194+1
 3694 0100 FD030000 		.word	.L194+1
 3695 0104 FD030000 		.word	.L194+1
 3696 0108 FD030000 		.word	.L194+1
 3697 010c FD030000 		.word	.L194+1
 3698 0110 FD030000 		.word	.L194+1
 3699 0114 FD030000 		.word	.L194+1
 3700 0118 FD030000 		.word	.L194+1
 3701 011c FD030000 		.word	.L194+1
 3702 0120 A9010000 		.word	.L202+1
 3703 0124 FF010000 		.word	.L203+1
 3704 0128 61010000 		.word	.L204+1
 3705 012c 85010000 		.word	.L205+1
 3706 0130 91010000 		.word	.L206+1
 3707 0134 FD030000 		.word	.L194+1
 3708 0138 55010000 		.word	.L207+1
 3709 013c FD030000 		.word	.L194+1
 3710 0140 FD030000 		.word	.L194+1
 3711 0144 9D010000 		.word	.L208+1
 3712              		.p2align 1
 3713              	.L199:
 3714              	.LBB11:
 820:.\main.c      ****     case 'a':
 821:.\main.c      ****         initTurnLeft();
 3715              		.loc 1 821 0
 3716 0148 FFF7FEFF 		bl	initTurnLeft
 822:.\main.c      ****         track_mode = NO_TRACK;
 3717              		.loc 1 822 0
 3718 014c AD4B     		ldr	r3, .L222
 3719 014e 0022     		movs	r2, #0
 3720 0150 1A70     		strb	r2, [r3]
 823:.\main.c      ****         break;
 3721              		.loc 1 823 0
 3722 0152 53E1     		b	.L194
 3723              	.L207:
 824:.\main.c      ****     case 'w':
 825:.\main.c      ****         initForward();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 82


 3724              		.loc 1 825 0
 3725 0154 FFF7FEFF 		bl	initForward
 826:.\main.c      ****         track_mode = NO_TRACK;
 3726              		.loc 1 826 0
 3727 0158 AA4B     		ldr	r3, .L222
 3728 015a 0022     		movs	r2, #0
 3729 015c 1A70     		strb	r2, [r3]
 827:.\main.c      ****         break;
 3730              		.loc 1 827 0
 3731 015e 4DE1     		b	.L194
 3732              	.L204:
 828:.\main.c      ****     case 's': 
 829:.\main.c      ****         reverseDirection();
 3733              		.loc 1 829 0
 3734 0160 FFF7FEFF 		bl	reverseDirection
 830:.\main.c      ****         track_mode = NO_TRACK;
 3735              		.loc 1 830 0
 3736 0164 A74B     		ldr	r3, .L222
 3737 0166 0022     		movs	r2, #0
 3738 0168 1A70     		strb	r2, [r3]
 831:.\main.c      ****         break;
 3739              		.loc 1 831 0
 3740 016a 47E1     		b	.L194
 3741              	.L200:
 832:.\main.c      ****     case 'd':
 833:.\main.c      ****         initTurnRight();
 3742              		.loc 1 833 0
 3743 016c FFF7FEFF 		bl	initTurnRight
 834:.\main.c      ****         track_mode = NO_TRACK;
 3744              		.loc 1 834 0
 3745 0170 A44B     		ldr	r3, .L222
 3746 0172 0022     		movs	r2, #0
 3747 0174 1A70     		strb	r2, [r3]
 835:.\main.c      ****         break;
 3748              		.loc 1 835 0
 3749 0176 41E1     		b	.L194
 3750              	.L201:
 836:.\main.c      ****     case 'f':
 837:.\main.c      ****         initBrake();
 3751              		.loc 1 837 0
 3752 0178 FFF7FEFF 		bl	initBrake
 838:.\main.c      ****         track_mode = NO_TRACK;
 3753              		.loc 1 838 0
 3754 017c A14B     		ldr	r3, .L222
 3755 017e 0022     		movs	r2, #0
 3756 0180 1A70     		strb	r2, [r3]
 839:.\main.c      ****         break;
 3757              		.loc 1 839 0
 3758 0182 3BE1     		b	.L194
 3759              	.L205:
 840:.\main.c      ****     case('t'):
 841:.\main.c      ****         track_mode = CURVE_TRACK;
 3760              		.loc 1 841 0
 3761 0184 9F4B     		ldr	r3, .L222
 3762 0186 0122     		movs	r2, #1
 3763 0188 1A70     		strb	r2, [r3]
 842:.\main.c      ****         initTrack();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 83


 3764              		.loc 1 842 0
 3765 018a FFF7FEFF 		bl	initTrack
 843:.\main.c      ****         break;
 3766              		.loc 1 843 0
 3767 018e 35E1     		b	.L194
 3768              	.L206:
 844:.\main.c      ****     case('u'):
 845:.\main.c      ****         initTrackU();
 3769              		.loc 1 845 0
 3770 0190 FFF7FEFF 		bl	initTrackU
 846:.\main.c      ****         track_mode = U_TRACK;
 3771              		.loc 1 846 0
 3772 0194 9B4B     		ldr	r3, .L222
 3773 0196 0222     		movs	r2, #2
 3774 0198 1A70     		strb	r2, [r3]
 847:.\main.c      ****         break;
 3775              		.loc 1 847 0
 3776 019a 2FE1     		b	.L194
 3777              	.L208:
 848:.\main.c      ****     case('z'):
 849:.\main.c      ****         track_mode = SQUARE_TRACK;
 3778              		.loc 1 849 0
 3779 019c 994B     		ldr	r3, .L222
 3780 019e 0322     		movs	r2, #3
 3781 01a0 1A70     		strb	r2, [r3]
 850:.\main.c      ****         inittrackLineZ();
 3782              		.loc 1 850 0
 3783 01a2 FFF7FEFF 		bl	inittrackLineZ
 851:.\main.c      ****         break;
 3784              		.loc 1 851 0
 3785 01a6 29E1     		b	.L194
 3786              	.L202:
 852:.\main.c      ****     case('q'):
 853:.\main.c      ****         track_mode = QUAD_STOP;
 3787              		.loc 1 853 0
 3788 01a8 964B     		ldr	r3, .L222
 3789 01aa 0422     		movs	r2, #4
 3790 01ac 1A70     		strb	r2, [r3]
 854:.\main.c      ****         accum_dist = 0;
 3791              		.loc 1 854 0
 3792 01ae 964B     		ldr	r3, .L222+4
 3793 01b0 0022     		movs	r2, #0
 3794 01b2 1A80     		strh	r2, [r3]	@ movhi
 855:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3795              		.loc 1 855 0
 3796 01b4 954B     		ldr	r3, .L222+8
 3797 01b6 1B88     		ldrh	r3, [r3]
 3798 01b8 1BB2     		sxth	r3, r3
 3799 01ba 1846     		mov	r0, r3
 3800 01bc FFF7FEFF 		bl	__aeabi_i2f
 3801 01c0 0246     		mov	r2, r0
 3802 01c2 934B     		ldr	r3, .L222+12
 3803 01c4 1B68     		ldr	r3, [r3]	@ float
 3804 01c6 1046     		mov	r0, r2
 3805 01c8 1946     		mov	r1, r3
 3806 01ca FFF7FEFF 		bl	__aeabi_fmul
 3807 01ce 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 84


 3808 01d0 1846     		mov	r0, r3
 3809 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3810 01d6 0346     		mov	r3, r0
 3811 01d8 9AB2     		uxth	r2, r3
 3812 01da 8E4B     		ldr	r3, .L222+16
 3813 01dc 1A80     		strh	r2, [r3]	@ movhi
 856:.\main.c      ****         char mes[16];
 857:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3814              		.loc 1 857 0
 3815 01de 8D4B     		ldr	r3, .L222+16
 3816 01e0 1B88     		ldrh	r3, [r3]
 3817 01e2 1BB2     		sxth	r3, r3
 3818 01e4 3A46     		mov	r2, r7
 3819 01e6 1046     		mov	r0, r2
 3820 01e8 8B49     		ldr	r1, .L222+20
 3821 01ea 1A46     		mov	r2, r3
 3822 01ec FFF7FEFF 		bl	sprintf
 858:.\main.c      ****         UART_PutString(mes);
 3823              		.loc 1 858 0
 3824 01f0 3B46     		mov	r3, r7
 3825 01f2 1846     		mov	r0, r3
 3826 01f4 FFF7FEFF 		bl	UART_PutString
 859:.\main.c      ****         initForward();
 3827              		.loc 1 859 0
 3828 01f8 FFF7FEFF 		bl	initForward
 860:.\main.c      ****         break;
 3829              		.loc 1 860 0
 3830 01fc FEE0     		b	.L194
 3831              	.L203:
 861:.\main.c      ****     case ('r'):
 862:.\main.c      ****         track_mode = RF_STOP;
 3832              		.loc 1 862 0
 3833 01fe 814B     		ldr	r3, .L222
 3834 0200 0522     		movs	r2, #5
 3835 0202 1A70     		strb	r2, [r3]
 863:.\main.c      ****         changeToRF();
 3836              		.loc 1 863 0
 3837 0204 FFF7FEFF 		bl	changeToRF
 864:.\main.c      ****         // Make initial position
 865:.\main.c      ****         initial_pos_valid = 0;
 3838              		.loc 1 865 0
 3839 0208 844B     		ldr	r3, .L222+24
 3840 020a 0022     		movs	r2, #0
 3841 020c 1A70     		strb	r2, [r3]
 866:.\main.c      ****         initBrake();
 3842              		.loc 1 866 0
 3843 020e FFF7FEFF 		bl	initBrake
 867:.\main.c      ****         break;
 3844              		.loc 1 867 0
 3845 0212 F3E0     		b	.L194
 3846              	.L198:
 868:.\main.c      ****     case ('2'):
 869:.\main.c      ****         track_mode = DEST_TEST;
 3847              		.loc 1 869 0
 3848 0214 7B4B     		ldr	r3, .L222
 3849 0216 0622     		movs	r2, #6
 3850 0218 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 85


 870:.\main.c      ****         tracked_direction = robot_direction;
 3851              		.loc 1 870 0
 3852 021a 814B     		ldr	r3, .L222+28
 3853 021c 1B68     		ldr	r3, [r3]
 3854 021e 814A     		ldr	r2, .L222+32
 3855 0220 1360     		str	r3, [r2]
 871:.\main.c      ****         instructionLength = generateDirections();
 3856              		.loc 1 871 0
 3857 0222 FFF7FEFF 		bl	generateDirections
 3858 0226 0346     		mov	r3, r0
 3859 0228 9AB2     		uxth	r2, r3
 3860 022a 7F4B     		ldr	r3, .L222+36
 3861 022c 1A80     		strh	r2, [r3]	@ movhi
 872:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 873:.\main.c      ****         //char message[128];
 874:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 875:.\main.c      ****         int i = 0;
 3862              		.loc 1 875 0
 3863 022e 0023     		movs	r3, #0
 3864 0230 BB61     		str	r3, [r7, #24]
 876:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3865              		.loc 1 876 0
 3866 0232 0023     		movs	r3, #0
 3867 0234 BB61     		str	r3, [r7, #24]
 3868 0236 18E0     		b	.L210
 3869              	.L213:
 877:.\main.c      ****         {
 878:.\main.c      ****             if(i%2 == 0)
 3870              		.loc 1 878 0
 3871 0238 BB69     		ldr	r3, [r7, #24]
 3872 023a 03F00103 		and	r3, r3, #1
 3873 023e 002B     		cmp	r3, #0
 3874 0240 07D1     		bne	.L211
 879:.\main.c      ****             {
 880:.\main.c      ****                 UART_PutChar(instructions[i]);
 3875              		.loc 1 880 0
 3876 0242 7A4A     		ldr	r2, .L222+40
 3877 0244 BB69     		ldr	r3, [r7, #24]
 3878 0246 1344     		add	r3, r3, r2
 3879 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3880 024a 1846     		mov	r0, r3
 3881 024c FFF7FEFF 		bl	UART_PutChar
 3882 0250 08E0     		b	.L212
 3883              	.L211:
 881:.\main.c      ****             }
 882:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3884              		.loc 1 882 0
 3885 0252 764A     		ldr	r2, .L222+40
 3886 0254 BB69     		ldr	r3, [r7, #24]
 3887 0256 1344     		add	r3, r3, r2
 3888 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3889 025a 3033     		adds	r3, r3, #48
 3890 025c DBB2     		uxtb	r3, r3
 3891 025e 1846     		mov	r0, r3
 3892 0260 FFF7FEFF 		bl	UART_PutChar
 3893              	.L212:
 876:.\main.c      ****         {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 86


 3894              		.loc 1 876 0 discriminator 2
 3895 0264 BB69     		ldr	r3, [r7, #24]
 3896 0266 0133     		adds	r3, r3, #1
 3897 0268 BB61     		str	r3, [r7, #24]
 3898              	.L210:
 876:.\main.c      ****         {
 3899              		.loc 1 876 0 is_stmt 0 discriminator 1
 3900 026a 6F4B     		ldr	r3, .L222+36
 3901 026c 1B88     		ldrh	r3, [r3]
 3902 026e 1A46     		mov	r2, r3
 3903 0270 BB69     		ldr	r3, [r7, #24]
 3904 0272 9A42     		cmp	r2, r3
 3905 0274 E0DC     		bgt	.L213
 883:.\main.c      **** 
 884:.\main.c      ****         }
 885:.\main.c      ****         
 886:.\main.c      ****         UART_PutString("\r\n");
 3906              		.loc 1 886 0 is_stmt 1
 3907 0276 6E48     		ldr	r0, .L222+44
 3908 0278 FFF7FEFF 		bl	UART_PutString
 887:.\main.c      ****         
 888:.\main.c      ****         char nextStep = instructions[instructionCount];
 3909              		.loc 1 888 0
 3910 027c 6D4B     		ldr	r3, .L222+48
 3911 027e 1B88     		ldrh	r3, [r3]
 3912 0280 1A46     		mov	r2, r3
 3913 0282 6A4B     		ldr	r3, .L222+40
 3914 0284 9B5C     		ldrb	r3, [r3, r2]
 3915 0286 FB74     		strb	r3, [r7, #19]
 889:.\main.c      ****         
 890:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 3916              		.loc 1 890 0
 3917 0288 6A4B     		ldr	r3, .L222+48
 3918 028a 1B88     		ldrh	r3, [r3]
 3919 028c 0133     		adds	r3, r3, #1
 3920 028e 674A     		ldr	r2, .L222+40
 3921 0290 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3922 0292 9BB2     		uxth	r3, r3
 3923 0294 1A46     		mov	r2, r3	@ movhi
 3924 0296 9200     		lsls	r2, r2, #2
 3925 0298 1344     		add	r3, r3, r2
 3926 029a 1A46     		mov	r2, r3	@ movhi
 3927 029c D200     		lsls	r2, r2, #3
 3928 029e D31A     		subs	r3, r2, r3
 3929 02a0 9B00     		lsls	r3, r3, #2
 3930 02a2 9BB2     		uxth	r3, r3
 3931 02a4 9AB2     		uxth	r2, r3
 3932 02a6 5B4B     		ldr	r3, .L222+16
 3933 02a8 1A80     		strh	r2, [r3]	@ movhi
 891:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 3934              		.loc 1 891 0
 3935 02aa 5A4B     		ldr	r3, .L222+16
 3936 02ac 1B88     		ldrh	r3, [r3]
 3937 02ae 1BB2     		sxth	r3, r3
 3938 02b0 3A46     		mov	r2, r7
 3939 02b2 1046     		mov	r0, r2
 3940 02b4 6049     		ldr	r1, .L222+52
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 87


 3941 02b6 1A46     		mov	r2, r3
 3942 02b8 FFF7FEFF 		bl	sprintf
 892:.\main.c      ****         UART_PutString(mes);
 3943              		.loc 1 892 0
 3944 02bc 3B46     		mov	r3, r7
 3945 02be 1846     		mov	r0, r3
 3946 02c0 FFF7FEFF 		bl	UART_PutString
 893:.\main.c      ****         inittrackLineZ();
 3947              		.loc 1 893 0
 3948 02c4 FFF7FEFF 		bl	inittrackLineZ
 894:.\main.c      ****         break;
 3949              		.loc 1 894 0
 3950 02c8 98E0     		b	.L194
 3951              	.L196:
 895:.\main.c      ****     case ('1'):
 896:.\main.c      ****         track_mode = DEST_TEST;
 3952              		.loc 1 896 0
 3953 02ca 4E4B     		ldr	r3, .L222
 3954 02cc 0622     		movs	r2, #6
 3955 02ce 1A70     		strb	r2, [r3]
 897:.\main.c      ****         tracked_direction = robot_direction;
 3956              		.loc 1 897 0
 3957 02d0 534B     		ldr	r3, .L222+28
 3958 02d2 1B68     		ldr	r3, [r3]
 3959 02d4 534A     		ldr	r2, .L222+32
 3960 02d6 1360     		str	r3, [r2]
 898:.\main.c      ****         //instructionLength = generateDirections();
 899:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3961              		.loc 1 899 0
 3962 02d8 FFF7FEFF 		bl	generateEntireMapDirections
 3963 02dc 0346     		mov	r3, r0
 3964 02de 9AB2     		uxth	r2, r3
 3965 02e0 514B     		ldr	r3, .L222+36
 3966 02e2 1A80     		strh	r2, [r3]	@ movhi
 900:.\main.c      ****         //char message[128];
 901:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 902:.\main.c      ****         instructionCount = 0;
 3967              		.loc 1 902 0
 3968 02e4 534B     		ldr	r3, .L222+48
 3969 02e6 0022     		movs	r2, #0
 3970 02e8 1A80     		strh	r2, [r3]	@ movhi
 903:.\main.c      ****         isrRF_RX_Disable();
 3971              		.loc 1 903 0
 3972 02ea FFF7FEFF 		bl	isrRF_RX_Disable
 904:.\main.c      ****         while(rf_char != 'F')
 3973              		.loc 1 904 0
 3974 02ee 26E0     		b	.L214
 3975              	.L217:
 905:.\main.c      ****         {
 906:.\main.c      ****             rf_char = UART_GetChar();
 3976              		.loc 1 906 0
 3977 02f0 FFF7FEFF 		bl	UART_GetChar
 3978 02f4 0346     		mov	r3, r0
 3979 02f6 FB77     		strb	r3, [r7, #31]
 907:.\main.c      ****             if(rf_char == 'F') break;
 3980              		.loc 1 907 0
 3981 02f8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 88


 3982 02fa 462B     		cmp	r3, #70
 3983 02fc 00D1     		bne	.L215
 3984 02fe 21E0     		b	.L216
 3985              	.L215:
 908:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 3986              		.loc 1 908 0
 3987 0300 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3988 0302 2F2B     		cmp	r3, #47
 3989 0304 1BD9     		bls	.L214
 3990              		.loc 1 908 0 is_stmt 0 discriminator 1
 3991 0306 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3992 0308 392B     		cmp	r3, #57
 3993 030a 18D8     		bhi	.L214
 909:.\main.c      ****             {
 910:.\main.c      ****                 UART_PutString("received: ");
 3994              		.loc 1 910 0 is_stmt 1
 3995 030c 4B48     		ldr	r0, .L222+56
 3996 030e FFF7FEFF 		bl	UART_PutString
 911:.\main.c      ****                 UART_PutChar(rf_char);
 3997              		.loc 1 911 0
 3998 0312 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3999 0314 1846     		mov	r0, r3
 4000 0316 FFF7FEFF 		bl	UART_PutChar
 912:.\main.c      ****                 UART_PutString("\r\n");
 4001              		.loc 1 912 0
 4002 031a 4548     		ldr	r0, .L222+44
 4003 031c FFF7FEFF 		bl	UART_PutString
 913:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 4004              		.loc 1 913 0
 4005 0320 444B     		ldr	r3, .L222+48
 4006 0322 1B88     		ldrh	r3, [r3]
 4007 0324 1A46     		mov	r2, r3	@ movhi
 4008 0326 9200     		lsls	r2, r2, #2
 4009 0328 1344     		add	r3, r3, r2
 4010 032a 5B00     		lsls	r3, r3, #1
 4011 032c 9AB2     		uxth	r2, r3
 4012 032e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4013 0330 9BB2     		uxth	r3, r3
 4014 0332 1344     		add	r3, r3, r2
 4015 0334 9BB2     		uxth	r3, r3
 4016 0336 303B     		subs	r3, r3, #48
 4017 0338 9AB2     		uxth	r2, r3
 4018 033a 3E4B     		ldr	r3, .L222+48
 4019 033c 1A80     		strh	r2, [r3]	@ movhi
 4020              	.L214:
 904:.\main.c      ****         {
 4021              		.loc 1 904 0
 4022 033e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4023 0340 462B     		cmp	r3, #70
 4024 0342 D5D1     		bne	.L217
 4025              	.L216:
 914:.\main.c      ****             }
 915:.\main.c      ****             
 916:.\main.c      ****         }
 917:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4026              		.loc 1 917 0
 4027 0344 3E48     		ldr	r0, .L222+60
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 89


 4028 0346 FFF7FEFF 		bl	isrRF_RX_StartEx
 918:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4029              		.loc 1 918 0
 4030 034a 3A4B     		ldr	r3, .L222+48
 4031 034c 1B88     		ldrh	r3, [r3]
 4032 034e 1A46     		mov	r2, r3
 4033 0350 3B46     		mov	r3, r7
 4034 0352 1846     		mov	r0, r3
 4035 0354 3B49     		ldr	r1, .L222+64
 4036 0356 FFF7FEFF 		bl	sprintf
 919:.\main.c      ****         UART_PutString(mes);
 4037              		.loc 1 919 0
 4038 035a 3B46     		mov	r3, r7
 4039 035c 1846     		mov	r0, r3
 4040 035e FFF7FEFF 		bl	UART_PutString
 920:.\main.c      ****         //instructionCount = instructionLength - 22;
 921:.\main.c      ****         int x;
 922:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 4041              		.loc 1 922 0
 4042 0362 344B     		ldr	r3, .L222+48
 4043 0364 1B88     		ldrh	r3, [r3]
 4044 0366 7B61     		str	r3, [r7, #20]
 4045 0368 18E0     		b	.L218
 4046              	.L221:
 923:.\main.c      ****         {
 924:.\main.c      ****             if(x%2 == 0)
 4047              		.loc 1 924 0
 4048 036a 7B69     		ldr	r3, [r7, #20]
 4049 036c 03F00103 		and	r3, r3, #1
 4050 0370 002B     		cmp	r3, #0
 4051 0372 07D1     		bne	.L219
 925:.\main.c      ****             {
 926:.\main.c      ****                 UART_PutChar(instructions[x]);
 4052              		.loc 1 926 0
 4053 0374 2D4A     		ldr	r2, .L222+40
 4054 0376 7B69     		ldr	r3, [r7, #20]
 4055 0378 1344     		add	r3, r3, r2
 4056 037a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4057 037c 1846     		mov	r0, r3
 4058 037e FFF7FEFF 		bl	UART_PutChar
 4059 0382 08E0     		b	.L220
 4060              	.L219:
 927:.\main.c      ****             }
 928:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 4061              		.loc 1 928 0
 4062 0384 294A     		ldr	r2, .L222+40
 4063 0386 7B69     		ldr	r3, [r7, #20]
 4064 0388 1344     		add	r3, r3, r2
 4065 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4066 038c 3033     		adds	r3, r3, #48
 4067 038e DBB2     		uxtb	r3, r3
 4068 0390 1846     		mov	r0, r3
 4069 0392 FFF7FEFF 		bl	UART_PutChar
 4070              	.L220:
 922:.\main.c      ****         {
 4071              		.loc 1 922 0 discriminator 2
 4072 0396 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 90


 4073 0398 0133     		adds	r3, r3, #1
 4074 039a 7B61     		str	r3, [r7, #20]
 4075              	.L218:
 922:.\main.c      ****         {
 4076              		.loc 1 922 0 is_stmt 0 discriminator 1
 4077 039c 224B     		ldr	r3, .L222+36
 4078 039e 1B88     		ldrh	r3, [r3]
 4079 03a0 1A46     		mov	r2, r3
 4080 03a2 7B69     		ldr	r3, [r7, #20]
 4081 03a4 9A42     		cmp	r2, r3
 4082 03a6 E0DC     		bgt	.L221
 929:.\main.c      **** 
 930:.\main.c      ****         }
 931:.\main.c      ****         
 932:.\main.c      ****         UART_PutString("\r\n");
 4083              		.loc 1 932 0 is_stmt 1
 4084 03a8 2148     		ldr	r0, .L222+44
 4085 03aa FFF7FEFF 		bl	UART_PutString
 933:.\main.c      **** 
 934:.\main.c      ****         nextStep = instructions[instructionCount];
 4086              		.loc 1 934 0
 4087 03ae 214B     		ldr	r3, .L222+48
 4088 03b0 1B88     		ldrh	r3, [r3]
 4089 03b2 1A46     		mov	r2, r3
 4090 03b4 1D4B     		ldr	r3, .L222+40
 4091 03b6 9B5C     		ldrb	r3, [r3, r2]
 4092 03b8 FB74     		strb	r3, [r7, #19]
 935:.\main.c      ****         
 936:.\main.c      ****         
 937:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 4093              		.loc 1 937 0
 4094 03ba 1E4B     		ldr	r3, .L222+48
 4095 03bc 1B88     		ldrh	r3, [r3]
 4096 03be 0133     		adds	r3, r3, #1
 4097 03c0 1A4A     		ldr	r2, .L222+40
 4098 03c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4099 03c4 9BB2     		uxth	r3, r3
 4100 03c6 1A46     		mov	r2, r3	@ movhi
 4101 03c8 9200     		lsls	r2, r2, #2
 4102 03ca 1344     		add	r3, r3, r2
 4103 03cc 1A46     		mov	r2, r3	@ movhi
 4104 03ce D200     		lsls	r2, r2, #3
 4105 03d0 D31A     		subs	r3, r2, r3
 4106 03d2 9B00     		lsls	r3, r3, #2
 4107 03d4 9BB2     		uxth	r3, r3
 4108 03d6 9AB2     		uxth	r2, r3
 4109 03d8 0E4B     		ldr	r3, .L222+16
 4110 03da 1A80     		strh	r2, [r3]	@ movhi
 938:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4111              		.loc 1 938 0
 4112 03dc 0D4B     		ldr	r3, .L222+16
 4113 03de 1B88     		ldrh	r3, [r3]
 4114 03e0 1BB2     		sxth	r3, r3
 4115 03e2 3A46     		mov	r2, r7
 4116 03e4 1046     		mov	r0, r2
 4117 03e6 1449     		ldr	r1, .L222+52
 4118 03e8 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 91


 4119 03ea FFF7FEFF 		bl	sprintf
 939:.\main.c      ****         UART_PutString(mes);
 4120              		.loc 1 939 0
 4121 03ee 3B46     		mov	r3, r7
 4122 03f0 1846     		mov	r0, r3
 4123 03f2 FFF7FEFF 		bl	UART_PutString
 940:.\main.c      ****         inittrackLineZ();
 4124              		.loc 1 940 0
 4125 03f6 FFF7FEFF 		bl	inittrackLineZ
 941:.\main.c      ****         break;
 4126              		.loc 1 941 0
 4127 03fa 00BF     		nop
 4128              	.L194:
 4129              	.LBE11:
 942:.\main.c      ****     }
 943:.\main.c      **** }
 4130              		.loc 1 943 0
 4131 03fc 2037     		adds	r7, r7, #32
 4132              		.cfi_def_cfa_offset 8
 4133 03fe BD46     		mov	sp, r7
 4134              		.cfi_def_cfa_register 13
 4135              		@ sp needed
 4136 0400 80BD     		pop	{r7, pc}
 4137              	.L223:
 4138 0402 00BF     		.align	2
 4139              	.L222:
 4140 0404 00000000 		.word	track_mode
 4141 0408 00000000 		.word	accum_dist
 4142 040c 00000000 		.word	target_distance_cm
 4143 0410 00000000 		.word	quad_per_cm
 4144 0414 00000000 		.word	target_distance_quad
 4145 0418 C0000000 		.word	.LC10
 4146 041c 00000000 		.word	initial_pos_valid
 4147 0420 00000000 		.word	robot_direction
 4148 0424 00000000 		.word	tracked_direction
 4149 0428 00000000 		.word	instructionLength
 4150 042c 00000000 		.word	instructions
 4151 0430 D4000000 		.word	.LC11
 4152 0434 00000000 		.word	instructionCount
 4153 0438 64000000 		.word	.LC5
 4154 043c D8000000 		.word	.LC12
 4155 0440 00000000 		.word	BT_rxInt
 4156 0444 E4000000 		.word	.LC13
 4157              		.cfi_endproc
 4158              	.LFE93:
 4159              		.size	BT_rxInt, .-BT_rxInt
 4160              		.section	.text.changeToRF,"ax",%progbits
 4161              		.align	2
 4162              		.global	changeToRF
 4163              		.thumb
 4164              		.thumb_func
 4165              		.type	changeToRF, %function
 4166              	changeToRF:
 4167              	.LFB94:
 944:.\main.c      **** 
 945:.\main.c      **** 
 946:.\main.c      **** void changeToRF()
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 92


 947:.\main.c      **** {
 4168              		.loc 1 947 0
 4169              		.cfi_startproc
 4170              		@ args = 0, pretend = 0, frame = 0
 4171              		@ frame_needed = 1, uses_anonymous_args = 0
 4172 0000 80B5     		push	{r7, lr}
 4173              		.cfi_def_cfa_offset 8
 4174              		.cfi_offset 7, -8
 4175              		.cfi_offset 14, -4
 4176 0002 00AF     		add	r7, sp, #0
 4177              		.cfi_def_cfa_register 7
 948:.\main.c      ****         //disable BT
 949:.\main.c      ****         BT_ENABLED = 0;
 4178              		.loc 1 949 0
 4179 0004 0B4B     		ldr	r3, .L225
 4180 0006 0022     		movs	r2, #0
 4181 0008 1A70     		strb	r2, [r3]
 950:.\main.c      ****         isrRF_RX_Stop();
 4182              		.loc 1 950 0
 4183 000a FFF7FEFF 		bl	isrRF_RX_Stop
 951:.\main.c      ****         UART_Stop();
 4184              		.loc 1 951 0
 4185 000e FFF7FEFF 		bl	UART_Stop
 952:.\main.c      ****         
 953:.\main.c      ****         //enable RF
 954:.\main.c      ****         BIN_ENABLED = 1;
 4186              		.loc 1 954 0
 4187 0012 094B     		ldr	r3, .L225+4
 4188 0014 0122     		movs	r2, #1
 4189 0016 1A70     		strb	r2, [r3]
 955:.\main.c      ****         UART_clk_SetDividerValue(130);
 4190              		.loc 1 955 0
 4191 0018 8120     		movs	r0, #129
 4192 001a 0121     		movs	r1, #1
 4193 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 956:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4194              		.loc 1 956 0
 4195 0020 0648     		ldr	r0, .L225+8
 4196 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 957:.\main.c      ****         UART_Start();
 4197              		.loc 1 957 0
 4198 0026 FFF7FEFF 		bl	UART_Start
 958:.\main.c      ****         RF_BT_SELECT_Write(0);
 4199              		.loc 1 958 0
 4200 002a 0020     		movs	r0, #0
 4201 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 959:.\main.c      **** }
 4202              		.loc 1 959 0
 4203 0030 80BD     		pop	{r7, pc}
 4204              	.L226:
 4205 0032 00BF     		.align	2
 4206              	.L225:
 4207 0034 00000000 		.word	BT_ENABLED
 4208 0038 00000000 		.word	BIN_ENABLED
 4209 003c 00000000 		.word	rxInt
 4210              		.cfi_endproc
 4211              	.LFE94:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 93


 4212              		.size	changeToRF, .-changeToRF
 4213              		.section	.text.changeToBT,"ax",%progbits
 4214              		.align	2
 4215              		.global	changeToBT
 4216              		.thumb
 4217              		.thumb_func
 4218              		.type	changeToBT, %function
 4219              	changeToBT:
 4220              	.LFB95:
 960:.\main.c      **** 
 961:.\main.c      **** void changeToBT()
 962:.\main.c      **** {
 4221              		.loc 1 962 0
 4222              		.cfi_startproc
 4223              		@ args = 0, pretend = 0, frame = 0
 4224              		@ frame_needed = 1, uses_anonymous_args = 0
 4225 0000 80B5     		push	{r7, lr}
 4226              		.cfi_def_cfa_offset 8
 4227              		.cfi_offset 7, -8
 4228              		.cfi_offset 14, -4
 4229 0002 00AF     		add	r7, sp, #0
 4230              		.cfi_def_cfa_register 7
 963:.\main.c      ****         //disable RF
 964:.\main.c      ****         BIN_ENABLED = 0;
 4231              		.loc 1 964 0
 4232 0004 0B4B     		ldr	r3, .L228
 4233 0006 0022     		movs	r2, #0
 4234 0008 1A70     		strb	r2, [r3]
 965:.\main.c      ****         isrRF_RX_Stop();
 4235              		.loc 1 965 0
 4236 000a FFF7FEFF 		bl	isrRF_RX_Stop
 966:.\main.c      ****         UART_Stop();
 4237              		.loc 1 966 0
 4238 000e FFF7FEFF 		bl	UART_Stop
 967:.\main.c      ****         
 968:.\main.c      ****         //enable BT
 969:.\main.c      ****         BT_ENABLED = 1;
 4239              		.loc 1 969 0
 4240 0012 094B     		ldr	r3, .L228+4
 4241 0014 0122     		movs	r2, #1
 4242 0016 1A70     		strb	r2, [r3]
 970:.\main.c      ****         UART_clk_SetDividerValue(781);
 4243              		.loc 1 970 0
 4244 0018 4FF44370 		mov	r0, #780
 4245 001c 0121     		movs	r1, #1
 4246 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 971:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4247              		.loc 1 971 0
 4248 0022 0648     		ldr	r0, .L228+8
 4249 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 972:.\main.c      ****         UART_Start();
 4250              		.loc 1 972 0
 4251 0028 FFF7FEFF 		bl	UART_Start
 973:.\main.c      ****         RF_BT_SELECT_Write(1);
 4252              		.loc 1 973 0
 4253 002c 0120     		movs	r0, #1
 4254 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 94


 974:.\main.c      **** }
 4255              		.loc 1 974 0
 4256 0032 80BD     		pop	{r7, pc}
 4257              	.L229:
 4258              		.align	2
 4259              	.L228:
 4260 0034 00000000 		.word	BIN_ENABLED
 4261 0038 00000000 		.word	BT_ENABLED
 4262 003c 00000000 		.word	BT_rxInt
 4263              		.cfi_endproc
 4264              	.LFE95:
 4265              		.size	changeToBT, .-changeToBT
 4266              		.section	.text.Quad_Dec_response,"ax",%progbits
 4267              		.align	2
 4268              		.global	Quad_Dec_response
 4269              		.thumb
 4270              		.thumb_func
 4271              		.type	Quad_Dec_response, %function
 4272              	Quad_Dec_response:
 4273              	.LFB96:
 975:.\main.c      **** 
 976:.\main.c      **** 
 977:.\main.c      **** void Quad_Dec_response()
 978:.\main.c      **** {
 4274              		.loc 1 978 0
 4275              		.cfi_startproc
 4276              		@ args = 0, pretend = 0, frame = 32
 4277              		@ frame_needed = 1, uses_anonymous_args = 0
 4278 0000 B0B5     		push	{r4, r5, r7, lr}
 4279              		.cfi_def_cfa_offset 16
 4280              		.cfi_offset 4, -16
 4281              		.cfi_offset 5, -12
 4282              		.cfi_offset 7, -8
 4283              		.cfi_offset 14, -4
 4284 0002 88B0     		sub	sp, sp, #32
 4285              		.cfi_def_cfa_offset 48
 4286 0004 00AF     		add	r7, sp, #0
 4287              		.cfi_def_cfa_register 7
 979:.\main.c      ****     //Check if the flag has been set
 980:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4288              		.loc 1 980 0
 4289 0006 824B     		ldr	r3, .L238
 4290 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4291 000a 002B     		cmp	r3, #0
 4292 000c 00D1     		bne	.L231
 4293 000e FCE0     		b	.L230
 4294              	.L231:
 981:.\main.c      ****     flag_calc_wheelspeed = 0;
 4295              		.loc 1 981 0
 4296 0010 7F4B     		ldr	r3, .L238
 4297 0012 0022     		movs	r2, #0
 4298 0014 1A70     		strb	r2, [r3]
 982:.\main.c      ****     
 983:.\main.c      ****     //char wheel_1_str [64];
 984:.\main.c      ****     //char wheel_2_str [64];
 985:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 986:.\main.c      ****     //usbPutString(wheel_1_str);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 95


 987:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 988:.\main.c      ****     
 989:.\main.c      ****     //usbPutString(wheel_2_str);
 990:.\main.c      ****     
 991:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4299              		.loc 1 991 0
 4300 0016 7F4B     		ldr	r3, .L238+4
 4301 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4302 001a FB81     		strh	r3, [r7, #14]	@ movhi
 992:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4303              		.loc 1 992 0
 4304 001c 7E4B     		ldr	r3, .L238+8
 4305 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4306 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 993:.\main.c      ****     double scalingLeft = 1;
 4307              		.loc 1 993 0
 4308 0022 4FF00002 		mov	r2, #0
 4309 0026 7D4B     		ldr	r3, .L238+12
 4310 0028 C7E90623 		strd	r2, [r7, #24]
 994:.\main.c      ****     double scalingRight = 1;
 4311              		.loc 1 994 0
 4312 002c 4FF00002 		mov	r2, #0
 4313 0030 7A4B     		ldr	r3, .L238+12
 4314 0032 C7E90423 		strd	r2, [r7, #16]
 995:.\main.c      ****     
 996:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 997:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4315              		.loc 1 997 0
 4316 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4317 003a 002B     		cmp	r3, #0
 4318 003c 0FD1     		bne	.L233
 4319              		.loc 1 997 0 is_stmt 0 discriminator 1
 4320 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4321 0042 002B     		cmp	r3, #0
 4322 0044 0BD1     		bne	.L233
 998:.\main.c      ****        //leftSpeed = 3;
 999:.\main.c      ****         scalingLeft = 2;
 4323              		.loc 1 999 0 is_stmt 1
 4324 0046 4FF00002 		mov	r2, #0
 4325 004a 4FF08043 		mov	r3, #1073741824
 4326 004e C7E90623 		strd	r2, [r7, #24]
1000:.\main.c      ****         scalingRight = 2;
 4327              		.loc 1 1000 0
 4328 0052 4FF00002 		mov	r2, #0
 4329 0056 4FF08043 		mov	r3, #1073741824
 4330 005a C7E90423 		strd	r2, [r7, #16]
 4331              	.L233:
1001:.\main.c      ****     }
1002:.\main.c      **** 
1003:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4332              		.loc 1 1003 0
 4333 005e 704B     		ldr	r3, .L238+16
 4334 0060 1B88     		ldrh	r3, [r3]
 4335 0062 1AB2     		sxth	r2, r3
 4336 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4337 0068 002B     		cmp	r3, #0
 4338 006a B8BF     		it	lt
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 96


 4339 006c 5B42     		rsblt	r3, r3, #0
 4340 006e D31A     		subs	r3, r2, r3
 4341 0070 BB60     		str	r3, [r7, #8]
1004:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4342              		.loc 1 1004 0
 4343 0072 BB68     		ldr	r3, [r7, #8]
 4344 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4345 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4346 007c BB68     		ldr	r3, [r7, #8]
 4347 007e 92FBF3F3 		sdiv	r3, r2, r3
 4348 0082 1846     		mov	r0, r3
 4349 0084 FFF7FEFF 		bl	__aeabi_i2d
 4350 0088 0446     		mov	r4, r0
 4351 008a 0D46     		mov	r5, r1
 4352 008c BB68     		ldr	r3, [r7, #8]
 4353 008e 002B     		cmp	r3, #0
 4354 0090 B8BF     		it	lt
 4355 0092 5B42     		rsblt	r3, r3, #0
 4356 0094 1846     		mov	r0, r3
 4357 0096 FFF7FEFF 		bl	__aeabi_i2d
 4358 009a 0246     		mov	r2, r0
 4359 009c 0B46     		mov	r3, r1
 4360 009e 1046     		mov	r0, r2
 4361 00a0 1946     		mov	r1, r3
 4362 00a2 FFF7FEFF 		bl	sqrt
 4363 00a6 0246     		mov	r2, r0
 4364 00a8 0B46     		mov	r3, r1
 4365 00aa 2046     		mov	r0, r4
 4366 00ac 2946     		mov	r1, r5
 4367 00ae FFF7FEFF 		bl	__aeabi_dmul
 4368 00b2 0246     		mov	r2, r0
 4369 00b4 0B46     		mov	r3, r1
 4370 00b6 1046     		mov	r0, r2
 4371 00b8 1946     		mov	r1, r3
 4372 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4373 00be 0346     		mov	r3, r0
 4374 00c0 7B60     		str	r3, [r7, #4]
1005:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4375              		.loc 1 1005 0
 4376 00c2 584B     		ldr	r3, .L238+20
 4377 00c4 1B88     		ldrh	r3, [r3]
 4378 00c6 1BB2     		sxth	r3, r3
 4379 00c8 1846     		mov	r0, r3
 4380 00ca FFF7FEFF 		bl	__aeabi_i2d
 4381 00ce 0446     		mov	r4, r0
 4382 00d0 0D46     		mov	r5, r1
 4383 00d2 7868     		ldr	r0, [r7, #4]
 4384 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4385 00d8 0246     		mov	r2, r0
 4386 00da 0B46     		mov	r3, r1
 4387 00dc 1046     		mov	r0, r2
 4388 00de 1946     		mov	r1, r3
 4389 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4390 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4391 00e8 0246     		mov	r2, r0
 4392 00ea 0B46     		mov	r3, r1
 4393 00ec 2046     		mov	r0, r4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 97


 4394 00ee 2946     		mov	r1, r5
 4395 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4396 00f4 0246     		mov	r2, r0
 4397 00f6 0B46     		mov	r3, r1
 4398 00f8 1046     		mov	r0, r2
 4399 00fa 1946     		mov	r1, r3
 4400 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4401 0100 0346     		mov	r3, r0
 4402 0102 9AB2     		uxth	r2, r3
 4403 0104 474B     		ldr	r3, .L238+20
 4404 0106 1A80     		strh	r2, [r3]	@ movhi
1006:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4405              		.loc 1 1006 0
 4406 0108 474B     		ldr	r3, .L238+24
 4407 010a 1B88     		ldrh	r3, [r3]
 4408 010c 1AB2     		sxth	r2, r3
 4409 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4410 0112 002B     		cmp	r3, #0
 4411 0114 B8BF     		it	lt
 4412 0116 5B42     		rsblt	r3, r3, #0
 4413 0118 D31A     		subs	r3, r2, r3
 4414 011a BB60     		str	r3, [r7, #8]
1007:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4415              		.loc 1 1007 0
 4416 011c BB68     		ldr	r3, [r7, #8]
 4417 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4418 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4419 0126 BB68     		ldr	r3, [r7, #8]
 4420 0128 92FBF3F3 		sdiv	r3, r2, r3
 4421 012c 1846     		mov	r0, r3
 4422 012e FFF7FEFF 		bl	__aeabi_i2d
 4423 0132 0446     		mov	r4, r0
 4424 0134 0D46     		mov	r5, r1
 4425 0136 BB68     		ldr	r3, [r7, #8]
 4426 0138 002B     		cmp	r3, #0
 4427 013a B8BF     		it	lt
 4428 013c 5B42     		rsblt	r3, r3, #0
 4429 013e 1846     		mov	r0, r3
 4430 0140 FFF7FEFF 		bl	__aeabi_i2d
 4431 0144 0246     		mov	r2, r0
 4432 0146 0B46     		mov	r3, r1
 4433 0148 1046     		mov	r0, r2
 4434 014a 1946     		mov	r1, r3
 4435 014c FFF7FEFF 		bl	sqrt
 4436 0150 0246     		mov	r2, r0
 4437 0152 0B46     		mov	r3, r1
 4438 0154 2046     		mov	r0, r4
 4439 0156 2946     		mov	r1, r5
 4440 0158 FFF7FEFF 		bl	__aeabi_dmul
 4441 015c 0246     		mov	r2, r0
 4442 015e 0B46     		mov	r3, r1
 4443 0160 1046     		mov	r0, r2
 4444 0162 1946     		mov	r1, r3
 4445 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4446 0168 0346     		mov	r3, r0
 4447 016a 7B60     		str	r3, [r7, #4]
1008:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 98


 4448              		.loc 1 1008 0
 4449 016c 2F4B     		ldr	r3, .L238+28
 4450 016e 1B88     		ldrh	r3, [r3]
 4451 0170 1BB2     		sxth	r3, r3
 4452 0172 1846     		mov	r0, r3
 4453 0174 FFF7FEFF 		bl	__aeabi_i2d
 4454 0178 0446     		mov	r4, r0
 4455 017a 0D46     		mov	r5, r1
 4456 017c 7868     		ldr	r0, [r7, #4]
 4457 017e FFF7FEFF 		bl	__aeabi_i2d
 4458 0182 0246     		mov	r2, r0
 4459 0184 0B46     		mov	r3, r1
 4460 0186 1046     		mov	r0, r2
 4461 0188 1946     		mov	r1, r3
 4462 018a D7E90423 		ldrd	r2, [r7, #16]
 4463 018e FFF7FEFF 		bl	__aeabi_dmul
 4464 0192 0246     		mov	r2, r0
 4465 0194 0B46     		mov	r3, r1
 4466 0196 2046     		mov	r0, r4
 4467 0198 2946     		mov	r1, r5
 4468 019a FFF7FEFF 		bl	__aeabi_dadd
 4469 019e 0246     		mov	r2, r0
 4470 01a0 0B46     		mov	r3, r1
 4471 01a2 1046     		mov	r0, r2
 4472 01a4 1946     		mov	r1, r3
 4473 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4474 01aa 0346     		mov	r3, r0
 4475 01ac 9AB2     		uxth	r2, r3
 4476 01ae 1F4B     		ldr	r3, .L238+28
 4477 01b0 1A80     		strh	r2, [r3]	@ movhi
1009:.\main.c      ****     
1010:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4478              		.loc 1 1010 0
 4479 01b2 1E4B     		ldr	r3, .L238+28
 4480 01b4 1B88     		ldrh	r3, [r3]
 4481 01b6 1BB2     		sxth	r3, r3
 4482 01b8 002B     		cmp	r3, #0
 4483 01ba 02DA     		bge	.L234
 4484              		.loc 1 1010 0 is_stmt 0 discriminator 1
 4485 01bc 1B4B     		ldr	r3, .L238+28
 4486 01be 0022     		movs	r2, #0
 4487 01c0 1A80     		strh	r2, [r3]	@ movhi
 4488              	.L234:
1011:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4489              		.loc 1 1011 0 is_stmt 1
 4490 01c2 184B     		ldr	r3, .L238+20
 4491 01c4 1B88     		ldrh	r3, [r3]
 4492 01c6 1BB2     		sxth	r3, r3
 4493 01c8 002B     		cmp	r3, #0
 4494 01ca 02DA     		bge	.L235
 4495              		.loc 1 1011 0 is_stmt 0 discriminator 1
 4496 01cc 154B     		ldr	r3, .L238+20
 4497 01ce 0022     		movs	r2, #0
 4498 01d0 1A80     		strh	r2, [r3]	@ movhi
 4499              	.L235:
1012:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4500              		.loc 1 1012 0 is_stmt 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 99


 4501 01d2 164B     		ldr	r3, .L238+28
 4502 01d4 1B88     		ldrh	r3, [r3]
 4503 01d6 1BB2     		sxth	r3, r3
 4504 01d8 642B     		cmp	r3, #100
 4505 01da 02DD     		ble	.L236
 4506              		.loc 1 1012 0 is_stmt 0 discriminator 1
 4507 01dc 134B     		ldr	r3, .L238+28
 4508 01de 6422     		movs	r2, #100
 4509 01e0 1A80     		strh	r2, [r3]	@ movhi
 4510              	.L236:
1013:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4511              		.loc 1 1013 0 is_stmt 1
 4512 01e2 104B     		ldr	r3, .L238+20
 4513 01e4 1B88     		ldrh	r3, [r3]
 4514 01e6 1BB2     		sxth	r3, r3
 4515 01e8 642B     		cmp	r3, #100
 4516 01ea 02DD     		ble	.L237
 4517              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4518 01ec 0D4B     		ldr	r3, .L238+20
 4519 01ee 6422     		movs	r2, #100
 4520 01f0 1A80     		strh	r2, [r3]	@ movhi
 4521              	.L237:
1014:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4522              		.loc 1 1014 0 is_stmt 1
 4523 01f2 0C4B     		ldr	r3, .L238+20
 4524 01f4 1B88     		ldrh	r3, [r3]
 4525 01f6 DBB2     		uxtb	r3, r3
 4526 01f8 1846     		mov	r0, r3
 4527 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
1015:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4528              		.loc 1 1015 0
 4529 01fe 0B4B     		ldr	r3, .L238+28
 4530 0200 1B88     		ldrh	r3, [r3]
 4531 0202 DBB2     		uxtb	r3, r3
 4532 0204 1846     		mov	r0, r3
 4533 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4534              	.L230:
1016:.\main.c      **** }
 4535              		.loc 1 1016 0
 4536 020a 2037     		adds	r7, r7, #32
 4537              		.cfi_def_cfa_offset 16
 4538 020c BD46     		mov	sp, r7
 4539              		.cfi_def_cfa_register 13
 4540              		@ sp needed
 4541 020e B0BD     		pop	{r4, r5, r7, pc}
 4542              	.L239:
 4543              		.align	2
 4544              	.L238:
 4545 0210 00000000 		.word	flag_calc_wheelspeed
 4546 0214 00000000 		.word	quad_diff1
 4547 0218 00000000 		.word	quad_diff2
 4548 021c 0000F03F 		.word	1072693248
 4549 0220 00000000 		.word	leftSpeedLimit
 4550 0224 00000000 		.word	left_duty_cycle
 4551 0228 00000000 		.word	rightSpeedLimit
 4552 022c 00000000 		.word	right_duty_cycle
 4553              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 100


 4554              	.LFE96:
 4555              		.size	Quad_Dec_response, .-Quad_Dec_response
 4556              		.section	.text.trackLine,"ax",%progbits
 4557              		.align	2
 4558              		.global	trackLine
 4559              		.thumb
 4560              		.thumb_func
 4561              		.type	trackLine, %function
 4562              	trackLine:
 4563              	.LFB97:
1017:.\main.c      **** 
1018:.\main.c      **** void trackLine()
1019:.\main.c      **** {
 4564              		.loc 1 1019 0
 4565              		.cfi_startproc
 4566              		@ args = 0, pretend = 0, frame = 0
 4567              		@ frame_needed = 1, uses_anonymous_args = 0
 4568              		@ link register save eliminated.
 4569 0000 80B4     		push	{r7}
 4570              		.cfi_def_cfa_offset 4
 4571              		.cfi_offset 7, -4
 4572 0002 00AF     		add	r7, sp, #0
 4573              		.cfi_def_cfa_register 7
1020:.\main.c      ****  //removed from implementation
1021:.\main.c      **** }
 4574              		.loc 1 1021 0
 4575 0004 BD46     		mov	sp, r7
 4576              		.cfi_def_cfa_register 13
 4577              		@ sp needed
 4578 0006 5DF8047B 		ldr	r7, [sp], #4
 4579              		.cfi_restore 7
 4580              		.cfi_def_cfa_offset 0
 4581 000a 7047     		bx	lr
 4582              		.cfi_endproc
 4583              	.LFE97:
 4584              		.size	trackLine, .-trackLine
 4585              		.global	leftTurnCount
 4586              		.bss
 4587              		.align	1
 4588              		.type	leftTurnCount, %object
 4589              		.size	leftTurnCount, 2
 4590              	leftTurnCount:
 4591 28e8 0000     		.space	2
 4592              		.global	rightTurnCount
 4593              		.align	1
 4594              		.type	rightTurnCount, %object
 4595              		.size	rightTurnCount, 2
 4596              	rightTurnCount:
 4597 28ea 0000     		.space	2
 4598              		.section	.text.trackLineZ,"ax",%progbits
 4599              		.align	2
 4600              		.global	trackLineZ
 4601              		.thumb
 4602              		.thumb_func
 4603              		.type	trackLineZ, %function
 4604              	trackLineZ:
 4605              	.LFB98:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 101


1022:.\main.c      **** uint16 leftTurnCount = 0;
1023:.\main.c      **** uint16 rightTurnCount = 0;
1024:.\main.c      **** void trackLineZ()
1025:.\main.c      **** {
 4606              		.loc 1 1025 0
 4607              		.cfi_startproc
 4608              		@ args = 0, pretend = 0, frame = 8
 4609              		@ frame_needed = 1, uses_anonymous_args = 0
 4610 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4611              		.cfi_def_cfa_offset 24
 4612              		.cfi_offset 4, -24
 4613              		.cfi_offset 5, -20
 4614              		.cfi_offset 7, -16
 4615              		.cfi_offset 8, -12
 4616              		.cfi_offset 9, -8
 4617              		.cfi_offset 14, -4
 4618 0004 82B0     		sub	sp, sp, #8
 4619              		.cfi_def_cfa_offset 32
 4620 0006 00AF     		add	r7, sp, #0
 4621              		.cfi_def_cfa_register 7
1026:.\main.c      ****     //read the value of the three central-front sensors
1027:.\main.c      ****     
1028:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4622              		.loc 1 1028 0
 4623 0008 FFF7FEFF 		bl	NLSens_out_Read
 4624 000c 0346     		mov	r3, r0
 4625 000e FB71     		strb	r3, [r7, #7]
1029:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4626              		.loc 1 1029 0
 4627 0010 FFF7FEFF 		bl	NRSens_out_Read
 4628 0014 0346     		mov	r3, r0
 4629 0016 BB71     		strb	r3, [r7, #6]
1030:.\main.c      ****     uint8 mid = MSens_out_Read();
 4630              		.loc 1 1030 0
 4631 0018 FFF7FEFF 		bl	MSens_out_Read
 4632 001c 0346     		mov	r3, r0
 4633 001e 7B71     		strb	r3, [r7, #5]
1031:.\main.c      ****     
1032:.\main.c      ****         //if only the left one, hard left
1033:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4634              		.loc 1 1033 0
 4635 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4636 0022 002B     		cmp	r3, #0
 4637 0024 27D0     		beq	.L242
 4638              		.loc 1 1033 0 is_stmt 0 discriminator 1
 4639 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4640 0028 002B     		cmp	r3, #0
 4641 002a 24D1     		bne	.L242
 4642              		.loc 1 1033 0 discriminator 2
 4643 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4644 002e 002B     		cmp	r3, #0
 4645 0030 21D1     		bne	.L242
1034:.\main.c      ****     {
1035:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4646              		.loc 1 1035 0 is_stmt 1
 4647 0032 454B     		ldr	r3, .L247+8
 4648 0034 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 102


 4649 0038 1046     		mov	r0, r2
 4650 003a 1946     		mov	r1, r3
 4651 003c 40A3     		adr	r3, .L247
 4652 003e D3E90023 		ldrd	r2, [r3]
 4653 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4654 0046 0246     		mov	r2, r0
 4655 0048 0B46     		mov	r3, r1
 4656 004a 1446     		mov	r4, r2
 4657 004c 1D46     		mov	r5, r3
 4658 004e 3E4B     		ldr	r3, .L247+8
 4659 0050 D3E90023 		ldrd	r2, [r3]
 4660 0054 9046     		mov	r8, r2
 4661 0056 83F00049 		eor	r9, r3, #-2147483648
 4662 005a 4046     		mov	r0, r8
 4663 005c 4946     		mov	r1, r9
 4664 005e 38A3     		adr	r3, .L247
 4665 0060 D3E90023 		ldrd	r2, [r3]
 4666 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4667 0068 0246     		mov	r2, r0
 4668 006a 0B46     		mov	r3, r1
 4669 006c 2046     		mov	r0, r4
 4670 006e 2946     		mov	r1, r5
 4671 0070 FFF7FEFF 		bl	setSpeed
 4672 0074 5FE0     		b	.L241
 4673              	.L242:
1036:.\main.c      ****     }
1037:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4674              		.loc 1 1037 0
 4675 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4676 0078 002B     		cmp	r3, #0
 4677 007a 0ED0     		beq	.L244
 4678              		.loc 1 1037 0 is_stmt 0 discriminator 1
 4679 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4680 007e 002B     		cmp	r3, #0
 4681 0080 0BD0     		beq	.L244
 4682              		.loc 1 1037 0 discriminator 2
 4683 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4684 0084 002B     		cmp	r3, #0
 4685 0086 08D1     		bne	.L244
1038:.\main.c      ****     {
1039:.\main.c      ****         setSpeed(speed,speed);
 4686              		.loc 1 1039 0 is_stmt 1
 4687 0088 2F4B     		ldr	r3, .L247+8
 4688 008a D3E90001 		ldrd	r0, [r3]
 4689 008e 2E4B     		ldr	r3, .L247+8
 4690 0090 D3E90023 		ldrd	r2, [r3]
 4691 0094 FFF7FEFF 		bl	setSpeed
 4692 0098 4DE0     		b	.L241
 4693              	.L244:
1040:.\main.c      ****     }
1041:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4694              		.loc 1 1041 0
 4695 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4696 009c 002B     		cmp	r3, #0
 4697 009e 0ED0     		beq	.L245
 4698              		.loc 1 1041 0 is_stmt 0 discriminator 1
 4699 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 103


 4700 00a2 002B     		cmp	r3, #0
 4701 00a4 0BD0     		beq	.L245
 4702              		.loc 1 1041 0 discriminator 2
 4703 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4704 00a8 002B     		cmp	r3, #0
 4705 00aa 08D1     		bne	.L245
1042:.\main.c      ****     {
1043:.\main.c      ****         setSpeed(speed ,speed);
 4706              		.loc 1 1043 0 is_stmt 1
 4707 00ac 264B     		ldr	r3, .L247+8
 4708 00ae D3E90001 		ldrd	r0, [r3]
 4709 00b2 254B     		ldr	r3, .L247+8
 4710 00b4 D3E90023 		ldrd	r2, [r3]
 4711 00b8 FFF7FEFF 		bl	setSpeed
 4712 00bc 3BE0     		b	.L241
 4713              	.L245:
1044:.\main.c      ****     }
1045:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4714              		.loc 1 1045 0
 4715 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4716 00c0 002B     		cmp	r3, #0
 4717 00c2 27D0     		beq	.L246
 4718              		.loc 1 1045 0 is_stmt 0 discriminator 1
 4719 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4720 00c6 002B     		cmp	r3, #0
 4721 00c8 24D1     		bne	.L246
 4722              		.loc 1 1045 0 discriminator 2
 4723 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4724 00cc 002B     		cmp	r3, #0
 4725 00ce 21D1     		bne	.L246
1046:.\main.c      ****     {
1047:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4726              		.loc 1 1047 0 is_stmt 1
 4727 00d0 1D4B     		ldr	r3, .L247+8
 4728 00d2 D3E90023 		ldrd	r2, [r3]
 4729 00d6 1446     		mov	r4, r2
 4730 00d8 83F00045 		eor	r5, r3, #-2147483648
 4731 00dc 2046     		mov	r0, r4
 4732 00de 2946     		mov	r1, r5
 4733 00e0 17A3     		adr	r3, .L247
 4734 00e2 D3E90023 		ldrd	r2, [r3]
 4735 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4736 00ea 0246     		mov	r2, r0
 4737 00ec 0B46     		mov	r3, r1
 4738 00ee 1446     		mov	r4, r2
 4739 00f0 1D46     		mov	r5, r3
 4740 00f2 154B     		ldr	r3, .L247+8
 4741 00f4 D3E90023 		ldrd	r2, [r3]
 4742 00f8 1046     		mov	r0, r2
 4743 00fa 1946     		mov	r1, r3
 4744 00fc 10A3     		adr	r3, .L247
 4745 00fe D3E90023 		ldrd	r2, [r3]
 4746 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4747 0106 0246     		mov	r2, r0
 4748 0108 0B46     		mov	r3, r1
 4749 010a 2046     		mov	r0, r4
 4750 010c 2946     		mov	r1, r5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 104


 4751 010e FFF7FEFF 		bl	setSpeed
 4752 0112 10E0     		b	.L241
 4753              	.L246:
1048:.\main.c      ****     }
1049:.\main.c      ****     else if (mid && !nr && !nl)
 4754              		.loc 1 1049 0
 4755 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4756 0116 002B     		cmp	r3, #0
 4757 0118 0DD0     		beq	.L241
 4758              		.loc 1 1049 0 is_stmt 0 discriminator 1
 4759 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4760 011c 002B     		cmp	r3, #0
 4761 011e 0AD1     		bne	.L241
 4762              		.loc 1 1049 0 discriminator 2
 4763 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4764 0122 002B     		cmp	r3, #0
 4765 0124 07D1     		bne	.L241
1050:.\main.c      ****     {
1051:.\main.c      ****         setSpeed(speed,speed);
 4766              		.loc 1 1051 0 is_stmt 1
 4767 0126 084B     		ldr	r3, .L247+8
 4768 0128 D3E90001 		ldrd	r0, [r3]
 4769 012c 064B     		ldr	r3, .L247+8
 4770 012e D3E90023 		ldrd	r2, [r3]
 4771 0132 FFF7FEFF 		bl	setSpeed
 4772              	.L241:
1052:.\main.c      ****     }
1053:.\main.c      **** }
 4773              		.loc 1 1053 0
 4774 0136 0837     		adds	r7, r7, #8
 4775              		.cfi_def_cfa_offset 24
 4776 0138 BD46     		mov	sp, r7
 4777              		.cfi_def_cfa_register 13
 4778              		@ sp needed
 4779 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4780              	.L248:
 4781 013e 00BF     		.align	3
 4782              	.L247:
 4783 0140 9A999999 		.word	-1717986918
 4784 0144 9999F93F 		.word	1073322393
 4785 0148 00000000 		.word	speed
 4786              		.cfi_endproc
 4787              	.LFE98:
 4788              		.size	trackLineZ, .-trackLineZ
 4789 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4790              		.align	2
 4791              		.global	trackLineU
 4792              		.thumb
 4793              		.thumb_func
 4794              		.type	trackLineU, %function
 4795              	trackLineU:
 4796              	.LFB99:
1054:.\main.c      **** 
1055:.\main.c      **** 
1056:.\main.c      **** void trackLineU()
1057:.\main.c      **** { 
 4797              		.loc 1 1057 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 105


 4798              		.cfi_startproc
 4799              		@ args = 0, pretend = 0, frame = 0
 4800              		@ frame_needed = 1, uses_anonymous_args = 0
 4801              		@ link register save eliminated.
 4802 0000 80B4     		push	{r7}
 4803              		.cfi_def_cfa_offset 4
 4804              		.cfi_offset 7, -4
 4805 0002 00AF     		add	r7, sp, #0
 4806              		.cfi_def_cfa_register 7
1058:.\main.c      **** //removed from final implementation
1059:.\main.c      **** }
 4807              		.loc 1 1059 0
 4808 0004 BD46     		mov	sp, r7
 4809              		.cfi_def_cfa_register 13
 4810              		@ sp needed
 4811 0006 5DF8047B 		ldr	r7, [sp], #4
 4812              		.cfi_restore 7
 4813              		.cfi_def_cfa_offset 0
 4814 000a 7047     		bx	lr
 4815              		.cfi_endproc
 4816              	.LFE99:
 4817              		.size	trackLineU, .-trackLineU
 4818              		.global	__aeabi_fadd
 4819              		.section	.rodata
 4820 0103 00       		.align	2
 4821              	.LC14:
 4822 0104 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4822      65727920 
 4822      566F6C74 
 4822      6167653A 
 4822      2025646D 
 4823              		.section	.text.print_ADC,"ax",%progbits
 4824              		.align	2
 4825              		.global	print_ADC
 4826              		.thumb
 4827              		.thumb_func
 4828              		.type	print_ADC, %function
 4829              	print_ADC:
 4830              	.LFB100:
1060:.\main.c      **** 
1061:.\main.c      **** void print_ADC()
1062:.\main.c      **** {
 4831              		.loc 1 1062 0
 4832              		.cfi_startproc
 4833              		@ args = 0, pretend = 0, frame = 24
 4834              		@ frame_needed = 1, uses_anonymous_args = 0
 4835 0000 80B5     		push	{r7, lr}
 4836              		.cfi_def_cfa_offset 8
 4837              		.cfi_offset 7, -8
 4838              		.cfi_offset 14, -4
 4839 0002 86B0     		sub	sp, sp, #24
 4840              		.cfi_def_cfa_offset 32
 4841 0004 00AF     		add	r7, sp, #0
 4842              		.cfi_def_cfa_register 7
1063:.\main.c      ****    //usbPutString("HII\n");
1064:.\main.c      ****     if(flag_receive_ADC == 1)
 4843              		.loc 1 1064 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 106


 4844 0006 274B     		ldr	r3, .L253
 4845 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4846 000a 012B     		cmp	r3, #1
 4847 000c 46D1     		bne	.L250
 4848              	.LBB12:
1065:.\main.c      ****     {
1066:.\main.c      ****         //usbPutString("AAA\r\n");
1067:.\main.c      ****         flag_receive_ADC = 0;
 4849              		.loc 1 1067 0
 4850 000e 254B     		ldr	r3, .L253
 4851 0010 0022     		movs	r2, #0
 4852 0012 1A70     		strb	r2, [r3]
1068:.\main.c      ****         
1069:.\main.c      ****        // int8 channel = ADC_
1070:.\main.c      ****         float scalingFactor = 0.972;
 4853              		.loc 1 1070 0
 4854 0014 244B     		ldr	r3, .L253+4
 4855 0016 7B61     		str	r3, [r7, #20]	@ float
1071:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4856              		.loc 1 1071 0
 4857 0018 244B     		ldr	r3, .L253+8
 4858 001a 1B88     		ldrh	r3, [r3]
 4859 001c 1BB2     		sxth	r3, r3
 4860 001e 41F28832 		movw	r2, #5000
 4861 0022 02FB03F3 		mul	r3, r2, r3
 4862 0026 002B     		cmp	r3, #0
 4863 0028 01DA     		bge	.L252
 4864 002a 03F6FF73 		addw	r3, r3, #4095
 4865              	.L252:
 4866 002e 1B13     		asrs	r3, r3, #12
 4867 0030 1846     		mov	r0, r3
 4868 0032 FFF7FEFF 		bl	__aeabi_i2f
 4869 0036 0346     		mov	r3, r0
 4870 0038 1846     		mov	r0, r3
 4871 003a 7969     		ldr	r1, [r7, #20]	@ float
 4872 003c FFF7FEFF 		bl	__aeabi_fmul
 4873 0040 0346     		mov	r3, r0
 4874 0042 1846     		mov	r0, r3
 4875 0044 1946     		mov	r1, r3
 4876 0046 FFF7FEFF 		bl	__aeabi_fadd
 4877 004a 0346     		mov	r3, r0
 4878 004c 1846     		mov	r0, r3
 4879 004e FFF7FEFF 		bl	__aeabi_f2iz
 4880 0052 0346     		mov	r3, r0
 4881 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1072:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4882              		.loc 1 1072 0
 4883 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4884 005a 154B     		ldr	r3, .L253+12
 4885 005c 1B88     		ldrh	r3, [r3]
 4886 005e 1BB2     		sxth	r3, r3
 4887 0060 1A44     		add	r2, r2, r3
 4888 0062 144B     		ldr	r3, .L253+16
 4889 0064 1B88     		ldrh	r3, [r3]
 4890 0066 1BB2     		sxth	r3, r3
 4891 0068 1344     		add	r3, r3, r2
 4892 006a 134A     		ldr	r2, .L253+20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 107


 4893 006c 82FB0312 		smull	r1, r2, r2, r3
 4894 0070 DB17     		asrs	r3, r3, #31
 4895 0072 D31A     		subs	r3, r2, r3
 4896 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1073:.\main.c      ****         prevVoltage2 = prevVoltage;
 4897              		.loc 1 1073 0
 4898 0076 0E4B     		ldr	r3, .L253+12
 4899 0078 1A88     		ldrh	r2, [r3]
 4900 007a 0E4B     		ldr	r3, .L253+16
 4901 007c 1A80     		strh	r2, [r3]	@ movhi
1074:.\main.c      ****         prevVoltage = converted_val;
 4902              		.loc 1 1074 0
 4903 007e 0C4A     		ldr	r2, .L253+12
 4904 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4905 0082 1380     		strh	r3, [r2]	@ movhi
1075:.\main.c      ****         
1076:.\main.c      ****         char result_str[16];
1077:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4906              		.loc 1 1077 0
 4907 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4908 0088 3A46     		mov	r2, r7
 4909 008a 1046     		mov	r0, r2
 4910 008c 0B49     		ldr	r1, .L253+24
 4911 008e 1A46     		mov	r2, r3
 4912 0090 FFF7FEFF 		bl	sprintf
1078:.\main.c      ****         
1079:.\main.c      ****         usbPutString(result_str);
 4913              		.loc 1 1079 0
 4914 0094 3B46     		mov	r3, r7
 4915 0096 1846     		mov	r0, r3
 4916 0098 FFF7FEFF 		bl	usbPutString
 4917              	.L250:
 4918              	.LBE12:
1080:.\main.c      ****     }
1081:.\main.c      **** }
 4919              		.loc 1 1081 0
 4920 009c 1837     		adds	r7, r7, #24
 4921              		.cfi_def_cfa_offset 8
 4922 009e BD46     		mov	sp, r7
 4923              		.cfi_def_cfa_register 13
 4924              		@ sp needed
 4925 00a0 80BD     		pop	{r7, pc}
 4926              	.L254:
 4927 00a2 00BF     		.align	2
 4928              	.L253:
 4929 00a4 00000000 		.word	flag_receive_ADC
 4930 00a8 FED4783F 		.word	1064883454
 4931 00ac 00000000 		.word	adc_result
 4932 00b0 00000000 		.word	prevVoltage
 4933 00b4 00000000 		.word	prevVoltage2
 4934 00b8 56555555 		.word	1431655766
 4935 00bc 04010000 		.word	.LC14
 4936              		.cfi_endproc
 4937              	.LFE100:
 4938              		.size	print_ADC, .-print_ADC
 4939              		.section	.rodata
 4940              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 108


 4941              	.LC15:
 4942 011c 52535349 		.ascii	"RSSI:\000"
 4942      3A00
 4943 0122 0000     		.align	2
 4944              	.LC16:
 4945 0124 25640D0A 		.ascii	"%d\015\012\000"
 4945      00
 4946 0129 000000   		.align	2
 4947              	.LC17:
 4948 012c 726F626F 		.ascii	"robot_x:\000"
 4948      745F783A 
 4948      00
 4949 0135 000000   		.align	2
 4950              	.LC18:
 4951 0138 726F626F 		.ascii	"robot_y:\000"
 4951      745F793A 
 4951      00
 4952 0141 000000   		.align	2
 4953              	.LC19:
 4954 0144 726F626F 		.ascii	"robot_dir:\000"
 4954      745F6469 
 4954      723A00
 4955 014f 00       		.section	.text.print_RF,"ax",%progbits
 4956              		.align	2
 4957              		.global	print_RF
 4958              		.thumb
 4959              		.thumb_func
 4960              		.type	print_RF, %function
 4961              	print_RF:
 4962              	.LFB101:
1082:.\main.c      **** 
1083:.\main.c      **** void print_RF()
1084:.\main.c      **** {
 4963              		.loc 1 1084 0
 4964              		.cfi_startproc
 4965              		@ args = 0, pretend = 0, frame = 16
 4966              		@ frame_needed = 1, uses_anonymous_args = 0
 4967 0000 80B5     		push	{r7, lr}
 4968              		.cfi_def_cfa_offset 8
 4969              		.cfi_offset 7, -8
 4970              		.cfi_offset 14, -4
 4971 0002 84B0     		sub	sp, sp, #16
 4972              		.cfi_def_cfa_offset 24
 4973 0004 00AF     		add	r7, sp, #0
 4974              		.cfi_def_cfa_register 7
1085:.\main.c      ****     if(flag_print_rf == 1)
 4975              		.loc 1 1085 0
 4976 0006 254B     		ldr	r3, .L257
 4977 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4978 000a 012B     		cmp	r3, #1
 4979 000c 42D1     		bne	.L255
 4980              	.LBB13:
1086:.\main.c      ****     {
1087:.\main.c      ****         char printString[16];
1088:.\main.c      ****         flag_print_rf = 0;
 4981              		.loc 1 1088 0
 4982 000e 234B     		ldr	r3, .L257
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 109


 4983 0010 0022     		movs	r2, #0
 4984 0012 1A70     		strb	r2, [r3]
1089:.\main.c      ****         usbPutString("RSSI:");
 4985              		.loc 1 1089 0
 4986 0014 2248     		ldr	r0, .L257+4
 4987 0016 FFF7FEFF 		bl	usbPutString
1090:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4988              		.loc 1 1090 0
 4989 001a 224B     		ldr	r3, .L257+8
 4990 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4991 001e 5BB2     		sxtb	r3, r3
 4992 0020 3A46     		mov	r2, r7
 4993 0022 1046     		mov	r0, r2
 4994 0024 2049     		ldr	r1, .L257+12
 4995 0026 1A46     		mov	r2, r3
 4996 0028 FFF7FEFF 		bl	sprintf
1091:.\main.c      ****         usbPutString(printString);
 4997              		.loc 1 1091 0
 4998 002c 3B46     		mov	r3, r7
 4999 002e 1846     		mov	r0, r3
 5000 0030 FFF7FEFF 		bl	usbPutString
1092:.\main.c      ****         usbPutString("robot_x:");
 5001              		.loc 1 1092 0
 5002 0034 1D48     		ldr	r0, .L257+16
 5003 0036 FFF7FEFF 		bl	usbPutString
1093:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 5004              		.loc 1 1093 0
 5005 003a 1A4B     		ldr	r3, .L257+8
 5006 003c 5B88     		ldrh	r3, [r3, #2]
 5007 003e 1BB2     		sxth	r3, r3
 5008 0040 3A46     		mov	r2, r7
 5009 0042 1046     		mov	r0, r2
 5010 0044 1849     		ldr	r1, .L257+12
 5011 0046 1A46     		mov	r2, r3
 5012 0048 FFF7FEFF 		bl	sprintf
1094:.\main.c      ****         usbPutString(printString);
 5013              		.loc 1 1094 0
 5014 004c 3B46     		mov	r3, r7
 5015 004e 1846     		mov	r0, r3
 5016 0050 FFF7FEFF 		bl	usbPutString
1095:.\main.c      ****         usbPutString("robot_y:");
 5017              		.loc 1 1095 0
 5018 0054 1648     		ldr	r0, .L257+20
 5019 0056 FFF7FEFF 		bl	usbPutString
1096:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 5020              		.loc 1 1096 0
 5021 005a 124B     		ldr	r3, .L257+8
 5022 005c 9B88     		ldrh	r3, [r3, #4]
 5023 005e 1BB2     		sxth	r3, r3
 5024 0060 3A46     		mov	r2, r7
 5025 0062 1046     		mov	r0, r2
 5026 0064 1049     		ldr	r1, .L257+12
 5027 0066 1A46     		mov	r2, r3
 5028 0068 FFF7FEFF 		bl	sprintf
1097:.\main.c      ****         usbPutString(printString);
 5029              		.loc 1 1097 0
 5030 006c 3B46     		mov	r3, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 110


 5031 006e 1846     		mov	r0, r3
 5032 0070 FFF7FEFF 		bl	usbPutString
1098:.\main.c      ****         usbPutString("robot_dir:");
 5033              		.loc 1 1098 0
 5034 0074 0F48     		ldr	r0, .L257+24
 5035 0076 FFF7FEFF 		bl	usbPutString
1099:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 5036              		.loc 1 1099 0
 5037 007a 0A4B     		ldr	r3, .L257+8
 5038 007c DB88     		ldrh	r3, [r3, #6]
 5039 007e 1BB2     		sxth	r3, r3
 5040 0080 3A46     		mov	r2, r7
 5041 0082 1046     		mov	r0, r2
 5042 0084 0849     		ldr	r1, .L257+12
 5043 0086 1A46     		mov	r2, r3
 5044 0088 FFF7FEFF 		bl	sprintf
1100:.\main.c      ****         usbPutString(printString);
 5045              		.loc 1 1100 0
 5046 008c 3B46     		mov	r3, r7
 5047 008e 1846     		mov	r0, r3
 5048 0090 FFF7FEFF 		bl	usbPutString
 5049              	.L255:
 5050              	.LBE13:
1101:.\main.c      ****     }
1102:.\main.c      **** }
 5051              		.loc 1 1102 0
 5052 0094 1037     		adds	r7, r7, #16
 5053              		.cfi_def_cfa_offset 8
 5054 0096 BD46     		mov	sp, r7
 5055              		.cfi_def_cfa_register 13
 5056              		@ sp needed
 5057 0098 80BD     		pop	{r7, pc}
 5058              	.L258:
 5059 009a 00BF     		.align	2
 5060              	.L257:
 5061 009c 00000000 		.word	flag_print_rf
 5062 00a0 1C010000 		.word	.LC15
 5063 00a4 00000000 		.word	system_state
 5064 00a8 24010000 		.word	.LC16
 5065 00ac 2C010000 		.word	.LC17
 5066 00b0 38010000 		.word	.LC18
 5067 00b4 44010000 		.word	.LC19
 5068              		.cfi_endproc
 5069              	.LFE101:
 5070              		.size	print_RF, .-print_RF
 5071              		.section	.text.readFrontSensors,"ax",%progbits
 5072              		.align	2
 5073              		.global	readFrontSensors
 5074              		.thumb
 5075              		.thumb_func
 5076              		.type	readFrontSensors, %function
 5077              	readFrontSensors:
 5078              	.LFB102:
1103:.\main.c      **** 
1104:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1105:.\main.c      **** {
 5079              		.loc 1 1105 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 111


 5080              		.cfi_startproc
 5081              		@ args = 0, pretend = 0, frame = 8
 5082              		@ frame_needed = 1, uses_anonymous_args = 0
 5083 0000 90B5     		push	{r4, r7, lr}
 5084              		.cfi_def_cfa_offset 12
 5085              		.cfi_offset 4, -12
 5086              		.cfi_offset 7, -8
 5087              		.cfi_offset 14, -4
 5088 0002 83B0     		sub	sp, sp, #12
 5089              		.cfi_def_cfa_offset 24
 5090 0004 00AF     		add	r7, sp, #0
 5091              		.cfi_def_cfa_register 7
 5092 0006 7860     		str	r0, [r7, #4]
1106:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 5093              		.loc 1 1106 0
 5094 0008 FFF7FEFF 		bl	FLSens_out_Read
 5095 000c 0346     		mov	r3, r0
 5096 000e 1A46     		mov	r2, r3
 5097 0010 7B68     		ldr	r3, [r7, #4]
 5098 0012 1A70     		strb	r2, [r3]
1107:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 5099              		.loc 1 1107 0
 5100 0014 7B68     		ldr	r3, [r7, #4]
 5101 0016 5C1C     		adds	r4, r3, #1
 5102 0018 FFF7FEFF 		bl	NLSens_out_Read
 5103 001c 0346     		mov	r3, r0
 5104 001e 2370     		strb	r3, [r4]
1108:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 5105              		.loc 1 1108 0
 5106 0020 7B68     		ldr	r3, [r7, #4]
 5107 0022 9C1C     		adds	r4, r3, #2
 5108 0024 FFF7FEFF 		bl	MSens_out_Read
 5109 0028 0346     		mov	r3, r0
 5110 002a 2370     		strb	r3, [r4]
1109:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 5111              		.loc 1 1109 0
 5112 002c 7B68     		ldr	r3, [r7, #4]
 5113 002e DC1C     		adds	r4, r3, #3
 5114 0030 FFF7FEFF 		bl	NRSens_out_Read
 5115 0034 0346     		mov	r3, r0
 5116 0036 2370     		strb	r3, [r4]
1110:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 5117              		.loc 1 1110 0
 5118 0038 7B68     		ldr	r3, [r7, #4]
 5119 003a 1C1D     		adds	r4, r3, #4
 5120 003c FFF7FEFF 		bl	FRSens_out_Read
 5121 0040 0346     		mov	r3, r0
 5122 0042 2370     		strb	r3, [r4]
1111:.\main.c      **** }
 5123              		.loc 1 1111 0
 5124 0044 0C37     		adds	r7, r7, #12
 5125              		.cfi_def_cfa_offset 12
 5126 0046 BD46     		mov	sp, r7
 5127              		.cfi_def_cfa_register 13
 5128              		@ sp needed
 5129 0048 90BD     		pop	{r4, r7, pc}
 5130              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 112


 5131              	.LFE102:
 5132              		.size	readFrontSensors, .-readFrontSensors
 5133 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5134              		.align	2
 5135              		.global	usbPutString
 5136              		.thumb
 5137              		.thumb_func
 5138              		.type	usbPutString, %function
 5139              	usbPutString:
 5140              	.LFB103:
1112:.\main.c      **** 
1113:.\main.c      **** 
1114:.\main.c      **** //* ========================================
1115:.\main.c      **** void usbPutString(char *s)
1116:.\main.c      **** {
 5141              		.loc 1 1116 0
 5142              		.cfi_startproc
 5143              		@ args = 0, pretend = 0, frame = 16
 5144              		@ frame_needed = 1, uses_anonymous_args = 0
 5145 0000 80B5     		push	{r7, lr}
 5146              		.cfi_def_cfa_offset 8
 5147              		.cfi_offset 7, -8
 5148              		.cfi_offset 14, -4
 5149 0002 84B0     		sub	sp, sp, #16
 5150              		.cfi_def_cfa_offset 24
 5151 0004 00AF     		add	r7, sp, #0
 5152              		.cfi_def_cfa_register 7
 5153 0006 7860     		str	r0, [r7, #4]
1117:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1118:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1119:.\main.c      **** //  length to 62 char (63rd char is a '!')
1120:.\main.c      ****     if (USE_USB && portOpen)
 5154              		.loc 1 1120 0
 5155 0008 154B     		ldr	r3, .L264
 5156 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5157 000c 002B     		cmp	r3, #0
 5158 000e 23D0     		beq	.L260
 5159              	.LBB14:
1121:.\main.c      ****     {
1122:.\main.c      ****             uint32 cnt = 0;
 5160              		.loc 1 1122 0
 5161 0010 0023     		movs	r3, #0
 5162 0012 FB60     		str	r3, [r7, #12]
1123:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5163              		.loc 1 1123 0
 5164 0014 0AE0     		b	.L262
 5165              	.L263:
1124:.\main.c      ****             {
1125:.\main.c      ****                 cnt++;
 5166              		.loc 1 1125 0
 5167 0016 FB68     		ldr	r3, [r7, #12]
 5168 0018 0133     		adds	r3, r3, #1
 5169 001a FB60     		str	r3, [r7, #12]
1126:.\main.c      ****                 if(cnt == 3000000){
 5170              		.loc 1 1126 0
 5171 001c FB68     		ldr	r3, [r7, #12]
 5172 001e 114A     		ldr	r2, .L264+4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 113


 5173 0020 9342     		cmp	r3, r2
 5174 0022 03D1     		bne	.L262
1127:.\main.c      ****                     portOpen = 0;
 5175              		.loc 1 1127 0
 5176 0024 0E4B     		ldr	r3, .L264
 5177 0026 0022     		movs	r2, #0
 5178 0028 1A70     		strb	r2, [r3]
1128:.\main.c      ****                     return;
 5179              		.loc 1 1128 0
 5180 002a 15E0     		b	.L260
 5181              	.L262:
1123:.\main.c      ****             {
 5182              		.loc 1 1123 0
 5183 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5184 0030 0346     		mov	r3, r0
 5185 0032 002B     		cmp	r3, #0
 5186 0034 EFD0     		beq	.L263
1129:.\main.c      ****                 }
1130:.\main.c      ****             }
1131:.\main.c      ****             s[63]='\0';
 5187              		.loc 1 1131 0
 5188 0036 7B68     		ldr	r3, [r7, #4]
 5189 0038 3F33     		adds	r3, r3, #63
 5190 003a 0022     		movs	r2, #0
 5191 003c 1A70     		strb	r2, [r3]
1132:.\main.c      ****             s[62]='!';
 5192              		.loc 1 1132 0
 5193 003e 7B68     		ldr	r3, [r7, #4]
 5194 0040 3E33     		adds	r3, r3, #62
 5195 0042 2122     		movs	r2, #33
 5196 0044 1A70     		strb	r2, [r3]
1133:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5197              		.loc 1 1133 0
 5198 0046 7868     		ldr	r0, [r7, #4]
 5199 0048 FFF7FEFF 		bl	strlen
 5200 004c 0346     		mov	r3, r0
 5201 004e 9BB2     		uxth	r3, r3
 5202 0050 7868     		ldr	r0, [r7, #4]
 5203 0052 1946     		mov	r1, r3
 5204 0054 FFF7FEFF 		bl	USBUART_PutData
 5205              	.L260:
 5206              	.LBE14:
1134:.\main.c      ****     }
1135:.\main.c      **** }
 5207              		.loc 1 1135 0
 5208 0058 1037     		adds	r7, r7, #16
 5209              		.cfi_def_cfa_offset 8
 5210 005a BD46     		mov	sp, r7
 5211              		.cfi_def_cfa_register 13
 5212              		@ sp needed
 5213 005c 80BD     		pop	{r7, pc}
 5214              	.L265:
 5215 005e 00BF     		.align	2
 5216              	.L264:
 5217 0060 00000000 		.word	portOpen
 5218 0064 C0C62D00 		.word	3000000
 5219              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 114


 5220              	.LFE103:
 5221              		.size	usbPutString, .-usbPutString
 5222              		.section	.text.usbPutChar,"ax",%progbits
 5223              		.align	2
 5224              		.global	usbPutChar
 5225              		.thumb
 5226              		.thumb_func
 5227              		.type	usbPutChar, %function
 5228              	usbPutChar:
 5229              	.LFB104:
1136:.\main.c      **** //* ========================================
1137:.\main.c      **** void usbPutChar(char c)
1138:.\main.c      **** {
 5230              		.loc 1 1138 0
 5231              		.cfi_startproc
 5232              		@ args = 0, pretend = 0, frame = 16
 5233              		@ frame_needed = 1, uses_anonymous_args = 0
 5234 0000 80B5     		push	{r7, lr}
 5235              		.cfi_def_cfa_offset 8
 5236              		.cfi_offset 7, -8
 5237              		.cfi_offset 14, -4
 5238 0002 84B0     		sub	sp, sp, #16
 5239              		.cfi_def_cfa_offset 24
 5240 0004 00AF     		add	r7, sp, #0
 5241              		.cfi_def_cfa_register 7
 5242 0006 0346     		mov	r3, r0
 5243 0008 FB71     		strb	r3, [r7, #7]
1139:.\main.c      ****     if (USE_USB && portOpen)    
 5244              		.loc 1 1139 0
 5245 000a 0F4B     		ldr	r3, .L270
 5246 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5247 000e 002B     		cmp	r3, #0
 5248 0010 16D0     		beq	.L266
 5249              	.LBB15:
1140:.\main.c      ****     {    
1141:.\main.c      ****         uint32 cnt = 0;
 5250              		.loc 1 1141 0
 5251 0012 0023     		movs	r3, #0
 5252 0014 FB60     		str	r3, [r7, #12]
1142:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5253              		.loc 1 1142 0
 5254 0016 0AE0     		b	.L268
 5255              	.L269:
1143:.\main.c      ****             cnt++;
 5256              		.loc 1 1143 0
 5257 0018 FB68     		ldr	r3, [r7, #12]
 5258 001a 0133     		adds	r3, r3, #1
 5259 001c FB60     		str	r3, [r7, #12]
1144:.\main.c      ****             if(cnt == 3000000){
 5260              		.loc 1 1144 0
 5261 001e FB68     		ldr	r3, [r7, #12]
 5262 0020 0A4A     		ldr	r2, .L270+4
 5263 0022 9342     		cmp	r3, r2
 5264 0024 03D1     		bne	.L268
1145:.\main.c      ****                 portOpen = 0;
 5265              		.loc 1 1145 0
 5266 0026 084B     		ldr	r3, .L270
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 115


 5267 0028 0022     		movs	r2, #0
 5268 002a 1A70     		strb	r2, [r3]
1146:.\main.c      ****                 return;
 5269              		.loc 1 1146 0
 5270 002c 08E0     		b	.L266
 5271              	.L268:
1142:.\main.c      ****             cnt++;
 5272              		.loc 1 1142 0
 5273 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5274 0032 0346     		mov	r3, r0
 5275 0034 002B     		cmp	r3, #0
 5276 0036 EFD0     		beq	.L269
1147:.\main.c      ****             }
1148:.\main.c      ****         }
1149:.\main.c      ****         USBUART_PutChar(c);
 5277              		.loc 1 1149 0
 5278 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5279 003a 1846     		mov	r0, r3
 5280 003c FFF7FEFF 		bl	USBUART_PutChar
 5281              	.L266:
 5282              	.LBE15:
1150:.\main.c      ****     }    
1151:.\main.c      **** }
 5283              		.loc 1 1151 0
 5284 0040 1037     		adds	r7, r7, #16
 5285              		.cfi_def_cfa_offset 8
 5286 0042 BD46     		mov	sp, r7
 5287              		.cfi_def_cfa_register 13
 5288              		@ sp needed
 5289 0044 80BD     		pop	{r7, pc}
 5290              	.L271:
 5291 0046 00BF     		.align	2
 5292              	.L270:
 5293 0048 00000000 		.word	portOpen
 5294 004c C0C62D00 		.word	3000000
 5295              		.cfi_endproc
 5296              	.LFE104:
 5297              		.size	usbPutChar, .-usbPutChar
 5298              		.section	.text.uart_set_PWM,"ax",%progbits
 5299              		.align	2
 5300              		.global	uart_set_PWM
 5301              		.thumb
 5302              		.thumb_func
 5303              		.type	uart_set_PWM, %function
 5304              	uart_set_PWM:
 5305              	.LFB105:
1152:.\main.c      **** //* ========================================
1153:.\main.c      **** 
1154:.\main.c      **** void uart_set_PWM()
1155:.\main.c      **** {
 5306              		.loc 1 1155 0
 5307              		.cfi_startproc
 5308              		@ args = 0, pretend = 0, frame = 0
 5309              		@ frame_needed = 1, uses_anonymous_args = 0
 5310              		@ link register save eliminated.
 5311 0000 80B4     		push	{r7}
 5312              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 116


 5313              		.cfi_offset 7, -4
 5314 0002 00AF     		add	r7, sp, #0
 5315              		.cfi_def_cfa_register 7
1156:.\main.c      ****     //removed from final implementation
1157:.\main.c      **** }
 5316              		.loc 1 1157 0
 5317 0004 BD46     		mov	sp, r7
 5318              		.cfi_def_cfa_register 13
 5319              		@ sp needed
 5320 0006 5DF8047B 		ldr	r7, [sp], #4
 5321              		.cfi_restore 7
 5322              		.cfi_def_cfa_offset 0
 5323 000a 7047     		bx	lr
 5324              		.cfi_endproc
 5325              	.LFE105:
 5326              		.size	uart_set_PWM, .-uart_set_PWM
 5327              		.text
 5328              	.Letext0:
 5329              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5330              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5331              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5332              		.file 5 ".\\vars.h"
 5333              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5334              		.file 7 ".\\pathfinder.h"
 5335              		.section	.debug_info,"",%progbits
 5336              	.Ldebug_info0:
 5337 0000 850E0000 		.4byte	0xe85
 5338 0004 0400     		.2byte	0x4
 5339 0006 00000000 		.4byte	.Ldebug_abbrev0
 5340 000a 04       		.byte	0x4
 5341 000b 01       		.uleb128 0x1
 5342 000c B6040000 		.4byte	.LASF197
 5343 0010 01       		.byte	0x1
 5344 0011 94090000 		.4byte	.LASF198
 5345 0015 1C000000 		.4byte	.LASF199
 5346 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5347 001d 00000000 		.4byte	0
 5348 0021 00000000 		.4byte	.Ldebug_line0
 5349 0025 02       		.uleb128 0x2
 5350 0026 01       		.byte	0x1
 5351 0027 06       		.byte	0x6
 5352 0028 CE080000 		.4byte	.LASF0
 5353 002c 02       		.uleb128 0x2
 5354 002d 01       		.byte	0x1
 5355 002e 08       		.byte	0x8
 5356 002f 0B080000 		.4byte	.LASF1
 5357 0033 02       		.uleb128 0x2
 5358 0034 02       		.byte	0x2
 5359 0035 05       		.byte	0x5
 5360 0036 6C060000 		.4byte	.LASF2
 5361 003a 02       		.uleb128 0x2
 5362 003b 02       		.byte	0x2
 5363 003c 07       		.byte	0x7
 5364 003d DA080000 		.4byte	.LASF3
 5365 0041 03       		.uleb128 0x3
 5366 0042 D7000000 		.4byte	.LASF5
 5367 0046 02       		.byte	0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 117


 5368 0047 3F       		.byte	0x3f
 5369 0048 4C000000 		.4byte	0x4c
 5370 004c 02       		.uleb128 0x2
 5371 004d 04       		.byte	0x4
 5372 004e 05       		.byte	0x5
 5373 004f A0060000 		.4byte	.LASF4
 5374 0053 03       		.uleb128 0x3
 5375 0054 19080000 		.4byte	.LASF6
 5376 0058 02       		.byte	0x2
 5377 0059 41       		.byte	0x41
 5378 005a 5E000000 		.4byte	0x5e
 5379 005e 02       		.uleb128 0x2
 5380 005f 04       		.byte	0x4
 5381 0060 07       		.byte	0x7
 5382 0061 A4070000 		.4byte	.LASF7
 5383 0065 02       		.uleb128 0x2
 5384 0066 08       		.byte	0x8
 5385 0067 05       		.byte	0x5
 5386 0068 80040000 		.4byte	.LASF8
 5387 006c 02       		.uleb128 0x2
 5388 006d 08       		.byte	0x8
 5389 006e 07       		.byte	0x7
 5390 006f 8E020000 		.4byte	.LASF9
 5391 0073 04       		.uleb128 0x4
 5392 0074 04       		.byte	0x4
 5393 0075 05       		.byte	0x5
 5394 0076 696E7400 		.ascii	"int\000"
 5395 007a 02       		.uleb128 0x2
 5396 007b 04       		.byte	0x4
 5397 007c 07       		.byte	0x7
 5398 007d BF000000 		.4byte	.LASF10
 5399 0081 02       		.uleb128 0x2
 5400 0082 04       		.byte	0x4
 5401 0083 07       		.byte	0x7
 5402 0084 9B070000 		.4byte	.LASF11
 5403 0088 05       		.uleb128 0x5
 5404 0089 04       		.byte	0x4
 5405 008a 8E000000 		.4byte	0x8e
 5406 008e 02       		.uleb128 0x2
 5407 008f 01       		.byte	0x1
 5408 0090 08       		.byte	0x8
 5409 0091 BD030000 		.4byte	.LASF12
 5410 0095 03       		.uleb128 0x3
 5411 0096 C2070000 		.4byte	.LASF13
 5412 009a 03       		.byte	0x3
 5413 009b 2C       		.byte	0x2c
 5414 009c 41000000 		.4byte	0x41
 5415 00a0 03       		.uleb128 0x3
 5416 00a1 0E020000 		.4byte	.LASF14
 5417 00a5 03       		.byte	0x3
 5418 00a6 2D       		.byte	0x2d
 5419 00a7 53000000 		.4byte	0x53
 5420 00ab 06       		.uleb128 0x6
 5421 00ac 21090000 		.4byte	.LASF15
 5422 00b0 04       		.byte	0x4
 5423 00b1 9201     		.2byte	0x192
 5424 00b3 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 118


 5425 00b7 06       		.uleb128 0x6
 5426 00b8 10040000 		.4byte	.LASF16
 5427 00bc 04       		.byte	0x4
 5428 00bd 9301     		.2byte	0x193
 5429 00bf 3A000000 		.4byte	0x3a
 5430 00c3 06       		.uleb128 0x6
 5431 00c4 87050000 		.4byte	.LASF17
 5432 00c8 04       		.byte	0x4
 5433 00c9 9401     		.2byte	0x194
 5434 00cb 5E000000 		.4byte	0x5e
 5435 00cf 06       		.uleb128 0x6
 5436 00d0 17040000 		.4byte	.LASF18
 5437 00d4 04       		.byte	0x4
 5438 00d5 9501     		.2byte	0x195
 5439 00d7 25000000 		.4byte	0x25
 5440 00db 06       		.uleb128 0x6
 5441 00dc E1000000 		.4byte	.LASF19
 5442 00e0 04       		.byte	0x4
 5443 00e1 9601     		.2byte	0x196
 5444 00e3 33000000 		.4byte	0x33
 5445 00e7 02       		.uleb128 0x2
 5446 00e8 04       		.byte	0x4
 5447 00e9 04       		.byte	0x4
 5448 00ea 2E020000 		.4byte	.LASF20
 5449 00ee 02       		.uleb128 0x2
 5450 00ef 08       		.byte	0x8
 5451 00f0 04       		.byte	0x4
 5452 00f1 27090000 		.4byte	.LASF21
 5453 00f5 07       		.uleb128 0x7
 5454 00f6 A0000000 		.4byte	0xa0
 5455 00fa 05010000 		.4byte	0x105
 5456 00fe 08       		.uleb128 0x8
 5457 00ff 81000000 		.4byte	0x81
 5458 0103 01       		.byte	0x1
 5459 0104 00       		.byte	0
 5460 0105 02       		.uleb128 0x2
 5461 0106 08       		.byte	0x8
 5462 0107 04       		.byte	0x4
 5463 0108 03060000 		.4byte	.LASF22
 5464 010c 09       		.uleb128 0x9
 5465 010d 66080000 		.4byte	.LASF31
 5466 0111 01       		.byte	0x1
 5467 0112 05       		.byte	0x5
 5468 0113 61       		.byte	0x61
 5469 0114 49010000 		.4byte	0x149
 5470 0118 0A       		.uleb128 0xa
 5471 0119 4D020000 		.4byte	.LASF23
 5472 011d 00       		.sleb128 0
 5473 011e 0A       		.uleb128 0xa
 5474 011f F4000000 		.4byte	.LASF24
 5475 0123 01       		.sleb128 1
 5476 0124 0A       		.uleb128 0xa
 5477 0125 5B000000 		.4byte	.LASF25
 5478 0129 02       		.sleb128 2
 5479 012a 0A       		.uleb128 0xa
 5480 012b F2050000 		.4byte	.LASF26
 5481 012f 03       		.sleb128 3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 119


 5482 0130 0A       		.uleb128 0xa
 5483 0131 1F010000 		.4byte	.LASF27
 5484 0135 04       		.sleb128 4
 5485 0136 0A       		.uleb128 0xa
 5486 0137 F7010000 		.4byte	.LASF28
 5487 013b 05       		.sleb128 5
 5488 013c 0A       		.uleb128 0xa
 5489 013d 16070000 		.4byte	.LASF29
 5490 0141 06       		.sleb128 6
 5491 0142 0A       		.uleb128 0xa
 5492 0143 61090000 		.4byte	.LASF30
 5493 0147 07       		.sleb128 7
 5494 0148 00       		.byte	0
 5495 0149 09       		.uleb128 0x9
 5496 014a 5A010000 		.4byte	.LASF32
 5497 014e 01       		.byte	0x1
 5498 014f 05       		.byte	0x5
 5499 0150 62       		.byte	0x62
 5500 0151 86010000 		.4byte	0x186
 5501 0155 0A       		.uleb128 0xa
 5502 0156 E8060000 		.4byte	.LASF33
 5503 015a 00       		.sleb128 0
 5504 015b 0A       		.uleb128 0xa
 5505 015c 47040000 		.4byte	.LASF34
 5506 0160 01       		.sleb128 1
 5507 0161 0A       		.uleb128 0xa
 5508 0162 B7060000 		.4byte	.LASF35
 5509 0166 02       		.sleb128 2
 5510 0167 0A       		.uleb128 0xa
 5511 0168 B1010000 		.4byte	.LASF36
 5512 016c 03       		.sleb128 3
 5513 016d 0A       		.uleb128 0xa
 5514 016e FF080000 		.4byte	.LASF37
 5515 0172 04       		.sleb128 4
 5516 0173 0A       		.uleb128 0xa
 5517 0174 3F090000 		.4byte	.LASF38
 5518 0178 05       		.sleb128 5
 5519 0179 0A       		.uleb128 0xa
 5520 017a 70000000 		.4byte	.LASF39
 5521 017e 06       		.sleb128 6
 5522 017f 0A       		.uleb128 0xa
 5523 0180 09070000 		.4byte	.LASF40
 5524 0184 07       		.sleb128 7
 5525 0185 00       		.byte	0
 5526 0186 0B       		.uleb128 0xb
 5527 0187 A7050000 		.4byte	.LASF200
 5528 018b 20       		.byte	0x20
 5529 018c 05       		.byte	0x5
 5530 018d 68       		.byte	0x68
 5531 018e 5F020000 		.4byte	0x25f
 5532 0192 0C       		.uleb128 0xc
 5533 0193 C5050000 		.4byte	.LASF41
 5534 0197 05       		.byte	0x5
 5535 0198 69       		.byte	0x69
 5536 0199 CF000000 		.4byte	0xcf
 5537 019d 00       		.byte	0
 5538 019e 0C       		.uleb128 0xc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 120


 5539 019f 47020000 		.4byte	.LASF42
 5540 01a3 05       		.byte	0x5
 5541 01a4 6A       		.byte	0x6a
 5542 01a5 AB000000 		.4byte	0xab
 5543 01a9 01       		.byte	0x1
 5544 01aa 0C       		.uleb128 0xc
 5545 01ab E3070000 		.4byte	.LASF43
 5546 01af 05       		.byte	0x5
 5547 01b0 6B       		.byte	0x6b
 5548 01b1 DB000000 		.4byte	0xdb
 5549 01b5 02       		.byte	0x2
 5550 01b6 0C       		.uleb128 0xc
 5551 01b7 91030000 		.4byte	.LASF44
 5552 01bb 05       		.byte	0x5
 5553 01bc 6C       		.byte	0x6c
 5554 01bd DB000000 		.4byte	0xdb
 5555 01c1 04       		.byte	0x4
 5556 01c2 0C       		.uleb128 0xc
 5557 01c3 ED080000 		.4byte	.LASF45
 5558 01c7 05       		.byte	0x5
 5559 01c8 6D       		.byte	0x6d
 5560 01c9 DB000000 		.4byte	0xdb
 5561 01cd 06       		.byte	0x6
 5562 01ce 0C       		.uleb128 0xc
 5563 01cf 67090000 		.4byte	.LASF46
 5564 01d3 05       		.byte	0x5
 5565 01d4 6E       		.byte	0x6e
 5566 01d5 DB000000 		.4byte	0xdb
 5567 01d9 08       		.byte	0x8
 5568 01da 0C       		.uleb128 0xc
 5569 01db 4D050000 		.4byte	.LASF47
 5570 01df 05       		.byte	0x5
 5571 01e0 6F       		.byte	0x6f
 5572 01e1 DB000000 		.4byte	0xdb
 5573 01e5 0A       		.byte	0xa
 5574 01e6 0C       		.uleb128 0xc
 5575 01e7 C2030000 		.4byte	.LASF48
 5576 01eb 05       		.byte	0x5
 5577 01ec 70       		.byte	0x70
 5578 01ed DB000000 		.4byte	0xdb
 5579 01f1 0C       		.byte	0xc
 5580 01f2 0C       		.uleb128 0xc
 5581 01f3 D4050000 		.4byte	.LASF49
 5582 01f7 05       		.byte	0x5
 5583 01f8 71       		.byte	0x71
 5584 01f9 DB000000 		.4byte	0xdb
 5585 01fd 0E       		.byte	0xe
 5586 01fe 0C       		.uleb128 0xc
 5587 01ff 9B040000 		.4byte	.LASF50
 5588 0203 05       		.byte	0x5
 5589 0204 72       		.byte	0x72
 5590 0205 DB000000 		.4byte	0xdb
 5591 0209 10       		.byte	0x10
 5592 020a 0C       		.uleb128 0xc
 5593 020b 5B070000 		.4byte	.LASF51
 5594 020f 05       		.byte	0x5
 5595 0210 73       		.byte	0x73
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 121


 5596 0211 DB000000 		.4byte	0xdb
 5597 0215 12       		.byte	0x12
 5598 0216 0C       		.uleb128 0xc
 5599 0217 8B090000 		.4byte	.LASF52
 5600 021b 05       		.byte	0x5
 5601 021c 74       		.byte	0x74
 5602 021d DB000000 		.4byte	0xdb
 5603 0221 14       		.byte	0x14
 5604 0222 0C       		.uleb128 0xc
 5605 0223 29040000 		.4byte	.LASF53
 5606 0227 05       		.byte	0x5
 5607 0228 75       		.byte	0x75
 5608 0229 DB000000 		.4byte	0xdb
 5609 022d 16       		.byte	0x16
 5610 022e 0C       		.uleb128 0xc
 5611 022f 52010000 		.4byte	.LASF54
 5612 0233 05       		.byte	0x5
 5613 0234 76       		.byte	0x76
 5614 0235 DB000000 		.4byte	0xdb
 5615 0239 18       		.byte	0x18
 5616 023a 0C       		.uleb128 0xc
 5617 023b FD030000 		.4byte	.LASF55
 5618 023f 05       		.byte	0x5
 5619 0240 77       		.byte	0x77
 5620 0241 DB000000 		.4byte	0xdb
 5621 0245 1A       		.byte	0x1a
 5622 0246 0C       		.uleb128 0xc
 5623 0247 44050000 		.4byte	.LASF56
 5624 024b 05       		.byte	0x5
 5625 024c 78       		.byte	0x78
 5626 024d DB000000 		.4byte	0xdb
 5627 0251 1C       		.byte	0x1c
 5628 0252 0C       		.uleb128 0xc
 5629 0253 17020000 		.4byte	.LASF57
 5630 0257 05       		.byte	0x5
 5631 0258 79       		.byte	0x79
 5632 0259 DB000000 		.4byte	0xdb
 5633 025d 1E       		.byte	0x1e
 5634 025e 00       		.byte	0
 5635 025f 0D       		.uleb128 0xd
 5636 0260 0E090000 		.4byte	.LASF58
 5637 0264 01       		.byte	0x1
 5638 0265 62       		.byte	0x62
 5639 0266 00000000 		.4byte	.LFB63
 5640 026a 0C000000 		.4byte	.LFE63-.LFB63
 5641 026e 01       		.uleb128 0x1
 5642 026f 9C       		.byte	0x9c
 5643 0270 0E       		.uleb128 0xe
 5644 0271 63070000 		.4byte	.LASF59
 5645 0275 01       		.byte	0x1
 5646 0276 68       		.byte	0x68
 5647 0277 00000000 		.4byte	.LFB64
 5648 027b 2C000000 		.4byte	.LFE64-.LFB64
 5649 027f 01       		.uleb128 0x1
 5650 0280 9C       		.byte	0x9c
 5651 0281 0E       		.uleb128 0xe
 5652 0282 24020000 		.4byte	.LASF60
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 122


 5653 0286 01       		.byte	0x1
 5654 0287 71       		.byte	0x71
 5655 0288 00000000 		.4byte	.LFB65
 5656 028c 9C010000 		.4byte	.LFE65-.LFB65
 5657 0290 01       		.uleb128 0x1
 5658 0291 9C       		.byte	0x9c
 5659 0292 0F       		.uleb128 0xf
 5660 0293 BE020000 		.4byte	.LASF66
 5661 0297 01       		.byte	0x1
 5662 0298 96       		.byte	0x96
 5663 0299 00000000 		.4byte	.LFB66
 5664 029d 34010000 		.4byte	.LFE66-.LFB66
 5665 02a1 01       		.uleb128 0x1
 5666 02a2 9C       		.byte	0x9c
 5667 02a3 DC020000 		.4byte	0x2dc
 5668 02a7 10       		.uleb128 0x10
 5669 02a8 0E000000 		.4byte	.LBB2
 5670 02ac 64000000 		.4byte	.LBE2-.LBB2
 5671 02b0 C3020000 		.4byte	0x2c3
 5672 02b4 11       		.uleb128 0x11
 5673 02b5 05040000 		.4byte	.LASF61
 5674 02b9 01       		.byte	0x1
 5675 02ba 9A       		.byte	0x9a
 5676 02bb B7000000 		.4byte	0xb7
 5677 02bf 02       		.uleb128 0x2
 5678 02c0 91       		.byte	0x91
 5679 02c1 76       		.sleb128 -10
 5680 02c2 00       		.byte	0
 5681 02c3 12       		.uleb128 0x12
 5682 02c4 7E000000 		.4byte	.LBB3
 5683 02c8 64000000 		.4byte	.LBE3-.LBB3
 5684 02cc 11       		.uleb128 0x11
 5685 02cd 05040000 		.4byte	.LASF61
 5686 02d1 01       		.byte	0x1
 5687 02d2 A6       		.byte	0xa6
 5688 02d3 B7000000 		.4byte	0xb7
 5689 02d7 02       		.uleb128 0x2
 5690 02d8 91       		.byte	0x91
 5691 02d9 74       		.sleb128 -12
 5692 02da 00       		.byte	0
 5693 02db 00       		.byte	0
 5694 02dc 0D       		.uleb128 0xd
 5695 02dd 38080000 		.4byte	.LASF62
 5696 02e1 01       		.byte	0x1
 5697 02e2 BC       		.byte	0xbc
 5698 02e3 00000000 		.4byte	.LFB67
 5699 02e7 20000000 		.4byte	.LFE67-.LFB67
 5700 02eb 01       		.uleb128 0x1
 5701 02ec 9C       		.byte	0x9c
 5702 02ed 0E       		.uleb128 0xe
 5703 02ee 44030000 		.4byte	.LASF63
 5704 02f2 01       		.byte	0x1
 5705 02f3 C3       		.byte	0xc3
 5706 02f4 00000000 		.4byte	.LFB68
 5707 02f8 28000000 		.4byte	.LFE68-.LFB68
 5708 02fc 01       		.uleb128 0x1
 5709 02fd 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 123


 5710 02fe 0E       		.uleb128 0xe
 5711 02ff 0F060000 		.4byte	.LASF64
 5712 0303 01       		.byte	0x1
 5713 0304 CC       		.byte	0xcc
 5714 0305 00000000 		.4byte	.LFB69
 5715 0309 0A000000 		.4byte	.LFE69-.LFB69
 5716 030d 01       		.uleb128 0x1
 5717 030e 9C       		.byte	0x9c
 5718 030f 0E       		.uleb128 0xe
 5719 0310 2C060000 		.4byte	.LASF65
 5720 0314 01       		.byte	0x1
 5721 0315 D1       		.byte	0xd1
 5722 0316 00000000 		.4byte	.LFB70
 5723 031a 28000000 		.4byte	.LFE70-.LFB70
 5724 031e 01       		.uleb128 0x1
 5725 031f 9C       		.byte	0x9c
 5726 0320 13       		.uleb128 0x13
 5727 0321 09090000 		.4byte	.LASF67
 5728 0325 01       		.byte	0x1
 5729 0326 DC       		.byte	0xdc
 5730 0327 73000000 		.4byte	0x73
 5731 032b 00000000 		.4byte	.LFB71
 5732 032f 38070000 		.4byte	.LFE71-.LFB71
 5733 0333 01       		.uleb128 0x1
 5734 0334 9C       		.byte	0x9c
 5735 0335 09040000 		.4byte	0x409
 5736 0339 14       		.uleb128 0x14
 5737 033a 35030000 		.4byte	.LASF68
 5738 033e 01       		.byte	0x1
 5739 033f 1501     		.2byte	0x115
 5740 0341 B7000000 		.4byte	0xb7
 5741 0345 02       		.uleb128 0x2
 5742 0346 91       		.byte	0x91
 5743 0347 76       		.sleb128 -10
 5744 0348 12       		.uleb128 0x12
 5745 0349 38010000 		.4byte	.LBB4
 5746 034d 76050000 		.4byte	.LBE4-.LBB4
 5747 0351 14       		.uleb128 0x14
 5748 0352 AD040000 		.4byte	.LASF69
 5749 0356 01       		.byte	0x1
 5750 0357 4C01     		.2byte	0x14c
 5751 0359 8E000000 		.4byte	0x8e
 5752 035d 02       		.uleb128 0x2
 5753 035e 91       		.byte	0x91
 5754 035f 75       		.sleb128 -11
 5755 0360 10       		.uleb128 0x10
 5756 0361 84010000 		.4byte	.LBB5
 5757 0365 18020000 		.4byte	.LBE5-.LBB5
 5758 0369 96030000 		.4byte	0x396
 5759 036d 15       		.uleb128 0x15
 5760 036e 6D657300 		.ascii	"mes\000"
 5761 0372 01       		.byte	0x1
 5762 0373 5301     		.2byte	0x153
 5763 0375 09040000 		.4byte	0x409
 5764 0379 02       		.uleb128 0x2
 5765 037a 91       		.byte	0x91
 5766 037b 60       		.sleb128 -32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 124


 5767 037c 12       		.uleb128 0x12
 5768 037d AC010000 		.4byte	.LBB6
 5769 0381 F0010000 		.4byte	.LBE6-.LBB6
 5770 0385 14       		.uleb128 0x14
 5771 0386 1C040000 		.4byte	.LASF70
 5772 038a 01       		.byte	0x1
 5773 038b 6401     		.2byte	0x164
 5774 038d AB000000 		.4byte	0xab
 5775 0391 02       		.uleb128 0x2
 5776 0392 91       		.byte	0x91
 5777 0393 74       		.sleb128 -12
 5778 0394 00       		.byte	0
 5779 0395 00       		.byte	0
 5780 0396 10       		.uleb128 0x10
 5781 0397 F6030000 		.4byte	.LBB7
 5782 039b 30000000 		.4byte	.LBE7-.LBB7
 5783 039f B3030000 		.4byte	0x3b3
 5784 03a3 14       		.uleb128 0x14
 5785 03a4 FA000000 		.4byte	.LASF71
 5786 03a8 01       		.byte	0x1
 5787 03a9 A001     		.2byte	0x1a0
 5788 03ab 8E000000 		.4byte	0x8e
 5789 03af 02       		.uleb128 0x2
 5790 03b0 91       		.byte	0x91
 5791 03b1 71       		.sleb128 -15
 5792 03b2 00       		.byte	0
 5793 03b3 10       		.uleb128 0x10
 5794 03b4 4C040000 		.4byte	.LBB8
 5795 03b8 02010000 		.4byte	.LBE8-.LBB8
 5796 03bc DF030000 		.4byte	0x3df
 5797 03c0 15       		.uleb128 0x15
 5798 03c1 6D657300 		.ascii	"mes\000"
 5799 03c5 01       		.byte	0x1
 5800 03c6 AF01     		.2byte	0x1af
 5801 03c8 09040000 		.4byte	0x409
 5802 03cc 02       		.uleb128 0x2
 5803 03cd 91       		.byte	0x91
 5804 03ce 50       		.sleb128 -48
 5805 03cf 14       		.uleb128 0x14
 5806 03d0 1C040000 		.4byte	.LASF70
 5807 03d4 01       		.byte	0x1
 5808 03d5 B301     		.2byte	0x1b3
 5809 03d7 AB000000 		.4byte	0xab
 5810 03db 02       		.uleb128 0x2
 5811 03dc 91       		.byte	0x91
 5812 03dd 73       		.sleb128 -13
 5813 03de 00       		.byte	0
 5814 03df 12       		.uleb128 0x12
 5815 03e0 6E050000 		.4byte	.LBB9
 5816 03e4 36010000 		.4byte	.LBE9-.LBB9
 5817 03e8 15       		.uleb128 0x15
 5818 03e9 6D657300 		.ascii	"mes\000"
 5819 03ed 01       		.byte	0x1
 5820 03ee D701     		.2byte	0x1d7
 5821 03f0 09040000 		.4byte	0x409
 5822 03f4 02       		.uleb128 0x2
 5823 03f5 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 125


 5824 03f6 40       		.sleb128 -64
 5825 03f7 14       		.uleb128 0x14
 5826 03f8 1C040000 		.4byte	.LASF70
 5827 03fc 01       		.byte	0x1
 5828 03fd DB01     		.2byte	0x1db
 5829 03ff AB000000 		.4byte	0xab
 5830 0403 02       		.uleb128 0x2
 5831 0404 91       		.byte	0x91
 5832 0405 72       		.sleb128 -14
 5833 0406 00       		.byte	0
 5834 0407 00       		.byte	0
 5835 0408 00       		.byte	0
 5836 0409 07       		.uleb128 0x7
 5837 040a 8E000000 		.4byte	0x8e
 5838 040e 19040000 		.4byte	0x419
 5839 0412 08       		.uleb128 0x8
 5840 0413 81000000 		.4byte	0x81
 5841 0417 0F       		.byte	0xf
 5842 0418 00       		.byte	0
 5843 0419 16       		.uleb128 0x16
 5844 041a 47090000 		.4byte	.LASF77
 5845 041e 01       		.byte	0x1
 5846 041f 4802     		.2byte	0x248
 5847 0421 00000000 		.4byte	.LFB72
 5848 0425 60010000 		.4byte	.LFE72-.LFB72
 5849 0429 01       		.uleb128 0x1
 5850 042a 9C       		.byte	0x9c
 5851 042b 67040000 		.4byte	0x467
 5852 042f 12       		.uleb128 0x12
 5853 0430 10000000 		.4byte	.LBB10
 5854 0434 34010000 		.4byte	.LBE10-.LBB10
 5855 0438 14       		.uleb128 0x14
 5856 0439 45010000 		.4byte	.LASF72
 5857 043d 01       		.byte	0x1
 5858 043e 4E02     		.2byte	0x24e
 5859 0440 B7000000 		.4byte	0xb7
 5860 0444 02       		.uleb128 0x2
 5861 0445 91       		.byte	0x91
 5862 0446 76       		.sleb128 -10
 5863 0447 14       		.uleb128 0x14
 5864 0448 B6070000 		.4byte	.LASF73
 5865 044c 01       		.byte	0x1
 5866 044d 4F02     		.2byte	0x24f
 5867 044f 67040000 		.4byte	0x467
 5868 0453 02       		.uleb128 0x2
 5869 0454 91       		.byte	0x91
 5870 0455 68       		.sleb128 -24
 5871 0456 14       		.uleb128 0x14
 5872 0457 53020000 		.4byte	.LASF74
 5873 045b 01       		.byte	0x1
 5874 045c 5002     		.2byte	0x250
 5875 045e 67040000 		.4byte	0x467
 5876 0462 02       		.uleb128 0x2
 5877 0463 91       		.byte	0x91
 5878 0464 5C       		.sleb128 -36
 5879 0465 00       		.byte	0
 5880 0466 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 126


 5881 0467 07       		.uleb128 0x7
 5882 0468 8E000000 		.4byte	0x8e
 5883 046c 77040000 		.4byte	0x477
 5884 0470 08       		.uleb128 0x8
 5885 0471 81000000 		.4byte	0x81
 5886 0475 0B       		.byte	0xb
 5887 0476 00       		.byte	0
 5888 0477 17       		.uleb128 0x17
 5889 0478 DB030000 		.4byte	.LASF75
 5890 047c 01       		.byte	0x1
 5891 047d 8902     		.2byte	0x289
 5892 047f 00000000 		.4byte	.LFB73
 5893 0483 18000000 		.4byte	.LFE73-.LFB73
 5894 0487 01       		.uleb128 0x1
 5895 0488 9C       		.byte	0x9c
 5896 0489 9D040000 		.4byte	0x49d
 5897 048d 18       		.uleb128 0x18
 5898 048e 64697200 		.ascii	"dir\000"
 5899 0492 01       		.byte	0x1
 5900 0493 8902     		.2byte	0x289
 5901 0495 AB000000 		.4byte	0xab
 5902 0499 02       		.uleb128 0x2
 5903 049a 91       		.byte	0x91
 5904 049b 77       		.sleb128 -9
 5905 049c 00       		.byte	0
 5906 049d 17       		.uleb128 0x17
 5907 049e 3B040000 		.4byte	.LASF76
 5908 04a2 01       		.byte	0x1
 5909 04a3 8E02     		.2byte	0x28e
 5910 04a5 00000000 		.4byte	.LFB74
 5911 04a9 18000000 		.4byte	.LFE74-.LFB74
 5912 04ad 01       		.uleb128 0x1
 5913 04ae 9C       		.byte	0x9c
 5914 04af C3040000 		.4byte	0x4c3
 5915 04b3 18       		.uleb128 0x18
 5916 04b4 64697200 		.ascii	"dir\000"
 5917 04b8 01       		.byte	0x1
 5918 04b9 8E02     		.2byte	0x28e
 5919 04bb AB000000 		.4byte	0xab
 5920 04bf 02       		.uleb128 0x2
 5921 04c0 91       		.byte	0x91
 5922 04c1 77       		.sleb128 -9
 5923 04c2 00       		.byte	0
 5924 04c3 19       		.uleb128 0x19
 5925 04c4 6C080000 		.4byte	.LASF78
 5926 04c8 01       		.byte	0x1
 5927 04c9 9302     		.2byte	0x293
 5928 04cb 00000000 		.4byte	.LFB75
 5929 04cf 54000000 		.4byte	.LFE75-.LFB75
 5930 04d3 01       		.uleb128 0x1
 5931 04d4 9C       		.byte	0x9c
 5932 04d5 E9040000 		.4byte	0x4e9
 5933 04d9 15       		.uleb128 0x15
 5934 04da 6D657300 		.ascii	"mes\000"
 5935 04de 01       		.byte	0x1
 5936 04df 9802     		.2byte	0x298
 5937 04e1 09040000 		.4byte	0x409
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 127


 5938 04e5 02       		.uleb128 0x2
 5939 04e6 91       		.byte	0x91
 5940 04e7 68       		.sleb128 -24
 5941 04e8 00       		.byte	0
 5942 04e9 17       		.uleb128 0x17
 5943 04ea 34020000 		.4byte	.LASF79
 5944 04ee 01       		.byte	0x1
 5945 04ef 9D02     		.2byte	0x29d
 5946 04f1 00000000 		.4byte	.LFB76
 5947 04f5 F4000000 		.4byte	.LFE76-.LFB76
 5948 04f9 01       		.uleb128 0x1
 5949 04fa 9C       		.byte	0x9c
 5950 04fb 3C050000 		.4byte	0x53c
 5951 04ff 1A       		.uleb128 0x1a
 5952 0500 34070000 		.4byte	.LASF80
 5953 0504 01       		.byte	0x1
 5954 0505 9D02     		.2byte	0x29d
 5955 0507 EE000000 		.4byte	0xee
 5956 050b 02       		.uleb128 0x2
 5957 050c 91       		.byte	0x91
 5958 050d 68       		.sleb128 -24
 5959 050e 1A       		.uleb128 0x1a
 5960 050f 68040000 		.4byte	.LASF81
 5961 0513 01       		.byte	0x1
 5962 0514 9D02     		.2byte	0x29d
 5963 0516 EE000000 		.4byte	0xee
 5964 051a 02       		.uleb128 0x2
 5965 051b 91       		.byte	0x91
 5966 051c 60       		.sleb128 -32
 5967 051d 14       		.uleb128 0x14
 5968 051e 6C020000 		.4byte	.LASF82
 5969 0522 01       		.byte	0x1
 5970 0523 B202     		.2byte	0x2b2
 5971 0525 DB000000 		.4byte	0xdb
 5972 0529 02       		.uleb128 0x2
 5973 052a 91       		.byte	0x91
 5974 052b 76       		.sleb128 -10
 5975 052c 14       		.uleb128 0x14
 5976 052d 9B050000 		.4byte	.LASF83
 5977 0531 01       		.byte	0x1
 5978 0532 B302     		.2byte	0x2b3
 5979 0534 DB000000 		.4byte	0xdb
 5980 0538 02       		.uleb128 0x2
 5981 0539 91       		.byte	0x91
 5982 053a 74       		.sleb128 -12
 5983 053b 00       		.byte	0
 5984 053c 1B       		.uleb128 0x1b
 5985 053d 7D080000 		.4byte	.LASF84
 5986 0541 01       		.byte	0x1
 5987 0542 B902     		.2byte	0x2b9
 5988 0544 00000000 		.4byte	.LFB77
 5989 0548 18000000 		.4byte	.LFE77-.LFB77
 5990 054c 01       		.uleb128 0x1
 5991 054d 9C       		.byte	0x9c
 5992 054e 1B       		.uleb128 0x1b
 5993 054f AB090000 		.4byte	.LASF85
 5994 0553 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 128


 5995 0554 BF02     		.2byte	0x2bf
 5996 0556 00000000 		.4byte	.LFB78
 5997 055a 18000000 		.4byte	.LFE78-.LFB78
 5998 055e 01       		.uleb128 0x1
 5999 055f 9C       		.byte	0x9c
 6000 0560 1B       		.uleb128 0x1b
 6001 0561 EE070000 		.4byte	.LASF86
 6002 0565 01       		.byte	0x1
 6003 0566 C502     		.2byte	0x2c5
 6004 0568 00000000 		.4byte	.LFB79
 6005 056c 22000000 		.4byte	.LFE79-.LFB79
 6006 0570 01       		.uleb128 0x1
 6007 0571 9C       		.byte	0x9c
 6008 0572 1B       		.uleb128 0x1b
 6009 0573 77020000 		.4byte	.LASF87
 6010 0577 01       		.byte	0x1
 6011 0578 CB02     		.2byte	0x2cb
 6012 057a 00000000 		.4byte	.LFB80
 6013 057e 1C000000 		.4byte	.LFE80-.LFB80
 6014 0582 01       		.uleb128 0x1
 6015 0583 9C       		.byte	0x9c
 6016 0584 1B       		.uleb128 0x1b
 6017 0585 51070000 		.4byte	.LASF88
 6018 0589 01       		.byte	0x1
 6019 058a D002     		.2byte	0x2d0
 6020 058c 00000000 		.4byte	.LFB81
 6021 0590 34000000 		.4byte	.LFE81-.LFB81
 6022 0594 01       		.uleb128 0x1
 6023 0595 9C       		.byte	0x9c
 6024 0596 1B       		.uleb128 0x1b
 6025 0597 85020000 		.4byte	.LASF89
 6026 059b 01       		.byte	0x1
 6027 059c D502     		.2byte	0x2d5
 6028 059e 00000000 		.4byte	.LFB82
 6029 05a2 38000000 		.4byte	.LFE82-.LFB82
 6030 05a6 01       		.uleb128 0x1
 6031 05a7 9C       		.byte	0x9c
 6032 05a8 1B       		.uleb128 0x1b
 6033 05a9 F7030000 		.4byte	.LASF90
 6034 05ad 01       		.byte	0x1
 6035 05ae DA02     		.2byte	0x2da
 6036 05b0 00000000 		.4byte	.LFB83
 6037 05b4 4C000000 		.4byte	.LFE83-.LFB83
 6038 05b8 01       		.uleb128 0x1
 6039 05b9 9C       		.byte	0x9c
 6040 05ba 1B       		.uleb128 0x1b
 6041 05bb D8020000 		.4byte	.LASF91
 6042 05bf 01       		.byte	0x1
 6043 05c0 DF02     		.2byte	0x2df
 6044 05c2 00000000 		.4byte	.LFB84
 6045 05c6 38000000 		.4byte	.LFE84-.LFB84
 6046 05ca 01       		.uleb128 0x1
 6047 05cb 9C       		.byte	0x9c
 6048 05cc 1B       		.uleb128 0x1b
 6049 05cd A9060000 		.4byte	.LASF92
 6050 05d1 01       		.byte	0x1
 6051 05d2 E802     		.2byte	0x2e8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 129


 6052 05d4 00000000 		.4byte	.LFB85
 6053 05d8 38000000 		.4byte	.LFE85-.LFB85
 6054 05dc 01       		.uleb128 0x1
 6055 05dd 9C       		.byte	0x9c
 6056 05de 1B       		.uleb128 0x1b
 6057 05df 81060000 		.4byte	.LASF93
 6058 05e3 01       		.byte	0x1
 6059 05e4 F102     		.2byte	0x2f1
 6060 05e6 00000000 		.4byte	.LFB86
 6061 05ea 38000000 		.4byte	.LFE86-.LFB86
 6062 05ee 01       		.uleb128 0x1
 6063 05ef 9C       		.byte	0x9c
 6064 05f0 1B       		.uleb128 0x1b
 6065 05f1 02020000 		.4byte	.LASF94
 6066 05f5 01       		.byte	0x1
 6067 05f6 FA02     		.2byte	0x2fa
 6068 05f8 00000000 		.4byte	.LFB87
 6069 05fc 14000000 		.4byte	.LFE87-.LFB87
 6070 0600 01       		.uleb128 0x1
 6071 0601 9C       		.byte	0x9c
 6072 0602 1C       		.uleb128 0x1c
 6073 0603 EE020000 		.4byte	.LASF95
 6074 0607 01       		.byte	0x1
 6075 0608 FF02     		.2byte	0x2ff
 6076 060a 00000000 		.4byte	.LFB88
 6077 060e 18000000 		.4byte	.LFE88-.LFB88
 6078 0612 01       		.uleb128 0x1
 6079 0613 9C       		.byte	0x9c
 6080 0614 1C       		.uleb128 0x1c
 6081 0615 A3040000 		.4byte	.LASF96
 6082 0619 01       		.byte	0x1
 6083 061a 0303     		.2byte	0x303
 6084 061c 00000000 		.4byte	.LFB89
 6085 0620 18000000 		.4byte	.LFE89-.LFB89
 6086 0624 01       		.uleb128 0x1
 6087 0625 9C       		.byte	0x9c
 6088 0626 1C       		.uleb128 0x1c
 6089 0627 B6090000 		.4byte	.LASF97
 6090 062b 01       		.byte	0x1
 6091 062c 0803     		.2byte	0x308
 6092 062e 00000000 		.4byte	.LFB90
 6093 0632 18000000 		.4byte	.LFE90-.LFB90
 6094 0636 01       		.uleb128 0x1
 6095 0637 9C       		.byte	0x9c
 6096 0638 1C       		.uleb128 0x1c
 6097 0639 82030000 		.4byte	.LASF98
 6098 063d 01       		.byte	0x1
 6099 063e 0C03     		.2byte	0x30c
 6100 0640 00000000 		.4byte	.LFB91
 6101 0644 18000000 		.4byte	.LFE91-.LFB91
 6102 0648 01       		.uleb128 0x1
 6103 0649 9C       		.byte	0x9c
 6104 064a 17       		.uleb128 0x17
 6105 064b D8060000 		.4byte	.LASF99
 6106 064f 01       		.byte	0x1
 6107 0650 1303     		.2byte	0x313
 6108 0652 00000000 		.4byte	.LFB92
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 130


 6109 0656 B8000000 		.4byte	.LFE92-.LFB92
 6110 065a 01       		.uleb128 0x1
 6111 065b 9C       		.byte	0x9c
 6112 065c 70060000 		.4byte	0x670
 6113 0660 14       		.uleb128 0x14
 6114 0661 55050000 		.4byte	.LASF100
 6115 0665 01       		.byte	0x1
 6116 0666 1403     		.2byte	0x314
 6117 0668 8E000000 		.4byte	0x8e
 6118 066c 02       		.uleb128 0x2
 6119 066d 91       		.byte	0x91
 6120 066e 6F       		.sleb128 -17
 6121 066f 00       		.byte	0
 6122 0670 17       		.uleb128 0x17
 6123 0671 FA050000 		.4byte	.LASF101
 6124 0675 01       		.byte	0x1
 6125 0676 3003     		.2byte	0x330
 6126 0678 00000000 		.4byte	.LFB93
 6127 067c 48040000 		.4byte	.LFE93-.LFB93
 6128 0680 01       		.uleb128 0x1
 6129 0681 9C       		.byte	0x9c
 6130 0682 D8060000 		.4byte	0x6d8
 6131 0686 14       		.uleb128 0x14
 6132 0687 55050000 		.4byte	.LASF100
 6133 068b 01       		.byte	0x1
 6134 068c 3203     		.2byte	0x332
 6135 068e 8E000000 		.4byte	0x8e
 6136 0692 02       		.uleb128 0x2
 6137 0693 91       		.byte	0x91
 6138 0694 77       		.sleb128 -9
 6139 0695 12       		.uleb128 0x12
 6140 0696 48010000 		.4byte	.LBB11
 6141 069a B4020000 		.4byte	.LBE11-.LBB11
 6142 069e 15       		.uleb128 0x15
 6143 069f 6D657300 		.ascii	"mes\000"
 6144 06a3 01       		.byte	0x1
 6145 06a4 5803     		.2byte	0x358
 6146 06a6 09040000 		.4byte	0x409
 6147 06aa 02       		.uleb128 0x2
 6148 06ab 91       		.byte	0x91
 6149 06ac 58       		.sleb128 -40
 6150 06ad 15       		.uleb128 0x15
 6151 06ae 6900     		.ascii	"i\000"
 6152 06b0 01       		.byte	0x1
 6153 06b1 6B03     		.2byte	0x36b
 6154 06b3 73000000 		.4byte	0x73
 6155 06b7 02       		.uleb128 0x2
 6156 06b8 91       		.byte	0x91
 6157 06b9 70       		.sleb128 -16
 6158 06ba 14       		.uleb128 0x14
 6159 06bb AD040000 		.4byte	.LASF69
 6160 06bf 01       		.byte	0x1
 6161 06c0 7803     		.2byte	0x378
 6162 06c2 8E000000 		.4byte	0x8e
 6163 06c6 02       		.uleb128 0x2
 6164 06c7 91       		.byte	0x91
 6165 06c8 6B       		.sleb128 -21
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 131


 6166 06c9 15       		.uleb128 0x15
 6167 06ca 7800     		.ascii	"x\000"
 6168 06cc 01       		.byte	0x1
 6169 06cd 9903     		.2byte	0x399
 6170 06cf 73000000 		.4byte	0x73
 6171 06d3 02       		.uleb128 0x2
 6172 06d4 91       		.byte	0x91
 6173 06d5 6C       		.sleb128 -20
 6174 06d6 00       		.byte	0
 6175 06d7 00       		.byte	0
 6176 06d8 1B       		.uleb128 0x1b
 6177 06d9 CD020000 		.4byte	.LASF102
 6178 06dd 01       		.byte	0x1
 6179 06de B203     		.2byte	0x3b2
 6180 06e0 00000000 		.4byte	.LFB94
 6181 06e4 40000000 		.4byte	.LFE94-.LFB94
 6182 06e8 01       		.uleb128 0x1
 6183 06e9 9C       		.byte	0x9c
 6184 06ea 1B       		.uleb128 0x1b
 6185 06eb 61020000 		.4byte	.LASF103
 6186 06ef 01       		.byte	0x1
 6187 06f0 C103     		.2byte	0x3c1
 6188 06f2 00000000 		.4byte	.LFB95
 6189 06f6 40000000 		.4byte	.LFE95-.LFB95
 6190 06fa 01       		.uleb128 0x1
 6191 06fb 9C       		.byte	0x9c
 6192 06fc 19       		.uleb128 0x19
 6193 06fd 90000000 		.4byte	.LASF104
 6194 0701 01       		.byte	0x1
 6195 0702 D103     		.2byte	0x3d1
 6196 0704 00000000 		.4byte	.LFB96
 6197 0708 30020000 		.4byte	.LFE96-.LFB96
 6198 070c 01       		.uleb128 0x1
 6199 070d 9C       		.byte	0x9c
 6200 070e 6D070000 		.4byte	0x76d
 6201 0712 14       		.uleb128 0x14
 6202 0713 15030000 		.4byte	.LASF105
 6203 0717 01       		.byte	0x1
 6204 0718 DF03     		.2byte	0x3df
 6205 071a DB000000 		.4byte	0xdb
 6206 071e 02       		.uleb128 0x2
 6207 071f 91       		.byte	0x91
 6208 0720 5E       		.sleb128 -34
 6209 0721 14       		.uleb128 0x14
 6210 0722 73050000 		.4byte	.LASF106
 6211 0726 01       		.byte	0x1
 6212 0727 E003     		.2byte	0x3e0
 6213 0729 DB000000 		.4byte	0xdb
 6214 072d 02       		.uleb128 0x2
 6215 072e 91       		.byte	0x91
 6216 072f 5C       		.sleb128 -36
 6217 0730 14       		.uleb128 0x14
 6218 0731 B1030000 		.4byte	.LASF107
 6219 0735 01       		.byte	0x1
 6220 0736 E103     		.2byte	0x3e1
 6221 0738 EE000000 		.4byte	0xee
 6222 073c 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 132


 6223 073d 91       		.byte	0x91
 6224 073e 68       		.sleb128 -24
 6225 073f 14       		.uleb128 0x14
 6226 0740 6F090000 		.4byte	.LASF108
 6227 0744 01       		.byte	0x1
 6228 0745 E203     		.2byte	0x3e2
 6229 0747 EE000000 		.4byte	0xee
 6230 074b 02       		.uleb128 0x2
 6231 074c 91       		.byte	0x91
 6232 074d 60       		.sleb128 -32
 6233 074e 14       		.uleb128 0x14
 6234 074f 53040000 		.4byte	.LASF109
 6235 0753 01       		.byte	0x1
 6236 0754 EB03     		.2byte	0x3eb
 6237 0756 73000000 		.4byte	0x73
 6238 075a 02       		.uleb128 0x2
 6239 075b 91       		.byte	0x91
 6240 075c 58       		.sleb128 -40
 6241 075d 14       		.uleb128 0x14
 6242 075e 17090000 		.4byte	.LASF110
 6243 0762 01       		.byte	0x1
 6244 0763 EC03     		.2byte	0x3ec
 6245 0765 73000000 		.4byte	0x73
 6246 0769 02       		.uleb128 0x2
 6247 076a 91       		.byte	0x91
 6248 076b 54       		.sleb128 -44
 6249 076c 00       		.byte	0
 6250 076d 1C       		.uleb128 0x1c
 6251 076e CA050000 		.4byte	.LASF111
 6252 0772 01       		.byte	0x1
 6253 0773 FA03     		.2byte	0x3fa
 6254 0775 00000000 		.4byte	.LFB97
 6255 0779 0C000000 		.4byte	.LFE97-.LFB97
 6256 077d 01       		.uleb128 0x1
 6257 077e 9C       		.byte	0x9c
 6258 077f 19       		.uleb128 0x19
 6259 0780 92010000 		.4byte	.LASF112
 6260 0784 01       		.byte	0x1
 6261 0785 0004     		.2byte	0x400
 6262 0787 00000000 		.4byte	.LFB98
 6263 078b 4C010000 		.4byte	.LFE98-.LFB98
 6264 078f 01       		.uleb128 0x1
 6265 0790 9C       		.byte	0x9c
 6266 0791 C1070000 		.4byte	0x7c1
 6267 0795 15       		.uleb128 0x15
 6268 0796 6E6C00   		.ascii	"nl\000"
 6269 0799 01       		.byte	0x1
 6270 079a 0404     		.2byte	0x404
 6271 079c AB000000 		.4byte	0xab
 6272 07a0 02       		.uleb128 0x2
 6273 07a1 91       		.byte	0x91
 6274 07a2 67       		.sleb128 -25
 6275 07a3 15       		.uleb128 0x15
 6276 07a4 6E7200   		.ascii	"nr\000"
 6277 07a7 01       		.byte	0x1
 6278 07a8 0504     		.2byte	0x405
 6279 07aa AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 133


 6280 07ae 02       		.uleb128 0x2
 6281 07af 91       		.byte	0x91
 6282 07b0 66       		.sleb128 -26
 6283 07b1 15       		.uleb128 0x15
 6284 07b2 6D696400 		.ascii	"mid\000"
 6285 07b6 01       		.byte	0x1
 6286 07b7 0604     		.2byte	0x406
 6287 07b9 AB000000 		.4byte	0xab
 6288 07bd 02       		.uleb128 0x2
 6289 07be 91       		.byte	0x91
 6290 07bf 65       		.sleb128 -27
 6291 07c0 00       		.byte	0
 6292 07c1 1C       		.uleb128 0x1c
 6293 07c2 77010000 		.4byte	.LASF113
 6294 07c6 01       		.byte	0x1
 6295 07c7 2004     		.2byte	0x420
 6296 07c9 00000000 		.4byte	.LFB99
 6297 07cd 0C000000 		.4byte	.LFE99-.LFB99
 6298 07d1 01       		.uleb128 0x1
 6299 07d2 9C       		.byte	0x9c
 6300 07d3 19       		.uleb128 0x19
 6301 07d4 A7030000 		.4byte	.LASF114
 6302 07d8 01       		.byte	0x1
 6303 07d9 2504     		.2byte	0x425
 6304 07db 00000000 		.4byte	.LFB100
 6305 07df C0000000 		.4byte	.LFE100-.LFB100
 6306 07e3 01       		.uleb128 0x1
 6307 07e4 9C       		.byte	0x9c
 6308 07e5 21080000 		.4byte	0x821
 6309 07e9 12       		.uleb128 0x12
 6310 07ea 0E000000 		.4byte	.LBB12
 6311 07ee 8E000000 		.4byte	.LBE12-.LBB12
 6312 07f2 14       		.uleb128 0x14
 6313 07f3 07030000 		.4byte	.LASF115
 6314 07f7 01       		.byte	0x1
 6315 07f8 2E04     		.2byte	0x42e
 6316 07fa E7000000 		.4byte	0xe7
 6317 07fe 02       		.uleb128 0x2
 6318 07ff 91       		.byte	0x91
 6319 0800 74       		.sleb128 -12
 6320 0801 14       		.uleb128 0x14
 6321 0802 B1050000 		.4byte	.LASF116
 6322 0806 01       		.byte	0x1
 6323 0807 2F04     		.2byte	0x42f
 6324 0809 DB000000 		.4byte	0xdb
 6325 080d 02       		.uleb128 0x2
 6326 080e 91       		.byte	0x91
 6327 080f 72       		.sleb128 -14
 6328 0810 14       		.uleb128 0x14
 6329 0811 6A030000 		.4byte	.LASF117
 6330 0815 01       		.byte	0x1
 6331 0816 3404     		.2byte	0x434
 6332 0818 09040000 		.4byte	0x409
 6333 081c 02       		.uleb128 0x2
 6334 081d 91       		.byte	0x91
 6335 081e 60       		.sleb128 -32
 6336 081f 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 134


 6337 0820 00       		.byte	0
 6338 0821 19       		.uleb128 0x19
 6339 0822 58090000 		.4byte	.LASF118
 6340 0826 01       		.byte	0x1
 6341 0827 3B04     		.2byte	0x43b
 6342 0829 00000000 		.4byte	.LFB101
 6343 082d B8000000 		.4byte	.LFE101-.LFB101
 6344 0831 01       		.uleb128 0x1
 6345 0832 9C       		.byte	0x9c
 6346 0833 51080000 		.4byte	0x851
 6347 0837 12       		.uleb128 0x12
 6348 0838 0E000000 		.4byte	.LBB13
 6349 083c 86000000 		.4byte	.LBE13-.LBB13
 6350 0840 14       		.uleb128 0x14
 6351 0841 CC060000 		.4byte	.LASF119
 6352 0845 01       		.byte	0x1
 6353 0846 3F04     		.2byte	0x43f
 6354 0848 09040000 		.4byte	0x409
 6355 084c 02       		.uleb128 0x2
 6356 084d 91       		.byte	0x91
 6357 084e 68       		.sleb128 -24
 6358 084f 00       		.byte	0
 6359 0850 00       		.byte	0
 6360 0851 17       		.uleb128 0x17
 6361 0852 6B070000 		.4byte	.LASF120
 6362 0856 01       		.byte	0x1
 6363 0857 5004     		.2byte	0x450
 6364 0859 00000000 		.4byte	.LFB102
 6365 085d 4A000000 		.4byte	.LFE102-.LFB102
 6366 0861 01       		.uleb128 0x1
 6367 0862 9C       		.byte	0x9c
 6368 0863 77080000 		.4byte	0x877
 6369 0867 1A       		.uleb128 0x1a
 6370 0868 5F030000 		.4byte	.LASF121
 6371 086c 01       		.byte	0x1
 6372 086d 5004     		.2byte	0x450
 6373 086f 77080000 		.4byte	0x877
 6374 0873 02       		.uleb128 0x2
 6375 0874 91       		.byte	0x91
 6376 0875 6C       		.sleb128 -20
 6377 0876 00       		.byte	0
 6378 0877 05       		.uleb128 0x5
 6379 0878 04       		.byte	0x4
 6380 0879 AB000000 		.4byte	0xab
 6381 087d 17       		.uleb128 0x17
 6382 087e 44070000 		.4byte	.LASF122
 6383 0882 01       		.byte	0x1
 6384 0883 5B04     		.2byte	0x45b
 6385 0885 00000000 		.4byte	.LFB103
 6386 0889 68000000 		.4byte	.LFE103-.LFB103
 6387 088d 01       		.uleb128 0x1
 6388 088e 9C       		.byte	0x9c
 6389 088f BA080000 		.4byte	0x8ba
 6390 0893 18       		.uleb128 0x18
 6391 0894 7300     		.ascii	"s\000"
 6392 0896 01       		.byte	0x1
 6393 0897 5B04     		.2byte	0x45b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 135


 6394 0899 88000000 		.4byte	0x88
 6395 089d 02       		.uleb128 0x2
 6396 089e 91       		.byte	0x91
 6397 089f 6C       		.sleb128 -20
 6398 08a0 12       		.uleb128 0x12
 6399 08a1 10000000 		.4byte	.LBB14
 6400 08a5 48000000 		.4byte	.LBE14-.LBB14
 6401 08a9 15       		.uleb128 0x15
 6402 08aa 636E7400 		.ascii	"cnt\000"
 6403 08ae 01       		.byte	0x1
 6404 08af 6204     		.2byte	0x462
 6405 08b1 C3000000 		.4byte	0xc3
 6406 08b5 02       		.uleb128 0x2
 6407 08b6 91       		.byte	0x91
 6408 08b7 74       		.sleb128 -12
 6409 08b8 00       		.byte	0
 6410 08b9 00       		.byte	0
 6411 08ba 17       		.uleb128 0x17
 6412 08bb C3080000 		.4byte	.LASF123
 6413 08bf 01       		.byte	0x1
 6414 08c0 7104     		.2byte	0x471
 6415 08c2 00000000 		.4byte	.LFB104
 6416 08c6 50000000 		.4byte	.LFE104-.LFB104
 6417 08ca 01       		.uleb128 0x1
 6418 08cb 9C       		.byte	0x9c
 6419 08cc F7080000 		.4byte	0x8f7
 6420 08d0 18       		.uleb128 0x18
 6421 08d1 6300     		.ascii	"c\000"
 6422 08d3 01       		.byte	0x1
 6423 08d4 7104     		.2byte	0x471
 6424 08d6 8E000000 		.4byte	0x8e
 6425 08da 02       		.uleb128 0x2
 6426 08db 91       		.byte	0x91
 6427 08dc 6F       		.sleb128 -17
 6428 08dd 12       		.uleb128 0x12
 6429 08de 12000000 		.4byte	.LBB15
 6430 08e2 2E000000 		.4byte	.LBE15-.LBB15
 6431 08e6 15       		.uleb128 0x15
 6432 08e7 636E7400 		.ascii	"cnt\000"
 6433 08eb 01       		.byte	0x1
 6434 08ec 7504     		.2byte	0x475
 6435 08ee C3000000 		.4byte	0xc3
 6436 08f2 02       		.uleb128 0x2
 6437 08f3 91       		.byte	0x91
 6438 08f4 74       		.sleb128 -12
 6439 08f5 00       		.byte	0
 6440 08f6 00       		.byte	0
 6441 08f7 1C       		.uleb128 0x1c
 6442 08f8 75030000 		.4byte	.LASF124
 6443 08fc 01       		.byte	0x1
 6444 08fd 8204     		.2byte	0x482
 6445 08ff 00000000 		.4byte	.LFB105
 6446 0903 0C000000 		.4byte	.LFE105-.LFB105
 6447 0907 01       		.uleb128 0x1
 6448 0908 9C       		.byte	0x9c
 6449 0909 1D       		.uleb128 0x1d
 6450 090a BF060000 		.4byte	.LASF125
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 136


 6451 090e 06       		.byte	0x6
 6452 090f 9606     		.2byte	0x696
 6453 0911 15090000 		.4byte	0x915
 6454 0915 1E       		.uleb128 0x1e
 6455 0916 95000000 		.4byte	0x95
 6456 091a 1F       		.uleb128 0x1f
 6457 091b 747300   		.ascii	"ts\000"
 6458 091e 05       		.byte	0x5
 6459 091f 10       		.byte	0x10
 6460 0920 AB000000 		.4byte	0xab
 6461 0924 05       		.uleb128 0x5
 6462 0925 03       		.byte	0x3
 6463 0926 00000000 		.4byte	ts
 6464 092a 20       		.uleb128 0x20
 6465 092b 45080000 		.4byte	.LASF126
 6466 092f 05       		.byte	0x5
 6467 0930 11       		.byte	0x11
 6468 0931 B7000000 		.4byte	0xb7
 6469 0935 05       		.uleb128 0x5
 6470 0936 03       		.byte	0x3
 6471 0937 00000000 		.4byte	ts_enc
 6472 093b 20       		.uleb128 0x20
 6473 093c DE060000 		.4byte	.LASF127
 6474 0940 05       		.byte	0x5
 6475 0941 12       		.byte	0x12
 6476 0942 B7000000 		.4byte	0xb7
 6477 0946 05       		.uleb128 0x5
 6478 0947 03       		.byte	0x3
 6479 0948 00000000 		.4byte	ts_update
 6480 094c 20       		.uleb128 0x20
 6481 094d 7E050000 		.4byte	.LASF128
 6482 0951 05       		.byte	0x5
 6483 0952 13       		.byte	0x13
 6484 0953 B7000000 		.4byte	0xb7
 6485 0957 05       		.uleb128 0x5
 6486 0958 03       		.byte	0x3
 6487 0959 00000000 		.4byte	ts_speed
 6488 095d 20       		.uleb128 0x20
 6489 095e 9C030000 		.4byte	.LASF129
 6490 0962 05       		.byte	0x5
 6491 0963 14       		.byte	0x14
 6492 0964 B7000000 		.4byte	0xb7
 6493 0968 05       		.uleb128 0x5
 6494 0969 03       		.byte	0x3
 6495 096a 00000000 		.4byte	ts_display
 6496 096e 20       		.uleb128 0x20
 6497 096f 1F030000 		.4byte	.LASF130
 6498 0973 05       		.byte	0x5
 6499 0974 16       		.byte	0x16
 6500 0975 AB000000 		.4byte	0xab
 6501 0979 05       		.uleb128 0x5
 6502 097a 03       		.byte	0x3
 6503 097b 00000000 		.4byte	flag_ts_enc
 6504 097f 20       		.uleb128 0x20
 6505 0980 F8020000 		.4byte	.LASF131
 6506 0984 05       		.byte	0x5
 6507 0985 17       		.byte	0x17
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 137


 6508 0986 AB000000 		.4byte	0xab
 6509 098a 05       		.uleb128 0x5
 6510 098b 03       		.byte	0x3
 6511 098c 00000000 		.4byte	flag_ts_update
 6512 0990 20       		.uleb128 0x20
 6513 0991 39060000 		.4byte	.LASF132
 6514 0995 05       		.byte	0x5
 6515 0996 18       		.byte	0x18
 6516 0997 AB000000 		.4byte	0xab
 6517 099b 05       		.uleb128 0x5
 6518 099c 03       		.byte	0x3
 6519 099d 00000000 		.4byte	flag_ts_speed
 6520 09a1 20       		.uleb128 0x20
 6521 09a2 56080000 		.4byte	.LASF133
 6522 09a6 05       		.byte	0x5
 6523 09a7 19       		.byte	0x19
 6524 09a8 AB000000 		.4byte	0xab
 6525 09ac 05       		.uleb128 0x5
 6526 09ad 03       		.byte	0x3
 6527 09ae 00000000 		.4byte	flag_ts_display
 6528 09b2 20       		.uleb128 0x20
 6529 09b3 64060000 		.4byte	.LASF134
 6530 09b7 05       		.byte	0x5
 6531 09b8 1C       		.byte	0x1c
 6532 09b9 AB000000 		.4byte	0xab
 6533 09bd 05       		.uleb128 0x5
 6534 09be 03       		.byte	0x3
 6535 09bf 00000000 		.4byte	flag_rx
 6536 09c3 20       		.uleb128 0x20
 6537 09c4 A5020000 		.4byte	.LASF135
 6538 09c8 05       		.byte	0x5
 6539 09c9 1D       		.byte	0x1d
 6540 09ca AB000000 		.4byte	0xab
 6541 09ce 05       		.uleb128 0x5
 6542 09cf 03       		.byte	0x3
 6543 09d0 00000000 		.4byte	flag_packet
 6544 09d4 20       		.uleb128 0x20
 6545 09d5 7C090000 		.4byte	.LASF136
 6546 09d9 05       		.byte	0x5
 6547 09da 1E       		.byte	0x1e
 6548 09db AB000000 		.4byte	0xab
 6549 09df 05       		.uleb128 0x5
 6550 09e0 03       		.byte	0x3
 6551 09e1 00000000 		.4byte	flag_KB_string
 6552 09e5 20       		.uleb128 0x20
 6553 09e6 47060000 		.4byte	.LASF137
 6554 09ea 05       		.byte	0x5
 6555 09eb 20       		.byte	0x20
 6556 09ec AB000000 		.4byte	0xab
 6557 09f0 05       		.uleb128 0x5
 6558 09f1 03       		.byte	0x3
 6559 09f2 00000000 		.4byte	dataready_flag
 6560 09f6 20       		.uleb128 0x20
 6561 09f7 BE010000 		.4byte	.LASF138
 6562 09fb 05       		.byte	0x5
 6563 09fc 22       		.byte	0x22
 6564 09fd AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 138


 6565 0a01 05       		.uleb128 0x5
 6566 0a02 03       		.byte	0x3
 6567 0a03 00000000 		.4byte	flag_rf_transmission_active
 6568 0a07 20       		.uleb128 0x20
 6569 0a08 DA010000 		.4byte	.LASF139
 6570 0a0c 05       		.byte	0x5
 6571 0a0d 23       		.byte	0x23
 6572 0a0e AB000000 		.4byte	0xab
 6573 0a12 05       		.uleb128 0x5
 6574 0a13 03       		.byte	0x3
 6575 0a14 00000000 		.4byte	flag_print_rf
 6576 0a18 20       		.uleb128 0x20
 6577 0a19 E1050000 		.4byte	.LASF140
 6578 0a1d 05       		.byte	0x5
 6579 0a1e 25       		.byte	0x25
 6580 0a1f AB000000 		.4byte	0xab
 6581 0a23 05       		.uleb128 0x5
 6582 0a24 03       		.byte	0x3
 6583 0a25 00000000 		.4byte	flag_receive_ADC
 6584 0a29 20       		.uleb128 0x20
 6585 0a2a 76060000 		.4byte	.LASF141
 6586 0a2e 05       		.byte	0x5
 6587 0a2f 26       		.byte	0x26
 6588 0a30 DB000000 		.4byte	0xdb
 6589 0a34 05       		.uleb128 0x5
 6590 0a35 03       		.byte	0x3
 6591 0a36 00000000 		.4byte	adc_result
 6592 0a3a 20       		.uleb128 0x20
 6593 0a3b 00000000 		.4byte	.LASF142
 6594 0a3f 05       		.byte	0x5
 6595 0a40 28       		.byte	0x28
 6596 0a41 AB000000 		.4byte	0xab
 6597 0a45 05       		.uleb128 0x5
 6598 0a46 03       		.byte	0x3
 6599 0a47 00000000 		.4byte	direction
 6600 0a4b 20       		.uleb128 0x20
 6601 0a4c 67050000 		.4byte	.LASF143
 6602 0a50 05       		.byte	0x5
 6603 0a51 2B       		.byte	0x2b
 6604 0a52 AB000000 		.4byte	0xab
 6605 0a56 05       		.uleb128 0x5
 6606 0a57 03       		.byte	0x3
 6607 0a58 00000000 		.4byte	BIN_ENABLED
 6608 0a5c 20       		.uleb128 0x20
 6609 0a5d 5D040000 		.4byte	.LASF144
 6610 0a61 05       		.byte	0x5
 6611 0a62 2D       		.byte	0x2d
 6612 0a63 AB000000 		.4byte	0xab
 6613 0a67 05       		.uleb128 0x5
 6614 0a68 03       		.byte	0x3
 6615 0a69 00000000 		.4byte	BT_ENABLED
 6616 0a6d 20       		.uleb128 0x20
 6617 0a6e 8B060000 		.4byte	.LASF145
 6618 0a72 05       		.byte	0x5
 6619 0a73 32       		.byte	0x32
 6620 0a74 AB000000 		.4byte	0xab
 6621 0a78 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 139


 6622 0a79 03       		.byte	0x3
 6623 0a7a 00000000 		.4byte	flag_calc_wheelspeed
 6624 0a7e 20       		.uleb128 0x20
 6625 0a7f 5F010000 		.4byte	.LASF146
 6626 0a83 05       		.byte	0x5
 6627 0a84 33       		.byte	0x33
 6628 0a85 DB000000 		.4byte	0xdb
 6629 0a89 05       		.uleb128 0x5
 6630 0a8a 03       		.byte	0x3
 6631 0a8b 00000000 		.4byte	quad_count1
 6632 0a8f 20       		.uleb128 0x20
 6633 0a90 6B010000 		.4byte	.LASF147
 6634 0a94 05       		.byte	0x5
 6635 0a95 34       		.byte	0x34
 6636 0a96 DB000000 		.4byte	0xdb
 6637 0a9a 05       		.uleb128 0x5
 6638 0a9b 03       		.byte	0x3
 6639 0a9c 00000000 		.4byte	quad_count2
 6640 0aa0 20       		.uleb128 0x20
 6641 0aa1 95080000 		.4byte	.LASF148
 6642 0aa5 05       		.byte	0x5
 6643 0aa6 35       		.byte	0x35
 6644 0aa7 DB000000 		.4byte	0xdb
 6645 0aab 05       		.uleb128 0x5
 6646 0aac 03       		.byte	0x3
 6647 0aad 00000000 		.4byte	last_quad_count1
 6648 0ab1 20       		.uleb128 0x20
 6649 0ab2 A6080000 		.4byte	.LASF149
 6650 0ab6 05       		.byte	0x5
 6651 0ab7 36       		.byte	0x36
 6652 0ab8 DB000000 		.4byte	0xdb
 6653 0abc 05       		.uleb128 0x5
 6654 0abd 03       		.byte	0x3
 6655 0abe 00000000 		.4byte	last_quad_count2
 6656 0ac2 20       		.uleb128 0x20
 6657 0ac3 7A000000 		.4byte	.LASF150
 6658 0ac7 05       		.byte	0x5
 6659 0ac8 37       		.byte	0x37
 6660 0ac9 DB000000 		.4byte	0xdb
 6661 0acd 05       		.uleb128 0x5
 6662 0ace 03       		.byte	0x3
 6663 0acf 00000000 		.4byte	quad_diff1
 6664 0ad3 20       		.uleb128 0x20
 6665 0ad4 85000000 		.4byte	.LASF151
 6666 0ad8 05       		.byte	0x5
 6667 0ad9 38       		.byte	0x38
 6668 0ada DB000000 		.4byte	0xdb
 6669 0ade 05       		.uleb128 0x5
 6670 0adf 03       		.byte	0x3
 6671 0ae0 00000000 		.4byte	quad_diff2
 6672 0ae4 20       		.uleb128 0x20
 6673 0ae5 F1060000 		.4byte	.LASF152
 6674 0ae9 05       		.byte	0x5
 6675 0aea 39       		.byte	0x39
 6676 0aeb AB000000 		.4byte	0xab
 6677 0aef 05       		.uleb128 0x5
 6678 0af0 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 140


 6679 0af1 00000000 		.4byte	deadzone
 6680 0af5 20       		.uleb128 0x20
 6681 0af6 AE000000 		.4byte	.LASF153
 6682 0afa 05       		.byte	0x5
 6683 0afb 3C       		.byte	0x3c
 6684 0afc DB000000 		.4byte	0xdb
 6685 0b00 05       		.uleb128 0x5
 6686 0b01 03       		.byte	0x3
 6687 0b02 00000000 		.4byte	start_turn_count
 6688 0b06 20       		.uleb128 0x20
 6689 0b07 1C060000 		.4byte	.LASF154
 6690 0b0b 05       		.byte	0x5
 6691 0b0c 3F       		.byte	0x3f
 6692 0b0d DB000000 		.4byte	0xdb
 6693 0b11 05       		.uleb128 0x5
 6694 0b12 03       		.byte	0x3
 6695 0b13 00000000 		.4byte	left_duty_cycle
 6696 0b17 20       		.uleb128 0x20
 6697 0b18 2E090000 		.4byte	.LASF155
 6698 0b1c 05       		.byte	0x5
 6699 0b1d 40       		.byte	0x40
 6700 0b1e DB000000 		.4byte	0xdb
 6701 0b22 05       		.uleb128 0x5
 6702 0b23 03       		.byte	0x3
 6703 0b24 00000000 		.4byte	right_duty_cycle
 6704 0b28 20       		.uleb128 0x20
 6705 0b29 FA060000 		.4byte	.LASF156
 6706 0b2d 05       		.byte	0x5
 6707 0b2e 43       		.byte	0x43
 6708 0b2f DB000000 		.4byte	0xdb
 6709 0b33 05       		.uleb128 0x5
 6710 0b34 03       		.byte	0x3
 6711 0b35 00000000 		.4byte	leftSpeedLimit
 6712 0b39 20       		.uleb128 0x20
 6713 0b3a CB030000 		.4byte	.LASF157
 6714 0b3e 05       		.byte	0x5
 6715 0b3f 44       		.byte	0x44
 6716 0b40 DB000000 		.4byte	0xdb
 6717 0b44 05       		.uleb128 0x5
 6718 0b45 03       		.byte	0x3
 6719 0b46 00000000 		.4byte	rightSpeedLimit
 6720 0b4a 20       		.uleb128 0x20
 6721 0b4b 88070000 		.4byte	.LASF158
 6722 0b4f 05       		.byte	0x5
 6723 0b50 47       		.byte	0x47
 6724 0b51 DB000000 		.4byte	0xdb
 6725 0b55 05       		.uleb128 0x5
 6726 0b56 03       		.byte	0x3
 6727 0b57 00000000 		.4byte	target_distance_cm
 6728 0b5b 20       		.uleb128 0x20
 6729 0b5c 39070000 		.4byte	.LASF159
 6730 0b60 05       		.byte	0x5
 6731 0b61 49       		.byte	0x49
 6732 0b62 DB000000 		.4byte	0xdb
 6733 0b66 05       		.uleb128 0x5
 6734 0b67 03       		.byte	0x3
 6735 0b68 00000000 		.4byte	accum_dist
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 141


 6736 0b6c 20       		.uleb128 0x20
 6737 0b6d 0A010000 		.4byte	.LASF160
 6738 0b71 05       		.byte	0x5
 6739 0b72 4A       		.byte	0x4a
 6740 0b73 DB000000 		.4byte	0xdb
 6741 0b77 05       		.uleb128 0x5
 6742 0b78 03       		.byte	0x3
 6743 0b79 00000000 		.4byte	target_distance_quad
 6744 0b7d 20       		.uleb128 0x20
 6745 0b7e 29080000 		.4byte	.LASF161
 6746 0b82 05       		.byte	0x5
 6747 0b83 4B       		.byte	0x4b
 6748 0b84 AB000000 		.4byte	0xab
 6749 0b88 05       		.uleb128 0x5
 6750 0b89 03       		.byte	0x3
 6751 0b8a 00000000 		.4byte	reached_target
 6752 0b8e 20       		.uleb128 0x20
 6753 0b8f 24070000 		.4byte	.LASF162
 6754 0b93 05       		.byte	0x5
 6755 0b94 4C       		.byte	0x4c
 6756 0b95 AB000000 		.4byte	0xab
 6757 0b99 05       		.uleb128 0x5
 6758 0b9a 03       		.byte	0x3
 6759 0b9b 00000000 		.4byte	overshot_target
 6760 0b9f 20       		.uleb128 0x20
 6761 0ba0 7C070000 		.4byte	.LASF163
 6762 0ba4 05       		.byte	0x5
 6763 0ba5 4D       		.byte	0x4d
 6764 0ba6 E7000000 		.4byte	0xe7
 6765 0baa 05       		.uleb128 0x5
 6766 0bab 03       		.byte	0x3
 6767 0bac 00000000 		.4byte	quad_per_cm
 6768 0bb0 20       		.uleb128 0x20
 6769 0bb1 6E040000 		.4byte	.LASF164
 6770 0bb5 05       		.byte	0x5
 6771 0bb6 50       		.byte	0x50
 6772 0bb7 AB000000 		.4byte	0xab
 6773 0bbb 05       		.uleb128 0x5
 6774 0bbc 03       		.byte	0x3
 6775 0bbd 00000000 		.4byte	initial_pos_valid
 6776 0bc1 20       		.uleb128 0x20
 6777 0bc2 9D090000 		.4byte	.LASF165
 6778 0bc6 05       		.byte	0x5
 6779 0bc7 51       		.byte	0x51
 6780 0bc8 DB000000 		.4byte	0xdb
 6781 0bcc 05       		.uleb128 0x5
 6782 0bcd 03       		.byte	0x3
 6783 0bce 00000000 		.4byte	initial_x_pos
 6784 0bd2 20       		.uleb128 0x20
 6785 0bd3 56060000 		.4byte	.LASF166
 6786 0bd7 05       		.byte	0x5
 6787 0bd8 52       		.byte	0x52
 6788 0bd9 DB000000 		.4byte	0xdb
 6789 0bdd 05       		.uleb128 0x5
 6790 0bde 03       		.byte	0x3
 6791 0bdf 00000000 		.4byte	initial_y_pos
 6792 0be3 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 142


 6793 0be4 4C080000 		.4byte	.LASF167
 6794 0be8 05       		.byte	0x5
 6795 0be9 55       		.byte	0x55
 6796 0bea AB000000 		.4byte	0xab
 6797 0bee 05       		.uleb128 0x5
 6798 0bef 03       		.byte	0x3
 6799 0bf0 00000000 		.4byte	brakeFlag
 6800 0bf4 20       		.uleb128 0x20
 6801 0bf5 E5020000 		.4byte	.LASF168
 6802 0bf9 05       		.byte	0x5
 6803 0bfa 56       		.byte	0x56
 6804 0bfb AB000000 		.4byte	0xab
 6805 0bff 05       		.uleb128 0x5
 6806 0c00 03       		.byte	0x3
 6807 0c01 00000000 		.4byte	portOpen
 6808 0c05 07       		.uleb128 0x7
 6809 0c06 AB000000 		.4byte	0xab
 6810 0c0a 150C0000 		.4byte	0xc15
 6811 0c0e 08       		.uleb128 0x8
 6812 0c0f 81000000 		.4byte	0x81
 6813 0c13 04       		.byte	0x4
 6814 0c14 00       		.byte	0
 6815 0c15 20       		.uleb128 0x20
 6816 0c16 B1020000 		.4byte	.LASF169
 6817 0c1a 05       		.byte	0x5
 6818 0c1b 59       		.byte	0x59
 6819 0c1c 050C0000 		.4byte	0xc05
 6820 0c20 05       		.uleb128 0x5
 6821 0c21 03       		.byte	0x3
 6822 0c22 00000000 		.4byte	frontSensors
 6823 0c26 20       		.uleb128 0x20
 6824 0c27 A2000000 		.4byte	.LASF170
 6825 0c2b 05       		.byte	0x5
 6826 0c2c 5D       		.byte	0x5d
 6827 0c2d DB000000 		.4byte	0xdb
 6828 0c31 05       		.uleb128 0x5
 6829 0c32 03       		.byte	0x3
 6830 0c33 00000000 		.4byte	prevVoltage
 6831 0c37 20       		.uleb128 0x20
 6832 0c38 28010000 		.4byte	.LASF171
 6833 0c3c 05       		.byte	0x5
 6834 0c3d 5E       		.byte	0x5e
 6835 0c3e DB000000 		.4byte	0xdb
 6836 0c42 05       		.uleb128 0x5
 6837 0c43 03       		.byte	0x3
 6838 0c44 00000000 		.4byte	prevVoltage2
 6839 0c48 07       		.uleb128 0x7
 6840 0c49 8E000000 		.4byte	0x8e
 6841 0c4d 580C0000 		.4byte	0xc58
 6842 0c51 08       		.uleb128 0x8
 6843 0c52 81000000 		.4byte	0x81
 6844 0c56 3F       		.byte	0x3f
 6845 0c57 00       		.byte	0
 6846 0c58 20       		.uleb128 0x20
 6847 0c59 87080000 		.4byte	.LASF172
 6848 0c5d 05       		.byte	0x5
 6849 0c5e 64       		.byte	0x64
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 143


 6850 0c5f 480C0000 		.4byte	0xc48
 6851 0c63 05       		.uleb128 0x5
 6852 0c64 03       		.byte	0x3
 6853 0c65 00000000 		.4byte	displaystring
 6854 0c69 20       		.uleb128 0x20
 6855 0c6a 24080000 		.4byte	.LASF173
 6856 0c6e 05       		.byte	0x5
 6857 0c6f 65       		.byte	0x65
 6858 0c70 480C0000 		.4byte	0xc48
 6859 0c74 05       		.uleb128 0x5
 6860 0c75 03       		.byte	0x3
 6861 0c76 00000000 		.4byte	line
 6862 0c7a 20       		.uleb128 0x20
 6863 0c7b 05080000 		.4byte	.LASF174
 6864 0c7f 05       		.byte	0x5
 6865 0c80 65       		.byte	0x65
 6866 0c81 480C0000 		.4byte	0xc48
 6867 0c85 05       		.uleb128 0x5
 6868 0c86 03       		.byte	0x3
 6869 0c87 00000000 		.4byte	entry
 6870 0c8b 07       		.uleb128 0x7
 6871 0c8c AB000000 		.4byte	0xab
 6872 0c90 9B0C0000 		.4byte	0xc9b
 6873 0c94 08       		.uleb128 0x8
 6874 0c95 81000000 		.4byte	0x81
 6875 0c99 3F       		.byte	0x3f
 6876 0c9a 00       		.byte	0
 6877 0c9b 20       		.uleb128 0x20
 6878 0c9c 3D020000 		.4byte	.LASF175
 6879 0ca0 05       		.byte	0x5
 6880 0ca1 66       		.byte	0x66
 6881 0ca2 8B0C0000 		.4byte	0xc8b
 6882 0ca6 05       		.uleb128 0x5
 6883 0ca7 03       		.byte	0x3
 6884 0ca8 00000000 		.4byte	usbBuffer
 6885 0cac 20       		.uleb128 0x20
 6886 0cad 8E040000 		.4byte	.LASF176
 6887 0cb1 05       		.byte	0x5
 6888 0cb2 7B       		.byte	0x7b
 6889 0cb3 86010000 		.4byte	0x186
 6890 0cb7 05       		.uleb128 0x5
 6891 0cb8 03       		.byte	0x3
 6892 0cb9 00000000 		.4byte	buffer_state
 6893 0cbd 20       		.uleb128 0x20
 6894 0cbe E7000000 		.4byte	.LASF177
 6895 0cc2 05       		.byte	0x5
 6896 0cc3 7C       		.byte	0x7c
 6897 0cc4 86010000 		.4byte	0x186
 6898 0cc8 05       		.uleb128 0x5
 6899 0cc9 03       		.byte	0x3
 6900 0cca 00000000 		.4byte	system_state
 6901 0cce 20       		.uleb128 0x20
 6902 0ccf 4B030000 		.4byte	.LASF178
 6903 0cd3 05       		.byte	0x5
 6904 0cd4 7E       		.byte	0x7e
 6905 0cd5 0C010000 		.4byte	0x10c
 6906 0cd9 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 144


 6907 0cda 03       		.byte	0x3
 6908 0cdb 00000000 		.4byte	prev_movement_state
 6909 0cdf 20       		.uleb128 0x20
 6910 0ce0 E8010000 		.4byte	.LASF179
 6911 0ce4 05       		.byte	0x5
 6912 0ce5 7F       		.byte	0x7f
 6913 0ce6 0C010000 		.4byte	0x10c
 6914 0cea 05       		.uleb128 0x5
 6915 0ceb 03       		.byte	0x3
 6916 0cec 00000000 		.4byte	movement_state
 6917 0cf0 20       		.uleb128 0x20
 6918 0cf1 CC000000 		.4byte	.LASF180
 6919 0cf5 05       		.byte	0x5
 6920 0cf6 80       		.byte	0x80
 6921 0cf7 49010000 		.4byte	0x149
 6922 0cfb 05       		.uleb128 0x5
 6923 0cfc 03       		.byte	0x3
 6924 0cfd 00000000 		.4byte	track_mode
 6925 0d01 20       		.uleb128 0x20
 6926 0d02 2B030000 		.4byte	.LASF181
 6927 0d06 05       		.byte	0x5
 6928 0d07 82       		.byte	0x82
 6929 0d08 AB000000 		.4byte	0xab
 6930 0d0c 05       		.uleb128 0x5
 6931 0d0d 03       		.byte	0x3
 6932 0d0e 00000000 		.4byte	byteCount
 6933 0d12 07       		.uleb128 0x7
 6934 0d13 8E000000 		.4byte	0x8e
 6935 0d17 220D0000 		.4byte	0xd22
 6936 0d1b 08       		.uleb128 0x8
 6937 0d1c 81000000 		.4byte	0x81
 6938 0d20 01       		.byte	0x1
 6939 0d21 00       		.byte	0
 6940 0d22 20       		.uleb128 0x20
 6941 0d23 CA070000 		.4byte	.LASF182
 6942 0d27 05       		.byte	0x5
 6943 0d28 83       		.byte	0x83
 6944 0d29 120D0000 		.4byte	0xd12
 6945 0d2d 05       		.uleb128 0x5
 6946 0d2e 03       		.byte	0x3
 6947 0d2f 00000000 		.4byte	packet
 6948 0d33 20       		.uleb128 0x20
 6949 0d34 AB010000 		.4byte	.LASF183
 6950 0d38 05       		.byte	0x5
 6951 0d39 87       		.byte	0x87
 6952 0d3a EE000000 		.4byte	0xee
 6953 0d3e 05       		.uleb128 0x5
 6954 0d3f 03       		.byte	0x3
 6955 0d40 00000000 		.4byte	speed
 6956 0d44 20       		.uleb128 0x20
 6957 0d45 E6030000 		.4byte	.LASF184
 6958 0d49 01       		.byte	0x1
 6959 0d4a 25       		.byte	0x25
 6960 0d4b B7000000 		.4byte	0xb7
 6961 0d4f 05       		.uleb128 0x5
 6962 0d50 03       		.byte	0x3
 6963 0d51 00000000 		.4byte	instructionCount
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 145


 6964 0d55 20       		.uleb128 0x20
 6965 0d56 35010000 		.4byte	.LASF185
 6966 0d5a 01       		.byte	0x1
 6967 0d5b 27       		.byte	0x27
 6968 0d5c A0000000 		.4byte	0xa0
 6969 0d60 05       		.uleb128 0x5
 6970 0d61 03       		.byte	0x3
 6971 0d62 00000000 		.4byte	sensorsDisabled
 6972 0d66 07       		.uleb128 0x7
 6973 0d67 A0000000 		.4byte	0xa0
 6974 0d6b 7C0D0000 		.4byte	0xd7c
 6975 0d6f 08       		.uleb128 0x8
 6976 0d70 81000000 		.4byte	0x81
 6977 0d74 0E       		.byte	0xe
 6978 0d75 08       		.uleb128 0x8
 6979 0d76 81000000 		.4byte	0x81
 6980 0d7a 12       		.byte	0x12
 6981 0d7b 00       		.byte	0
 6982 0d7c 1F       		.uleb128 0x1f
 6983 0d7d 6D617000 		.ascii	"map\000"
 6984 0d81 01       		.byte	0x1
 6985 0d82 30       		.byte	0x30
 6986 0d83 660D0000 		.4byte	0xd66
 6987 0d87 05       		.uleb128 0x5
 6988 0d88 03       		.byte	0x3
 6989 0d89 00000000 		.4byte	map
 6990 0d8d 07       		.uleb128 0x7
 6991 0d8e A0000000 		.4byte	0xa0
 6992 0d92 A30D0000 		.4byte	0xda3
 6993 0d96 08       		.uleb128 0x8
 6994 0d97 81000000 		.4byte	0x81
 6995 0d9b 05       		.byte	0x5
 6996 0d9c 08       		.uleb128 0x8
 6997 0d9d 81000000 		.4byte	0x81
 6998 0da1 01       		.byte	0x1
 6999 0da2 00       		.byte	0
 7000 0da3 20       		.uleb128 0x20
 7001 0da4 5D050000 		.4byte	.LASF186
 7002 0da8 01       		.byte	0x1
 7003 0da9 45       		.byte	0x45
 7004 0daa 8D0D0000 		.4byte	0xd8d
 7005 0dae 05       		.uleb128 0x5
 7006 0daf 03       		.byte	0x3
 7007 0db0 00000000 		.4byte	food_list
 7008 0db4 07       		.uleb128 0x7
 7009 0db5 A0000000 		.4byte	0xa0
 7010 0db9 CB0D0000 		.4byte	0xdcb
 7011 0dbd 21       		.uleb128 0x21
 7012 0dbe 81000000 		.4byte	0x81
 7013 0dc2 1F03     		.2byte	0x31f
 7014 0dc4 08       		.uleb128 0x8
 7015 0dc5 81000000 		.4byte	0x81
 7016 0dc9 02       		.byte	0x2
 7017 0dca 00       		.byte	0
 7018 0dcb 20       		.uleb128 0x20
 7019 0dcc 36040000 		.4byte	.LASF187
 7020 0dd0 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 146


 7021 0dd1 2B       		.byte	0x2b
 7022 0dd2 B40D0000 		.4byte	0xdb4
 7023 0dd6 05       		.uleb128 0x5
 7024 0dd7 03       		.byte	0x3
 7025 0dd8 00000000 		.4byte	path
 7026 0ddc 20       		.uleb128 0x20
 7027 0ddd BF050000 		.4byte	.LASF188
 7028 0de1 01       		.byte	0x1
 7029 0de2 2C       		.byte	0x2c
 7030 0de3 F5000000 		.4byte	0xf5
 7031 0de7 05       		.uleb128 0x5
 7032 0de8 03       		.byte	0x3
 7033 0de9 00000000 		.4byte	start
 7034 0ded 20       		.uleb128 0x20
 7035 0dee B7080000 		.4byte	.LASF189
 7036 0df2 01       		.byte	0x1
 7037 0df3 2D       		.byte	0x2d
 7038 0df4 F5000000 		.4byte	0xf5
 7039 0df8 05       		.uleb128 0x5
 7040 0df9 03       		.byte	0x3
 7041 0dfa 00000000 		.4byte	destination
 7042 0dfe 20       		.uleb128 0x20
 7043 0dff 82010000 		.4byte	.LASF190
 7044 0e03 01       		.byte	0x1
 7045 0e04 29       		.byte	0x29
 7046 0e05 A0000000 		.4byte	0xa0
 7047 0e09 05       		.uleb128 0x5
 7048 0e0a 03       		.byte	0x3
 7049 0e0b 00000000 		.4byte	robot_direction
 7050 0e0f 20       		.uleb128 0x20
 7051 0e10 0A000000 		.4byte	.LASF191
 7052 0e14 07       		.byte	0x7
 7053 0e15 22       		.byte	0x22
 7054 0e16 A0000000 		.4byte	0xa0
 7055 0e1a 05       		.uleb128 0x5
 7056 0e1b 03       		.byte	0x3
 7057 0e1c 00000000 		.4byte	tracked_direction
 7058 0e20 20       		.uleb128 0x20
 7059 0e21 F9070000 		.4byte	.LASF192
 7060 0e25 01       		.byte	0x1
 7061 0e26 47       		.byte	0x47
 7062 0e27 A0000000 		.4byte	0xa0
 7063 0e2b 05       		.uleb128 0x5
 7064 0e2c 03       		.byte	0x3
 7065 0e2d 00000000 		.4byte	food_length
 7066 0e31 07       		.uleb128 0x7
 7067 0e32 8E000000 		.4byte	0x8e
 7068 0e36 420E0000 		.4byte	0xe42
 7069 0e3a 21       		.uleb128 0x21
 7070 0e3b 81000000 		.4byte	0x81
 7071 0e3f 1F03     		.2byte	0x31f
 7072 0e41 00       		.byte	0
 7073 0e42 20       		.uleb128 0x20
 7074 0e43 8E050000 		.4byte	.LASF193
 7075 0e47 01       		.byte	0x1
 7076 0e48 24       		.byte	0x24
 7077 0e49 310E0000 		.4byte	0xe31
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 147


 7078 0e4d 05       		.uleb128 0x5
 7079 0e4e 03       		.byte	0x3
 7080 0e4f 00000000 		.4byte	instructions
 7081 0e53 20       		.uleb128 0x20
 7082 0e54 D1070000 		.4byte	.LASF194
 7083 0e58 01       		.byte	0x1
 7084 0e59 26       		.byte	0x26
 7085 0e5a B7000000 		.4byte	0xb7
 7086 0e5e 05       		.uleb128 0x5
 7087 0e5f 03       		.byte	0x3
 7088 0e60 00000000 		.4byte	instructionLength
 7089 0e64 22       		.uleb128 0x22
 7090 0e65 9D010000 		.4byte	.LASF195
 7091 0e69 01       		.byte	0x1
 7092 0e6a FE03     		.2byte	0x3fe
 7093 0e6c B7000000 		.4byte	0xb7
 7094 0e70 05       		.uleb128 0x5
 7095 0e71 03       		.byte	0x3
 7096 0e72 00000000 		.4byte	leftTurnCount
 7097 0e76 22       		.uleb128 0x22
 7098 0e77 61000000 		.4byte	.LASF196
 7099 0e7b 01       		.byte	0x1
 7100 0e7c FF03     		.2byte	0x3ff
 7101 0e7e B7000000 		.4byte	0xb7
 7102 0e82 05       		.uleb128 0x5
 7103 0e83 03       		.byte	0x3
 7104 0e84 00000000 		.4byte	rightTurnCount
 7105 0e88 00       		.byte	0
 7106              		.section	.debug_abbrev,"",%progbits
 7107              	.Ldebug_abbrev0:
 7108 0000 01       		.uleb128 0x1
 7109 0001 11       		.uleb128 0x11
 7110 0002 01       		.byte	0x1
 7111 0003 25       		.uleb128 0x25
 7112 0004 0E       		.uleb128 0xe
 7113 0005 13       		.uleb128 0x13
 7114 0006 0B       		.uleb128 0xb
 7115 0007 03       		.uleb128 0x3
 7116 0008 0E       		.uleb128 0xe
 7117 0009 1B       		.uleb128 0x1b
 7118 000a 0E       		.uleb128 0xe
 7119 000b 55       		.uleb128 0x55
 7120 000c 17       		.uleb128 0x17
 7121 000d 11       		.uleb128 0x11
 7122 000e 01       		.uleb128 0x1
 7123 000f 10       		.uleb128 0x10
 7124 0010 17       		.uleb128 0x17
 7125 0011 00       		.byte	0
 7126 0012 00       		.byte	0
 7127 0013 02       		.uleb128 0x2
 7128 0014 24       		.uleb128 0x24
 7129 0015 00       		.byte	0
 7130 0016 0B       		.uleb128 0xb
 7131 0017 0B       		.uleb128 0xb
 7132 0018 3E       		.uleb128 0x3e
 7133 0019 0B       		.uleb128 0xb
 7134 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 148


 7135 001b 0E       		.uleb128 0xe
 7136 001c 00       		.byte	0
 7137 001d 00       		.byte	0
 7138 001e 03       		.uleb128 0x3
 7139 001f 16       		.uleb128 0x16
 7140 0020 00       		.byte	0
 7141 0021 03       		.uleb128 0x3
 7142 0022 0E       		.uleb128 0xe
 7143 0023 3A       		.uleb128 0x3a
 7144 0024 0B       		.uleb128 0xb
 7145 0025 3B       		.uleb128 0x3b
 7146 0026 0B       		.uleb128 0xb
 7147 0027 49       		.uleb128 0x49
 7148 0028 13       		.uleb128 0x13
 7149 0029 00       		.byte	0
 7150 002a 00       		.byte	0
 7151 002b 04       		.uleb128 0x4
 7152 002c 24       		.uleb128 0x24
 7153 002d 00       		.byte	0
 7154 002e 0B       		.uleb128 0xb
 7155 002f 0B       		.uleb128 0xb
 7156 0030 3E       		.uleb128 0x3e
 7157 0031 0B       		.uleb128 0xb
 7158 0032 03       		.uleb128 0x3
 7159 0033 08       		.uleb128 0x8
 7160 0034 00       		.byte	0
 7161 0035 00       		.byte	0
 7162 0036 05       		.uleb128 0x5
 7163 0037 0F       		.uleb128 0xf
 7164 0038 00       		.byte	0
 7165 0039 0B       		.uleb128 0xb
 7166 003a 0B       		.uleb128 0xb
 7167 003b 49       		.uleb128 0x49
 7168 003c 13       		.uleb128 0x13
 7169 003d 00       		.byte	0
 7170 003e 00       		.byte	0
 7171 003f 06       		.uleb128 0x6
 7172 0040 16       		.uleb128 0x16
 7173 0041 00       		.byte	0
 7174 0042 03       		.uleb128 0x3
 7175 0043 0E       		.uleb128 0xe
 7176 0044 3A       		.uleb128 0x3a
 7177 0045 0B       		.uleb128 0xb
 7178 0046 3B       		.uleb128 0x3b
 7179 0047 05       		.uleb128 0x5
 7180 0048 49       		.uleb128 0x49
 7181 0049 13       		.uleb128 0x13
 7182 004a 00       		.byte	0
 7183 004b 00       		.byte	0
 7184 004c 07       		.uleb128 0x7
 7185 004d 01       		.uleb128 0x1
 7186 004e 01       		.byte	0x1
 7187 004f 49       		.uleb128 0x49
 7188 0050 13       		.uleb128 0x13
 7189 0051 01       		.uleb128 0x1
 7190 0052 13       		.uleb128 0x13
 7191 0053 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 149


 7192 0054 00       		.byte	0
 7193 0055 08       		.uleb128 0x8
 7194 0056 21       		.uleb128 0x21
 7195 0057 00       		.byte	0
 7196 0058 49       		.uleb128 0x49
 7197 0059 13       		.uleb128 0x13
 7198 005a 2F       		.uleb128 0x2f
 7199 005b 0B       		.uleb128 0xb
 7200 005c 00       		.byte	0
 7201 005d 00       		.byte	0
 7202 005e 09       		.uleb128 0x9
 7203 005f 04       		.uleb128 0x4
 7204 0060 01       		.byte	0x1
 7205 0061 03       		.uleb128 0x3
 7206 0062 0E       		.uleb128 0xe
 7207 0063 0B       		.uleb128 0xb
 7208 0064 0B       		.uleb128 0xb
 7209 0065 3A       		.uleb128 0x3a
 7210 0066 0B       		.uleb128 0xb
 7211 0067 3B       		.uleb128 0x3b
 7212 0068 0B       		.uleb128 0xb
 7213 0069 01       		.uleb128 0x1
 7214 006a 13       		.uleb128 0x13
 7215 006b 00       		.byte	0
 7216 006c 00       		.byte	0
 7217 006d 0A       		.uleb128 0xa
 7218 006e 28       		.uleb128 0x28
 7219 006f 00       		.byte	0
 7220 0070 03       		.uleb128 0x3
 7221 0071 0E       		.uleb128 0xe
 7222 0072 1C       		.uleb128 0x1c
 7223 0073 0D       		.uleb128 0xd
 7224 0074 00       		.byte	0
 7225 0075 00       		.byte	0
 7226 0076 0B       		.uleb128 0xb
 7227 0077 13       		.uleb128 0x13
 7228 0078 01       		.byte	0x1
 7229 0079 03       		.uleb128 0x3
 7230 007a 0E       		.uleb128 0xe
 7231 007b 0B       		.uleb128 0xb
 7232 007c 0B       		.uleb128 0xb
 7233 007d 3A       		.uleb128 0x3a
 7234 007e 0B       		.uleb128 0xb
 7235 007f 3B       		.uleb128 0x3b
 7236 0080 0B       		.uleb128 0xb
 7237 0081 01       		.uleb128 0x1
 7238 0082 13       		.uleb128 0x13
 7239 0083 00       		.byte	0
 7240 0084 00       		.byte	0
 7241 0085 0C       		.uleb128 0xc
 7242 0086 0D       		.uleb128 0xd
 7243 0087 00       		.byte	0
 7244 0088 03       		.uleb128 0x3
 7245 0089 0E       		.uleb128 0xe
 7246 008a 3A       		.uleb128 0x3a
 7247 008b 0B       		.uleb128 0xb
 7248 008c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 150


 7249 008d 0B       		.uleb128 0xb
 7250 008e 49       		.uleb128 0x49
 7251 008f 13       		.uleb128 0x13
 7252 0090 38       		.uleb128 0x38
 7253 0091 0B       		.uleb128 0xb
 7254 0092 00       		.byte	0
 7255 0093 00       		.byte	0
 7256 0094 0D       		.uleb128 0xd
 7257 0095 2E       		.uleb128 0x2e
 7258 0096 00       		.byte	0
 7259 0097 3F       		.uleb128 0x3f
 7260 0098 19       		.uleb128 0x19
 7261 0099 03       		.uleb128 0x3
 7262 009a 0E       		.uleb128 0xe
 7263 009b 3A       		.uleb128 0x3a
 7264 009c 0B       		.uleb128 0xb
 7265 009d 3B       		.uleb128 0x3b
 7266 009e 0B       		.uleb128 0xb
 7267 009f 27       		.uleb128 0x27
 7268 00a0 19       		.uleb128 0x19
 7269 00a1 11       		.uleb128 0x11
 7270 00a2 01       		.uleb128 0x1
 7271 00a3 12       		.uleb128 0x12
 7272 00a4 06       		.uleb128 0x6
 7273 00a5 40       		.uleb128 0x40
 7274 00a6 18       		.uleb128 0x18
 7275 00a7 9742     		.uleb128 0x2117
 7276 00a9 19       		.uleb128 0x19
 7277 00aa 00       		.byte	0
 7278 00ab 00       		.byte	0
 7279 00ac 0E       		.uleb128 0xe
 7280 00ad 2E       		.uleb128 0x2e
 7281 00ae 00       		.byte	0
 7282 00af 3F       		.uleb128 0x3f
 7283 00b0 19       		.uleb128 0x19
 7284 00b1 03       		.uleb128 0x3
 7285 00b2 0E       		.uleb128 0xe
 7286 00b3 3A       		.uleb128 0x3a
 7287 00b4 0B       		.uleb128 0xb
 7288 00b5 3B       		.uleb128 0x3b
 7289 00b6 0B       		.uleb128 0xb
 7290 00b7 27       		.uleb128 0x27
 7291 00b8 19       		.uleb128 0x19
 7292 00b9 11       		.uleb128 0x11
 7293 00ba 01       		.uleb128 0x1
 7294 00bb 12       		.uleb128 0x12
 7295 00bc 06       		.uleb128 0x6
 7296 00bd 40       		.uleb128 0x40
 7297 00be 18       		.uleb128 0x18
 7298 00bf 9642     		.uleb128 0x2116
 7299 00c1 19       		.uleb128 0x19
 7300 00c2 00       		.byte	0
 7301 00c3 00       		.byte	0
 7302 00c4 0F       		.uleb128 0xf
 7303 00c5 2E       		.uleb128 0x2e
 7304 00c6 01       		.byte	0x1
 7305 00c7 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 151


 7306 00c8 19       		.uleb128 0x19
 7307 00c9 03       		.uleb128 0x3
 7308 00ca 0E       		.uleb128 0xe
 7309 00cb 3A       		.uleb128 0x3a
 7310 00cc 0B       		.uleb128 0xb
 7311 00cd 3B       		.uleb128 0x3b
 7312 00ce 0B       		.uleb128 0xb
 7313 00cf 27       		.uleb128 0x27
 7314 00d0 19       		.uleb128 0x19
 7315 00d1 11       		.uleb128 0x11
 7316 00d2 01       		.uleb128 0x1
 7317 00d3 12       		.uleb128 0x12
 7318 00d4 06       		.uleb128 0x6
 7319 00d5 40       		.uleb128 0x40
 7320 00d6 18       		.uleb128 0x18
 7321 00d7 9642     		.uleb128 0x2116
 7322 00d9 19       		.uleb128 0x19
 7323 00da 01       		.uleb128 0x1
 7324 00db 13       		.uleb128 0x13
 7325 00dc 00       		.byte	0
 7326 00dd 00       		.byte	0
 7327 00de 10       		.uleb128 0x10
 7328 00df 0B       		.uleb128 0xb
 7329 00e0 01       		.byte	0x1
 7330 00e1 11       		.uleb128 0x11
 7331 00e2 01       		.uleb128 0x1
 7332 00e3 12       		.uleb128 0x12
 7333 00e4 06       		.uleb128 0x6
 7334 00e5 01       		.uleb128 0x1
 7335 00e6 13       		.uleb128 0x13
 7336 00e7 00       		.byte	0
 7337 00e8 00       		.byte	0
 7338 00e9 11       		.uleb128 0x11
 7339 00ea 34       		.uleb128 0x34
 7340 00eb 00       		.byte	0
 7341 00ec 03       		.uleb128 0x3
 7342 00ed 0E       		.uleb128 0xe
 7343 00ee 3A       		.uleb128 0x3a
 7344 00ef 0B       		.uleb128 0xb
 7345 00f0 3B       		.uleb128 0x3b
 7346 00f1 0B       		.uleb128 0xb
 7347 00f2 49       		.uleb128 0x49
 7348 00f3 13       		.uleb128 0x13
 7349 00f4 02       		.uleb128 0x2
 7350 00f5 18       		.uleb128 0x18
 7351 00f6 00       		.byte	0
 7352 00f7 00       		.byte	0
 7353 00f8 12       		.uleb128 0x12
 7354 00f9 0B       		.uleb128 0xb
 7355 00fa 01       		.byte	0x1
 7356 00fb 11       		.uleb128 0x11
 7357 00fc 01       		.uleb128 0x1
 7358 00fd 12       		.uleb128 0x12
 7359 00fe 06       		.uleb128 0x6
 7360 00ff 00       		.byte	0
 7361 0100 00       		.byte	0
 7362 0101 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 152


 7363 0102 2E       		.uleb128 0x2e
 7364 0103 01       		.byte	0x1
 7365 0104 3F       		.uleb128 0x3f
 7366 0105 19       		.uleb128 0x19
 7367 0106 03       		.uleb128 0x3
 7368 0107 0E       		.uleb128 0xe
 7369 0108 3A       		.uleb128 0x3a
 7370 0109 0B       		.uleb128 0xb
 7371 010a 3B       		.uleb128 0x3b
 7372 010b 0B       		.uleb128 0xb
 7373 010c 49       		.uleb128 0x49
 7374 010d 13       		.uleb128 0x13
 7375 010e 11       		.uleb128 0x11
 7376 010f 01       		.uleb128 0x1
 7377 0110 12       		.uleb128 0x12
 7378 0111 06       		.uleb128 0x6
 7379 0112 40       		.uleb128 0x40
 7380 0113 18       		.uleb128 0x18
 7381 0114 9642     		.uleb128 0x2116
 7382 0116 19       		.uleb128 0x19
 7383 0117 01       		.uleb128 0x1
 7384 0118 13       		.uleb128 0x13
 7385 0119 00       		.byte	0
 7386 011a 00       		.byte	0
 7387 011b 14       		.uleb128 0x14
 7388 011c 34       		.uleb128 0x34
 7389 011d 00       		.byte	0
 7390 011e 03       		.uleb128 0x3
 7391 011f 0E       		.uleb128 0xe
 7392 0120 3A       		.uleb128 0x3a
 7393 0121 0B       		.uleb128 0xb
 7394 0122 3B       		.uleb128 0x3b
 7395 0123 05       		.uleb128 0x5
 7396 0124 49       		.uleb128 0x49
 7397 0125 13       		.uleb128 0x13
 7398 0126 02       		.uleb128 0x2
 7399 0127 18       		.uleb128 0x18
 7400 0128 00       		.byte	0
 7401 0129 00       		.byte	0
 7402 012a 15       		.uleb128 0x15
 7403 012b 34       		.uleb128 0x34
 7404 012c 00       		.byte	0
 7405 012d 03       		.uleb128 0x3
 7406 012e 08       		.uleb128 0x8
 7407 012f 3A       		.uleb128 0x3a
 7408 0130 0B       		.uleb128 0xb
 7409 0131 3B       		.uleb128 0x3b
 7410 0132 05       		.uleb128 0x5
 7411 0133 49       		.uleb128 0x49
 7412 0134 13       		.uleb128 0x13
 7413 0135 02       		.uleb128 0x2
 7414 0136 18       		.uleb128 0x18
 7415 0137 00       		.byte	0
 7416 0138 00       		.byte	0
 7417 0139 16       		.uleb128 0x16
 7418 013a 2E       		.uleb128 0x2e
 7419 013b 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 153


 7420 013c 3F       		.uleb128 0x3f
 7421 013d 19       		.uleb128 0x19
 7422 013e 03       		.uleb128 0x3
 7423 013f 0E       		.uleb128 0xe
 7424 0140 3A       		.uleb128 0x3a
 7425 0141 0B       		.uleb128 0xb
 7426 0142 3B       		.uleb128 0x3b
 7427 0143 05       		.uleb128 0x5
 7428 0144 11       		.uleb128 0x11
 7429 0145 01       		.uleb128 0x1
 7430 0146 12       		.uleb128 0x12
 7431 0147 06       		.uleb128 0x6
 7432 0148 40       		.uleb128 0x40
 7433 0149 18       		.uleb128 0x18
 7434 014a 9742     		.uleb128 0x2117
 7435 014c 19       		.uleb128 0x19
 7436 014d 01       		.uleb128 0x1
 7437 014e 13       		.uleb128 0x13
 7438 014f 00       		.byte	0
 7439 0150 00       		.byte	0
 7440 0151 17       		.uleb128 0x17
 7441 0152 2E       		.uleb128 0x2e
 7442 0153 01       		.byte	0x1
 7443 0154 3F       		.uleb128 0x3f
 7444 0155 19       		.uleb128 0x19
 7445 0156 03       		.uleb128 0x3
 7446 0157 0E       		.uleb128 0xe
 7447 0158 3A       		.uleb128 0x3a
 7448 0159 0B       		.uleb128 0xb
 7449 015a 3B       		.uleb128 0x3b
 7450 015b 05       		.uleb128 0x5
 7451 015c 27       		.uleb128 0x27
 7452 015d 19       		.uleb128 0x19
 7453 015e 11       		.uleb128 0x11
 7454 015f 01       		.uleb128 0x1
 7455 0160 12       		.uleb128 0x12
 7456 0161 06       		.uleb128 0x6
 7457 0162 40       		.uleb128 0x40
 7458 0163 18       		.uleb128 0x18
 7459 0164 9642     		.uleb128 0x2116
 7460 0166 19       		.uleb128 0x19
 7461 0167 01       		.uleb128 0x1
 7462 0168 13       		.uleb128 0x13
 7463 0169 00       		.byte	0
 7464 016a 00       		.byte	0
 7465 016b 18       		.uleb128 0x18
 7466 016c 05       		.uleb128 0x5
 7467 016d 00       		.byte	0
 7468 016e 03       		.uleb128 0x3
 7469 016f 08       		.uleb128 0x8
 7470 0170 3A       		.uleb128 0x3a
 7471 0171 0B       		.uleb128 0xb
 7472 0172 3B       		.uleb128 0x3b
 7473 0173 05       		.uleb128 0x5
 7474 0174 49       		.uleb128 0x49
 7475 0175 13       		.uleb128 0x13
 7476 0176 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 154


 7477 0177 18       		.uleb128 0x18
 7478 0178 00       		.byte	0
 7479 0179 00       		.byte	0
 7480 017a 19       		.uleb128 0x19
 7481 017b 2E       		.uleb128 0x2e
 7482 017c 01       		.byte	0x1
 7483 017d 3F       		.uleb128 0x3f
 7484 017e 19       		.uleb128 0x19
 7485 017f 03       		.uleb128 0x3
 7486 0180 0E       		.uleb128 0xe
 7487 0181 3A       		.uleb128 0x3a
 7488 0182 0B       		.uleb128 0xb
 7489 0183 3B       		.uleb128 0x3b
 7490 0184 05       		.uleb128 0x5
 7491 0185 11       		.uleb128 0x11
 7492 0186 01       		.uleb128 0x1
 7493 0187 12       		.uleb128 0x12
 7494 0188 06       		.uleb128 0x6
 7495 0189 40       		.uleb128 0x40
 7496 018a 18       		.uleb128 0x18
 7497 018b 9642     		.uleb128 0x2116
 7498 018d 19       		.uleb128 0x19
 7499 018e 01       		.uleb128 0x1
 7500 018f 13       		.uleb128 0x13
 7501 0190 00       		.byte	0
 7502 0191 00       		.byte	0
 7503 0192 1A       		.uleb128 0x1a
 7504 0193 05       		.uleb128 0x5
 7505 0194 00       		.byte	0
 7506 0195 03       		.uleb128 0x3
 7507 0196 0E       		.uleb128 0xe
 7508 0197 3A       		.uleb128 0x3a
 7509 0198 0B       		.uleb128 0xb
 7510 0199 3B       		.uleb128 0x3b
 7511 019a 05       		.uleb128 0x5
 7512 019b 49       		.uleb128 0x49
 7513 019c 13       		.uleb128 0x13
 7514 019d 02       		.uleb128 0x2
 7515 019e 18       		.uleb128 0x18
 7516 019f 00       		.byte	0
 7517 01a0 00       		.byte	0
 7518 01a1 1B       		.uleb128 0x1b
 7519 01a2 2E       		.uleb128 0x2e
 7520 01a3 00       		.byte	0
 7521 01a4 3F       		.uleb128 0x3f
 7522 01a5 19       		.uleb128 0x19
 7523 01a6 03       		.uleb128 0x3
 7524 01a7 0E       		.uleb128 0xe
 7525 01a8 3A       		.uleb128 0x3a
 7526 01a9 0B       		.uleb128 0xb
 7527 01aa 3B       		.uleb128 0x3b
 7528 01ab 05       		.uleb128 0x5
 7529 01ac 11       		.uleb128 0x11
 7530 01ad 01       		.uleb128 0x1
 7531 01ae 12       		.uleb128 0x12
 7532 01af 06       		.uleb128 0x6
 7533 01b0 40       		.uleb128 0x40
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 155


 7534 01b1 18       		.uleb128 0x18
 7535 01b2 9642     		.uleb128 0x2116
 7536 01b4 19       		.uleb128 0x19
 7537 01b5 00       		.byte	0
 7538 01b6 00       		.byte	0
 7539 01b7 1C       		.uleb128 0x1c
 7540 01b8 2E       		.uleb128 0x2e
 7541 01b9 00       		.byte	0
 7542 01ba 3F       		.uleb128 0x3f
 7543 01bb 19       		.uleb128 0x19
 7544 01bc 03       		.uleb128 0x3
 7545 01bd 0E       		.uleb128 0xe
 7546 01be 3A       		.uleb128 0x3a
 7547 01bf 0B       		.uleb128 0xb
 7548 01c0 3B       		.uleb128 0x3b
 7549 01c1 05       		.uleb128 0x5
 7550 01c2 11       		.uleb128 0x11
 7551 01c3 01       		.uleb128 0x1
 7552 01c4 12       		.uleb128 0x12
 7553 01c5 06       		.uleb128 0x6
 7554 01c6 40       		.uleb128 0x40
 7555 01c7 18       		.uleb128 0x18
 7556 01c8 9742     		.uleb128 0x2117
 7557 01ca 19       		.uleb128 0x19
 7558 01cb 00       		.byte	0
 7559 01cc 00       		.byte	0
 7560 01cd 1D       		.uleb128 0x1d
 7561 01ce 34       		.uleb128 0x34
 7562 01cf 00       		.byte	0
 7563 01d0 03       		.uleb128 0x3
 7564 01d1 0E       		.uleb128 0xe
 7565 01d2 3A       		.uleb128 0x3a
 7566 01d3 0B       		.uleb128 0xb
 7567 01d4 3B       		.uleb128 0x3b
 7568 01d5 05       		.uleb128 0x5
 7569 01d6 49       		.uleb128 0x49
 7570 01d7 13       		.uleb128 0x13
 7571 01d8 3F       		.uleb128 0x3f
 7572 01d9 19       		.uleb128 0x19
 7573 01da 3C       		.uleb128 0x3c
 7574 01db 19       		.uleb128 0x19
 7575 01dc 00       		.byte	0
 7576 01dd 00       		.byte	0
 7577 01de 1E       		.uleb128 0x1e
 7578 01df 35       		.uleb128 0x35
 7579 01e0 00       		.byte	0
 7580 01e1 49       		.uleb128 0x49
 7581 01e2 13       		.uleb128 0x13
 7582 01e3 00       		.byte	0
 7583 01e4 00       		.byte	0
 7584 01e5 1F       		.uleb128 0x1f
 7585 01e6 34       		.uleb128 0x34
 7586 01e7 00       		.byte	0
 7587 01e8 03       		.uleb128 0x3
 7588 01e9 08       		.uleb128 0x8
 7589 01ea 3A       		.uleb128 0x3a
 7590 01eb 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 156


 7591 01ec 3B       		.uleb128 0x3b
 7592 01ed 0B       		.uleb128 0xb
 7593 01ee 49       		.uleb128 0x49
 7594 01ef 13       		.uleb128 0x13
 7595 01f0 3F       		.uleb128 0x3f
 7596 01f1 19       		.uleb128 0x19
 7597 01f2 02       		.uleb128 0x2
 7598 01f3 18       		.uleb128 0x18
 7599 01f4 00       		.byte	0
 7600 01f5 00       		.byte	0
 7601 01f6 20       		.uleb128 0x20
 7602 01f7 34       		.uleb128 0x34
 7603 01f8 00       		.byte	0
 7604 01f9 03       		.uleb128 0x3
 7605 01fa 0E       		.uleb128 0xe
 7606 01fb 3A       		.uleb128 0x3a
 7607 01fc 0B       		.uleb128 0xb
 7608 01fd 3B       		.uleb128 0x3b
 7609 01fe 0B       		.uleb128 0xb
 7610 01ff 49       		.uleb128 0x49
 7611 0200 13       		.uleb128 0x13
 7612 0201 3F       		.uleb128 0x3f
 7613 0202 19       		.uleb128 0x19
 7614 0203 02       		.uleb128 0x2
 7615 0204 18       		.uleb128 0x18
 7616 0205 00       		.byte	0
 7617 0206 00       		.byte	0
 7618 0207 21       		.uleb128 0x21
 7619 0208 21       		.uleb128 0x21
 7620 0209 00       		.byte	0
 7621 020a 49       		.uleb128 0x49
 7622 020b 13       		.uleb128 0x13
 7623 020c 2F       		.uleb128 0x2f
 7624 020d 05       		.uleb128 0x5
 7625 020e 00       		.byte	0
 7626 020f 00       		.byte	0
 7627 0210 22       		.uleb128 0x22
 7628 0211 34       		.uleb128 0x34
 7629 0212 00       		.byte	0
 7630 0213 03       		.uleb128 0x3
 7631 0214 0E       		.uleb128 0xe
 7632 0215 3A       		.uleb128 0x3a
 7633 0216 0B       		.uleb128 0xb
 7634 0217 3B       		.uleb128 0x3b
 7635 0218 05       		.uleb128 0x5
 7636 0219 49       		.uleb128 0x49
 7637 021a 13       		.uleb128 0x13
 7638 021b 3F       		.uleb128 0x3f
 7639 021c 19       		.uleb128 0x19
 7640 021d 02       		.uleb128 0x2
 7641 021e 18       		.uleb128 0x18
 7642 021f 00       		.byte	0
 7643 0220 00       		.byte	0
 7644 0221 00       		.byte	0
 7645              		.section	.debug_aranges,"",%progbits
 7646 0000 6C010000 		.4byte	0x16c
 7647 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 157


 7648 0006 00000000 		.4byte	.Ldebug_info0
 7649 000a 04       		.byte	0x4
 7650 000b 00       		.byte	0
 7651 000c 0000     		.2byte	0
 7652 000e 0000     		.2byte	0
 7653 0010 00000000 		.4byte	.LFB63
 7654 0014 0C000000 		.4byte	.LFE63-.LFB63
 7655 0018 00000000 		.4byte	.LFB64
 7656 001c 2C000000 		.4byte	.LFE64-.LFB64
 7657 0020 00000000 		.4byte	.LFB65
 7658 0024 9C010000 		.4byte	.LFE65-.LFB65
 7659 0028 00000000 		.4byte	.LFB66
 7660 002c 34010000 		.4byte	.LFE66-.LFB66
 7661 0030 00000000 		.4byte	.LFB67
 7662 0034 20000000 		.4byte	.LFE67-.LFB67
 7663 0038 00000000 		.4byte	.LFB68
 7664 003c 28000000 		.4byte	.LFE68-.LFB68
 7665 0040 00000000 		.4byte	.LFB69
 7666 0044 0A000000 		.4byte	.LFE69-.LFB69
 7667 0048 00000000 		.4byte	.LFB70
 7668 004c 28000000 		.4byte	.LFE70-.LFB70
 7669 0050 00000000 		.4byte	.LFB71
 7670 0054 38070000 		.4byte	.LFE71-.LFB71
 7671 0058 00000000 		.4byte	.LFB72
 7672 005c 60010000 		.4byte	.LFE72-.LFB72
 7673 0060 00000000 		.4byte	.LFB73
 7674 0064 18000000 		.4byte	.LFE73-.LFB73
 7675 0068 00000000 		.4byte	.LFB74
 7676 006c 18000000 		.4byte	.LFE74-.LFB74
 7677 0070 00000000 		.4byte	.LFB75
 7678 0074 54000000 		.4byte	.LFE75-.LFB75
 7679 0078 00000000 		.4byte	.LFB76
 7680 007c F4000000 		.4byte	.LFE76-.LFB76
 7681 0080 00000000 		.4byte	.LFB77
 7682 0084 18000000 		.4byte	.LFE77-.LFB77
 7683 0088 00000000 		.4byte	.LFB78
 7684 008c 18000000 		.4byte	.LFE78-.LFB78
 7685 0090 00000000 		.4byte	.LFB79
 7686 0094 22000000 		.4byte	.LFE79-.LFB79
 7687 0098 00000000 		.4byte	.LFB80
 7688 009c 1C000000 		.4byte	.LFE80-.LFB80
 7689 00a0 00000000 		.4byte	.LFB81
 7690 00a4 34000000 		.4byte	.LFE81-.LFB81
 7691 00a8 00000000 		.4byte	.LFB82
 7692 00ac 38000000 		.4byte	.LFE82-.LFB82
 7693 00b0 00000000 		.4byte	.LFB83
 7694 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7695 00b8 00000000 		.4byte	.LFB84
 7696 00bc 38000000 		.4byte	.LFE84-.LFB84
 7697 00c0 00000000 		.4byte	.LFB85
 7698 00c4 38000000 		.4byte	.LFE85-.LFB85
 7699 00c8 00000000 		.4byte	.LFB86
 7700 00cc 38000000 		.4byte	.LFE86-.LFB86
 7701 00d0 00000000 		.4byte	.LFB87
 7702 00d4 14000000 		.4byte	.LFE87-.LFB87
 7703 00d8 00000000 		.4byte	.LFB88
 7704 00dc 18000000 		.4byte	.LFE88-.LFB88
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 158


 7705 00e0 00000000 		.4byte	.LFB89
 7706 00e4 18000000 		.4byte	.LFE89-.LFB89
 7707 00e8 00000000 		.4byte	.LFB90
 7708 00ec 18000000 		.4byte	.LFE90-.LFB90
 7709 00f0 00000000 		.4byte	.LFB91
 7710 00f4 18000000 		.4byte	.LFE91-.LFB91
 7711 00f8 00000000 		.4byte	.LFB92
 7712 00fc B8000000 		.4byte	.LFE92-.LFB92
 7713 0100 00000000 		.4byte	.LFB93
 7714 0104 48040000 		.4byte	.LFE93-.LFB93
 7715 0108 00000000 		.4byte	.LFB94
 7716 010c 40000000 		.4byte	.LFE94-.LFB94
 7717 0110 00000000 		.4byte	.LFB95
 7718 0114 40000000 		.4byte	.LFE95-.LFB95
 7719 0118 00000000 		.4byte	.LFB96
 7720 011c 30020000 		.4byte	.LFE96-.LFB96
 7721 0120 00000000 		.4byte	.LFB97
 7722 0124 0C000000 		.4byte	.LFE97-.LFB97
 7723 0128 00000000 		.4byte	.LFB98
 7724 012c 4C010000 		.4byte	.LFE98-.LFB98
 7725 0130 00000000 		.4byte	.LFB99
 7726 0134 0C000000 		.4byte	.LFE99-.LFB99
 7727 0138 00000000 		.4byte	.LFB100
 7728 013c C0000000 		.4byte	.LFE100-.LFB100
 7729 0140 00000000 		.4byte	.LFB101
 7730 0144 B8000000 		.4byte	.LFE101-.LFB101
 7731 0148 00000000 		.4byte	.LFB102
 7732 014c 4A000000 		.4byte	.LFE102-.LFB102
 7733 0150 00000000 		.4byte	.LFB103
 7734 0154 68000000 		.4byte	.LFE103-.LFB103
 7735 0158 00000000 		.4byte	.LFB104
 7736 015c 50000000 		.4byte	.LFE104-.LFB104
 7737 0160 00000000 		.4byte	.LFB105
 7738 0164 0C000000 		.4byte	.LFE105-.LFB105
 7739 0168 00000000 		.4byte	0
 7740 016c 00000000 		.4byte	0
 7741              		.section	.debug_ranges,"",%progbits
 7742              	.Ldebug_ranges0:
 7743 0000 00000000 		.4byte	.LFB63
 7744 0004 0C000000 		.4byte	.LFE63
 7745 0008 00000000 		.4byte	.LFB64
 7746 000c 2C000000 		.4byte	.LFE64
 7747 0010 00000000 		.4byte	.LFB65
 7748 0014 9C010000 		.4byte	.LFE65
 7749 0018 00000000 		.4byte	.LFB66
 7750 001c 34010000 		.4byte	.LFE66
 7751 0020 00000000 		.4byte	.LFB67
 7752 0024 20000000 		.4byte	.LFE67
 7753 0028 00000000 		.4byte	.LFB68
 7754 002c 28000000 		.4byte	.LFE68
 7755 0030 00000000 		.4byte	.LFB69
 7756 0034 0A000000 		.4byte	.LFE69
 7757 0038 00000000 		.4byte	.LFB70
 7758 003c 28000000 		.4byte	.LFE70
 7759 0040 00000000 		.4byte	.LFB71
 7760 0044 38070000 		.4byte	.LFE71
 7761 0048 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 159


 7762 004c 60010000 		.4byte	.LFE72
 7763 0050 00000000 		.4byte	.LFB73
 7764 0054 18000000 		.4byte	.LFE73
 7765 0058 00000000 		.4byte	.LFB74
 7766 005c 18000000 		.4byte	.LFE74
 7767 0060 00000000 		.4byte	.LFB75
 7768 0064 54000000 		.4byte	.LFE75
 7769 0068 00000000 		.4byte	.LFB76
 7770 006c F4000000 		.4byte	.LFE76
 7771 0070 00000000 		.4byte	.LFB77
 7772 0074 18000000 		.4byte	.LFE77
 7773 0078 00000000 		.4byte	.LFB78
 7774 007c 18000000 		.4byte	.LFE78
 7775 0080 00000000 		.4byte	.LFB79
 7776 0084 22000000 		.4byte	.LFE79
 7777 0088 00000000 		.4byte	.LFB80
 7778 008c 1C000000 		.4byte	.LFE80
 7779 0090 00000000 		.4byte	.LFB81
 7780 0094 34000000 		.4byte	.LFE81
 7781 0098 00000000 		.4byte	.LFB82
 7782 009c 38000000 		.4byte	.LFE82
 7783 00a0 00000000 		.4byte	.LFB83
 7784 00a4 4C000000 		.4byte	.LFE83
 7785 00a8 00000000 		.4byte	.LFB84
 7786 00ac 38000000 		.4byte	.LFE84
 7787 00b0 00000000 		.4byte	.LFB85
 7788 00b4 38000000 		.4byte	.LFE85
 7789 00b8 00000000 		.4byte	.LFB86
 7790 00bc 38000000 		.4byte	.LFE86
 7791 00c0 00000000 		.4byte	.LFB87
 7792 00c4 14000000 		.4byte	.LFE87
 7793 00c8 00000000 		.4byte	.LFB88
 7794 00cc 18000000 		.4byte	.LFE88
 7795 00d0 00000000 		.4byte	.LFB89
 7796 00d4 18000000 		.4byte	.LFE89
 7797 00d8 00000000 		.4byte	.LFB90
 7798 00dc 18000000 		.4byte	.LFE90
 7799 00e0 00000000 		.4byte	.LFB91
 7800 00e4 18000000 		.4byte	.LFE91
 7801 00e8 00000000 		.4byte	.LFB92
 7802 00ec B8000000 		.4byte	.LFE92
 7803 00f0 00000000 		.4byte	.LFB93
 7804 00f4 48040000 		.4byte	.LFE93
 7805 00f8 00000000 		.4byte	.LFB94
 7806 00fc 40000000 		.4byte	.LFE94
 7807 0100 00000000 		.4byte	.LFB95
 7808 0104 40000000 		.4byte	.LFE95
 7809 0108 00000000 		.4byte	.LFB96
 7810 010c 30020000 		.4byte	.LFE96
 7811 0110 00000000 		.4byte	.LFB97
 7812 0114 0C000000 		.4byte	.LFE97
 7813 0118 00000000 		.4byte	.LFB98
 7814 011c 4C010000 		.4byte	.LFE98
 7815 0120 00000000 		.4byte	.LFB99
 7816 0124 0C000000 		.4byte	.LFE99
 7817 0128 00000000 		.4byte	.LFB100
 7818 012c C0000000 		.4byte	.LFE100
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 160


 7819 0130 00000000 		.4byte	.LFB101
 7820 0134 B8000000 		.4byte	.LFE101
 7821 0138 00000000 		.4byte	.LFB102
 7822 013c 4A000000 		.4byte	.LFE102
 7823 0140 00000000 		.4byte	.LFB103
 7824 0144 68000000 		.4byte	.LFE103
 7825 0148 00000000 		.4byte	.LFB104
 7826 014c 50000000 		.4byte	.LFE104
 7827 0150 00000000 		.4byte	.LFB105
 7828 0154 0C000000 		.4byte	.LFE105
 7829 0158 00000000 		.4byte	0
 7830 015c 00000000 		.4byte	0
 7831              		.section	.debug_line,"",%progbits
 7832              	.Ldebug_line0:
 7833 0000 E9070000 		.section	.debug_str,"MS",%progbits,1
 7833      02006701 
 7833      00000201 
 7833      FB0E0D00 
 7833      01010101 
 7834              	.LASF142:
 7835 0000 64697265 		.ascii	"direction\000"
 7835      6374696F 
 7835      6E00
 7836              	.LASF191:
 7837 000a 74726163 		.ascii	"tracked_direction\000"
 7837      6B65645F 
 7837      64697265 
 7837      6374696F 
 7837      6E00
 7838              	.LASF199:
 7839 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7839      73657273 
 7839      5C4C6F67 
 7839      616E5C44 
 7839      65736B74 
 7840 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7840      315F436C 
 7840      6173732E 
 7840      63796473 
 7840      6E00
 7841              	.LASF25:
 7842 005b 52545552 		.ascii	"RTURN\000"
 7842      4E00
 7843              	.LASF196:
 7844 0061 72696768 		.ascii	"rightTurnCount\000"
 7844      74547572 
 7844      6E436F75 
 7844      6E7400
 7845              	.LASF39:
 7846 0070 44455354 		.ascii	"DEST_TEST\000"
 7846      5F544553 
 7846      5400
 7847              	.LASF150:
 7848 007a 71756164 		.ascii	"quad_diff1\000"
 7848      5F646966 
 7848      663100
 7849              	.LASF151:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 161


 7850 0085 71756164 		.ascii	"quad_diff2\000"
 7850      5F646966 
 7850      663200
 7851              	.LASF104:
 7852 0090 51756164 		.ascii	"Quad_Dec_response\000"
 7852      5F446563 
 7852      5F726573 
 7852      706F6E73 
 7852      6500
 7853              	.LASF170:
 7854 00a2 70726576 		.ascii	"prevVoltage\000"
 7854      566F6C74 
 7854      61676500 
 7855              	.LASF153:
 7856 00ae 73746172 		.ascii	"start_turn_count\000"
 7856      745F7475 
 7856      726E5F63 
 7856      6F756E74 
 7856      00
 7857              	.LASF10:
 7858 00bf 756E7369 		.ascii	"unsigned int\000"
 7858      676E6564 
 7858      20696E74 
 7858      00
 7859              	.LASF180:
 7860 00cc 74726163 		.ascii	"track_mode\000"
 7860      6B5F6D6F 
 7860      646500
 7861              	.LASF5:
 7862 00d7 5F5F696E 		.ascii	"__int32_t\000"
 7862      7433325F 
 7862      7400
 7863              	.LASF19:
 7864 00e1 696E7431 		.ascii	"int16\000"
 7864      3600
 7865              	.LASF177:
 7866 00e7 73797374 		.ascii	"system_state\000"
 7866      656D5F73 
 7866      74617465 
 7866      00
 7867              	.LASF24:
 7868 00f4 4C545552 		.ascii	"LTURN\000"
 7868      4E00
 7869              	.LASF71:
 7870 00fa 6E657874 		.ascii	"nextInstruction\000"
 7870      496E7374 
 7870      72756374 
 7870      696F6E00 
 7871              	.LASF160:
 7872 010a 74617267 		.ascii	"target_distance_quad\000"
 7872      65745F64 
 7872      69737461 
 7872      6E63655F 
 7872      71756164 
 7873              	.LASF27:
 7874 011f 54524143 		.ascii	"TRACKING\000"
 7874      4B494E47 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 162


 7874      00
 7875              	.LASF171:
 7876 0128 70726576 		.ascii	"prevVoltage2\000"
 7876      566F6C74 
 7876      61676532 
 7876      00
 7877              	.LASF185:
 7878 0135 73656E73 		.ascii	"sensorsDisabled\000"
 7878      6F727344 
 7878      69736162 
 7878      6C656400 
 7879              	.LASF72:
 7880 0145 7061636B 		.ascii	"packet_bytes\000"
 7880      65745F62 
 7880      79746573 
 7880      00
 7881              	.LASF54:
 7882 0152 67325F78 		.ascii	"g2_xpos\000"
 7882      706F7300 
 7883              	.LASF32:
 7884 015a 6D6F6465 		.ascii	"mode\000"
 7884      00
 7885              	.LASF146:
 7886 015f 71756164 		.ascii	"quad_count1\000"
 7886      5F636F75 
 7886      6E743100 
 7887              	.LASF147:
 7888 016b 71756164 		.ascii	"quad_count2\000"
 7888      5F636F75 
 7888      6E743200 
 7889              	.LASF113:
 7890 0177 74726163 		.ascii	"trackLineU\000"
 7890      6B4C696E 
 7890      655500
 7891              	.LASF190:
 7892 0182 726F626F 		.ascii	"robot_direction\000"
 7892      745F6469 
 7892      72656374 
 7892      696F6E00 
 7893              	.LASF112:
 7894 0192 74726163 		.ascii	"trackLineZ\000"
 7894      6B4C696E 
 7894      655A00
 7895              	.LASF195:
 7896 019d 6C656674 		.ascii	"leftTurnCount\000"
 7896      5475726E 
 7896      436F756E 
 7896      7400
 7897              	.LASF183:
 7898 01ab 73706565 		.ascii	"speed\000"
 7898      6400
 7899              	.LASF36:
 7900 01b1 53515541 		.ascii	"SQUARE_TRACK\000"
 7900      52455F54 
 7900      5241434B 
 7900      00
 7901              	.LASF138:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 163


 7902 01be 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7902      5F72665F 
 7902      7472616E 
 7902      736D6973 
 7902      73696F6E 
 7903              	.LASF139:
 7904 01da 666C6167 		.ascii	"flag_print_rf\000"
 7904      5F707269 
 7904      6E745F72 
 7904      6600
 7905              	.LASF179:
 7906 01e8 6D6F7665 		.ascii	"movement_state\000"
 7906      6D656E74 
 7906      5F737461 
 7906      746500
 7907              	.LASF28:
 7908 01f7 54524143 		.ascii	"TRACKING_U\000"
 7908      4B494E47 
 7908      5F5500
 7909              	.LASF94:
 7910 0202 696E6974 		.ascii	"initForward\000"
 7910      466F7277 
 7910      61726400 
 7911              	.LASF14:
 7912 020e 75696E74 		.ascii	"uint32_t\000"
 7912      33325F74 
 7912      00
 7913              	.LASF57:
 7914 0217 67325F64 		.ascii	"g2_direction\000"
 7914      69726563 
 7914      74696F6E 
 7914      00
 7915              	.LASF60:
 7916 0224 6973725F 		.ascii	"isr_quad1\000"
 7916      71756164 
 7916      3100
 7917              	.LASF20:
 7918 022e 666C6F61 		.ascii	"float\000"
 7918      7400
 7919              	.LASF79:
 7920 0234 73657453 		.ascii	"setSpeed\000"
 7920      70656564 
 7920      00
 7921              	.LASF175:
 7922 023d 75736242 		.ascii	"usbBuffer\000"
 7922      75666665 
 7922      7200
 7923              	.LASF42:
 7924 0247 696E6465 		.ascii	"index\000"
 7924      7800
 7925              	.LASF23:
 7926 024d 44524956 		.ascii	"DRIVE\000"
 7926      4500
 7927              	.LASF74:
 7928 0253 73747269 		.ascii	"string_packet\000"
 7928      6E675F70 
 7928      61636B65 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 164


 7928      7400
 7929              	.LASF103:
 7930 0261 6368616E 		.ascii	"changeToBT\000"
 7930      6765546F 
 7930      425400
 7931              	.LASF82:
 7932 026c 636F756E 		.ascii	"countsLeft\000"
 7932      74734C65 
 7932      667400
 7933              	.LASF87:
 7934 0277 64726976 		.ascii	"driveForwards\000"
 7934      65466F72 
 7934      77617264 
 7934      7300
 7935              	.LASF89:
 7936 0285 7475726E 		.ascii	"turnLeft\000"
 7936      4C656674 
 7936      00
 7937              	.LASF9:
 7938 028e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7938      206C6F6E 
 7938      6720756E 
 7938      7369676E 
 7938      65642069 
 7939              	.LASF135:
 7940 02a5 666C6167 		.ascii	"flag_packet\000"
 7940      5F706163 
 7940      6B657400 
 7941              	.LASF169:
 7942 02b1 66726F6E 		.ascii	"frontSensors\000"
 7942      7453656E 
 7942      736F7273 
 7942      00
 7943              	.LASF66:
 7944 02be 6973725F 		.ascii	"isr_turn_timer\000"
 7944      7475726E 
 7944      5F74696D 
 7944      657200
 7945              	.LASF102:
 7946 02cd 6368616E 		.ascii	"changeToRF\000"
 7946      6765546F 
 7946      524600
 7947              	.LASF91:
 7948 02d8 696E6974 		.ascii	"initTurnLeft\000"
 7948      5475726E 
 7948      4C656674 
 7948      00
 7949              	.LASF168:
 7950 02e5 706F7274 		.ascii	"portOpen\000"
 7950      4F70656E 
 7950      00
 7951              	.LASF95:
 7952 02ee 696E6974 		.ascii	"initBrake\000"
 7952      4272616B 
 7952      6500
 7953              	.LASF131:
 7954 02f8 666C6167 		.ascii	"flag_ts_update\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 165


 7954      5F74735F 
 7954      75706461 
 7954      746500
 7955              	.LASF115:
 7956 0307 7363616C 		.ascii	"scalingFactor\000"
 7956      696E6746 
 7956      6163746F 
 7956      7200
 7957              	.LASF105:
 7958 0315 6C656674 		.ascii	"leftSpeed\000"
 7958      53706565 
 7958      6400
 7959              	.LASF130:
 7960 031f 666C6167 		.ascii	"flag_ts_enc\000"
 7960      5F74735F 
 7960      656E6300 
 7961              	.LASF181:
 7962 032b 62797465 		.ascii	"byteCount\000"
 7962      436F756E 
 7962      7400
 7963              	.LASF68:
 7964 0335 61637469 		.ascii	"actionDebounce\000"
 7964      6F6E4465 
 7964      626F756E 
 7964      636500
 7965              	.LASF63:
 7966 0344 62757474 		.ascii	"button\000"
 7966      6F6E00
 7967              	.LASF178:
 7968 034b 70726576 		.ascii	"prev_movement_state\000"
 7968      5F6D6F76 
 7968      656D656E 
 7968      745F7374 
 7968      61746500 
 7969              	.LASF121:
 7970 035f 73656E73 		.ascii	"sensorVals\000"
 7970      6F725661 
 7970      6C7300
 7971              	.LASF117:
 7972 036a 72657375 		.ascii	"result_str\000"
 7972      6C745F73 
 7972      747200
 7973              	.LASF124:
 7974 0375 75617274 		.ascii	"uart_set_PWM\000"
 7974      5F736574 
 7974      5F50574D 
 7974      00
 7975              	.LASF98:
 7976 0382 696E6974 		.ascii	"inittrackLineZ\000"
 7976      74726163 
 7976      6B4C696E 
 7976      655A00
 7977              	.LASF44:
 7978 0391 726F626F 		.ascii	"robot_ypos\000"
 7978      745F7970 
 7978      6F7300
 7979              	.LASF129:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 166


 7980 039c 74735F64 		.ascii	"ts_display\000"
 7980      6973706C 
 7980      617900
 7981              	.LASF114:
 7982 03a7 7072696E 		.ascii	"print_ADC\000"
 7982      745F4144 
 7982      4300
 7983              	.LASF107:
 7984 03b1 7363616C 		.ascii	"scalingLeft\000"
 7984      696E674C 
 7984      65667400 
 7985              	.LASF12:
 7986 03bd 63686172 		.ascii	"char\000"
 7986      00
 7987              	.LASF48:
 7988 03c2 67305F73 		.ascii	"g0_speed\000"
 7988      70656564 
 7988      00
 7989              	.LASF157:
 7990 03cb 72696768 		.ascii	"rightSpeedLimit\000"
 7990      74537065 
 7990      65644C69 
 7990      6D697400 
 7991              	.LASF75:
 7992 03db 7365744C 		.ascii	"setLeftDir\000"
 7992      65667444 
 7992      697200
 7993              	.LASF184:
 7994 03e6 696E7374 		.ascii	"instructionCount\000"
 7994      72756374 
 7994      696F6E43 
 7994      6F756E74 
 7994      00
 7995              	.LASF90:
 7996 03f7 7475726E 		.ascii	"turnU\000"
 7996      5500
 7997              	.LASF55:
 7998 03fd 67325F79 		.ascii	"g2_ypos\000"
 7998      706F7300 
 7999              	.LASF61:
 8000 0405 64697374 		.ascii	"distTurned\000"
 8000      5475726E 
 8000      656400
 8001              	.LASF16:
 8002 0410 75696E74 		.ascii	"uint16\000"
 8002      313600
 8003              	.LASF18:
 8004 0417 696E7438 		.ascii	"int8\000"
 8004      00
 8005              	.LASF70:
 8006 041c 6E657874 		.ascii	"nextStepDist\000"
 8006      53746570 
 8006      44697374 
 8006      00
 8007              	.LASF53:
 8008 0429 67315F64 		.ascii	"g1_direction\000"
 8008      69726563 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 167


 8008      74696F6E 
 8008      00
 8009              	.LASF187:
 8010 0436 70617468 		.ascii	"path\000"
 8010      00
 8011              	.LASF76:
 8012 043b 73657452 		.ascii	"setRightDir\000"
 8012      69676874 
 8012      44697200 
 8013              	.LASF34:
 8014 0447 43555256 		.ascii	"CURVE_TRACK\000"
 8014      455F5452 
 8014      41434B00 
 8015              	.LASF109:
 8016 0453 696E7465 		.ascii	"interCalc\000"
 8016      7243616C 
 8016      6300
 8017              	.LASF144:
 8018 045d 42545F45 		.ascii	"BT_ENABLED\000"
 8018      4E41424C 
 8018      454400
 8019              	.LASF81:
 8020 0468 72696768 		.ascii	"right\000"
 8020      7400
 8021              	.LASF164:
 8022 046e 696E6974 		.ascii	"initial_pos_valid\000"
 8022      69616C5F 
 8022      706F735F 
 8022      76616C69 
 8022      6400
 8023              	.LASF8:
 8024 0480 6C6F6E67 		.ascii	"long long int\000"
 8024      206C6F6E 
 8024      6720696E 
 8024      7400
 8025              	.LASF176:
 8026 048e 62756666 		.ascii	"buffer_state\000"
 8026      65725F73 
 8026      74617465 
 8026      00
 8027              	.LASF50:
 8028 049b 67315F78 		.ascii	"g1_xpos\000"
 8028      706F7300 
 8029              	.LASF96:
 8030 04a3 696E6974 		.ascii	"initTrack\000"
 8030      54726163 
 8030      6B00
 8031              	.LASF69:
 8032 04ad 6E657874 		.ascii	"nextStep\000"
 8032      53746570 
 8032      00
 8033              	.LASF197:
 8034 04b6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8034      4320342E 
 8034      392E3320 
 8034      32303135 
 8034      30333033 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 168


 8035 04e9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8035      20726576 
 8035      6973696F 
 8035      6E203232 
 8035      31323230 
 8036 051c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8036      66756E63 
 8036      74696F6E 
 8036      2D736563 
 8036      74696F6E 
 8037              	.LASF56:
 8038 0544 67325F73 		.ascii	"g2_speed\000"
 8038      70656564 
 8038      00
 8039              	.LASF47:
 8040 054d 67305F79 		.ascii	"g0_ypos\000"
 8040      706F7300 
 8041              	.LASF100:
 8042 0555 72665F63 		.ascii	"rf_char\000"
 8042      68617200 
 8043              	.LASF186:
 8044 055d 666F6F64 		.ascii	"food_list\000"
 8044      5F6C6973 
 8044      7400
 8045              	.LASF143:
 8046 0567 42494E5F 		.ascii	"BIN_ENABLED\000"
 8046      454E4142 
 8046      4C454400 
 8047              	.LASF106:
 8048 0573 72696768 		.ascii	"rightSpeed\000"
 8048      74537065 
 8048      656400
 8049              	.LASF128:
 8050 057e 74735F73 		.ascii	"ts_speed\000"
 8050      70656564 
 8050      00
 8051              	.LASF17:
 8052 0587 75696E74 		.ascii	"uint32\000"
 8052      333200
 8053              	.LASF193:
 8054 058e 696E7374 		.ascii	"instructions\000"
 8054      72756374 
 8054      696F6E73 
 8054      00
 8055              	.LASF83:
 8056 059b 636F756E 		.ascii	"countsRight\000"
 8056      74735269 
 8056      67687400 
 8057              	.LASF200:
 8058 05a7 64617461 		.ascii	"data_main\000"
 8058      5F6D6169 
 8058      6E00
 8059              	.LASF116:
 8060 05b1 636F6E76 		.ascii	"converted_val\000"
 8060      65727465 
 8060      645F7661 
 8060      6C00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 169


 8061              	.LASF188:
 8062 05bf 73746172 		.ascii	"start\000"
 8062      7400
 8063              	.LASF41:
 8064 05c5 72737369 		.ascii	"rssi\000"
 8064      00
 8065              	.LASF111:
 8066 05ca 74726163 		.ascii	"trackLine\000"
 8066      6B4C696E 
 8066      6500
 8067              	.LASF49:
 8068 05d4 67305F64 		.ascii	"g0_direction\000"
 8068      69726563 
 8068      74696F6E 
 8068      00
 8069              	.LASF140:
 8070 05e1 666C6167 		.ascii	"flag_receive_ADC\000"
 8070      5F726563 
 8070      65697665 
 8070      5F414443 
 8070      00
 8071              	.LASF26:
 8072 05f2 53544F50 		.ascii	"STOPPED\000"
 8072      50454400 
 8073              	.LASF101:
 8074 05fa 42545F72 		.ascii	"BT_rxInt\000"
 8074      78496E74 
 8074      00
 8075              	.LASF22:
 8076 0603 6C6F6E67 		.ascii	"long double\000"
 8076      20646F75 
 8076      626C6500 
 8077              	.LASF64:
 8078 060f 6973725F 		.ascii	"isr_adcTimer\000"
 8078      61646354 
 8078      696D6572 
 8078      00
 8079              	.LASF154:
 8080 061c 6C656674 		.ascii	"left_duty_cycle\000"
 8080      5F647574 
 8080      795F6379 
 8080      636C6500 
 8081              	.LASF65:
 8082 062c 6973725F 		.ascii	"isr_deadzone\000"
 8082      64656164 
 8082      7A6F6E65 
 8082      00
 8083              	.LASF132:
 8084 0639 666C6167 		.ascii	"flag_ts_speed\000"
 8084      5F74735F 
 8084      73706565 
 8084      6400
 8085              	.LASF137:
 8086 0647 64617461 		.ascii	"dataready_flag\000"
 8086      72656164 
 8086      795F666C 
 8086      616700
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 170


 8087              	.LASF166:
 8088 0656 696E6974 		.ascii	"initial_y_pos\000"
 8088      69616C5F 
 8088      795F706F 
 8088      7300
 8089              	.LASF134:
 8090 0664 666C6167 		.ascii	"flag_rx\000"
 8090      5F727800 
 8091              	.LASF2:
 8092 066c 73686F72 		.ascii	"short int\000"
 8092      7420696E 
 8092      7400
 8093              	.LASF141:
 8094 0676 6164635F 		.ascii	"adc_result\000"
 8094      72657375 
 8094      6C7400
 8095              	.LASF93:
 8096 0681 696E6974 		.ascii	"initTurnU\000"
 8096      5475726E 
 8096      5500
 8097              	.LASF145:
 8098 068b 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 8098      5F63616C 
 8098      635F7768 
 8098      65656C73 
 8098      70656564 
 8099              	.LASF4:
 8100 06a0 6C6F6E67 		.ascii	"long int\000"
 8100      20696E74 
 8100      00
 8101              	.LASF92:
 8102 06a9 696E6974 		.ascii	"initTurnRight\000"
 8102      5475726E 
 8102      52696768 
 8102      7400
 8103              	.LASF35:
 8104 06b7 555F5452 		.ascii	"U_TRACK\000"
 8104      41434B00 
 8105              	.LASF125:
 8106 06bf 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8106      52784275 
 8106      66666572 
 8106      00
 8107              	.LASF119:
 8108 06cc 7072696E 		.ascii	"printString\000"
 8108      74537472 
 8108      696E6700 
 8109              	.LASF99:
 8110 06d8 7278496E 		.ascii	"rxInt\000"
 8110      7400
 8111              	.LASF127:
 8112 06de 74735F75 		.ascii	"ts_update\000"
 8112      70646174 
 8112      6500
 8113              	.LASF33:
 8114 06e8 4E4F5F54 		.ascii	"NO_TRACK\000"
 8114      5241434B 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 171


 8114      00
 8115              	.LASF152:
 8116 06f1 64656164 		.ascii	"deadzone\000"
 8116      7A6F6E65 
 8116      00
 8117              	.LASF156:
 8118 06fa 6C656674 		.ascii	"leftSpeedLimit\000"
 8118      53706565 
 8118      644C696D 
 8118      697400
 8119              	.LASF40:
 8120 0709 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8120      54524156 
 8120      45525345 
 8120      00
 8121              	.LASF29:
 8122 0716 54524143 		.ascii	"TRACKING_SOFT\000"
 8122      4B494E47 
 8122      5F534F46 
 8122      5400
 8123              	.LASF162:
 8124 0724 6F766572 		.ascii	"overshot_target\000"
 8124      73686F74 
 8124      5F746172 
 8124      67657400 
 8125              	.LASF80:
 8126 0734 6C656674 		.ascii	"left\000"
 8126      00
 8127              	.LASF159:
 8128 0739 61636375 		.ascii	"accum_dist\000"
 8128      6D5F6469 
 8128      737400
 8129              	.LASF122:
 8130 0744 75736250 		.ascii	"usbPutString\000"
 8130      75745374 
 8130      72696E67 
 8130      00
 8131              	.LASF88:
 8132 0751 7475726E 		.ascii	"turnRight\000"
 8132      52696768 
 8132      7400
 8133              	.LASF51:
 8134 075b 67315F79 		.ascii	"g1_ypos\000"
 8134      706F7300 
 8135              	.LASF59:
 8136 0763 6164635F 		.ascii	"adc_isr\000"
 8136      69737200 
 8137              	.LASF120:
 8138 076b 72656164 		.ascii	"readFrontSensors\000"
 8138      46726F6E 
 8138      7453656E 
 8138      736F7273 
 8138      00
 8139              	.LASF163:
 8140 077c 71756164 		.ascii	"quad_per_cm\000"
 8140      5F706572 
 8140      5F636D00 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 172


 8141              	.LASF158:
 8142 0788 74617267 		.ascii	"target_distance_cm\000"
 8142      65745F64 
 8142      69737461 
 8142      6E63655F 
 8142      636D00
 8143              	.LASF11:
 8144 079b 73697A65 		.ascii	"sizetype\000"
 8144      74797065 
 8144      00
 8145              	.LASF7:
 8146 07a4 6C6F6E67 		.ascii	"long unsigned int\000"
 8146      20756E73 
 8146      69676E65 
 8146      6420696E 
 8146      7400
 8147              	.LASF73:
 8148 07b6 62797465 		.ascii	"byte_packet\000"
 8148      5F706163 
 8148      6B657400 
 8149              	.LASF13:
 8150 07c2 696E7433 		.ascii	"int32_t\000"
 8150      325F7400 
 8151              	.LASF182:
 8152 07ca 7061636B 		.ascii	"packet\000"
 8152      657400
 8153              	.LASF194:
 8154 07d1 696E7374 		.ascii	"instructionLength\000"
 8154      72756374 
 8154      696F6E4C 
 8154      656E6774 
 8154      6800
 8155              	.LASF43:
 8156 07e3 726F626F 		.ascii	"robot_xpos\000"
 8156      745F7870 
 8156      6F7300
 8157              	.LASF86:
 8158 07ee 6272616B 		.ascii	"brakeMotor\000"
 8158      654D6F74 
 8158      6F7200
 8159              	.LASF192:
 8160 07f9 666F6F64 		.ascii	"food_length\000"
 8160      5F6C656E 
 8160      67746800 
 8161              	.LASF174:
 8162 0805 656E7472 		.ascii	"entry\000"
 8162      7900
 8163              	.LASF1:
 8164 080b 756E7369 		.ascii	"unsigned char\000"
 8164      676E6564 
 8164      20636861 
 8164      7200
 8165              	.LASF6:
 8166 0819 5F5F7569 		.ascii	"__uint32_t\000"
 8166      6E743332 
 8166      5F7400
 8167              	.LASF173:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 173


 8168 0824 6C696E65 		.ascii	"line\000"
 8168      00
 8169              	.LASF161:
 8170 0829 72656163 		.ascii	"reached_target\000"
 8170      6865645F 
 8170      74617267 
 8170      657400
 8171              	.LASF62:
 8172 0838 53746F70 		.ascii	"Stop_on_line\000"
 8172      5F6F6E5F 
 8172      6C696E65 
 8172      00
 8173              	.LASF126:
 8174 0845 74735F65 		.ascii	"ts_enc\000"
 8174      6E6300
 8175              	.LASF167:
 8176 084c 6272616B 		.ascii	"brakeFlag\000"
 8176      65466C61 
 8176      6700
 8177              	.LASF133:
 8178 0856 666C6167 		.ascii	"flag_ts_display\000"
 8178      5F74735F 
 8178      64697370 
 8178      6C617900 
 8179              	.LASF31:
 8180 0866 73746174 		.ascii	"state\000"
 8180      6500
 8181              	.LASF78:
 8182 086c 72657665 		.ascii	"reverseDirection\000"
 8182      72736544 
 8182      69726563 
 8182      74696F6E 
 8182      00
 8183              	.LASF84:
 8184 087d 6272616B 		.ascii	"brakeLeft\000"
 8184      654C6566 
 8184      7400
 8185              	.LASF172:
 8186 0887 64697370 		.ascii	"displaystring\000"
 8186      6C617973 
 8186      7472696E 
 8186      6700
 8187              	.LASF148:
 8188 0895 6C617374 		.ascii	"last_quad_count1\000"
 8188      5F717561 
 8188      645F636F 
 8188      756E7431 
 8188      00
 8189              	.LASF149:
 8190 08a6 6C617374 		.ascii	"last_quad_count2\000"
 8190      5F717561 
 8190      645F636F 
 8190      756E7432 
 8190      00
 8191              	.LASF189:
 8192 08b7 64657374 		.ascii	"destination\000"
 8192      696E6174 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 174


 8192      696F6E00 
 8193              	.LASF123:
 8194 08c3 75736250 		.ascii	"usbPutChar\000"
 8194      75744368 
 8194      617200
 8195              	.LASF0:
 8196 08ce 7369676E 		.ascii	"signed char\000"
 8196      65642063 
 8196      68617200 
 8197              	.LASF3:
 8198 08da 73686F72 		.ascii	"short unsigned int\000"
 8198      7420756E 
 8198      7369676E 
 8198      65642069 
 8198      6E7400
 8199              	.LASF45:
 8200 08ed 726F626F 		.ascii	"robot_orientation\000"
 8200      745F6F72 
 8200      69656E74 
 8200      6174696F 
 8200      6E00
 8201              	.LASF37:
 8202 08ff 51554144 		.ascii	"QUAD_STOP\000"
 8202      5F53544F 
 8202      5000
 8203              	.LASF67:
 8204 0909 6D61696E 		.ascii	"main\000"
 8204      00
 8205              	.LASF58:
 8206 090e 42545F74 		.ascii	"BT_txInt\000"
 8206      78496E74 
 8206      00
 8207              	.LASF110:
 8208 0917 6E657874 		.ascii	"nextSpeed\000"
 8208      53706565 
 8208      6400
 8209              	.LASF15:
 8210 0921 75696E74 		.ascii	"uint8\000"
 8210      3800
 8211              	.LASF21:
 8212 0927 646F7562 		.ascii	"double\000"
 8212      6C6500
 8213              	.LASF155:
 8214 092e 72696768 		.ascii	"right_duty_cycle\000"
 8214      745F6475 
 8214      74795F63 
 8214      79636C65 
 8214      00
 8215              	.LASF38:
 8216 093f 52465F53 		.ascii	"RF_STOP\000"
 8216      544F5000 
 8217              	.LASF77:
 8218 0947 68616E64 		.ascii	"handle_rx_binary\000"
 8218      6C655F72 
 8218      785F6269 
 8218      6E617279 
 8218      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccICmBJe.s 			page 175


 8219              	.LASF118:
 8220 0958 7072696E 		.ascii	"print_RF\000"
 8220      745F5246 
 8220      00
 8221              	.LASF30:
 8222 0961 55545552 		.ascii	"UTURN\000"
 8222      4E00
 8223              	.LASF46:
 8224 0967 67305F78 		.ascii	"g0_xpos\000"
 8224      706F7300 
 8225              	.LASF108:
 8226 096f 7363616C 		.ascii	"scalingRight\000"
 8226      696E6752 
 8226      69676874 
 8226      00
 8227              	.LASF136:
 8228 097c 666C6167 		.ascii	"flag_KB_string\000"
 8228      5F4B425F 
 8228      73747269 
 8228      6E6700
 8229              	.LASF52:
 8230 098b 67315F73 		.ascii	"g1_speed\000"
 8230      70656564 
 8230      00
 8231              	.LASF198:
 8232 0994 2E5C6D61 		.ascii	".\\main.c\000"
 8232      696E2E63 
 8232      00
 8233              	.LASF165:
 8234 099d 696E6974 		.ascii	"initial_x_pos\000"
 8234      69616C5F 
 8234      785F706F 
 8234      7300
 8235              	.LASF85:
 8236 09ab 6272616B 		.ascii	"brakeRight\000"
 8236      65526967 
 8236      687400
 8237              	.LASF97:
 8238 09b6 696E6974 		.ascii	"initTrackU\000"
 8238      54726163 
 8238      6B5500
 8239              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
