ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	quad_per_cm
 220              		.data
 221              		.align	2
 222              		.type	quad_per_cm, %object
 223              		.size	quad_per_cm, 4
 224              	quad_per_cm:
 225 0004 F0A73241 		.word	1093838832
 226              		.global	initial_pos_valid
 227              		.bss
 228              		.type	initial_pos_valid, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 5


 229              		.size	initial_pos_valid, 1
 230              	initial_pos_valid:
 231 0034 00       		.space	1
 232              		.global	initial_x_pos
 233 0035 00       		.align	1
 234              		.type	initial_x_pos, %object
 235              		.size	initial_x_pos, 2
 236              	initial_x_pos:
 237 0036 0000     		.space	2
 238              		.global	initial_y_pos
 239              		.align	1
 240              		.type	initial_y_pos, %object
 241              		.size	initial_y_pos, 2
 242              	initial_y_pos:
 243 0038 0000     		.space	2
 244              		.comm	brakeFlag,1,1
 245              		.global	portOpen
 246              		.data
 247              		.type	portOpen, %object
 248              		.size	portOpen, 1
 249              	portOpen:
 250 0008 01       		.byte	1
 251              		.comm	prevVoltage,2,2
 252              		.comm	prevVoltage2,2,2
 253              		.global	displaystring
 254 0009 000000   		.align	2
 255              		.type	displaystring, %object
 256              		.size	displaystring, 64
 257              	displaystring:
 258 000c 43533330 		.ascii	"CS301 2016\012\000"
 258      31203230 
 258      31360A00 
 259 0018 00000000 		.space	52
 259      00000000 
 259      00000000 
 259      00000000 
 259      00000000 
 260              		.comm	line,64,4
 261              		.comm	entry,64,4
 262              		.comm	usbBuffer,64,4
 263              		.comm	buffer_state,32,4
 264              		.comm	system_state,32,4
 265              		.global	prev_movement_state
 266              		.type	prev_movement_state, %object
 267              		.size	prev_movement_state, 1
 268              	prev_movement_state:
 269 004c 03       		.byte	3
 270              		.global	movement_state
 271              		.type	movement_state, %object
 272              		.size	movement_state, 1
 273              	movement_state:
 274 004d 03       		.byte	3
 275              		.global	track_mode
 276              		.bss
 277              		.type	track_mode, %object
 278              		.size	track_mode, 1
 279              	track_mode:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 6


 280 003a 00       		.space	1
 281              		.global	byteCount
 282              		.type	byteCount, %object
 283              		.size	byteCount, 1
 284              	byteCount:
 285 003b 00       		.space	1
 286              		.comm	packet,2,4
 287              		.global	speed
 288              		.data
 289 004e 0000     		.align	3
 290              		.type	speed, %object
 291              		.size	speed, 8
 292              	speed:
 293 0050 00000000 		.word	0
 294 0054 00002C40 		.word	1076625408
 295              		.comm	tracked_direction,4,4
 296              		.global	instructions
 297              		.bss
 298              		.align	2
 299              		.type	instructions, %object
 300              		.size	instructions, 800
 301              	instructions:
 302 003c 00000000 		.space	800
 302      00000000 
 302      00000000 
 302      00000000 
 302      00000000 
 303              		.global	instructionCount
 304              		.align	1
 305              		.type	instructionCount, %object
 306              		.size	instructionCount, 2
 307              	instructionCount:
 308 035c 0000     		.space	2
 309              		.global	sensorsDisabled
 310 035e 0000     		.align	2
 311              		.type	sensorsDisabled, %object
 312              		.size	sensorsDisabled, 4
 313              	sensorsDisabled:
 314 0360 00000000 		.space	4
 315              		.global	robot_direction
 316              		.data
 317              		.align	2
 318              		.type	robot_direction, %object
 319              		.size	robot_direction, 4
 320              	robot_direction:
 321 0058 02000000 		.word	2
 322              		.global	path
 323              		.bss
 324              		.align	2
 325              		.type	path, %object
 326              		.size	path, 9600
 327              	path:
 328 0364 00000000 		.space	9600
 328      00000000 
 328      00000000 
 328      00000000 
 328      00000000 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 7


 329              		.global	start
 330              		.data
 331              		.align	2
 332              		.type	start, %object
 333              		.size	start, 8
 334              	start:
 335 005c 01000000 		.word	1
 336 0060 01000000 		.word	1
 337              		.global	destination
 338              		.align	2
 339              		.type	destination, %object
 340              		.size	destination, 8
 341              	destination:
 342 0064 0D000000 		.word	13
 343 0068 0B000000 		.word	11
 344              		.global	map
 345              		.align	2
 346              		.type	map, %object
 347              		.size	map, 1140
 348              	map:
 349 006c 01000000 		.word	1
 350 0070 01000000 		.word	1
 351 0074 01000000 		.word	1
 352 0078 01000000 		.word	1
 353 007c 01000000 		.word	1
 354 0080 01000000 		.word	1
 355 0084 01000000 		.word	1
 356 0088 01000000 		.word	1
 357 008c 01000000 		.word	1
 358 0090 01000000 		.word	1
 359 0094 01000000 		.word	1
 360 0098 01000000 		.word	1
 361 009c 01000000 		.word	1
 362 00a0 01000000 		.word	1
 363 00a4 01000000 		.word	1
 364 00a8 01000000 		.word	1
 365 00ac 01000000 		.word	1
 366 00b0 01000000 		.word	1
 367 00b4 01000000 		.word	1
 368 00b8 01000000 		.word	1
 369 00bc 00000000 		.word	0
 370 00c0 00000000 		.word	0
 371 00c4 00000000 		.word	0
 372 00c8 00000000 		.word	0
 373 00cc 00000000 		.word	0
 374 00d0 01000000 		.word	1
 375 00d4 00000000 		.word	0
 376 00d8 01000000 		.word	1
 377 00dc 00000000 		.word	0
 378 00e0 00000000 		.word	0
 379 00e4 00000000 		.word	0
 380 00e8 00000000 		.word	0
 381 00ec 00000000 		.word	0
 382 00f0 00000000 		.word	0
 383 00f4 00000000 		.word	0
 384 00f8 00000000 		.word	0
 385 00fc 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 8


 386 0100 01000000 		.word	1
 387 0104 01000000 		.word	1
 388 0108 01000000 		.word	1
 389 010c 01000000 		.word	1
 390 0110 01000000 		.word	1
 391 0114 01000000 		.word	1
 392 0118 00000000 		.word	0
 393 011c 01000000 		.word	1
 394 0120 00000000 		.word	0
 395 0124 01000000 		.word	1
 396 0128 00000000 		.word	0
 397 012c 01000000 		.word	1
 398 0130 00000000 		.word	0
 399 0134 01000000 		.word	1
 400 0138 01000000 		.word	1
 401 013c 01000000 		.word	1
 402 0140 01000000 		.word	1
 403 0144 01000000 		.word	1
 404 0148 00000000 		.word	0
 405 014c 01000000 		.word	1
 406 0150 01000000 		.word	1
 407 0154 00000000 		.word	0
 408 0158 00000000 		.word	0
 409 015c 00000000 		.word	0
 410 0160 01000000 		.word	1
 411 0164 00000000 		.word	0
 412 0168 01000000 		.word	1
 413 016c 00000000 		.word	0
 414 0170 00000000 		.word	0
 415 0174 00000000 		.word	0
 416 0178 01000000 		.word	1
 417 017c 00000000 		.word	0
 418 0180 00000000 		.word	0
 419 0184 00000000 		.word	0
 420 0188 00000000 		.word	0
 421 018c 00000000 		.word	0
 422 0190 01000000 		.word	1
 423 0194 00000000 		.word	0
 424 0198 01000000 		.word	1
 425 019c 01000000 		.word	1
 426 01a0 00000000 		.word	0
 427 01a4 01000000 		.word	1
 428 01a8 00000000 		.word	0
 429 01ac 01000000 		.word	1
 430 01b0 00000000 		.word	0
 431 01b4 01000000 		.word	1
 432 01b8 00000000 		.word	0
 433 01bc 01000000 		.word	1
 434 01c0 01000000 		.word	1
 435 01c4 01000000 		.word	1
 436 01c8 01000000 		.word	1
 437 01cc 01000000 		.word	1
 438 01d0 01000000 		.word	1
 439 01d4 01000000 		.word	1
 440 01d8 00000000 		.word	0
 441 01dc 01000000 		.word	1
 442 01e0 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 9


 443 01e4 01000000 		.word	1
 444 01e8 01000000 		.word	1
 445 01ec 00000000 		.word	0
 446 01f0 01000000 		.word	1
 447 01f4 00000000 		.word	0
 448 01f8 00000000 		.word	0
 449 01fc 00000000 		.word	0
 450 0200 00000000 		.word	0
 451 0204 00000000 		.word	0
 452 0208 00000000 		.word	0
 453 020c 00000000 		.word	0
 454 0210 00000000 		.word	0
 455 0214 00000000 		.word	0
 456 0218 00000000 		.word	0
 457 021c 00000000 		.word	0
 458 0220 01000000 		.word	1
 459 0224 00000000 		.word	0
 460 0228 01000000 		.word	1
 461 022c 00000000 		.word	0
 462 0230 01000000 		.word	1
 463 0234 01000000 		.word	1
 464 0238 00000000 		.word	0
 465 023c 01000000 		.word	1
 466 0240 01000000 		.word	1
 467 0244 01000000 		.word	1
 468 0248 01000000 		.word	1
 469 024c 01000000 		.word	1
 470 0250 01000000 		.word	1
 471 0254 01000000 		.word	1
 472 0258 01000000 		.word	1
 473 025c 01000000 		.word	1
 474 0260 00000000 		.word	0
 475 0264 01000000 		.word	1
 476 0268 00000000 		.word	0
 477 026c 01000000 		.word	1
 478 0270 00000000 		.word	0
 479 0274 01000000 		.word	1
 480 0278 01000000 		.word	1
 481 027c 01000000 		.word	1
 482 0280 01000000 		.word	1
 483 0284 00000000 		.word	0
 484 0288 00000000 		.word	0
 485 028c 00000000 		.word	0
 486 0290 00000000 		.word	0
 487 0294 00000000 		.word	0
 488 0298 00000000 		.word	0
 489 029c 00000000 		.word	0
 490 02a0 00000000 		.word	0
 491 02a4 00000000 		.word	0
 492 02a8 00000000 		.word	0
 493 02ac 00000000 		.word	0
 494 02b0 01000000 		.word	1
 495 02b4 00000000 		.word	0
 496 02b8 01000000 		.word	1
 497 02bc 00000000 		.word	0
 498 02c0 00000000 		.word	0
 499 02c4 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 10


 500 02c8 01000000 		.word	1
 501 02cc 01000000 		.word	1
 502 02d0 01000000 		.word	1
 503 02d4 01000000 		.word	1
 504 02d8 01000000 		.word	1
 505 02dc 01000000 		.word	1
 506 02e0 01000000 		.word	1
 507 02e4 01000000 		.word	1
 508 02e8 00000000 		.word	0
 509 02ec 01000000 		.word	1
 510 02f0 01000000 		.word	1
 511 02f4 01000000 		.word	1
 512 02f8 01000000 		.word	1
 513 02fc 01000000 		.word	1
 514 0300 00000000 		.word	0
 515 0304 01000000 		.word	1
 516 0308 01000000 		.word	1
 517 030c 01000000 		.word	1
 518 0310 00000000 		.word	0
 519 0314 01000000 		.word	1
 520 0318 01000000 		.word	1
 521 031c 00000000 		.word	0
 522 0320 00000000 		.word	0
 523 0324 00000000 		.word	0
 524 0328 00000000 		.word	0
 525 032c 00000000 		.word	0
 526 0330 00000000 		.word	0
 527 0334 00000000 		.word	0
 528 0338 00000000 		.word	0
 529 033c 00000000 		.word	0
 530 0340 00000000 		.word	0
 531 0344 00000000 		.word	0
 532 0348 01000000 		.word	1
 533 034c 00000000 		.word	0
 534 0350 00000000 		.word	0
 535 0354 00000000 		.word	0
 536 0358 01000000 		.word	1
 537 035c 00000000 		.word	0
 538 0360 01000000 		.word	1
 539 0364 01000000 		.word	1
 540 0368 00000000 		.word	0
 541 036c 01000000 		.word	1
 542 0370 01000000 		.word	1
 543 0374 01000000 		.word	1
 544 0378 01000000 		.word	1
 545 037c 01000000 		.word	1
 546 0380 00000000 		.word	0
 547 0384 01000000 		.word	1
 548 0388 01000000 		.word	1
 549 038c 01000000 		.word	1
 550 0390 00000000 		.word	0
 551 0394 01000000 		.word	1
 552 0398 00000000 		.word	0
 553 039c 01000000 		.word	1
 554 03a0 00000000 		.word	0
 555 03a4 01000000 		.word	1
 556 03a8 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 11


 557 03ac 01000000 		.word	1
 558 03b0 01000000 		.word	1
 559 03b4 00000000 		.word	0
 560 03b8 00000000 		.word	0
 561 03bc 00000000 		.word	0
 562 03c0 00000000 		.word	0
 563 03c4 00000000 		.word	0
 564 03c8 01000000 		.word	1
 565 03cc 00000000 		.word	0
 566 03d0 00000000 		.word	0
 567 03d4 00000000 		.word	0
 568 03d8 01000000 		.word	1
 569 03dc 00000000 		.word	0
 570 03e0 00000000 		.word	0
 571 03e4 00000000 		.word	0
 572 03e8 01000000 		.word	1
 573 03ec 00000000 		.word	0
 574 03f0 00000000 		.word	0
 575 03f4 00000000 		.word	0
 576 03f8 01000000 		.word	1
 577 03fc 01000000 		.word	1
 578 0400 00000000 		.word	0
 579 0404 01000000 		.word	1
 580 0408 01000000 		.word	1
 581 040c 01000000 		.word	1
 582 0410 00000000 		.word	0
 583 0414 01000000 		.word	1
 584 0418 01000000 		.word	1
 585 041c 01000000 		.word	1
 586 0420 00000000 		.word	0
 587 0424 01000000 		.word	1
 588 0428 01000000 		.word	1
 589 042c 01000000 		.word	1
 590 0430 00000000 		.word	0
 591 0434 01000000 		.word	1
 592 0438 01000000 		.word	1
 593 043c 01000000 		.word	1
 594 0440 00000000 		.word	0
 595 0444 01000000 		.word	1
 596 0448 01000000 		.word	1
 597 044c 00000000 		.word	0
 598 0450 00000000 		.word	0
 599 0454 00000000 		.word	0
 600 0458 01000000 		.word	1
 601 045c 00000000 		.word	0
 602 0460 00000000 		.word	0
 603 0464 00000000 		.word	0
 604 0468 00000000 		.word	0
 605 046c 00000000 		.word	0
 606 0470 00000000 		.word	0
 607 0474 00000000 		.word	0
 608 0478 01000000 		.word	1
 609 047c 00000000 		.word	0
 610 0480 00000000 		.word	0
 611 0484 00000000 		.word	0
 612 0488 00000000 		.word	0
 613 048c 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 12


 614 0490 01000000 		.word	1
 615 0494 01000000 		.word	1
 616 0498 01000000 		.word	1
 617 049c 01000000 		.word	1
 618 04a0 01000000 		.word	1
 619 04a4 01000000 		.word	1
 620 04a8 01000000 		.word	1
 621 04ac 01000000 		.word	1
 622 04b0 01000000 		.word	1
 623 04b4 01000000 		.word	1
 624 04b8 01000000 		.word	1
 625 04bc 01000000 		.word	1
 626 04c0 01000000 		.word	1
 627 04c4 01000000 		.word	1
 628 04c8 01000000 		.word	1
 629 04cc 01000000 		.word	1
 630 04d0 01000000 		.word	1
 631 04d4 01000000 		.word	1
 632 04d8 01000000 		.word	1
 633 04dc 01000000 		.word	1
 634              		.global	food_list
 635              		.align	2
 636              		.type	food_list, %object
 637              		.size	food_list, 48
 638              	food_list:
 639 04e0 04000000 		.word	4
 640 04e4 05000000 		.word	5
 641 04e8 07000000 		.word	7
 642 04ec 01000000 		.word	1
 643 04f0 0B000000 		.word	11
 644 04f4 05000000 		.word	5
 645 04f8 0A000000 		.word	10
 646 04fc 0B000000 		.word	11
 647 0500 05000000 		.word	5
 648 0504 08000000 		.word	8
 649 0508 11000000 		.word	17
 650 050c 02000000 		.word	2
 651              		.global	food_length
 652              		.align	2
 653              		.type	food_length, %object
 654              		.size	food_length, 4
 655              	food_length:
 656 0510 06000000 		.word	6
 657 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 658              		.align	2
 659              		.global	BT_txInt
 660              		.thumb
 661              		.thumb_func
 662              		.type	BT_txInt, %function
 663              	BT_txInt:
 664              	.LFB63:
 665              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 13


   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** 
  29:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  30:.\main.c      **** uint16 instructionCount = 0;
  31:.\main.c      **** uint32_t sensorsDisabled = 0;
  32:.\main.c      **** 
  33:.\main.c      **** uint32_t robot_direction = 2;
  34:.\main.c      **** 
  35:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  36:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  37:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  38:.\main.c      **** 
  39:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  40:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  41:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  42:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  43:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  44:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  45:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  46:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  47:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  48:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  49:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  50:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  51:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  52:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  53:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  54:.\main.c      **** 
  55:.\main.c      **** //uint8 map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0
  56:.\main.c      **** //first number is the y coord, second is x
  57:.\main.c      **** //first number is row, second column
  58:.\main.c      **** 
  59:.\main.c      **** uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  60:.\main.c      **** //uint8 food_list[6][2]= {{10,1},{1,13},{9,7},{16,13},{17,1}};
  61:.\main.c      **** uint32_t food_length = 6;
  62:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 14


  63:.\main.c      **** void changeToRF();
  64:.\main.c      **** void changeToBT();
  65:.\main.c      **** void brakeMotor();
  66:.\main.c      **** void driveForwards();
  67:.\main.c      **** void initTurnLeft();
  68:.\main.c      **** void initTurnRight();
  69:.\main.c      **** void inittrackLineZ();
  70:.\main.c      **** void trackLineU();
  71:.\main.c      **** void trackLine();
  72:.\main.c      **** void trackLineZ();
  73:.\main.c      **** void initTrackU();
  74:.\main.c      **** void turnLeft();
  75:.\main.c      **** void turnRight();
  76:.\main.c      **** void initForward();
  77:.\main.c      **** void initTurnU();
  78:.\main.c      **** void turnU();
  79:.\main.c      **** void initBrake();
  80:.\main.c      **** void print_ADC();
  81:.\main.c      **** void Quad_Dec_response();
  82:.\main.c      **** void handle_rx_binary();
  83:.\main.c      **** void readFrontSensors();
  84:.\main.c      **** void print_RF();
  85:.\main.c      **** 
  86:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  87:.\main.c      **** //BT
  88:.\main.c      **** CY_ISR(BT_txInt)
  89:.\main.c      **** {
 666              		.loc 1 89 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 80B4     		push	{r7}
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 7, -4
 674 0002 00AF     		add	r7, sp, #0
 675              		.cfi_def_cfa_register 7
  90:.\main.c      ****     
  91:.\main.c      **** }
 676              		.loc 1 91 0
 677 0004 BD46     		mov	sp, r7
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 0006 5DF8047B 		ldr	r7, [sp], #4
 681              		.cfi_restore 7
 682              		.cfi_def_cfa_offset 0
 683 000a 7047     		bx	lr
 684              		.cfi_endproc
 685              	.LFE63:
 686              		.size	BT_txInt, .-BT_txInt
 687              		.section	.text.adc_isr,"ax",%progbits
 688              		.align	2
 689              		.global	adc_isr
 690              		.thumb
 691              		.thumb_func
 692              		.type	adc_isr, %function
 693              	adc_isr:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 15


 694              	.LFB64:
  92:.\main.c      **** 
  93:.\main.c      **** //ADC:
  94:.\main.c      **** CY_ISR (adc_isr)
  95:.\main.c      **** {
 695              		.loc 1 95 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699 0000 80B5     		push	{r7, lr}
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 00AF     		add	r7, sp, #0
 704              		.cfi_def_cfa_register 7
  96:.\main.c      ****     //adc_result = ADC_GetResult16(0);
  97:.\main.c      ****     adc_result = ADC_GetResult16();
 705              		.loc 1 97 0
 706 0004 FFF7FEFF 		bl	ADC_GetResult16
 707 0008 0346     		mov	r3, r0
 708 000a 1A46     		mov	r2, r3
 709 000c 044B     		ldr	r3, .L3
 710 000e 1A80     		strh	r2, [r3]	@ movhi
  98:.\main.c      ****     flag_receive_ADC = 1;
 711              		.loc 1 98 0
 712 0010 044B     		ldr	r3, .L3+4
 713 0012 0122     		movs	r2, #1
 714 0014 1A70     		strb	r2, [r3]
  99:.\main.c      ****     flag_print_rf = 1;
 715              		.loc 1 99 0
 716 0016 044B     		ldr	r3, .L3+8
 717 0018 0122     		movs	r2, #1
 718 001a 1A70     		strb	r2, [r3]
 100:.\main.c      ****     //LED_Write(~LED_Read());
 101:.\main.c      **** }
 719              		.loc 1 101 0
 720 001c 80BD     		pop	{r7, pc}
 721              	.L4:
 722 001e 00BF     		.align	2
 723              	.L3:
 724 0020 00000000 		.word	adc_result
 725 0024 00000000 		.word	flag_receive_ADC
 726 0028 00000000 		.word	flag_print_rf
 727              		.cfi_endproc
 728              	.LFE64:
 729              		.size	adc_isr, .-adc_isr
 730              		.section	.rodata
 731              		.align	2
 732              	.LC0:
 733 0000 64697374 		.ascii	"dist: %d\015\012\000"
 733      3A202564 
 733      0D0A00
 734              		.global	__aeabi_i2d
 735              		.global	__aeabi_ddiv
 736              		.global	__aeabi_dcmple
 737              		.section	.text.isr_quad1,"ax",%progbits
 738              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 16


 739              		.global	isr_quad1
 740              		.thumb
 741              		.thumb_func
 742              		.type	isr_quad1, %function
 743              	isr_quad1:
 744              	.LFB65:
 102:.\main.c      **** 
 103:.\main.c      **** CY_ISR (isr_quad1)
 104:.\main.c      **** {
 745              		.loc 1 104 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 24
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 B0B5     		push	{r4, r5, r7, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 7, -8
 754              		.cfi_offset 14, -4
 755 0002 86B0     		sub	sp, sp, #24
 756              		.cfi_def_cfa_offset 40
 757 0004 00AF     		add	r7, sp, #0
 758              		.cfi_def_cfa_register 7
 105:.\main.c      ****     //LED_Write(~LED_Read());
 106:.\main.c      ****     last_quad_count1 = quad_count1;
 759              		.loc 1 106 0
 760 0006 684B     		ldr	r3, .L12
 761 0008 1A88     		ldrh	r2, [r3]
 762 000a 684B     		ldr	r3, .L12+4
 763 000c 1A80     		strh	r2, [r3]	@ movhi
 107:.\main.c      ****     last_quad_count2 = quad_count2;
 764              		.loc 1 107 0
 765 000e 684B     		ldr	r3, .L12+8
 766 0010 1A88     		ldrh	r2, [r3]
 767 0012 684B     		ldr	r3, .L12+12
 768 0014 1A80     		strh	r2, [r3]	@ movhi
 108:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 769              		.loc 1 108 0
 770 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 771 001a 0346     		mov	r3, r0
 772 001c 1A46     		mov	r2, r3
 773 001e 624B     		ldr	r3, .L12
 774 0020 1A80     		strh	r2, [r3]	@ movhi
 109:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 775              		.loc 1 109 0
 776 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 777 0026 0346     		mov	r3, r0
 778 0028 1A46     		mov	r2, r3
 779 002a 614B     		ldr	r3, .L12+8
 780 002c 1A80     		strh	r2, [r3]	@ movhi
 110:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 781              		.loc 1 110 0
 782 002e 5E4B     		ldr	r3, .L12
 783 0030 1B88     		ldrh	r3, [r3]
 784 0032 9AB2     		uxth	r2, r3
 785 0034 5D4B     		ldr	r3, .L12+4
 786 0036 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 17


 787 0038 9BB2     		uxth	r3, r3
 788 003a D31A     		subs	r3, r2, r3
 789 003c 9BB2     		uxth	r3, r3
 790 003e 9AB2     		uxth	r2, r3
 791 0040 5D4B     		ldr	r3, .L12+16
 792 0042 1A80     		strh	r2, [r3]	@ movhi
 111:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 793              		.loc 1 111 0
 794 0044 5A4B     		ldr	r3, .L12+8
 795 0046 1B88     		ldrh	r3, [r3]
 796 0048 9AB2     		uxth	r2, r3
 797 004a 5A4B     		ldr	r3, .L12+12
 798 004c 1B88     		ldrh	r3, [r3]
 799 004e 9BB2     		uxth	r3, r3
 800 0050 D31A     		subs	r3, r2, r3
 801 0052 9BB2     		uxth	r3, r3
 802 0054 9AB2     		uxth	r2, r3
 803 0056 594B     		ldr	r3, .L12+20
 804 0058 1A80     		strh	r2, [r3]	@ movhi
 112:.\main.c      ****     
 113:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && track_mode 
 805              		.loc 1 113 0
 806 005a 534B     		ldr	r3, .L12
 807 005c 1B88     		ldrh	r3, [r3]
 808 005e 1BB2     		sxth	r3, r3
 809 0060 002B     		cmp	r3, #0
 810 0062 B8BF     		it	lt
 811 0064 5B42     		rsblt	r3, r3, #0
 812 0066 40F6B832 		movw	r2, #3000
 813 006a 9342     		cmp	r3, r2
 814 006c 1BDD     		ble	.L6
 815              		.loc 1 113 0 is_stmt 0 discriminator 1
 816 006e 544B     		ldr	r3, .L12+24
 817 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 818 0072 012B     		cmp	r3, #1
 819 0074 17D0     		beq	.L6
 820              		.loc 1 113 0 discriminator 2
 821 0076 524B     		ldr	r3, .L12+24
 822 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 823 007a 022B     		cmp	r3, #2
 824 007c 13D0     		beq	.L6
 825              		.loc 1 113 0 discriminator 3
 826 007e 514B     		ldr	r3, .L12+28
 827 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0082 042B     		cmp	r3, #4
 829 0084 0FD0     		beq	.L6
 830              		.loc 1 113 0 discriminator 4
 831 0086 4E4B     		ldr	r3, .L12+24
 832 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 008a 072B     		cmp	r3, #7
 834 008c 0BD0     		beq	.L6
 114:.\main.c      ****     {
 115:.\main.c      ****         QuadDec_M1_SetCounter(0);
 835              		.loc 1 115 0 is_stmt 1
 836 008e 0020     		movs	r0, #0
 837 0090 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 116:.\main.c      ****         QuadDec_M2_SetCounter(0);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 18


 838              		.loc 1 116 0
 839 0094 0020     		movs	r0, #0
 840 0096 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 117:.\main.c      ****         quad_count1 = 0;
 841              		.loc 1 117 0
 842 009a 434B     		ldr	r3, .L12
 843 009c 0022     		movs	r2, #0
 844 009e 1A80     		strh	r2, [r3]	@ movhi
 118:.\main.c      ****         quad_count2 = 0;
 845              		.loc 1 118 0
 846 00a0 434B     		ldr	r3, .L12+8
 847 00a2 0022     		movs	r2, #0
 848 00a4 1A80     		strh	r2, [r3]	@ movhi
 849              	.L6:
 119:.\main.c      ****     }
 120:.\main.c      **** 
 121:.\main.c      ****     flag_calc_wheelspeed = 1;
 850              		.loc 1 121 0
 851 00a6 484B     		ldr	r3, .L12+32
 852 00a8 0122     		movs	r2, #1
 853 00aa 1A70     		strb	r2, [r3]
 122:.\main.c      ****     
 123:.\main.c      ****     if (track_mode == QUAD_STOP)
 854              		.loc 1 123 0
 855 00ac 454B     		ldr	r3, .L12+28
 856 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857 00b0 042B     		cmp	r3, #4
 858 00b2 2AD1     		bne	.L7
 859              	.LBB2:
 124:.\main.c      ****     {
 125:.\main.c      ****         accum_dist += quad_diff1;
 860              		.loc 1 125 0
 861 00b4 454B     		ldr	r3, .L12+36
 862 00b6 1B88     		ldrh	r3, [r3]
 863 00b8 9AB2     		uxth	r2, r3
 864 00ba 3F4B     		ldr	r3, .L12+16
 865 00bc 1B88     		ldrh	r3, [r3]
 866 00be 9BB2     		uxth	r3, r3
 867 00c0 1344     		add	r3, r3, r2
 868 00c2 9BB2     		uxth	r3, r3
 869 00c4 9AB2     		uxth	r2, r3
 870 00c6 414B     		ldr	r3, .L12+36
 871 00c8 1A80     		strh	r2, [r3]	@ movhi
 126:.\main.c      ****         char mes[16];
 127:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 872              		.loc 1 127 0
 873 00ca 404B     		ldr	r3, .L12+36
 874 00cc 1B88     		ldrh	r3, [r3]
 875 00ce 1BB2     		sxth	r3, r3
 876 00d0 3A46     		mov	r2, r7
 877 00d2 1046     		mov	r0, r2
 878 00d4 3E49     		ldr	r1, .L12+40
 879 00d6 1A46     		mov	r2, r3
 880 00d8 FFF7FEFF 		bl	sprintf
 128:.\main.c      ****         UART_PutString(mes);
 881              		.loc 1 128 0
 882 00dc 3B46     		mov	r3, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 19


 883 00de 1846     		mov	r0, r3
 884 00e0 FFF7FEFF 		bl	UART_PutString
 129:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 885              		.loc 1 129 0
 886 00e4 394B     		ldr	r3, .L12+36
 887 00e6 1B88     		ldrh	r3, [r3]
 888 00e8 1BB2     		sxth	r3, r3
 889 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 890 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 891 00f2 384B     		ldr	r3, .L12+44
 892 00f4 1B88     		ldrh	r3, [r3]
 893 00f6 1BB2     		sxth	r3, r3
 894 00f8 9A42     		cmp	r2, r3
 895 00fa 05DB     		blt	.L8
 130:.\main.c      ****         {
 131:.\main.c      ****             initBrake();
 896              		.loc 1 131 0
 897 00fc FFF7FEFF 		bl	initBrake
 132:.\main.c      ****             track_mode = NO_TRACK;
 898              		.loc 1 132 0
 899 0100 304B     		ldr	r3, .L12+28
 900 0102 0022     		movs	r2, #0
 901 0104 1A70     		strb	r2, [r3]
 902              	.LBE2:
 903 0106 4CE0     		b	.L5
 904              	.L8:
 905 0108 4BE0     		b	.L5
 906              	.L7:
 133:.\main.c      ****         }
 134:.\main.c      ****     } else if (track_mode == RF_STOP)
 907              		.loc 1 134 0
 908 010a 2E4B     		ldr	r3, .L12+28
 909 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 910 010e 052B     		cmp	r3, #5
 911 0110 47D1     		bne	.L5
 912              	.LBB3:
 135:.\main.c      ****     { 
 136:.\main.c      ****         // Do pythag
 137:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 913              		.loc 1 137 0
 914 0112 314B     		ldr	r3, .L12+48
 915 0114 5B88     		ldrh	r3, [r3, #2]
 916 0116 1AB2     		sxth	r2, r3
 917 0118 304B     		ldr	r3, .L12+52
 918 011a 1B88     		ldrh	r3, [r3]
 919 011c 1BB2     		sxth	r3, r3
 920 011e D31A     		subs	r3, r2, r3
 921 0120 1846     		mov	r0, r3
 922 0122 FFF7FEFF 		bl	__aeabi_i2d
 923 0126 0246     		mov	r2, r0
 924 0128 0B46     		mov	r3, r1
 925 012a 1046     		mov	r0, r2
 926 012c 1946     		mov	r1, r3
 927 012e 4FF00002 		mov	r2, #0
 928 0132 2B4B     		ldr	r3, .L12+56
 929 0134 FFF7FEFF 		bl	__aeabi_ddiv
 930 0138 0246     		mov	r2, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 20


 931 013a 0B46     		mov	r3, r1
 932 013c 1446     		mov	r4, r2
 933 013e 1D46     		mov	r5, r3
 934 0140 254B     		ldr	r3, .L12+48
 935 0142 9B88     		ldrh	r3, [r3, #4]
 936 0144 1AB2     		sxth	r2, r3
 937 0146 274B     		ldr	r3, .L12+60
 938 0148 1B88     		ldrh	r3, [r3]
 939 014a 1BB2     		sxth	r3, r3
 940 014c D31A     		subs	r3, r2, r3
 941 014e 1846     		mov	r0, r3
 942 0150 FFF7FEFF 		bl	__aeabi_i2d
 943 0154 0246     		mov	r2, r0
 944 0156 0B46     		mov	r3, r1
 945 0158 1046     		mov	r0, r2
 946 015a 1946     		mov	r1, r3
 947 015c 4FF00002 		mov	r2, #0
 948 0160 1F4B     		ldr	r3, .L12+56
 949 0162 FFF7FEFF 		bl	__aeabi_ddiv
 950 0166 0246     		mov	r2, r0
 951 0168 0B46     		mov	r3, r1
 952 016a 2046     		mov	r0, r4
 953 016c 2946     		mov	r1, r5
 954 016e FFF7FEFF 		bl	hypot
 955 0172 C7E90401 		strd	r0, [r7, #16]
 138:.\main.c      ****         if (dist >= target_distance_cm)
 956              		.loc 1 138 0
 957 0176 1C4B     		ldr	r3, .L12+64
 958 0178 1B88     		ldrh	r3, [r3]
 959 017a 1BB2     		sxth	r3, r3
 960 017c 1846     		mov	r0, r3
 961 017e FFF7FEFF 		bl	__aeabi_i2d
 962 0182 0246     		mov	r2, r0
 963 0184 0B46     		mov	r3, r1
 964 0186 1046     		mov	r0, r2
 965 0188 1946     		mov	r1, r3
 966 018a D7E90423 		ldrd	r2, [r7, #16]
 967 018e FFF7FEFF 		bl	__aeabi_dcmple
 968 0192 0346     		mov	r3, r0
 969 0194 002B     		cmp	r3, #0
 970 0196 04D0     		beq	.L5
 139:.\main.c      ****         {
 140:.\main.c      ****             initBrake();
 971              		.loc 1 140 0
 972 0198 FFF7FEFF 		bl	initBrake
 141:.\main.c      ****             track_mode = NO_TRACK;
 973              		.loc 1 141 0
 974 019c 094B     		ldr	r3, .L12+28
 975 019e 0022     		movs	r2, #0
 976 01a0 1A70     		strb	r2, [r3]
 977              	.L5:
 978              	.LBE3:
 142:.\main.c      ****         }
 143:.\main.c      ****     }
 144:.\main.c      **** }
 979              		.loc 1 144 0
 980 01a2 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 21


 981              		.cfi_def_cfa_offset 16
 982 01a4 BD46     		mov	sp, r7
 983              		.cfi_def_cfa_register 13
 984              		@ sp needed
 985 01a6 B0BD     		pop	{r4, r5, r7, pc}
 986              	.L13:
 987              		.align	2
 988              	.L12:
 989 01a8 00000000 		.word	quad_count1
 990 01ac 00000000 		.word	last_quad_count1
 991 01b0 00000000 		.word	quad_count2
 992 01b4 00000000 		.word	last_quad_count2
 993 01b8 00000000 		.word	quad_diff1
 994 01bc 00000000 		.word	quad_diff2
 995 01c0 00000000 		.word	movement_state
 996 01c4 00000000 		.word	track_mode
 997 01c8 00000000 		.word	flag_calc_wheelspeed
 998 01cc 00000000 		.word	accum_dist
 999 01d0 00000000 		.word	.LC0
 1000 01d4 00000000 		.word	target_distance_quad
 1001 01d8 00000000 		.word	system_state
 1002 01dc 00000000 		.word	initial_x_pos
 1003 01e0 00001040 		.word	1074790400
 1004 01e4 00000000 		.word	initial_y_pos
 1005 01e8 00000000 		.word	target_distance_cm
 1006              		.cfi_endproc
 1007              	.LFE65:
 1008              		.size	isr_quad1, .-isr_quad1
 1009              		.section	.text.isr_turn_timer,"ax",%progbits
 1010              		.align	2
 1011              		.global	isr_turn_timer
 1012              		.thumb
 1013              		.thumb_func
 1014              		.type	isr_turn_timer, %function
 1015              	isr_turn_timer:
 1016              	.LFB66:
 145:.\main.c      **** 
 146:.\main.c      **** CY_ISR(isr_turn_timer)
 147:.\main.c      **** {
 1017              		.loc 1 147 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 00AF     		add	r7, sp, #0
 1026              		.cfi_def_cfa_register 7
 148:.\main.c      ****     if(movement_state == LTURN)
 1027              		.loc 1 148 0
 1028 0004 264B     		ldr	r3, .L20
 1029 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1030 0008 012B     		cmp	r3, #1
 1031 000a 15D1     		bne	.L15
 149:.\main.c      ****     {
 150:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 22


 1032              		.loc 1 150 0
 1033 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1034 0010 0346     		mov	r3, r0
 1035 0012 1A46     		mov	r2, r3
 1036 0014 234B     		ldr	r3, .L20+4
 1037 0016 1B88     		ldrh	r3, [r3]
 1038 0018 1BB2     		sxth	r3, r3
 1039 001a D31A     		subs	r3, r2, r3
 1040 001c 002B     		cmp	r3, #0
 1041 001e B8BF     		it	lt
 1042 0020 5B42     		rsblt	r3, r3, #0
 1043 0022 CF2B     		cmp	r3, #207
 1044 0024 3BDD     		ble	.L14
 151:.\main.c      ****         {
 152:.\main.c      ****             //movement_state = STOPPED;
 153:.\main.c      ****             brakeMotor();
 1045              		.loc 1 153 0
 1046 0026 FFF7FEFF 		bl	brakeMotor
 154:.\main.c      ****             movement_state = prev_movement_state;
 1047              		.loc 1 154 0
 1048 002a 1F4B     		ldr	r3, .L20+8
 1049 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1050 002e 1C4B     		ldr	r3, .L20
 1051 0030 1A70     		strb	r2, [r3]
 155:.\main.c      ****             Timer_2_Stop();
 1052              		.loc 1 155 0
 1053 0032 FFF7FEFF 		bl	Timer_2_Stop
 1054 0036 32E0     		b	.L14
 1055              	.L15:
 156:.\main.c      ****         }
 157:.\main.c      ****     }
 158:.\main.c      ****     else if (movement_state == RTURN)
 1056              		.loc 1 158 0
 1057 0038 194B     		ldr	r3, .L20
 1058 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1059 003c 022B     		cmp	r3, #2
 1060 003e 15D1     		bne	.L18
 159:.\main.c      ****     {
 160:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1061              		.loc 1 160 0
 1062 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1063 0044 0346     		mov	r3, r0
 1064 0046 1A46     		mov	r2, r3
 1065 0048 164B     		ldr	r3, .L20+4
 1066 004a 1B88     		ldrh	r3, [r3]
 1067 004c 1BB2     		sxth	r3, r3
 1068 004e D31A     		subs	r3, r2, r3
 1069 0050 002B     		cmp	r3, #0
 1070 0052 B8BF     		it	lt
 1071 0054 5B42     		rsblt	r3, r3, #0
 1072 0056 CF2B     		cmp	r3, #207
 1073 0058 21DD     		ble	.L14
 161:.\main.c      ****         {
 162:.\main.c      ****             //movement_state = STOPPED;
 163:.\main.c      ****             brakeMotor();
 1074              		.loc 1 163 0
 1075 005a FFF7FEFF 		bl	brakeMotor
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 23


 164:.\main.c      ****             movement_state = prev_movement_state;
 1076              		.loc 1 164 0
 1077 005e 124B     		ldr	r3, .L20+8
 1078 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1079 0062 0F4B     		ldr	r3, .L20
 1080 0064 1A70     		strb	r2, [r3]
 165:.\main.c      ****             Timer_2_Stop();
 1081              		.loc 1 165 0
 1082 0066 FFF7FEFF 		bl	Timer_2_Stop
 1083 006a 18E0     		b	.L14
 1084              	.L18:
 166:.\main.c      ****         }
 167:.\main.c      ****     }
 168:.\main.c      ****     else if (movement_state == UTURN)
 1085              		.loc 1 168 0
 1086 006c 0C4B     		ldr	r3, .L20
 1087 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1088 0070 072B     		cmp	r3, #7
 1089 0072 14D1     		bne	.L14
 169:.\main.c      ****     {
 170:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1090              		.loc 1 170 0
 1091 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1092 0078 0346     		mov	r3, r0
 1093 007a 1A46     		mov	r2, r3
 1094 007c 094B     		ldr	r3, .L20+4
 1095 007e 1B88     		ldrh	r3, [r3]
 1096 0080 1BB2     		sxth	r3, r3
 1097 0082 D31A     		subs	r3, r2, r3
 1098 0084 002B     		cmp	r3, #0
 1099 0086 B8BF     		it	lt
 1100 0088 5B42     		rsblt	r3, r3, #0
 1101 008a CF2B     		cmp	r3, #207
 1102 008c 07DD     		ble	.L14
 171:.\main.c      ****         {
 172:.\main.c      ****             //movement_state = STOPPED;
 173:.\main.c      ****             brakeMotor();
 1103              		.loc 1 173 0
 1104 008e FFF7FEFF 		bl	brakeMotor
 174:.\main.c      ****             movement_state = prev_movement_state;
 1105              		.loc 1 174 0
 1106 0092 054B     		ldr	r3, .L20+8
 1107 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1108 0096 024B     		ldr	r3, .L20
 1109 0098 1A70     		strb	r2, [r3]
 175:.\main.c      ****             Timer_2_Stop();
 1110              		.loc 1 175 0
 1111 009a FFF7FEFF 		bl	Timer_2_Stop
 1112              	.L14:
 176:.\main.c      ****         }
 177:.\main.c      ****     }
 178:.\main.c      **** }
 1113              		.loc 1 178 0
 1114 009e 80BD     		pop	{r7, pc}
 1115              	.L21:
 1116              		.align	2
 1117              	.L20:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 24


 1118 00a0 00000000 		.word	movement_state
 1119 00a4 00000000 		.word	start_turn_count
 1120 00a8 00000000 		.word	prev_movement_state
 1121              		.cfi_endproc
 1122              	.LFE66:
 1123              		.size	isr_turn_timer, .-isr_turn_timer
 1124              		.section	.text.Stop_on_line,"ax",%progbits
 1125              		.align	2
 1126              		.global	Stop_on_line
 1127              		.thumb
 1128              		.thumb_func
 1129              		.type	Stop_on_line, %function
 1130              	Stop_on_line:
 1131              	.LFB67:
 179:.\main.c      **** 
 180:.\main.c      **** 
 181:.\main.c      **** CY_ISR (Stop_on_line)
 182:.\main.c      **** {
 1132              		.loc 1 182 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 0
 1135              		@ frame_needed = 1, uses_anonymous_args = 0
 1136              		@ link register save eliminated.
 1137 0000 80B4     		push	{r7}
 1138              		.cfi_def_cfa_offset 4
 1139              		.cfi_offset 7, -4
 1140 0002 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 183:.\main.c      ****     movement_state = STOPPED;
 1142              		.loc 1 183 0
 1143 0004 054B     		ldr	r3, .L24
 1144 0006 0322     		movs	r2, #3
 1145 0008 1A70     		strb	r2, [r3]
 184:.\main.c      ****     if(movement_state != DRIVE) return;
 1146              		.loc 1 184 0
 1147 000a 044B     		ldr	r3, .L24
 1148 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1149 000e 002B     		cmp	r3, #0
 1150 0010 00D0     		beq	.L22
 1151 0012 00BF     		nop
 1152              	.L22:
 185:.\main.c      ****     //initTurnLeft();
 186:.\main.c      **** }
 1153              		.loc 1 186 0
 1154 0014 BD46     		mov	sp, r7
 1155              		.cfi_def_cfa_register 13
 1156              		@ sp needed
 1157 0016 5DF8047B 		ldr	r7, [sp], #4
 1158              		.cfi_restore 7
 1159              		.cfi_def_cfa_offset 0
 1160 001a 7047     		bx	lr
 1161              	.L25:
 1162              		.align	2
 1163              	.L24:
 1164 001c 00000000 		.word	movement_state
 1165              		.cfi_endproc
 1166              	.LFE67:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 25


 1167              		.size	Stop_on_line, .-Stop_on_line
 1168              		.section	.rodata
 1169 000b 00       		.align	2
 1170              	.LC1:
 1171 000c 53746172 		.ascii	"Starting robot!\015\012\000"
 1171      74696E67 
 1171      20726F62 
 1171      6F74210D 
 1171      0A00
 1172              		.section	.text.button,"ax",%progbits
 1173              		.align	2
 1174              		.global	button
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	button, %function
 1178              	button:
 1179              	.LFB68:
 187:.\main.c      **** 
 188:.\main.c      **** CY_ISR (button)
 189:.\main.c      **** {
 1180              		.loc 1 189 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 80B5     		push	{r7, lr}
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 7, -8
 1187              		.cfi_offset 14, -4
 1188 0002 00AF     		add	r7, sp, #0
 1189              		.cfi_def_cfa_register 7
 190:.\main.c      ****     if(BT_ENABLED)
 1190              		.loc 1 190 0
 1191 0004 054B     		ldr	r3, .L28
 1192 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0008 002B     		cmp	r3, #0
 1194 000a 02D0     		beq	.L27
 191:.\main.c      ****     {
 192:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1195              		.loc 1 192 0
 1196 000c 0448     		ldr	r0, .L28+4
 1197 000e FFF7FEFF 		bl	UART_PutString
 1198              	.L27:
 193:.\main.c      ****     }
 194:.\main.c      ****     movement_state = DRIVE;
 1199              		.loc 1 194 0
 1200 0012 044B     		ldr	r3, .L28+8
 1201 0014 0022     		movs	r2, #0
 1202 0016 1A70     		strb	r2, [r3]
 195:.\main.c      **** }
 1203              		.loc 1 195 0
 1204 0018 80BD     		pop	{r7, pc}
 1205              	.L29:
 1206 001a 00BF     		.align	2
 1207              	.L28:
 1208 001c 00000000 		.word	BT_ENABLED
 1209 0020 0C000000 		.word	.LC1
 1210 0024 00000000 		.word	movement_state
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 26


 1211              		.cfi_endproc
 1212              	.LFE68:
 1213              		.size	button, .-button
 1214              		.section	.text.isr_adcTimer,"ax",%progbits
 1215              		.align	2
 1216              		.global	isr_adcTimer
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	isr_adcTimer, %function
 1220              	isr_adcTimer:
 1221              	.LFB69:
 196:.\main.c      **** 
 197:.\main.c      **** CY_ISR(isr_adcTimer)
 198:.\main.c      **** {
 1222              		.loc 1 198 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 1, uses_anonymous_args = 0
 1226 0000 80B5     		push	{r7, lr}
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 00AF     		add	r7, sp, #0
 1231              		.cfi_def_cfa_register 7
 199:.\main.c      ****     ADC_StartConvert();
 1232              		.loc 1 199 0
 1233 0004 FFF7FEFF 		bl	ADC_StartConvert
 200:.\main.c      **** }
 1234              		.loc 1 200 0
 1235 0008 80BD     		pop	{r7, pc}
 1236              		.cfi_endproc
 1237              	.LFE69:
 1238              		.size	isr_adcTimer, .-isr_adcTimer
 1239 000a 00BF     		.section	.rodata
 1240 001e 0000     		.align	2
 1241              	.LC2:
 1242 0020 44656164 		.ascii	"Deadzone left\015\012\000"
 1242      7A6F6E65 
 1242      206C6566 
 1242      740D0A00 
 1243              		.section	.text.isr_deadzone,"ax",%progbits
 1244              		.align	2
 1245              		.global	isr_deadzone
 1246              		.thumb
 1247              		.thumb_func
 1248              		.type	isr_deadzone, %function
 1249              	isr_deadzone:
 1250              	.LFB70:
 201:.\main.c      **** 
 202:.\main.c      **** CY_ISR(isr_deadzone)
 203:.\main.c      **** {
 1251              		.loc 1 203 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 0
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255 0000 80B5     		push	{r7, lr}
 1256              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 27


 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 00AF     		add	r7, sp, #0
 1260              		.cfi_def_cfa_register 7
 204:.\main.c      ****     sensorsDisabled = 0;
 1261              		.loc 1 204 0
 1262 0004 054B     		ldr	r3, .L32
 1263 0006 0022     		movs	r2, #0
 1264 0008 1A60     		str	r2, [r3]
 205:.\main.c      ****     deadzone = 0;
 1265              		.loc 1 205 0
 1266 000a 054B     		ldr	r3, .L32+4
 1267 000c 0022     		movs	r2, #0
 1268 000e 1A70     		strb	r2, [r3]
 206:.\main.c      ****     Timer_Deadzone_Stop();
 1269              		.loc 1 206 0
 1270 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 207:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1271              		.loc 1 207 0
 1272 0014 0348     		ldr	r0, .L32+8
 1273 0016 FFF7FEFF 		bl	UART_PutString
 208:.\main.c      **** }
 1274              		.loc 1 208 0
 1275 001a 80BD     		pop	{r7, pc}
 1276              	.L33:
 1277              		.align	2
 1278              	.L32:
 1279 001c 00000000 		.word	sensorsDisabled
 1280 0020 00000000 		.word	deadzone
 1281 0024 20000000 		.word	.LC2
 1282              		.cfi_endproc
 1283              	.LFE70:
 1284              		.size	isr_deadzone, .-isr_deadzone
 1285              		.section	.rodata
 1286              		.align	2
 1287              	.LC3:
 1288 0030 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1288      67657265 
 1288      64206174 
 1288      20696E74 
 1288      65727365 
 1289 004d 000000   		.align	2
 1290              	.LC4:
 1291 0050 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1291      7A6F6E65 
 1291      20656E74 
 1291      65726564 
 1291      210D0A00 
 1292              		.align	2
 1293              	.LC5:
 1294 0064 54726967 		.ascii	"Triggered at white light \015\012\000"
 1294      67657265 
 1294      64206174 
 1294      20776869 
 1294      7465206C 
 1295              		.section	.text.main,"ax",%progbits
 1296              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 28


 1297              		.global	main
 1298              		.thumb
 1299              		.thumb_func
 1300              		.type	main, %function
 1301              	main:
 1302              	.LFB71:
 209:.\main.c      **** 
 210:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 211:.\main.c      **** 
 212:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 213:.\main.c      **** int main()
 214:.\main.c      **** {  
 1303              		.loc 1 214 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 8
 1306              		@ frame_needed = 1, uses_anonymous_args = 0
 1307 0000 80B5     		push	{r7, lr}
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 82B0     		sub	sp, sp, #8
 1312              		.cfi_def_cfa_offset 16
 1313 0004 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
 215:.\main.c      **** 
 216:.\main.c      **** // ----- INITIALIZATIONS ----------
 217:.\main.c      ****     CYGlobalIntEnable;
 1315              		.loc 1 217 0
 1316              	@ 217 ".\main.c" 1
 1317 0006 62B6     		CPSIE   i
 1318              	@ 0 "" 2
 218:.\main.c      ****     if(ENABLE_PWM)
 219:.\main.c      ****     {
 220:.\main.c      ****         PWM_1_Start();// starting the pwm
 1319              		.loc 1 220 0
 1320              		.thumb
 1321 0008 FFF7FEFF 		bl	PWM_1_Start
 221:.\main.c      ****         PWM_2_Start();// starting the pwm
 1322              		.loc 1 221 0
 1323 000c FFF7FEFF 		bl	PWM_2_Start
 222:.\main.c      ****     }
 223:.\main.c      ****     
 224:.\main.c      ****     if(ENABLE_ADC)
 225:.\main.c      ****     {
 226:.\main.c      ****         ADC_Start();
 227:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 228:.\main.c      ****         //ADC_StartConvert();
 229:.\main.c      ****         
 230:.\main.c      ****         //start the ADC timer for software trigger mode
 231:.\main.c      ****         Timer_TS_Start();
 232:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 233:.\main.c      ****     }
 234:.\main.c      ****     
 235:.\main.c      ****     if (ENABLE_QUAD)
 236:.\main.c      ****     {
 237:.\main.c      ****         QuadDec_M1_Start();
 1324              		.loc 1 237 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 29


 1325 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 238:.\main.c      ****         QuadDec_M2_Start();
 1326              		.loc 1 238 0
 1327 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 239:.\main.c      ****         
 240:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1328              		.loc 1 240 0
 1329 0018 AC48     		ldr	r0, .L79
 1330 001a FFF7FEFF 		bl	isr_quad1_StartEx
 241:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1331              		.loc 1 241 0
 1332 001e AC48     		ldr	r0, .L79+4
 1333 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 242:.\main.c      ****         
 243:.\main.c      ****         Timer_1_Start();
 1334              		.loc 1 243 0
 1335 0024 FFF7FEFF 		bl	Timer_1_Start
 244:.\main.c      ****     }
 245:.\main.c      ****     
 246:.\main.c      ****     if(ENABLE_STOP){
 247:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 248:.\main.c      ****         
 249:.\main.c      ****     }
 250:.\main.c      ****     isr_button_StartEx(button);
 1336              		.loc 1 250 0
 1337 0028 AA48     		ldr	r0, .L79+8
 1338 002a FFF7FEFF 		bl	isr_button_StartEx
 251:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1339              		.loc 1 251 0
 1340 002e AA48     		ldr	r0, .L79+12
 1341 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 252:.\main.c      **** 
 253:.\main.c      ****     // ------USB SETUP ----------------    
 254:.\main.c      ****     if (USE_USB){    
 255:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1342              		.loc 1 255 0
 1343 0034 0020     		movs	r0, #0
 1344 0036 0121     		movs	r1, #1
 1345 0038 FFF7FEFF 		bl	USBUART_Start
 256:.\main.c      ****         if (USBUART_GetConfiguration())
 1346              		.loc 1 256 0
 1347 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1348 0040 0346     		mov	r3, r0
 1349 0042 002B     		cmp	r3, #0
 1350 0044 01D0     		beq	.L35
 257:.\main.c      ****             {
 258:.\main.c      ****                  USBUART_CDC_Init();
 1351              		.loc 1 258 0
 1352 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1353              	.L35:
 259:.\main.c      ****             }
 260:.\main.c      ****     }
 261:.\main.c      ****     
 262:.\main.c      ****     if(BIN_ENABLED){
 1354              		.loc 1 262 0
 1355 004a A44B     		ldr	r3, .L79+16
 1356 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 30


 1357 004e 002B     		cmp	r3, #0
 1358 0050 01D0     		beq	.L36
 263:.\main.c      ****         changeToRF();
 1359              		.loc 1 263 0
 1360 0052 FFF7FEFF 		bl	changeToRF
 1361              	.L36:
 264:.\main.c      ****     }
 265:.\main.c      ****     
 266:.\main.c      ****     if(BT_ENABLED){
 1362              		.loc 1 266 0
 1363 0056 A24B     		ldr	r3, .L79+20
 1364 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1365 005a 002B     		cmp	r3, #0
 1366 005c 01D0     		beq	.L37
 267:.\main.c      ****         changeToBT();
 1367              		.loc 1 267 0
 1368 005e FFF7FEFF 		bl	changeToBT
 1369              	.L37:
 268:.\main.c      ****     }
 269:.\main.c      ****     
 270:.\main.c      ****     uint16 actionDebounce = 0;
 1370              		.loc 1 270 0
 1371 0062 0023     		movs	r3, #0
 1372 0064 FB80     		strh	r3, [r7, #6]	@ movhi
 1373              	.L76:
 1374              	.LBB4:
 271:.\main.c      ****     
 272:.\main.c      ****     //usbPutString("Started");
 273:.\main.c      ****     for(;;)
 274:.\main.c      ****     {
 275:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 276:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1375              		.loc 1 276 0
 1376 0066 FFF7FEFF 		bl	Quad_Dec_response
 277:.\main.c      ****         if(BIN_ENABLED == 1)
 1377              		.loc 1 277 0
 1378 006a 9C4B     		ldr	r3, .L79+16
 1379 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 006e 012B     		cmp	r3, #1
 1381 0070 03D1     		bne	.L38
 278:.\main.c      ****         {
 279:.\main.c      ****             handle_rx_binary();
 1382              		.loc 1 279 0
 1383 0072 FFF7FEFF 		bl	handle_rx_binary
 280:.\main.c      ****             print_RF();
 1384              		.loc 1 280 0
 1385 0076 FFF7FEFF 		bl	print_RF
 1386              	.L38:
 281:.\main.c      ****         }
 282:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 283:.\main.c      ****         
 284:.\main.c      ****         uint8 frontSensors[5];
 285:.\main.c      ****         readFrontSensors(frontSensors);
 1387              		.loc 1 285 0
 1388 007a 3B46     		mov	r3, r7
 1389 007c 1846     		mov	r0, r3
 1390 007e FFF7FEFF 		bl	readFrontSensors
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 31


 286:.\main.c      ****         
 287:.\main.c      ****         switch(track_mode)
 1391              		.loc 1 287 0
 1392 0082 984B     		ldr	r3, .L79+24
 1393 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1394 0086 072B     		cmp	r3, #7
 1395 0088 00F2EF80 		bhi	.L39
 1396 008c 01A2     		adr	r2, .L41
 1397 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1398 0092 00BF     		.p2align 2
 1399              	.L41:
 1400 0094 6B020000 		.word	.L39+1
 1401 0098 6B020000 		.word	.L39+1
 1402 009c 6B020000 		.word	.L39+1
 1403 00a0 B5000000 		.word	.L44+1
 1404 00a4 6B020000 		.word	.L39+1
 1405 00a8 F1000000 		.word	.L46+1
 1406 00ac 17010000 		.word	.L47+1
 1407 00b0 17010000 		.word	.L47+1
 1408              		.p2align 1
 1409              	.L44:
 288:.\main.c      ****         {
 289:.\main.c      ****             case SQUARE_TRACK:
 290:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1410              		.loc 1 290 0
 1411 00b4 8C4B     		ldr	r3, .L79+28
 1412 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1413 00b8 012B     		cmp	r3, #1
 1414 00ba 18D0     		beq	.L48
 1415              		.loc 1 290 0 is_stmt 0 discriminator 1
 1416 00bc 8A4B     		ldr	r3, .L79+28
 1417 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 00c0 022B     		cmp	r3, #2
 1419 00c2 14D0     		beq	.L48
 291:.\main.c      ****                 {
 292:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1420              		.loc 1 292 0 is_stmt 1
 1421 00c4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1422 00c6 012B     		cmp	r3, #1
 1423 00c8 05D1     		bne	.L49
 1424              		.loc 1 292 0 is_stmt 0 discriminator 1
 1425 00ca BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1426 00cc 012B     		cmp	r3, #1
 1427 00ce 02D1     		bne	.L49
 293:.\main.c      ****                         initTurnLeft();
 1428              		.loc 1 293 0 is_stmt 1
 1429 00d0 FFF7FEFF 		bl	initTurnLeft
 1430 00d4 0BE0     		b	.L48
 1431              	.L49:
 294:.\main.c      ****                     }
 295:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1432              		.loc 1 295 0
 1433 00d6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1434 00d8 012B     		cmp	r3, #1
 1435 00da 05D1     		bne	.L50
 1436              		.loc 1 295 0 is_stmt 0 discriminator 1
 1437 00dc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 32


 1438 00de 012B     		cmp	r3, #1
 1439 00e0 02D1     		bne	.L50
 296:.\main.c      ****                     {
 297:.\main.c      ****                         initTurnRight();
 1440              		.loc 1 297 0 is_stmt 1
 1441 00e2 FFF7FEFF 		bl	initTurnRight
 1442 00e6 02E0     		b	.L48
 1443              	.L50:
 298:.\main.c      ****                     }
 299:.\main.c      ****                     else inittrackLineZ();
 1444              		.loc 1 299 0
 1445 00e8 FFF7FEFF 		bl	inittrackLineZ
 300:.\main.c      ****                 }
 301:.\main.c      ****             break;
 1446              		.loc 1 301 0
 1447 00ec BDE0     		b	.L39
 1448              	.L48:
 1449 00ee BCE0     		b	.L39
 1450              	.L46:
 302:.\main.c      ****             case NO_TRACK:
 303:.\main.c      ****             break;
 304:.\main.c      ****             case CURVE_TRACK:
 305:.\main.c      ****             break;
 306:.\main.c      ****             case U_TRACK:
 307:.\main.c      ****             break;
 308:.\main.c      ****             case QUAD_STOP:
 309:.\main.c      ****             break;
 310:.\main.c      ****             case RF_STOP:
 311:.\main.c      ****                 if(initial_pos_valid == 1)
 1451              		.loc 1 311 0
 1452 00f0 7E4B     		ldr	r3, .L79+32
 1453 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 00f4 012B     		cmp	r3, #1
 1455 00f6 0DD1     		bne	.L51
 312:.\main.c      ****                 {
 313:.\main.c      ****                     //changeToBT();
 314:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 315:.\main.c      ****                     //changeToRF();
 316:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1456              		.loc 1 316 0
 1457 00f8 7D4B     		ldr	r3, .L79+36
 1458 00fa 5A88     		ldrh	r2, [r3, #2]
 1459 00fc 7D4B     		ldr	r3, .L79+40
 1460 00fe 1A80     		strh	r2, [r3]	@ movhi
 317:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1461              		.loc 1 317 0
 1462 0100 7B4B     		ldr	r3, .L79+36
 1463 0102 9A88     		ldrh	r2, [r3, #4]
 1464 0104 7C4B     		ldr	r3, .L79+44
 1465 0106 1A80     		strh	r2, [r3]	@ movhi
 318:.\main.c      ****                     initial_pos_valid = 2;
 1466              		.loc 1 318 0
 1467 0108 784B     		ldr	r3, .L79+32
 1468 010a 0222     		movs	r2, #2
 1469 010c 1A70     		strb	r2, [r3]
 319:.\main.c      ****                     initForward();
 1470              		.loc 1 319 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 33


 1471 010e FFF7FEFF 		bl	initForward
 320:.\main.c      ****                 }
 321:.\main.c      ****             break;
 1472              		.loc 1 321 0
 1473 0112 AAE0     		b	.L39
 1474              	.L51:
 1475 0114 A9E0     		b	.L39
 1476              	.L47:
 322:.\main.c      ****             case MAP_TRAVERSE:
 323:.\main.c      ****             case DEST_TEST:
 324:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1477              		.loc 1 324 0
 1478 0116 744B     		ldr	r3, .L79+28
 1479 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1480 011a 012B     		cmp	r3, #1
 1481 011c 00F0A480 		beq	.L52
 1482              		.loc 1 324 0 is_stmt 0 discriminator 1
 1483 0120 714B     		ldr	r3, .L79+28
 1484 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1485 0124 022B     		cmp	r3, #2
 1486 0126 00F09F80 		beq	.L52
 1487              		.loc 1 324 0 discriminator 2
 1488 012a 6F4B     		ldr	r3, .L79+28
 1489 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1490 012e 072B     		cmp	r3, #7
 1491 0130 00F09A80 		beq	.L52
 1492              	.LBB5:
 325:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 326:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1493              		.loc 1 326 0 is_stmt 1
 1494 0134 714B     		ldr	r3, .L79+48
 1495 0136 1B88     		ldrh	r3, [r3]
 1496 0138 1A46     		mov	r2, r3
 1497 013a 714B     		ldr	r3, .L79+52
 1498 013c 9B5C     		ldrb	r3, [r3, r2]
 1499 013e 7B71     		strb	r3, [r7, #5]
 327:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1500              		.loc 1 327 0
 1501 0140 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1502 0142 012B     		cmp	r3, #1
 1503 0144 02D1     		bne	.L53
 1504              		.loc 1 327 0 is_stmt 0 discriminator 1
 1505 0146 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1506 0148 012B     		cmp	r3, #1
 1507 014a 05D0     		beq	.L54
 1508              	.L53:
 1509              		.loc 1 327 0 discriminator 3
 1510 014c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1511 014e 012B     		cmp	r3, #1
 1512 0150 4DD1     		bne	.L55
 1513              		.loc 1 327 0 discriminator 4
 1514 0152 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1515 0154 012B     		cmp	r3, #1
 1516 0156 4AD1     		bne	.L55
 1517              	.L54:
 328:.\main.c      ****                         if(sensorsDisabled == 0)
 1518              		.loc 1 328 0 is_stmt 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 34


 1519 0158 6A4B     		ldr	r3, .L79+56
 1520 015a 1B68     		ldr	r3, [r3]
 1521 015c 002B     		cmp	r3, #0
 1522 015e 45D1     		bne	.L56
 329:.\main.c      ****                         {
 330:.\main.c      ****                             actionDebounce++;
 1523              		.loc 1 330 0
 1524 0160 FB88     		ldrh	r3, [r7, #6]
 1525 0162 0133     		adds	r3, r3, #1
 1526 0164 FB80     		strh	r3, [r7, #6]	@ movhi
 331:.\main.c      ****                             if(actionDebounce >= 2100)
 1527              		.loc 1 331 0
 1528 0166 FB88     		ldrh	r3, [r7, #6]
 1529 0168 40F63302 		movw	r2, #2099
 1530 016c 9342     		cmp	r3, r2
 1531 016e 3DD9     		bls	.L56
 332:.\main.c      ****                             {
 333:.\main.c      ****                                 sensorsDisabled = 1;
 1532              		.loc 1 333 0
 1533 0170 644B     		ldr	r3, .L79+56
 1534 0172 0122     		movs	r2, #1
 1535 0174 1A60     		str	r2, [r3]
 334:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1536              		.loc 1 334 0
 1537 0176 6448     		ldr	r0, .L79+60
 1538 0178 FFF7FEFF 		bl	UART_PutString
 335:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1539              		.loc 1 335 0
 1540 017c 6348     		ldr	r0, .L79+64
 1541 017e FFF7FEFF 		bl	UART_PutString
 336:.\main.c      ****                                 deadzone = 1;
 1542              		.loc 1 336 0
 1543 0182 634B     		ldr	r3, .L79+68
 1544 0184 0122     		movs	r2, #1
 1545 0186 1A70     		strb	r2, [r3]
 337:.\main.c      ****                                 Timer_Deadzone_Start();
 1546              		.loc 1 337 0
 1547 0188 FFF7FEFF 		bl	Timer_Deadzone_Start
 338:.\main.c      ****                                 switch(nextStep)
 1548              		.loc 1 338 0
 1549 018c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1550 018e 4C3B     		subs	r3, r3, #76
 1551 0190 092B     		cmp	r3, #9
 1552 0192 23D8     		bhi	.L77
 1553 0194 01A2     		adr	r2, .L59
 1554 0196 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1555 019a 00BF     		.p2align 2
 1556              	.L59:
 1557 019c CB010000 		.word	.L58+1
 1558 01a0 DD010000 		.word	.L77+1
 1559 01a4 DD010000 		.word	.L77+1
 1560 01a8 DD010000 		.word	.L77+1
 1561 01ac DD010000 		.word	.L77+1
 1562 01b0 DD010000 		.word	.L77+1
 1563 01b4 D1010000 		.word	.L60+1
 1564 01b8 C5010000 		.word	.L61+1
 1565 01bc DD010000 		.word	.L77+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 35


 1566 01c0 D7010000 		.word	.L62+1
 1567              		.p2align 1
 1568              	.L61:
 339:.\main.c      ****                                 {
 340:.\main.c      ****                                     case 'S':
 341:.\main.c      ****                                         initTrackU();
 1569              		.loc 1 341 0
 1570 01c4 FFF7FEFF 		bl	initTrackU
 342:.\main.c      ****                                         //do nothing
 343:.\main.c      ****                                     break;
 1571              		.loc 1 343 0
 1572 01c8 09E0     		b	.L63
 1573              	.L58:
 344:.\main.c      ****                                     case 'L':
 345:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 346:.\main.c      ****                                         initTurnLeft();
 1574              		.loc 1 346 0
 1575 01ca FFF7FEFF 		bl	initTurnLeft
 347:.\main.c      ****                                     break;
 1576              		.loc 1 347 0
 1577 01ce 06E0     		b	.L63
 1578              	.L60:
 348:.\main.c      ****                                     case 'R':
 349:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 350:.\main.c      ****                                         initTurnRight();
 1579              		.loc 1 350 0
 1580 01d0 FFF7FEFF 		bl	initTurnRight
 351:.\main.c      ****                                         
 352:.\main.c      ****                                     break;
 1581              		.loc 1 352 0
 1582 01d4 03E0     		b	.L63
 1583              	.L62:
 353:.\main.c      ****                                     case 'U':
 354:.\main.c      ****                                         // Direction not tracked any more
 355:.\main.c      ****                                         initTurnU();
 1584              		.loc 1 355 0
 1585 01d6 FFF7FEFF 		bl	initTurnU
 356:.\main.c      ****                                     break;
 1586              		.loc 1 356 0
 1587 01da 00E0     		b	.L63
 1588              	.L77:
 357:.\main.c      ****                                     default:
 358:.\main.c      ****                                         //do nothing
 359:.\main.c      ****                                         break;
 1589              		.loc 1 359 0
 1590 01dc 00BF     		nop
 1591              	.L63:
 360:.\main.c      ****                                 }
 361:.\main.c      ****                                 instructionCount++;
 1592              		.loc 1 361 0
 1593 01de 474B     		ldr	r3, .L79+48
 1594 01e0 1B88     		ldrh	r3, [r3]
 1595 01e2 0133     		adds	r3, r3, #1
 1596 01e4 9AB2     		uxth	r2, r3
 1597 01e6 454B     		ldr	r3, .L79+48
 1598 01e8 1A80     		strh	r2, [r3]	@ movhi
 328:.\main.c      ****                         {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 36


 1599              		.loc 1 328 0
 1600 01ea 3DE0     		b	.L52
 1601              	.L56:
 1602 01ec 3CE0     		b	.L52
 1603              	.L55:
 362:.\main.c      ****                             }
 363:.\main.c      ****                         }
 364:.\main.c      ****                     }
 365:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1604              		.loc 1 365 0
 1605 01ee 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1606 01f0 002B     		cmp	r3, #0
 1607 01f2 34D1     		bne	.L64
 1608              		.loc 1 365 0 is_stmt 0 discriminator 1
 1609 01f4 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1610 01f6 002B     		cmp	r3, #0
 1611 01f8 31D1     		bne	.L64
 1612              		.loc 1 365 0 discriminator 2
 1613 01fa BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1614 01fc 002B     		cmp	r3, #0
 1615 01fe 2ED1     		bne	.L64
 1616              		.loc 1 365 0 discriminator 3
 1617 0200 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1618 0202 002B     		cmp	r3, #0
 1619 0204 2BD1     		bne	.L64
 1620              		.loc 1 365 0 discriminator 4
 1621 0206 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1622 0208 002B     		cmp	r3, #0
 1623 020a 28D1     		bne	.L64
 1624              		.loc 1 365 0 discriminator 5
 1625 020c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1626 020e 552B     		cmp	r3, #85
 1627 0210 25D1     		bne	.L64
 366:.\main.c      ****                     {
 367:.\main.c      ****                         if(sensorsDisabled == 0)
 1628              		.loc 1 367 0 is_stmt 1
 1629 0212 3C4B     		ldr	r3, .L79+56
 1630 0214 1B68     		ldr	r3, [r3]
 1631 0216 002B     		cmp	r3, #0
 1632 0218 20D1     		bne	.L65
 368:.\main.c      ****                         {
 369:.\main.c      ****                             actionDebounce++;
 1633              		.loc 1 369 0
 1634 021a FB88     		ldrh	r3, [r7, #6]
 1635 021c 0133     		adds	r3, r3, #1
 1636 021e FB80     		strh	r3, [r7, #6]	@ movhi
 370:.\main.c      ****                             if(actionDebounce >= 12000)
 1637              		.loc 1 370 0
 1638 0220 FB88     		ldrh	r3, [r7, #6]
 1639 0222 42F6DF62 		movw	r2, #11999
 1640 0226 9342     		cmp	r3, r2
 1641 0228 18D9     		bls	.L65
 371:.\main.c      ****                             {
 372:.\main.c      ****                                 UART_PutString("Triggered at white light \r\n");
 1642              		.loc 1 372 0
 1643 022a 3A48     		ldr	r0, .L79+72
 1644 022c FFF7FEFF 		bl	UART_PutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 37


 373:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1645              		.loc 1 373 0
 1646 0230 3648     		ldr	r0, .L79+64
 1647 0232 FFF7FEFF 		bl	UART_PutString
 374:.\main.c      ****                                 deadzone = 1;
 1648              		.loc 1 374 0
 1649 0236 364B     		ldr	r3, .L79+68
 1650 0238 0122     		movs	r2, #1
 1651 023a 1A70     		strb	r2, [r3]
 375:.\main.c      ****                                 Timer_Deadzone_Start();
 1652              		.loc 1 375 0
 1653 023c FFF7FEFF 		bl	Timer_Deadzone_Start
 376:.\main.c      ****                                 actionDebounce = 0;
 1654              		.loc 1 376 0
 1655 0240 0023     		movs	r3, #0
 1656 0242 FB80     		strh	r3, [r7, #6]	@ movhi
 377:.\main.c      ****                                 sensorsDisabled = 1;
 1657              		.loc 1 377 0
 1658 0244 2F4B     		ldr	r3, .L79+56
 1659 0246 0122     		movs	r2, #1
 1660 0248 1A60     		str	r2, [r3]
 378:.\main.c      ****                                 initTurnU();
 1661              		.loc 1 378 0
 1662 024a FFF7FEFF 		bl	initTurnU
 379:.\main.c      ****                                 instructionCount++;
 1663              		.loc 1 379 0
 1664 024e 2B4B     		ldr	r3, .L79+48
 1665 0250 1B88     		ldrh	r3, [r3]
 1666 0252 0133     		adds	r3, r3, #1
 1667 0254 9AB2     		uxth	r2, r3
 1668 0256 294B     		ldr	r3, .L79+48
 1669 0258 1A80     		strh	r2, [r3]	@ movhi
 367:.\main.c      ****                         {
 1670              		.loc 1 367 0
 1671 025a 05E0     		b	.L52
 1672              	.L65:
 367:.\main.c      ****                         {
 1673              		.loc 1 367 0 is_stmt 0 discriminator 2
 1674 025c 04E0     		b	.L52
 1675              	.L64:
 380:.\main.c      ****                             }
 381:.\main.c      ****                         }
 382:.\main.c      ****                     }
 383:.\main.c      ****                     else
 384:.\main.c      ****                     {
 385:.\main.c      ****                         inittrackLineZ();
 1676              		.loc 1 385 0 is_stmt 1
 1677 025e FFF7FEFF 		bl	inittrackLineZ
 386:.\main.c      ****                         actionDebounce = 0;
 1678              		.loc 1 386 0
 1679 0262 0023     		movs	r3, #0
 1680 0264 FB80     		strh	r3, [r7, #6]	@ movhi
 1681              	.LBE5:
 387:.\main.c      ****                     }
 388:.\main.c      ****                 }
 389:.\main.c      ****                 break;
 1682              		.loc 1 389 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 38


 1683 0266 FFE7     		b	.L78
 1684              	.L52:
 1685              	.L78:
 1686 0268 00BF     		nop
 1687              	.L39:
 390:.\main.c      ****         }
 391:.\main.c      ****         
 392:.\main.c      ****         switch(movement_state)
 1688              		.loc 1 392 0
 1689 026a 1F4B     		ldr	r3, .L79+28
 1690 026c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1691 026e 072B     		cmp	r3, #7
 1692 0270 3FF6F9AE 		bhi	.L76
 1693 0274 01A2     		adr	r2, .L68
 1694 0276 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1695 027a 00BF     		.p2align 2
 1696              	.L68:
 1697 027c 9D020000 		.word	.L67+1
 1698 0280 A3020000 		.word	.L69+1
 1699 0284 A9020000 		.word	.L70+1
 1700 0288 B5020000 		.word	.L71+1
 1701 028c BB020000 		.word	.L72+1
 1702 0290 C1020000 		.word	.L73+1
 1703 0294 C7020000 		.word	.L74+1
 1704 0298 AF020000 		.word	.L75+1
 1705              		.p2align 1
 1706              	.L67:
 393:.\main.c      ****         {
 394:.\main.c      ****             case DRIVE:
 395:.\main.c      ****                 driveForwards();
 1707              		.loc 1 395 0
 1708 029c FFF7FEFF 		bl	driveForwards
 396:.\main.c      ****             break;
 1709              		.loc 1 396 0
 1710 02a0 13E0     		b	.L66
 1711              	.L69:
 397:.\main.c      ****             case LTURN:
 398:.\main.c      ****                 turnLeft();
 1712              		.loc 1 398 0
 1713 02a2 FFF7FEFF 		bl	turnLeft
 399:.\main.c      ****             break;
 1714              		.loc 1 399 0
 1715 02a6 10E0     		b	.L66
 1716              	.L70:
 400:.\main.c      ****             case RTURN:
 401:.\main.c      ****                 turnRight();
 1717              		.loc 1 401 0
 1718 02a8 FFF7FEFF 		bl	turnRight
 402:.\main.c      ****             break;
 1719              		.loc 1 402 0
 1720 02ac 0DE0     		b	.L66
 1721              	.L75:
 403:.\main.c      ****             case UTURN:
 404:.\main.c      ****                 turnU();
 1722              		.loc 1 404 0
 1723 02ae FFF7FEFF 		bl	turnU
 405:.\main.c      ****             break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 39


 1724              		.loc 1 405 0
 1725 02b2 0AE0     		b	.L66
 1726              	.L71:
 406:.\main.c      ****             case STOPPED:
 407:.\main.c      ****                 brakeMotor();
 1727              		.loc 1 407 0
 1728 02b4 FFF7FEFF 		bl	brakeMotor
 408:.\main.c      ****             break;
 1729              		.loc 1 408 0
 1730 02b8 07E0     		b	.L66
 1731              	.L72:
 409:.\main.c      ****             case TRACKING:
 410:.\main.c      ****                 trackLine();
 1732              		.loc 1 410 0
 1733 02ba FFF7FEFF 		bl	trackLine
 411:.\main.c      ****             break;
 1734              		.loc 1 411 0
 1735 02be 04E0     		b	.L66
 1736              	.L73:
 412:.\main.c      ****             case TRACKING_U:
 413:.\main.c      ****                 trackLineU();
 1737              		.loc 1 413 0
 1738 02c0 FFF7FEFF 		bl	trackLineU
 414:.\main.c      ****             break;
 1739              		.loc 1 414 0
 1740 02c4 01E0     		b	.L66
 1741              	.L74:
 415:.\main.c      ****             case TRACKING_SOFT:
 416:.\main.c      ****                 trackLineZ();
 1742              		.loc 1 416 0
 1743 02c6 FFF7FEFF 		bl	trackLineZ
 1744              	.L66:
 1745              	.LBE4:
 417:.\main.c      ****         }      
 418:.\main.c      ****     }   
 1746              		.loc 1 418 0
 1747 02ca CCE6     		b	.L76
 1748              	.L80:
 1749              		.align	2
 1750              	.L79:
 1751 02cc 00000000 		.word	isr_quad1
 1752 02d0 00000000 		.word	isr_turn_timer
 1753 02d4 00000000 		.word	button
 1754 02d8 00000000 		.word	isr_deadzone
 1755 02dc 00000000 		.word	BIN_ENABLED
 1756 02e0 00000000 		.word	BT_ENABLED
 1757 02e4 00000000 		.word	track_mode
 1758 02e8 00000000 		.word	movement_state
 1759 02ec 00000000 		.word	initial_pos_valid
 1760 02f0 00000000 		.word	system_state
 1761 02f4 00000000 		.word	initial_x_pos
 1762 02f8 00000000 		.word	initial_y_pos
 1763 02fc 00000000 		.word	instructionCount
 1764 0300 00000000 		.word	instructions
 1765 0304 00000000 		.word	sensorsDisabled
 1766 0308 30000000 		.word	.LC3
 1767 030c 50000000 		.word	.LC4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 40


 1768 0310 00000000 		.word	deadzone
 1769 0314 64000000 		.word	.LC5
 1770              		.cfi_endproc
 1771              	.LFE71:
 1772              		.size	main, .-main
 1773              		.section	.text.handle_rx_binary,"ax",%progbits
 1774              		.align	2
 1775              		.global	handle_rx_binary
 1776              		.thumb
 1777              		.thumb_func
 1778              		.type	handle_rx_binary, %function
 1779              	handle_rx_binary:
 1780              	.LFB72:
 419:.\main.c      **** }
 420:.\main.c      **** 
 421:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 422:.\main.c      **** 
 423:.\main.c      **** void handle_rx_binary()
 424:.\main.c      **** {
 1781              		.loc 1 424 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 32
 1784              		@ frame_needed = 1, uses_anonymous_args = 0
 1785              		@ link register save eliminated.
 1786 0000 80B4     		push	{r7}
 1787              		.cfi_def_cfa_offset 4
 1788              		.cfi_offset 7, -4
 1789 0002 89B0     		sub	sp, sp, #36
 1790              		.cfi_def_cfa_offset 40
 1791 0004 00AF     		add	r7, sp, #0
 1792              		.cfi_def_cfa_register 7
 425:.\main.c      ****     if(flag_rx == 1)
 1793              		.loc 1 425 0
 1794 0006 524B     		ldr	r3, .L101
 1795 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 000a 012B     		cmp	r3, #1
 1797 000c 40F09A80 		bne	.L81
 1798              	.LBB6:
 426:.\main.c      ****     {    
 427:.\main.c      ****         flag_rx = 0;
 1799              		.loc 1 427 0
 1800 0010 4F4B     		ldr	r3, .L101
 1801 0012 0022     		movs	r2, #0
 1802 0014 1A70     		strb	r2, [r3]
 428:.\main.c      ****         
 429:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 1803              		.loc 1 429 0
 1804 0016 4F4B     		ldr	r3, .L101+4
 1805 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1806 001a 1B02     		lsls	r3, r3, #8
 1807 001c 9AB2     		uxth	r2, r3
 1808 001e 4D4B     		ldr	r3, .L101+4
 1809 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1810 0022 9BB2     		uxth	r3, r3
 1811 0024 1343     		orrs	r3, r3, r2
 1812 0026 9BB2     		uxth	r3, r3
 1813 0028 FB83     		strh	r3, [r7, #30]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 41


 430:.\main.c      ****         char byte_packet[12];
 431:.\main.c      ****         char string_packet[12];
 432:.\main.c      ****         
 433:.\main.c      ****         switch(byteCount)
 1814              		.loc 1 433 0
 1815 002a 4B4B     		ldr	r3, .L101+8
 1816 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 002e 043B     		subs	r3, r3, #4
 1818 0030 1E2B     		cmp	r3, #30
 1819 0032 00F28780 		bhi	.L81
 1820 0036 01A2     		adr	r2, .L85
 1821 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1822              		.p2align 2
 1823              	.L85:
 1824 003c B9000000 		.word	.L84+1
 1825 0040 45010000 		.word	.L81+1
 1826 0044 CD000000 		.word	.L86+1
 1827 0048 45010000 		.word	.L81+1
 1828 004c D5000000 		.word	.L87+1
 1829 0050 45010000 		.word	.L81+1
 1830 0054 DD000000 		.word	.L88+1
 1831 0058 45010000 		.word	.L81+1
 1832 005c E5000000 		.word	.L89+1
 1833 0060 45010000 		.word	.L81+1
 1834 0064 ED000000 		.word	.L90+1
 1835 0068 45010000 		.word	.L81+1
 1836 006c F5000000 		.word	.L91+1
 1837 0070 45010000 		.word	.L81+1
 1838 0074 FD000000 		.word	.L92+1
 1839 0078 45010000 		.word	.L81+1
 1840 007c 05010000 		.word	.L93+1
 1841 0080 45010000 		.word	.L81+1
 1842 0084 0D010000 		.word	.L94+1
 1843 0088 45010000 		.word	.L81+1
 1844 008c 15010000 		.word	.L95+1
 1845 0090 45010000 		.word	.L81+1
 1846 0094 1D010000 		.word	.L96+1
 1847 0098 45010000 		.word	.L81+1
 1848 009c 25010000 		.word	.L97+1
 1849 00a0 45010000 		.word	.L81+1
 1850 00a4 2D010000 		.word	.L98+1
 1851 00a8 45010000 		.word	.L81+1
 1852 00ac 35010000 		.word	.L99+1
 1853 00b0 45010000 		.word	.L81+1
 1854 00b4 3D010000 		.word	.L100+1
 1855              		.p2align 1
 1856              	.L84:
 434:.\main.c      ****         {
 435:.\main.c      ****             case 4:
 436:.\main.c      ****                 buffer_state.rssi = packet[0];
 1857              		.loc 1 436 0
 1858 00b8 264B     		ldr	r3, .L101+4
 1859 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1860 00bc DAB2     		uxtb	r2, r3
 1861 00be 274B     		ldr	r3, .L101+12
 1862 00c0 1A70     		strb	r2, [r3]
 437:.\main.c      ****                 buffer_state.index = packet[1];
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 42


 1863              		.loc 1 437 0
 1864 00c2 244B     		ldr	r3, .L101+4
 1865 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1866 00c6 254B     		ldr	r3, .L101+12
 1867 00c8 5A70     		strb	r2, [r3, #1]
 438:.\main.c      ****             break;
 1868              		.loc 1 438 0
 1869 00ca 3BE0     		b	.L81
 1870              	.L86:
 439:.\main.c      ****             case 6:
 440:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 1871              		.loc 1 440 0
 1872 00cc FA8B     		ldrh	r2, [r7, #30]
 1873 00ce 234B     		ldr	r3, .L101+12
 1874 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 441:.\main.c      ****             break;
 1875              		.loc 1 441 0
 1876 00d2 37E0     		b	.L81
 1877              	.L87:
 442:.\main.c      ****             case 8:
 443:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 1878              		.loc 1 443 0
 1879 00d4 FA8B     		ldrh	r2, [r7, #30]
 1880 00d6 214B     		ldr	r3, .L101+12
 1881 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 444:.\main.c      ****             break;
 1882              		.loc 1 444 0
 1883 00da 33E0     		b	.L81
 1884              	.L88:
 445:.\main.c      ****             case 10:
 446:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 1885              		.loc 1 446 0
 1886 00dc FA8B     		ldrh	r2, [r7, #30]
 1887 00de 1F4B     		ldr	r3, .L101+12
 1888 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 447:.\main.c      ****             break;
 1889              		.loc 1 447 0
 1890 00e2 2FE0     		b	.L81
 1891              	.L89:
 448:.\main.c      ****             case 12:
 449:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 1892              		.loc 1 449 0
 1893 00e4 FA8B     		ldrh	r2, [r7, #30]
 1894 00e6 1D4B     		ldr	r3, .L101+12
 1895 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 450:.\main.c      ****             break;
 1896              		.loc 1 450 0
 1897 00ea 2BE0     		b	.L81
 1898              	.L90:
 451:.\main.c      ****             case 14:
 452:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 1899              		.loc 1 452 0
 1900 00ec FA8B     		ldrh	r2, [r7, #30]
 1901 00ee 1B4B     		ldr	r3, .L101+12
 1902 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 453:.\main.c      ****             break;
 1903              		.loc 1 453 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 43


 1904 00f2 27E0     		b	.L81
 1905              	.L91:
 454:.\main.c      ****             case 16:
 455:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 1906              		.loc 1 455 0
 1907 00f4 FA8B     		ldrh	r2, [r7, #30]
 1908 00f6 194B     		ldr	r3, .L101+12
 1909 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 456:.\main.c      ****             break;
 1910              		.loc 1 456 0
 1911 00fa 23E0     		b	.L81
 1912              	.L92:
 457:.\main.c      ****             case 18:
 458:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 1913              		.loc 1 458 0
 1914 00fc FA8B     		ldrh	r2, [r7, #30]
 1915 00fe 174B     		ldr	r3, .L101+12
 1916 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 459:.\main.c      ****             break;
 1917              		.loc 1 459 0
 1918 0102 1FE0     		b	.L81
 1919              	.L93:
 460:.\main.c      ****             case 20:
 461:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 1920              		.loc 1 461 0
 1921 0104 FA8B     		ldrh	r2, [r7, #30]
 1922 0106 154B     		ldr	r3, .L101+12
 1923 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 462:.\main.c      ****             break;
 1924              		.loc 1 462 0
 1925 010a 1BE0     		b	.L81
 1926              	.L94:
 463:.\main.c      ****             case 22:
 464:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 1927              		.loc 1 464 0
 1928 010c FA8B     		ldrh	r2, [r7, #30]
 1929 010e 134B     		ldr	r3, .L101+12
 1930 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 465:.\main.c      ****             break;
 1931              		.loc 1 465 0
 1932 0112 17E0     		b	.L81
 1933              	.L95:
 466:.\main.c      ****             case 24:
 467:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 1934              		.loc 1 467 0
 1935 0114 FA8B     		ldrh	r2, [r7, #30]
 1936 0116 114B     		ldr	r3, .L101+12
 1937 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 468:.\main.c      ****             break;
 1938              		.loc 1 468 0
 1939 011a 13E0     		b	.L81
 1940              	.L96:
 469:.\main.c      ****             case 26:
 470:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 1941              		.loc 1 470 0
 1942 011c FA8B     		ldrh	r2, [r7, #30]
 1943 011e 0F4B     		ldr	r3, .L101+12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 44


 1944 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 471:.\main.c      ****             break;
 1945              		.loc 1 471 0
 1946 0122 0FE0     		b	.L81
 1947              	.L97:
 472:.\main.c      ****             case 28:
 473:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 1948              		.loc 1 473 0
 1949 0124 FA8B     		ldrh	r2, [r7, #30]
 1950 0126 0D4B     		ldr	r3, .L101+12
 1951 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 474:.\main.c      ****             break;
 1952              		.loc 1 474 0
 1953 012a 0BE0     		b	.L81
 1954              	.L98:
 475:.\main.c      ****             case 30:
 476:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 1955              		.loc 1 476 0
 1956 012c FA8B     		ldrh	r2, [r7, #30]
 1957 012e 0B4B     		ldr	r3, .L101+12
 1958 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 477:.\main.c      ****             break;
 1959              		.loc 1 477 0
 1960 0132 07E0     		b	.L81
 1961              	.L99:
 478:.\main.c      ****             case 32:
 479:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 1962              		.loc 1 479 0
 1963 0134 FA8B     		ldrh	r2, [r7, #30]
 1964 0136 094B     		ldr	r3, .L101+12
 1965 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 480:.\main.c      ****             break;
 1966              		.loc 1 480 0
 1967 013a 03E0     		b	.L81
 1968              	.L100:
 481:.\main.c      ****             case 34:
 482:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 1969              		.loc 1 482 0
 1970 013c FA8B     		ldrh	r2, [r7, #30]
 1971 013e 074B     		ldr	r3, .L101+12
 1972 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 483:.\main.c      ****             break;
 1973              		.loc 1 483 0
 1974 0142 00BF     		nop
 1975              	.L81:
 1976              	.LBE6:
 484:.\main.c      ****         }
 485:.\main.c      ****     }
 486:.\main.c      **** }
 1977              		.loc 1 486 0
 1978 0144 2437     		adds	r7, r7, #36
 1979              		.cfi_def_cfa_offset 4
 1980 0146 BD46     		mov	sp, r7
 1981              		.cfi_def_cfa_register 13
 1982              		@ sp needed
 1983 0148 5DF8047B 		ldr	r7, [sp], #4
 1984              		.cfi_restore 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 45


 1985              		.cfi_def_cfa_offset 0
 1986 014c 7047     		bx	lr
 1987              	.L102:
 1988 014e 00BF     		.align	2
 1989              	.L101:
 1990 0150 00000000 		.word	flag_rx
 1991 0154 00000000 		.word	packet
 1992 0158 00000000 		.word	byteCount
 1993 015c 00000000 		.word	buffer_state
 1994              		.cfi_endproc
 1995              	.LFE72:
 1996              		.size	handle_rx_binary, .-handle_rx_binary
 1997              		.section	.text.setLeftDir,"ax",%progbits
 1998              		.align	2
 1999              		.global	setLeftDir
 2000              		.thumb
 2001              		.thumb_func
 2002              		.type	setLeftDir, %function
 2003              	setLeftDir:
 2004              	.LFB73:
 487:.\main.c      **** 
 488:.\main.c      **** void setLeftDir(uint8 dir)
 489:.\main.c      **** {
 2005              		.loc 1 489 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 8
 2008              		@ frame_needed = 1, uses_anonymous_args = 0
 2009 0000 80B5     		push	{r7, lr}
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 7, -8
 2012              		.cfi_offset 14, -4
 2013 0002 82B0     		sub	sp, sp, #8
 2014              		.cfi_def_cfa_offset 16
 2015 0004 00AF     		add	r7, sp, #0
 2016              		.cfi_def_cfa_register 7
 2017 0006 0346     		mov	r3, r0
 2018 0008 FB71     		strb	r3, [r7, #7]
 490:.\main.c      ****     M2_IN2_Write(dir);
 2019              		.loc 1 490 0
 2020 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2021 000c 1846     		mov	r0, r3
 2022 000e FFF7FEFF 		bl	M2_IN2_Write
 491:.\main.c      **** }
 2023              		.loc 1 491 0
 2024 0012 0837     		adds	r7, r7, #8
 2025              		.cfi_def_cfa_offset 8
 2026 0014 BD46     		mov	sp, r7
 2027              		.cfi_def_cfa_register 13
 2028              		@ sp needed
 2029 0016 80BD     		pop	{r7, pc}
 2030              		.cfi_endproc
 2031              	.LFE73:
 2032              		.size	setLeftDir, .-setLeftDir
 2033              		.section	.text.setRightDir,"ax",%progbits
 2034              		.align	2
 2035              		.global	setRightDir
 2036              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 46


 2037              		.thumb_func
 2038              		.type	setRightDir, %function
 2039              	setRightDir:
 2040              	.LFB74:
 492:.\main.c      **** 
 493:.\main.c      **** void setRightDir(uint8 dir)
 494:.\main.c      **** {
 2041              		.loc 1 494 0
 2042              		.cfi_startproc
 2043              		@ args = 0, pretend = 0, frame = 8
 2044              		@ frame_needed = 1, uses_anonymous_args = 0
 2045 0000 80B5     		push	{r7, lr}
 2046              		.cfi_def_cfa_offset 8
 2047              		.cfi_offset 7, -8
 2048              		.cfi_offset 14, -4
 2049 0002 82B0     		sub	sp, sp, #8
 2050              		.cfi_def_cfa_offset 16
 2051 0004 00AF     		add	r7, sp, #0
 2052              		.cfi_def_cfa_register 7
 2053 0006 0346     		mov	r3, r0
 2054 0008 FB71     		strb	r3, [r7, #7]
 495:.\main.c      ****     M1_IN2_Write(dir);
 2055              		.loc 1 495 0
 2056 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2057 000c 1846     		mov	r0, r3
 2058 000e FFF7FEFF 		bl	M1_IN2_Write
 496:.\main.c      **** }
 2059              		.loc 1 496 0
 2060 0012 0837     		adds	r7, r7, #8
 2061              		.cfi_def_cfa_offset 8
 2062 0014 BD46     		mov	sp, r7
 2063              		.cfi_def_cfa_register 13
 2064              		@ sp needed
 2065 0016 80BD     		pop	{r7, pc}
 2066              		.cfi_endproc
 2067              	.LFE74:
 2068              		.size	setRightDir, .-setRightDir
 2069              		.section	.rodata
 2070              		.align	2
 2071              	.LC6:
 2072 0080 6469723A 		.ascii	"dir: %d\015\012\000"
 2072      2025640D 
 2072      0A00
 2073              		.section	.text.reverseDirection,"ax",%progbits
 2074              		.align	2
 2075              		.global	reverseDirection
 2076              		.thumb
 2077              		.thumb_func
 2078              		.type	reverseDirection, %function
 2079              	reverseDirection:
 2080              	.LFB75:
 497:.\main.c      **** 
 498:.\main.c      **** void reverseDirection()
 499:.\main.c      **** {
 2081              		.loc 1 499 0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 47


 2084              		@ frame_needed = 1, uses_anonymous_args = 0
 2085 0000 80B5     		push	{r7, lr}
 2086              		.cfi_def_cfa_offset 8
 2087              		.cfi_offset 7, -8
 2088              		.cfi_offset 14, -4
 2089 0002 84B0     		sub	sp, sp, #16
 2090              		.cfi_def_cfa_offset 24
 2091 0004 00AF     		add	r7, sp, #0
 2092              		.cfi_def_cfa_register 7
 500:.\main.c      ****     direction = !direction;
 2093              		.loc 1 500 0
 2094 0006 114B     		ldr	r3, .L106
 2095 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2096 000a 002B     		cmp	r3, #0
 2097 000c 0CBF     		ite	eq
 2098 000e 0123     		moveq	r3, #1
 2099 0010 0023     		movne	r3, #0
 2100 0012 DBB2     		uxtb	r3, r3
 2101 0014 1A46     		mov	r2, r3
 2102 0016 0D4B     		ldr	r3, .L106
 2103 0018 1A70     		strb	r2, [r3]
 501:.\main.c      ****     setLeftDir(direction);
 2104              		.loc 1 501 0
 2105 001a 0C4B     		ldr	r3, .L106
 2106 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2107 001e 1846     		mov	r0, r3
 2108 0020 FFF7FEFF 		bl	setLeftDir
 502:.\main.c      ****     setRightDir(direction);
 2109              		.loc 1 502 0
 2110 0024 094B     		ldr	r3, .L106
 2111 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2112 0028 1846     		mov	r0, r3
 2113 002a FFF7FEFF 		bl	setRightDir
 503:.\main.c      ****     char mes[16];
 504:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2114              		.loc 1 504 0
 2115 002e 074B     		ldr	r3, .L106
 2116 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2117 0032 1A46     		mov	r2, r3
 2118 0034 3B46     		mov	r3, r7
 2119 0036 1846     		mov	r0, r3
 2120 0038 0549     		ldr	r1, .L106+4
 2121 003a FFF7FEFF 		bl	sprintf
 505:.\main.c      ****     UART_PutString(mes);
 2122              		.loc 1 505 0
 2123 003e 3B46     		mov	r3, r7
 2124 0040 1846     		mov	r0, r3
 2125 0042 FFF7FEFF 		bl	UART_PutString
 506:.\main.c      **** }
 2126              		.loc 1 506 0
 2127 0046 1037     		adds	r7, r7, #16
 2128              		.cfi_def_cfa_offset 8
 2129 0048 BD46     		mov	sp, r7
 2130              		.cfi_def_cfa_register 13
 2131              		@ sp needed
 2132 004a 80BD     		pop	{r7, pc}
 2133              	.L107:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 48


 2134              		.align	2
 2135              	.L106:
 2136 004c 00000000 		.word	direction
 2137 0050 80000000 		.word	.LC6
 2138              		.cfi_endproc
 2139              	.LFE75:
 2140              		.size	reverseDirection, .-reverseDirection
 2141              		.global	__aeabi_dcmplt
 2142              		.global	__aeabi_d2iz
 2143              		.section	.text.setSpeed,"ax",%progbits
 2144              		.align	2
 2145              		.global	setSpeed
 2146              		.thumb
 2147              		.thumb_func
 2148              		.type	setSpeed, %function
 2149              	setSpeed:
 2150              	.LFB76:
 507:.\main.c      **** 
 508:.\main.c      **** void setSpeed(double left, double right){
 2151              		.loc 1 508 0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 24
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155 0000 80B5     		push	{r7, lr}
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 7, -8
 2158              		.cfi_offset 14, -4
 2159 0002 86B0     		sub	sp, sp, #24
 2160              		.cfi_def_cfa_offset 32
 2161 0004 00AF     		add	r7, sp, #0
 2162              		.cfi_def_cfa_register 7
 2163 0006 C7E90201 		strd	r0, [r7, #8]
 2164 000a C7E90023 		strd	r2, [r7]
 509:.\main.c      ****     if(right < 0.0)
 2165              		.loc 1 509 0
 2166 000e D7E90001 		ldrd	r0, [r7]
 2167 0012 4FF00002 		mov	r2, #0
 2168 0016 4FF00003 		mov	r3, #0
 2169 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2170 001e 0346     		mov	r3, r0
 2171 0020 002B     		cmp	r3, #0
 2172 0022 10D0     		beq	.L117
 510:.\main.c      ****     {
 511:.\main.c      ****         //char mes[16];
 512:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 513:.\main.c      ****        // UART_PutString(mes);
 514:.\main.c      ****         setRightDir(!direction);
 2173              		.loc 1 514 0
 2174 0024 304B     		ldr	r3, .L119+8
 2175 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2176 0028 002B     		cmp	r3, #0
 2177 002a 0CBF     		ite	eq
 2178 002c 0123     		moveq	r3, #1
 2179 002e 0023     		movne	r3, #0
 2180 0030 DBB2     		uxtb	r3, r3
 2181 0032 1846     		mov	r0, r3
 2182 0034 FFF7FEFF 		bl	setRightDir
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 49


 515:.\main.c      ****         right = -right;
 2183              		.loc 1 515 0
 2184 0038 3B68     		ldr	r3, [r7]
 2185 003a 3B60     		str	r3, [r7]
 2186 003c 7B68     		ldr	r3, [r7, #4]
 2187 003e 83F00043 		eor	r3, r3, #-2147483648
 2188 0042 7B60     		str	r3, [r7, #4]
 2189 0044 04E0     		b	.L111
 2190              	.L117:
 516:.\main.c      ****     }
 517:.\main.c      ****     else setRightDir(direction);
 2191              		.loc 1 517 0
 2192 0046 284B     		ldr	r3, .L119+8
 2193 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2194 004a 1846     		mov	r0, r3
 2195 004c FFF7FEFF 		bl	setRightDir
 2196              	.L111:
 518:.\main.c      ****     
 519:.\main.c      ****     if(left < 0.0)
 2197              		.loc 1 519 0
 2198 0050 D7E90201 		ldrd	r0, [r7, #8]
 2199 0054 4FF00002 		mov	r2, #0
 2200 0058 4FF00003 		mov	r3, #0
 2201 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2202 0060 0346     		mov	r3, r0
 2203 0062 002B     		cmp	r3, #0
 2204 0064 10D0     		beq	.L118
 520:.\main.c      ****     {
 521:.\main.c      ****        // char mes[16];
 522:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 523:.\main.c      ****         //UART_PutString(mes);
 524:.\main.c      ****         setLeftDir(!direction);
 2205              		.loc 1 524 0
 2206 0066 204B     		ldr	r3, .L119+8
 2207 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2208 006a 002B     		cmp	r3, #0
 2209 006c 0CBF     		ite	eq
 2210 006e 0123     		moveq	r3, #1
 2211 0070 0023     		movne	r3, #0
 2212 0072 DBB2     		uxtb	r3, r3
 2213 0074 1846     		mov	r0, r3
 2214 0076 FFF7FEFF 		bl	setLeftDir
 525:.\main.c      ****         left = -left;
 2215              		.loc 1 525 0
 2216 007a BB68     		ldr	r3, [r7, #8]
 2217 007c BB60     		str	r3, [r7, #8]
 2218 007e FB68     		ldr	r3, [r7, #12]
 2219 0080 83F00043 		eor	r3, r3, #-2147483648
 2220 0084 FB60     		str	r3, [r7, #12]
 2221 0086 04E0     		b	.L114
 2222              	.L118:
 526:.\main.c      ****     }
 527:.\main.c      ****     else setLeftDir(direction);
 2223              		.loc 1 527 0
 2224 0088 174B     		ldr	r3, .L119+8
 2225 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2226 008c 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 50


 2227 008e FFF7FEFF 		bl	setLeftDir
 2228              	.L114:
 528:.\main.c      ****     
 529:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2229              		.loc 1 529 0
 2230 0092 D7E90201 		ldrd	r0, [r7, #8]
 2231 0096 12A3     		adr	r3, .L119
 2232 0098 D3E90023 		ldrd	r2, [r3]
 2233 009c FFF7FEFF 		bl	__aeabi_ddiv
 2234 00a0 0246     		mov	r2, r0
 2235 00a2 0B46     		mov	r3, r1
 2236 00a4 1046     		mov	r0, r2
 2237 00a6 1946     		mov	r1, r3
 2238 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2239 00ac 0346     		mov	r3, r0
 2240 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 530:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2241              		.loc 1 530 0
 2242 00b0 D7E90001 		ldrd	r0, [r7]
 2243 00b4 0AA3     		adr	r3, .L119
 2244 00b6 D3E90023 		ldrd	r2, [r3]
 2245 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2246 00be 0246     		mov	r2, r0
 2247 00c0 0B46     		mov	r3, r1
 2248 00c2 1046     		mov	r0, r2
 2249 00c4 1946     		mov	r1, r3
 2250 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2251 00ca 0346     		mov	r3, r0
 2252 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 531:.\main.c      ****     
 532:.\main.c      ****     leftSpeedLimit = countsRight;
 2253              		.loc 1 532 0
 2254 00ce 074A     		ldr	r2, .L119+12
 2255 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2256 00d2 1380     		strh	r3, [r2]	@ movhi
 533:.\main.c      ****     rightSpeedLimit = countsLeft;
 2257              		.loc 1 533 0
 2258 00d4 064A     		ldr	r2, .L119+16
 2259 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2260 00d8 1380     		strh	r3, [r2]	@ movhi
 534:.\main.c      **** }
 2261              		.loc 1 534 0
 2262 00da 1837     		adds	r7, r7, #24
 2263              		.cfi_def_cfa_offset 8
 2264 00dc BD46     		mov	sp, r7
 2265              		.cfi_def_cfa_register 13
 2266              		@ sp needed
 2267 00de 80BD     		pop	{r7, pc}
 2268              	.L120:
 2269              		.align	3
 2270              	.L119:
 2271 00e0 969526A5 		.word	-1524197994
 2272 00e4 A0DBEF3F 		.word	1072683936
 2273 00e8 00000000 		.word	direction
 2274 00ec 00000000 		.word	leftSpeedLimit
 2275 00f0 00000000 		.word	rightSpeedLimit
 2276              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 51


 2277              	.LFE76:
 2278              		.size	setSpeed, .-setSpeed
 2279 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2280              		.align	2
 2281              		.global	brakeLeft
 2282              		.thumb
 2283              		.thumb_func
 2284              		.type	brakeLeft, %function
 2285              	brakeLeft:
 2286              	.LFB77:
 535:.\main.c      **** 
 536:.\main.c      **** void brakeLeft()
 537:.\main.c      **** {
 2287              		.loc 1 537 0
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 0
 2290              		@ frame_needed = 1, uses_anonymous_args = 0
 2291 0000 80B5     		push	{r7, lr}
 2292              		.cfi_def_cfa_offset 8
 2293              		.cfi_offset 7, -8
 2294              		.cfi_offset 14, -4
 2295 0002 00AF     		add	r7, sp, #0
 2296              		.cfi_def_cfa_register 7
 538:.\main.c      ****     PWM_1_WriteCompare(0);
 2297              		.loc 1 538 0
 2298 0004 0020     		movs	r0, #0
 2299 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 539:.\main.c      ****     left_duty_cycle = 0;
 2300              		.loc 1 539 0
 2301 000a 024B     		ldr	r3, .L122
 2302 000c 0022     		movs	r2, #0
 2303 000e 1A80     		strh	r2, [r3]	@ movhi
 540:.\main.c      **** }
 2304              		.loc 1 540 0
 2305 0010 80BD     		pop	{r7, pc}
 2306              	.L123:
 2307 0012 00BF     		.align	2
 2308              	.L122:
 2309 0014 00000000 		.word	left_duty_cycle
 2310              		.cfi_endproc
 2311              	.LFE77:
 2312              		.size	brakeLeft, .-brakeLeft
 2313              		.section	.text.brakeRight,"ax",%progbits
 2314              		.align	2
 2315              		.global	brakeRight
 2316              		.thumb
 2317              		.thumb_func
 2318              		.type	brakeRight, %function
 2319              	brakeRight:
 2320              	.LFB78:
 541:.\main.c      **** 
 542:.\main.c      **** void brakeRight()
 543:.\main.c      **** {
 2321              		.loc 1 543 0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 52


 2325 0000 80B5     		push	{r7, lr}
 2326              		.cfi_def_cfa_offset 8
 2327              		.cfi_offset 7, -8
 2328              		.cfi_offset 14, -4
 2329 0002 00AF     		add	r7, sp, #0
 2330              		.cfi_def_cfa_register 7
 544:.\main.c      ****      PWM_2_WriteCompare(0);
 2331              		.loc 1 544 0
 2332 0004 0020     		movs	r0, #0
 2333 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 545:.\main.c      ****      right_duty_cycle = 0;
 2334              		.loc 1 545 0
 2335 000a 024B     		ldr	r3, .L125
 2336 000c 0022     		movs	r2, #0
 2337 000e 1A80     		strh	r2, [r3]	@ movhi
 546:.\main.c      **** }
 2338              		.loc 1 546 0
 2339 0010 80BD     		pop	{r7, pc}
 2340              	.L126:
 2341 0012 00BF     		.align	2
 2342              	.L125:
 2343 0014 00000000 		.word	right_duty_cycle
 2344              		.cfi_endproc
 2345              	.LFE78:
 2346              		.size	brakeRight, .-brakeRight
 2347              		.section	.text.brakeMotor,"ax",%progbits
 2348              		.align	2
 2349              		.global	brakeMotor
 2350              		.thumb
 2351              		.thumb_func
 2352              		.type	brakeMotor, %function
 2353              	brakeMotor:
 2354              	.LFB79:
 547:.\main.c      **** 
 548:.\main.c      **** void brakeMotor(){
 2355              		.loc 1 548 0
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 0
 2358              		@ frame_needed = 1, uses_anonymous_args = 0
 2359 0000 80B5     		push	{r7, lr}
 2360              		.cfi_def_cfa_offset 8
 2361              		.cfi_offset 7, -8
 2362              		.cfi_offset 14, -4
 2363 0002 00AF     		add	r7, sp, #0
 2364              		.cfi_def_cfa_register 7
 549:.\main.c      ****     setSpeed(0, 0);
 2365              		.loc 1 549 0
 2366 0004 4FF00000 		mov	r0, #0
 2367 0008 4FF00001 		mov	r1, #0
 2368 000c 4FF00002 		mov	r2, #0
 2369 0010 4FF00003 		mov	r3, #0
 2370 0014 FFF7FEFF 		bl	setSpeed
 550:.\main.c      ****     brakeLeft();
 2371              		.loc 1 550 0
 2372 0018 FFF7FEFF 		bl	brakeLeft
 551:.\main.c      ****     brakeRight();
 2373              		.loc 1 551 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 53


 2374 001c FFF7FEFF 		bl	brakeRight
 552:.\main.c      **** }
 2375              		.loc 1 552 0
 2376 0020 80BD     		pop	{r7, pc}
 2377              		.cfi_endproc
 2378              	.LFE79:
 2379              		.size	brakeMotor, .-brakeMotor
 2380 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2381              		.align	2
 2382              		.global	driveForwards
 2383              		.thumb
 2384              		.thumb_func
 2385              		.type	driveForwards, %function
 2386              	driveForwards:
 2387              	.LFB80:
 553:.\main.c      **** 
 554:.\main.c      **** void driveForwards()
 555:.\main.c      **** {
 2388              		.loc 1 555 0
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 0
 2391              		@ frame_needed = 1, uses_anonymous_args = 0
 2392 0000 80B5     		push	{r7, lr}
 2393              		.cfi_def_cfa_offset 8
 2394              		.cfi_offset 7, -8
 2395              		.cfi_offset 14, -4
 2396 0002 00AF     		add	r7, sp, #0
 2397              		.cfi_def_cfa_register 7
 556:.\main.c      ****     setSpeed(speed, speed);
 2398              		.loc 1 556 0
 2399 0004 044B     		ldr	r3, .L129
 2400 0006 D3E90001 		ldrd	r0, [r3]
 2401 000a 034B     		ldr	r3, .L129
 2402 000c D3E90023 		ldrd	r2, [r3]
 2403 0010 FFF7FEFF 		bl	setSpeed
 557:.\main.c      **** }
 2404              		.loc 1 557 0
 2405 0014 80BD     		pop	{r7, pc}
 2406              	.L130:
 2407 0016 00BF     		.align	2
 2408              	.L129:
 2409 0018 00000000 		.word	speed
 2410              		.cfi_endproc
 2411              	.LFE80:
 2412              		.size	driveForwards, .-driveForwards
 2413              		.global	__aeabi_dadd
 2414              		.section	.text.turnRight,"ax",%progbits
 2415              		.align	2
 2416              		.global	turnRight
 2417              		.thumb
 2418              		.thumb_func
 2419              		.type	turnRight, %function
 2420              	turnRight:
 2421              	.LFB81:
 558:.\main.c      **** 
 559:.\main.c      **** void turnRight()
 560:.\main.c      **** {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 54


 2422              		.loc 1 560 0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 1, uses_anonymous_args = 0
 2426 0000 80B5     		push	{r7, lr}
 2427              		.cfi_def_cfa_offset 8
 2428              		.cfi_offset 7, -8
 2429              		.cfi_offset 14, -4
 2430 0002 00AF     		add	r7, sp, #0
 2431              		.cfi_def_cfa_register 7
 561:.\main.c      ****     setSpeed(0,speed*2.0);
 2432              		.loc 1 561 0
 2433 0004 074B     		ldr	r3, .L132
 2434 0006 D3E90023 		ldrd	r2, [r3]
 2435 000a 1046     		mov	r0, r2
 2436 000c 1946     		mov	r1, r3
 2437 000e FFF7FEFF 		bl	__aeabi_dadd
 2438 0012 0246     		mov	r2, r0
 2439 0014 0B46     		mov	r3, r1
 2440 0016 4FF00000 		mov	r0, #0
 2441 001a 4FF00001 		mov	r1, #0
 2442 001e FFF7FEFF 		bl	setSpeed
 562:.\main.c      **** }
 2443              		.loc 1 562 0
 2444 0022 80BD     		pop	{r7, pc}
 2445              	.L133:
 2446              		.align	2
 2447              	.L132:
 2448 0024 00000000 		.word	speed
 2449              		.cfi_endproc
 2450              	.LFE81:
 2451              		.size	turnRight, .-turnRight
 2452              		.section	.text.turnLeft,"ax",%progbits
 2453              		.align	2
 2454              		.global	turnLeft
 2455              		.thumb
 2456              		.thumb_func
 2457              		.type	turnLeft, %function
 2458              	turnLeft:
 2459              	.LFB82:
 563:.\main.c      **** 
 564:.\main.c      **** void turnLeft()
 565:.\main.c      **** {
 2460              		.loc 1 565 0
 2461              		.cfi_startproc
 2462              		@ args = 0, pretend = 0, frame = 0
 2463              		@ frame_needed = 1, uses_anonymous_args = 0
 2464 0000 80B5     		push	{r7, lr}
 2465              		.cfi_def_cfa_offset 8
 2466              		.cfi_offset 7, -8
 2467              		.cfi_offset 14, -4
 2468 0002 00AF     		add	r7, sp, #0
 2469              		.cfi_def_cfa_register 7
 566:.\main.c      ****     setSpeed(speed*2.0,0);
 2470              		.loc 1 566 0
 2471 0004 084B     		ldr	r3, .L135
 2472 0006 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 55


 2473 000a 1046     		mov	r0, r2
 2474 000c 1946     		mov	r1, r3
 2475 000e FFF7FEFF 		bl	__aeabi_dadd
 2476 0012 0246     		mov	r2, r0
 2477 0014 0B46     		mov	r3, r1
 2478 0016 1046     		mov	r0, r2
 2479 0018 1946     		mov	r1, r3
 2480 001a 4FF00002 		mov	r2, #0
 2481 001e 4FF00003 		mov	r3, #0
 2482 0022 FFF7FEFF 		bl	setSpeed
 567:.\main.c      **** }
 2483              		.loc 1 567 0
 2484 0026 80BD     		pop	{r7, pc}
 2485              	.L136:
 2486              		.align	2
 2487              	.L135:
 2488 0028 00000000 		.word	speed
 2489              		.cfi_endproc
 2490              	.LFE82:
 2491              		.size	turnLeft, .-turnLeft
 2492              		.section	.text.turnU,"ax",%progbits
 2493              		.align	2
 2494              		.global	turnU
 2495              		.thumb
 2496              		.thumb_func
 2497              		.type	turnU, %function
 2498              	turnU:
 2499              	.LFB83:
 568:.\main.c      **** 
 569:.\main.c      **** void turnU()
 570:.\main.c      **** {
 2500              		.loc 1 570 0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 0
 2503              		@ frame_needed = 1, uses_anonymous_args = 0
 2504 0000 B0B5     		push	{r4, r5, r7, lr}
 2505              		.cfi_def_cfa_offset 16
 2506              		.cfi_offset 4, -16
 2507              		.cfi_offset 5, -12
 2508              		.cfi_offset 7, -8
 2509              		.cfi_offset 14, -4
 2510 0002 00AF     		add	r7, sp, #0
 2511              		.cfi_def_cfa_register 7
 571:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 2512              		.loc 1 571 0
 2513 0004 0E4B     		ldr	r3, .L138
 2514 0006 D3E90023 		ldrd	r2, [r3]
 2515 000a 1446     		mov	r4, r2
 2516 000c 83F00045 		eor	r5, r3, #-2147483648
 2517 0010 2046     		mov	r0, r4
 2518 0012 2946     		mov	r1, r5
 2519 0014 2246     		mov	r2, r4
 2520 0016 2B46     		mov	r3, r5
 2521 0018 FFF7FEFF 		bl	__aeabi_dadd
 2522 001c 0246     		mov	r2, r0
 2523 001e 0B46     		mov	r3, r1
 2524 0020 1446     		mov	r4, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 56


 2525 0022 1D46     		mov	r5, r3
 2526 0024 064B     		ldr	r3, .L138
 2527 0026 D3E90023 		ldrd	r2, [r3]
 2528 002a 1046     		mov	r0, r2
 2529 002c 1946     		mov	r1, r3
 2530 002e FFF7FEFF 		bl	__aeabi_dadd
 2531 0032 0246     		mov	r2, r0
 2532 0034 0B46     		mov	r3, r1
 2533 0036 2046     		mov	r0, r4
 2534 0038 2946     		mov	r1, r5
 2535 003a FFF7FEFF 		bl	setSpeed
 572:.\main.c      **** }
 2536              		.loc 1 572 0
 2537 003e B0BD     		pop	{r4, r5, r7, pc}
 2538              	.L139:
 2539              		.align	2
 2540              	.L138:
 2541 0040 00000000 		.word	speed
 2542              		.cfi_endproc
 2543              	.LFE83:
 2544              		.size	turnU, .-turnU
 2545              		.section	.text.initTurnLeft,"ax",%progbits
 2546              		.align	2
 2547              		.global	initTurnLeft
 2548              		.thumb
 2549              		.thumb_func
 2550              		.type	initTurnLeft, %function
 2551              	initTurnLeft:
 2552              	.LFB84:
 573:.\main.c      **** 
 574:.\main.c      **** void initTurnLeft(){
 2553              		.loc 1 574 0
 2554              		.cfi_startproc
 2555              		@ args = 0, pretend = 0, frame = 0
 2556              		@ frame_needed = 1, uses_anonymous_args = 0
 2557 0000 80B5     		push	{r7, lr}
 2558              		.cfi_def_cfa_offset 8
 2559              		.cfi_offset 7, -8
 2560              		.cfi_offset 14, -4
 2561 0002 00AF     		add	r7, sp, #0
 2562              		.cfi_def_cfa_register 7
 575:.\main.c      ****     Timer_2_Stop();
 2563              		.loc 1 575 0
 2564 0004 FFF7FEFF 		bl	Timer_2_Stop
 576:.\main.c      ****     prev_movement_state = movement_state;
 2565              		.loc 1 576 0
 2566 0008 084B     		ldr	r3, .L141
 2567 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2568 000c 084B     		ldr	r3, .L141+4
 2569 000e 1A70     		strb	r2, [r3]
 577:.\main.c      ****     movement_state = LTURN;
 2570              		.loc 1 577 0
 2571 0010 064B     		ldr	r3, .L141
 2572 0012 0122     		movs	r2, #1
 2573 0014 1A70     		strb	r2, [r3]
 578:.\main.c      ****     brakeLeft();
 2574              		.loc 1 578 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 57


 2575 0016 FFF7FEFF 		bl	brakeLeft
 579:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 2576              		.loc 1 579 0
 2577 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2578 001e 0346     		mov	r3, r0
 2579 0020 1A46     		mov	r2, r3
 2580 0022 044B     		ldr	r3, .L141+8
 2581 0024 1A80     		strh	r2, [r3]	@ movhi
 580:.\main.c      ****     Timer_2_Start();
 2582              		.loc 1 580 0
 2583 0026 FFF7FEFF 		bl	Timer_2_Start
 581:.\main.c      **** }
 2584              		.loc 1 581 0
 2585 002a 80BD     		pop	{r7, pc}
 2586              	.L142:
 2587              		.align	2
 2588              	.L141:
 2589 002c 00000000 		.word	movement_state
 2590 0030 00000000 		.word	prev_movement_state
 2591 0034 00000000 		.word	start_turn_count
 2592              		.cfi_endproc
 2593              	.LFE84:
 2594              		.size	initTurnLeft, .-initTurnLeft
 2595              		.section	.text.initTurnRight,"ax",%progbits
 2596              		.align	2
 2597              		.global	initTurnRight
 2598              		.thumb
 2599              		.thumb_func
 2600              		.type	initTurnRight, %function
 2601              	initTurnRight:
 2602              	.LFB85:
 582:.\main.c      **** 
 583:.\main.c      **** void initTurnRight(){
 2603              		.loc 1 583 0
 2604              		.cfi_startproc
 2605              		@ args = 0, pretend = 0, frame = 0
 2606              		@ frame_needed = 1, uses_anonymous_args = 0
 2607 0000 80B5     		push	{r7, lr}
 2608              		.cfi_def_cfa_offset 8
 2609              		.cfi_offset 7, -8
 2610              		.cfi_offset 14, -4
 2611 0002 00AF     		add	r7, sp, #0
 2612              		.cfi_def_cfa_register 7
 584:.\main.c      ****     Timer_2_Stop();
 2613              		.loc 1 584 0
 2614 0004 FFF7FEFF 		bl	Timer_2_Stop
 585:.\main.c      ****     prev_movement_state = movement_state;
 2615              		.loc 1 585 0
 2616 0008 084B     		ldr	r3, .L144
 2617 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2618 000c 084B     		ldr	r3, .L144+4
 2619 000e 1A70     		strb	r2, [r3]
 586:.\main.c      ****     movement_state = RTURN;
 2620              		.loc 1 586 0
 2621 0010 064B     		ldr	r3, .L144
 2622 0012 0222     		movs	r2, #2
 2623 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 58


 587:.\main.c      ****     brakeRight();
 2624              		.loc 1 587 0
 2625 0016 FFF7FEFF 		bl	brakeRight
 588:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 2626              		.loc 1 588 0
 2627 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2628 001e 0346     		mov	r3, r0
 2629 0020 1A46     		mov	r2, r3
 2630 0022 044B     		ldr	r3, .L144+8
 2631 0024 1A80     		strh	r2, [r3]	@ movhi
 589:.\main.c      ****     Timer_2_Start();
 2632              		.loc 1 589 0
 2633 0026 FFF7FEFF 		bl	Timer_2_Start
 590:.\main.c      **** }
 2634              		.loc 1 590 0
 2635 002a 80BD     		pop	{r7, pc}
 2636              	.L145:
 2637              		.align	2
 2638              	.L144:
 2639 002c 00000000 		.word	movement_state
 2640 0030 00000000 		.word	prev_movement_state
 2641 0034 00000000 		.word	start_turn_count
 2642              		.cfi_endproc
 2643              	.LFE85:
 2644              		.size	initTurnRight, .-initTurnRight
 2645              		.section	.text.initTurnU,"ax",%progbits
 2646              		.align	2
 2647              		.global	initTurnU
 2648              		.thumb
 2649              		.thumb_func
 2650              		.type	initTurnU, %function
 2651              	initTurnU:
 2652              	.LFB86:
 591:.\main.c      **** 
 592:.\main.c      **** void initTurnU(){
 2653              		.loc 1 592 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 1, uses_anonymous_args = 0
 2657 0000 80B5     		push	{r7, lr}
 2658              		.cfi_def_cfa_offset 8
 2659              		.cfi_offset 7, -8
 2660              		.cfi_offset 14, -4
 2661 0002 00AF     		add	r7, sp, #0
 2662              		.cfi_def_cfa_register 7
 593:.\main.c      ****     Timer_2_Stop();
 2663              		.loc 1 593 0
 2664 0004 FFF7FEFF 		bl	Timer_2_Stop
 594:.\main.c      ****     prev_movement_state = movement_state;
 2665              		.loc 1 594 0
 2666 0008 084B     		ldr	r3, .L147
 2667 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2668 000c 084B     		ldr	r3, .L147+4
 2669 000e 1A70     		strb	r2, [r3]
 595:.\main.c      ****     movement_state = UTURN;
 2670              		.loc 1 595 0
 2671 0010 064B     		ldr	r3, .L147
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 59


 2672 0012 0722     		movs	r2, #7
 2673 0014 1A70     		strb	r2, [r3]
 596:.\main.c      ****     brakeMotor();
 2674              		.loc 1 596 0
 2675 0016 FFF7FEFF 		bl	brakeMotor
 597:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 2676              		.loc 1 597 0
 2677 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2678 001e 0346     		mov	r3, r0
 2679 0020 1A46     		mov	r2, r3
 2680 0022 044B     		ldr	r3, .L147+8
 2681 0024 1A80     		strh	r2, [r3]	@ movhi
 598:.\main.c      ****     Timer_2_Start();
 2682              		.loc 1 598 0
 2683 0026 FFF7FEFF 		bl	Timer_2_Start
 599:.\main.c      **** }
 2684              		.loc 1 599 0
 2685 002a 80BD     		pop	{r7, pc}
 2686              	.L148:
 2687              		.align	2
 2688              	.L147:
 2689 002c 00000000 		.word	movement_state
 2690 0030 00000000 		.word	prev_movement_state
 2691 0034 00000000 		.word	start_turn_count
 2692              		.cfi_endproc
 2693              	.LFE86:
 2694              		.size	initTurnU, .-initTurnU
 2695              		.section	.text.initForward,"ax",%progbits
 2696              		.align	2
 2697              		.global	initForward
 2698              		.thumb
 2699              		.thumb_func
 2700              		.type	initForward, %function
 2701              	initForward:
 2702              	.LFB87:
 600:.\main.c      **** 
 601:.\main.c      **** void initForward(){
 2703              		.loc 1 601 0
 2704              		.cfi_startproc
 2705              		@ args = 0, pretend = 0, frame = 0
 2706              		@ frame_needed = 1, uses_anonymous_args = 0
 2707 0000 80B5     		push	{r7, lr}
 2708              		.cfi_def_cfa_offset 8
 2709              		.cfi_offset 7, -8
 2710              		.cfi_offset 14, -4
 2711 0002 00AF     		add	r7, sp, #0
 2712              		.cfi_def_cfa_register 7
 602:.\main.c      ****     brakeMotor();
 2713              		.loc 1 602 0
 2714 0004 FFF7FEFF 		bl	brakeMotor
 603:.\main.c      ****     movement_state = DRIVE;
 2715              		.loc 1 603 0
 2716 0008 014B     		ldr	r3, .L150
 2717 000a 0022     		movs	r2, #0
 2718 000c 1A70     		strb	r2, [r3]
 604:.\main.c      **** }
 2719              		.loc 1 604 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 60


 2720 000e 80BD     		pop	{r7, pc}
 2721              	.L151:
 2722              		.align	2
 2723              	.L150:
 2724 0010 00000000 		.word	movement_state
 2725              		.cfi_endproc
 2726              	.LFE87:
 2727              		.size	initForward, .-initForward
 2728              		.section	.text.initBrake,"ax",%progbits
 2729              		.align	2
 2730              		.global	initBrake
 2731              		.thumb
 2732              		.thumb_func
 2733              		.type	initBrake, %function
 2734              	initBrake:
 2735              	.LFB88:
 605:.\main.c      **** 
 606:.\main.c      **** void initBrake(){
 2736              		.loc 1 606 0
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 0
 2739              		@ frame_needed = 1, uses_anonymous_args = 0
 2740              		@ link register save eliminated.
 2741 0000 80B4     		push	{r7}
 2742              		.cfi_def_cfa_offset 4
 2743              		.cfi_offset 7, -4
 2744 0002 00AF     		add	r7, sp, #0
 2745              		.cfi_def_cfa_register 7
 607:.\main.c      ****     movement_state = STOPPED;
 2746              		.loc 1 607 0
 2747 0004 034B     		ldr	r3, .L153
 2748 0006 0322     		movs	r2, #3
 2749 0008 1A70     		strb	r2, [r3]
 608:.\main.c      **** }
 2750              		.loc 1 608 0
 2751 000a BD46     		mov	sp, r7
 2752              		.cfi_def_cfa_register 13
 2753              		@ sp needed
 2754 000c 5DF8047B 		ldr	r7, [sp], #4
 2755              		.cfi_restore 7
 2756              		.cfi_def_cfa_offset 0
 2757 0010 7047     		bx	lr
 2758              	.L154:
 2759 0012 00BF     		.align	2
 2760              	.L153:
 2761 0014 00000000 		.word	movement_state
 2762              		.cfi_endproc
 2763              	.LFE88:
 2764              		.size	initBrake, .-initBrake
 2765              		.section	.text.initTrack,"ax",%progbits
 2766              		.align	2
 2767              		.global	initTrack
 2768              		.thumb
 2769              		.thumb_func
 2770              		.type	initTrack, %function
 2771              	initTrack:
 2772              	.LFB89:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 61


 609:.\main.c      **** 
 610:.\main.c      **** void initTrack()
 611:.\main.c      **** {
 2773              		.loc 1 611 0
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 0
 2776              		@ frame_needed = 1, uses_anonymous_args = 0
 2777              		@ link register save eliminated.
 2778 0000 80B4     		push	{r7}
 2779              		.cfi_def_cfa_offset 4
 2780              		.cfi_offset 7, -4
 2781 0002 00AF     		add	r7, sp, #0
 2782              		.cfi_def_cfa_register 7
 612:.\main.c      ****     movement_state = TRACKING;
 2783              		.loc 1 612 0
 2784 0004 034B     		ldr	r3, .L156
 2785 0006 0422     		movs	r2, #4
 2786 0008 1A70     		strb	r2, [r3]
 613:.\main.c      **** }
 2787              		.loc 1 613 0
 2788 000a BD46     		mov	sp, r7
 2789              		.cfi_def_cfa_register 13
 2790              		@ sp needed
 2791 000c 5DF8047B 		ldr	r7, [sp], #4
 2792              		.cfi_restore 7
 2793              		.cfi_def_cfa_offset 0
 2794 0010 7047     		bx	lr
 2795              	.L157:
 2796 0012 00BF     		.align	2
 2797              	.L156:
 2798 0014 00000000 		.word	movement_state
 2799              		.cfi_endproc
 2800              	.LFE89:
 2801              		.size	initTrack, .-initTrack
 2802              		.section	.text.initTrackU,"ax",%progbits
 2803              		.align	2
 2804              		.global	initTrackU
 2805              		.thumb
 2806              		.thumb_func
 2807              		.type	initTrackU, %function
 2808              	initTrackU:
 2809              	.LFB90:
 614:.\main.c      **** 
 615:.\main.c      **** void initTrackU(){
 2810              		.loc 1 615 0
 2811              		.cfi_startproc
 2812              		@ args = 0, pretend = 0, frame = 0
 2813              		@ frame_needed = 1, uses_anonymous_args = 0
 2814              		@ link register save eliminated.
 2815 0000 80B4     		push	{r7}
 2816              		.cfi_def_cfa_offset 4
 2817              		.cfi_offset 7, -4
 2818 0002 00AF     		add	r7, sp, #0
 2819              		.cfi_def_cfa_register 7
 616:.\main.c      ****     movement_state = TRACKING_U;
 2820              		.loc 1 616 0
 2821 0004 034B     		ldr	r3, .L159
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 62


 2822 0006 0522     		movs	r2, #5
 2823 0008 1A70     		strb	r2, [r3]
 617:.\main.c      **** }
 2824              		.loc 1 617 0
 2825 000a BD46     		mov	sp, r7
 2826              		.cfi_def_cfa_register 13
 2827              		@ sp needed
 2828 000c 5DF8047B 		ldr	r7, [sp], #4
 2829              		.cfi_restore 7
 2830              		.cfi_def_cfa_offset 0
 2831 0010 7047     		bx	lr
 2832              	.L160:
 2833 0012 00BF     		.align	2
 2834              	.L159:
 2835 0014 00000000 		.word	movement_state
 2836              		.cfi_endproc
 2837              	.LFE90:
 2838              		.size	initTrackU, .-initTrackU
 2839              		.section	.text.inittrackLineZ,"ax",%progbits
 2840              		.align	2
 2841              		.global	inittrackLineZ
 2842              		.thumb
 2843              		.thumb_func
 2844              		.type	inittrackLineZ, %function
 2845              	inittrackLineZ:
 2846              	.LFB91:
 618:.\main.c      **** 
 619:.\main.c      **** void inittrackLineZ(){
 2847              		.loc 1 619 0
 2848              		.cfi_startproc
 2849              		@ args = 0, pretend = 0, frame = 0
 2850              		@ frame_needed = 1, uses_anonymous_args = 0
 2851              		@ link register save eliminated.
 2852 0000 80B4     		push	{r7}
 2853              		.cfi_def_cfa_offset 4
 2854              		.cfi_offset 7, -4
 2855 0002 00AF     		add	r7, sp, #0
 2856              		.cfi_def_cfa_register 7
 620:.\main.c      ****     movement_state = TRACKING_SOFT;
 2857              		.loc 1 620 0
 2858 0004 034B     		ldr	r3, .L162
 2859 0006 0622     		movs	r2, #6
 2860 0008 1A70     		strb	r2, [r3]
 621:.\main.c      **** }
 2861              		.loc 1 621 0
 2862 000a BD46     		mov	sp, r7
 2863              		.cfi_def_cfa_register 13
 2864              		@ sp needed
 2865 000c 5DF8047B 		ldr	r7, [sp], #4
 2866              		.cfi_restore 7
 2867              		.cfi_def_cfa_offset 0
 2868 0010 7047     		bx	lr
 2869              	.L163:
 2870 0012 00BF     		.align	2
 2871              	.L162:
 2872 0014 00000000 		.word	movement_state
 2873              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 63


 2874              	.LFE91:
 2875              		.size	inittrackLineZ, .-inittrackLineZ
 2876              		.section	.text.rxInt,"ax",%progbits
 2877              		.align	2
 2878              		.global	rxInt
 2879              		.thumb
 2880              		.thumb_func
 2881              		.type	rxInt, %function
 2882              	rxInt:
 2883              	.LFB92:
 622:.\main.c      **** 
 623:.\main.c      **** 
 624:.\main.c      **** 
 625:.\main.c      **** //Binary RF Data
 626:.\main.c      **** CY_ISR(rxInt){
 2884              		.loc 1 626 0
 2885              		.cfi_startproc
 2886              		@ args = 0, pretend = 0, frame = 8
 2887              		@ frame_needed = 1, uses_anonymous_args = 0
 2888 0000 B0B5     		push	{r4, r5, r7, lr}
 2889              		.cfi_def_cfa_offset 16
 2890              		.cfi_offset 4, -16
 2891              		.cfi_offset 5, -12
 2892              		.cfi_offset 7, -8
 2893              		.cfi_offset 14, -4
 2894 0002 82B0     		sub	sp, sp, #8
 2895              		.cfi_def_cfa_offset 24
 2896 0004 00AF     		add	r7, sp, #0
 2897              		.cfi_def_cfa_register 7
 627:.\main.c      ****     char rf_char = UART_GetChar();
 2898              		.loc 1 627 0
 2899 0006 FFF7FEFF 		bl	UART_GetChar
 2900 000a 0346     		mov	r3, r0
 2901 000c FB71     		strb	r3, [r7, #7]
 628:.\main.c      ****     if(rf_char == SOP){
 2902              		.loc 1 628 0
 2903 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2904 0010 AA2B     		cmp	r3, #170
 2905 0012 2BD1     		bne	.L165
 629:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 630:.\main.c      ****             if(byteCount == 34)
 2906              		.loc 1 630 0
 2907 0014 224B     		ldr	r3, .L169
 2908 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2909 0018 222B     		cmp	r3, #34
 2910 001a 20D1     		bne	.L166
 631:.\main.c      ****             {
 632:.\main.c      ****                 system_state = buffer_state;
 2911              		.loc 1 632 0
 2912 001c 214B     		ldr	r3, .L169+4
 2913 001e 224A     		ldr	r2, .L169+8
 2914 0020 1568     		ldr	r5, [r2]	@ unaligned
 2915 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 2916 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 2917 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 2918 0028 1D60     		str	r5, [r3]	@ unaligned
 2919 002a 5C60     		str	r4, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 64


 2920 002c 9860     		str	r0, [r3, #8]	@ unaligned
 2921 002e D960     		str	r1, [r3, #12]	@ unaligned
 2922 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 2923 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 2924 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 2925 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 2926 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 2927 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 2928 003c 9861     		str	r0, [r3, #24]	@ unaligned
 2929 003e D961     		str	r1, [r3, #28]	@ unaligned
 633:.\main.c      ****                 if(initial_pos_valid == 0)
 2930              		.loc 1 633 0
 2931 0040 1A4B     		ldr	r3, .L169+12
 2932 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2933 0044 002B     		cmp	r3, #0
 2934 0046 0AD1     		bne	.L166
 634:.\main.c      ****                 {
 635:.\main.c      ****                     LED_Write(~LED_Read());
 2935              		.loc 1 635 0
 2936 0048 FFF7FEFF 		bl	LED_Read
 2937 004c 0346     		mov	r3, r0
 2938 004e DB43     		mvns	r3, r3
 2939 0050 DBB2     		uxtb	r3, r3
 2940 0052 1846     		mov	r0, r3
 2941 0054 FFF7FEFF 		bl	LED_Write
 636:.\main.c      ****                     initial_pos_valid = 1;
 2942              		.loc 1 636 0
 2943 0058 144B     		ldr	r3, .L169+12
 2944 005a 0122     		movs	r2, #1
 2945 005c 1A70     		strb	r2, [r3]
 2946              	.L166:
 637:.\main.c      ****                 }
 638:.\main.c      ****             }
 639:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 2947              		.loc 1 639 0
 2948 005e 104B     		ldr	r3, .L169
 2949 0060 0222     		movs	r2, #2
 2950 0062 1A70     		strb	r2, [r3]
 640:.\main.c      ****             flag_rx = 0;
 2951              		.loc 1 640 0
 2952 0064 124B     		ldr	r3, .L169+16
 2953 0066 0022     		movs	r2, #0
 2954 0068 1A70     		strb	r2, [r3]
 2955 006a 16E0     		b	.L164
 2956              	.L165:
 641:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 642:.\main.c      ****         }
 643:.\main.c      ****         else
 644:.\main.c      ****         {
 645:.\main.c      ****             packet[byteCount % 2] = rf_char;
 2957              		.loc 1 645 0
 2958 006c 0C4B     		ldr	r3, .L169
 2959 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2960 0070 03F00103 		and	r3, r3, #1
 2961 0074 0F49     		ldr	r1, .L169+20
 2962 0076 FA79     		ldrb	r2, [r7, #7]
 2963 0078 CA54     		strb	r2, [r1, r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 65


 646:.\main.c      ****            
 647:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 2964              		.loc 1 647 0
 2965 007a 094B     		ldr	r3, .L169
 2966 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2967 007e 03F00103 		and	r3, r3, #1
 2968 0082 DBB2     		uxtb	r3, r3
 2969 0084 002B     		cmp	r3, #0
 2970 0086 02D0     		beq	.L168
 648:.\main.c      ****             {
 649:.\main.c      ****                 flag_rx = 1;
 2971              		.loc 1 649 0
 2972 0088 094B     		ldr	r3, .L169+16
 2973 008a 0122     		movs	r2, #1
 2974 008c 1A70     		strb	r2, [r3]
 2975              	.L168:
 650:.\main.c      ****             }
 651:.\main.c      ****             byteCount = (byteCount + 1);
 2976              		.loc 1 651 0
 2977 008e 044B     		ldr	r3, .L169
 2978 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2979 0092 0133     		adds	r3, r3, #1
 2980 0094 DAB2     		uxtb	r2, r3
 2981 0096 024B     		ldr	r3, .L169
 2982 0098 1A70     		strb	r2, [r3]
 2983              	.L164:
 652:.\main.c      ****         }
 653:.\main.c      **** }
 2984              		.loc 1 653 0
 2985 009a 0837     		adds	r7, r7, #8
 2986              		.cfi_def_cfa_offset 16
 2987 009c BD46     		mov	sp, r7
 2988              		.cfi_def_cfa_register 13
 2989              		@ sp needed
 2990 009e B0BD     		pop	{r4, r5, r7, pc}
 2991              	.L170:
 2992              		.align	2
 2993              	.L169:
 2994 00a0 00000000 		.word	byteCount
 2995 00a4 00000000 		.word	system_state
 2996 00a8 00000000 		.word	buffer_state
 2997 00ac 00000000 		.word	initial_pos_valid
 2998 00b0 00000000 		.word	flag_rx
 2999 00b4 00000000 		.word	packet
 3000              		.cfi_endproc
 3001              	.LFE92:
 3002              		.size	rxInt, .-rxInt
 3003              		.global	__aeabi_i2f
 3004              		.global	__aeabi_fmul
 3005              		.global	__aeabi_f2iz
 3006              		.section	.rodata
 3007 008a 0000     		.align	2
 3008              	.LC7:
 3009 008c 74617267 		.ascii	"target quad: %d\015\012\000"
 3009      65742071 
 3009      7561643A 
 3009      2025640D 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 66


 3009      0A00
 3010 009e 0000     		.align	2
 3011              	.LC8:
 3012 00a0 703A2573 		.ascii	"p:%s\015\012\000"
 3012      0D0A00
 3013              		.section	.text.BT_rxInt,"ax",%progbits
 3014              		.align	2
 3015              		.global	BT_rxInt
 3016              		.thumb
 3017              		.thumb_func
 3018              		.type	BT_rxInt, %function
 3019              	BT_rxInt:
 3020              	.LFB93:
 654:.\main.c      **** 
 655:.\main.c      **** CY_ISR(BT_rxInt)
 656:.\main.c      **** {
 3021              		.loc 1 656 0
 3022              		.cfi_startproc
 3023              		@ args = 0, pretend = 0, frame = 152
 3024              		@ frame_needed = 1, uses_anonymous_args = 0
 3025 0000 80B5     		push	{r7, lr}
 3026              		.cfi_def_cfa_offset 8
 3027              		.cfi_offset 7, -8
 3028              		.cfi_offset 14, -4
 3029 0002 A6B0     		sub	sp, sp, #152
 3030              		.cfi_def_cfa_offset 160
 3031 0004 00AF     		add	r7, sp, #0
 3032              		.cfi_def_cfa_register 7
 657:.\main.c      ****     char rf_char = UART_GetChar();
 3033              		.loc 1 657 0
 3034 0006 FFF7FEFF 		bl	UART_GetChar
 3035 000a 0346     		mov	r3, r0
 3036 000c 87F89730 		strb	r3, [r7, #151]
 658:.\main.c      ****     switch(rf_char){
 3037              		.loc 1 658 0
 3038 0010 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 3039 0014 613B     		subs	r3, r3, #97
 3040 0016 192B     		cmp	r3, #25
 3041 0018 00F2B680 		bhi	.L171
 3042 001c 01A2     		adr	r2, .L174
 3043 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3044 0022 00BF     		.p2align 2
 3045              	.L174:
 3046 0024 8D000000 		.word	.L173+1
 3047 0028 89010000 		.word	.L171+1
 3048 002c 89010000 		.word	.L171+1
 3049 0030 B1000000 		.word	.L175+1
 3050 0034 89010000 		.word	.L171+1
 3051 0038 BD000000 		.word	.L176+1
 3052 003c 89010000 		.word	.L171+1
 3053 0040 89010000 		.word	.L171+1
 3054 0044 89010000 		.word	.L171+1
 3055 0048 89010000 		.word	.L171+1
 3056 004c 89010000 		.word	.L171+1
 3057 0050 89010000 		.word	.L171+1
 3058 0054 89010000 		.word	.L171+1
 3059 0058 89010000 		.word	.L171+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 67


 3060 005c 89010000 		.word	.L171+1
 3061 0060 89010000 		.word	.L171+1
 3062 0064 ED000000 		.word	.L177+1
 3063 0068 47010000 		.word	.L178+1
 3064 006c A5000000 		.word	.L179+1
 3065 0070 C9000000 		.word	.L180+1
 3066 0074 D5000000 		.word	.L181+1
 3067 0078 89010000 		.word	.L171+1
 3068 007c 99000000 		.word	.L182+1
 3069 0080 5D010000 		.word	.L183+1
 3070 0084 89010000 		.word	.L171+1
 3071 0088 E1000000 		.word	.L184+1
 3072              		.p2align 1
 3073              	.L173:
 3074              	.LBB7:
 659:.\main.c      ****     case 'a':
 660:.\main.c      ****         initTurnLeft();
 3075              		.loc 1 660 0
 3076 008c FFF7FEFF 		bl	initTurnLeft
 661:.\main.c      ****         track_mode = NO_TRACK;
 3077              		.loc 1 661 0
 3078 0090 3F4B     		ldr	r3, .L186
 3079 0092 0022     		movs	r2, #0
 3080 0094 1A70     		strb	r2, [r3]
 662:.\main.c      ****         break;
 3081              		.loc 1 662 0
 3082 0096 77E0     		b	.L171
 3083              	.L182:
 663:.\main.c      ****     case 'w':
 664:.\main.c      ****         initForward();
 3084              		.loc 1 664 0
 3085 0098 FFF7FEFF 		bl	initForward
 665:.\main.c      ****         track_mode = NO_TRACK;
 3086              		.loc 1 665 0
 3087 009c 3C4B     		ldr	r3, .L186
 3088 009e 0022     		movs	r2, #0
 3089 00a0 1A70     		strb	r2, [r3]
 666:.\main.c      ****         break;
 3090              		.loc 1 666 0
 3091 00a2 71E0     		b	.L171
 3092              	.L179:
 667:.\main.c      ****     case 's': 
 668:.\main.c      ****         reverseDirection();
 3093              		.loc 1 668 0
 3094 00a4 FFF7FEFF 		bl	reverseDirection
 669:.\main.c      ****         track_mode = NO_TRACK;
 3095              		.loc 1 669 0
 3096 00a8 394B     		ldr	r3, .L186
 3097 00aa 0022     		movs	r2, #0
 3098 00ac 1A70     		strb	r2, [r3]
 670:.\main.c      ****         break;
 3099              		.loc 1 670 0
 3100 00ae 6BE0     		b	.L171
 3101              	.L175:
 671:.\main.c      ****     case 'd':
 672:.\main.c      ****         initTurnRight();
 3102              		.loc 1 672 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 68


 3103 00b0 FFF7FEFF 		bl	initTurnRight
 673:.\main.c      ****         track_mode = NO_TRACK;
 3104              		.loc 1 673 0
 3105 00b4 364B     		ldr	r3, .L186
 3106 00b6 0022     		movs	r2, #0
 3107 00b8 1A70     		strb	r2, [r3]
 674:.\main.c      ****         break;
 3108              		.loc 1 674 0
 3109 00ba 65E0     		b	.L171
 3110              	.L176:
 675:.\main.c      ****     case 'f':
 676:.\main.c      ****         initBrake();
 3111              		.loc 1 676 0
 3112 00bc FFF7FEFF 		bl	initBrake
 677:.\main.c      ****         track_mode = NO_TRACK;
 3113              		.loc 1 677 0
 3114 00c0 334B     		ldr	r3, .L186
 3115 00c2 0022     		movs	r2, #0
 3116 00c4 1A70     		strb	r2, [r3]
 678:.\main.c      ****         break;
 3117              		.loc 1 678 0
 3118 00c6 5FE0     		b	.L171
 3119              	.L180:
 679:.\main.c      ****     case('t'):
 680:.\main.c      ****         track_mode = CURVE_TRACK;
 3120              		.loc 1 680 0
 3121 00c8 314B     		ldr	r3, .L186
 3122 00ca 0122     		movs	r2, #1
 3123 00cc 1A70     		strb	r2, [r3]
 681:.\main.c      ****         initTrack();
 3124              		.loc 1 681 0
 3125 00ce FFF7FEFF 		bl	initTrack
 682:.\main.c      ****         break;
 3126              		.loc 1 682 0
 3127 00d2 59E0     		b	.L171
 3128              	.L181:
 683:.\main.c      ****     case('u'):
 684:.\main.c      ****         initTrackU();
 3129              		.loc 1 684 0
 3130 00d4 FFF7FEFF 		bl	initTrackU
 685:.\main.c      ****         track_mode = U_TRACK;
 3131              		.loc 1 685 0
 3132 00d8 2D4B     		ldr	r3, .L186
 3133 00da 0222     		movs	r2, #2
 3134 00dc 1A70     		strb	r2, [r3]
 686:.\main.c      ****         break;
 3135              		.loc 1 686 0
 3136 00de 53E0     		b	.L171
 3137              	.L184:
 687:.\main.c      ****     case('z'):
 688:.\main.c      ****         track_mode = SQUARE_TRACK;
 3138              		.loc 1 688 0
 3139 00e0 2B4B     		ldr	r3, .L186
 3140 00e2 0322     		movs	r2, #3
 3141 00e4 1A70     		strb	r2, [r3]
 689:.\main.c      ****         inittrackLineZ();
 3142              		.loc 1 689 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 69


 3143 00e6 FFF7FEFF 		bl	inittrackLineZ
 690:.\main.c      ****         break;
 3144              		.loc 1 690 0
 3145 00ea 4DE0     		b	.L171
 3146              	.L177:
 691:.\main.c      ****     case('q'):
 692:.\main.c      ****         track_mode = QUAD_STOP;
 3147              		.loc 1 692 0
 3148 00ec 284B     		ldr	r3, .L186
 3149 00ee 0422     		movs	r2, #4
 3150 00f0 1A70     		strb	r2, [r3]
 693:.\main.c      ****         accum_dist = 0;
 3151              		.loc 1 693 0
 3152 00f2 284B     		ldr	r3, .L186+4
 3153 00f4 0022     		movs	r2, #0
 3154 00f6 1A80     		strh	r2, [r3]	@ movhi
 694:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3155              		.loc 1 694 0
 3156 00f8 274B     		ldr	r3, .L186+8
 3157 00fa 1B88     		ldrh	r3, [r3]
 3158 00fc 1BB2     		sxth	r3, r3
 3159 00fe 1846     		mov	r0, r3
 3160 0100 FFF7FEFF 		bl	__aeabi_i2f
 3161 0104 0246     		mov	r2, r0
 3162 0106 254B     		ldr	r3, .L186+12
 3163 0108 1B68     		ldr	r3, [r3]	@ float
 3164 010a 1046     		mov	r0, r2
 3165 010c 1946     		mov	r1, r3
 3166 010e FFF7FEFF 		bl	__aeabi_fmul
 3167 0112 0346     		mov	r3, r0
 3168 0114 1846     		mov	r0, r3
 3169 0116 FFF7FEFF 		bl	__aeabi_f2iz
 3170 011a 0346     		mov	r3, r0
 3171 011c 9AB2     		uxth	r2, r3
 3172 011e 204B     		ldr	r3, .L186+16
 3173 0120 1A80     		strh	r2, [r3]	@ movhi
 695:.\main.c      ****         char mes[16];
 696:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3174              		.loc 1 696 0
 3175 0122 1F4B     		ldr	r3, .L186+16
 3176 0124 1B88     		ldrh	r3, [r3]
 3177 0126 1BB2     		sxth	r3, r3
 3178 0128 07F18402 		add	r2, r7, #132
 3179 012c 1046     		mov	r0, r2
 3180 012e 1D49     		ldr	r1, .L186+20
 3181 0130 1A46     		mov	r2, r3
 3182 0132 FFF7FEFF 		bl	sprintf
 697:.\main.c      ****         UART_PutString(mes);
 3183              		.loc 1 697 0
 3184 0136 07F18403 		add	r3, r7, #132
 3185 013a 1846     		mov	r0, r3
 3186 013c FFF7FEFF 		bl	UART_PutString
 698:.\main.c      ****         initForward();
 3187              		.loc 1 698 0
 3188 0140 FFF7FEFF 		bl	initForward
 699:.\main.c      ****         break;
 3189              		.loc 1 699 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 70


 3190 0144 20E0     		b	.L171
 3191              	.L178:
 700:.\main.c      ****     case ('r'):
 701:.\main.c      ****         track_mode = RF_STOP;
 3192              		.loc 1 701 0
 3193 0146 124B     		ldr	r3, .L186
 3194 0148 0522     		movs	r2, #5
 3195 014a 1A70     		strb	r2, [r3]
 702:.\main.c      ****         changeToRF();
 3196              		.loc 1 702 0
 3197 014c FFF7FEFF 		bl	changeToRF
 703:.\main.c      ****         // Make initial position
 704:.\main.c      ****         initial_pos_valid = 0;
 3198              		.loc 1 704 0
 3199 0150 154B     		ldr	r3, .L186+24
 3200 0152 0022     		movs	r2, #0
 3201 0154 1A70     		strb	r2, [r3]
 705:.\main.c      ****         initBrake();
 3202              		.loc 1 705 0
 3203 0156 FFF7FEFF 		bl	initBrake
 706:.\main.c      ****         break;
 3204              		.loc 1 706 0
 3205 015a 15E0     		b	.L171
 3206              	.L183:
 707:.\main.c      ****     case ('x'):
 708:.\main.c      ****         track_mode = DEST_TEST;
 3207              		.loc 1 708 0
 3208 015c 0C4B     		ldr	r3, .L186
 3209 015e 0622     		movs	r2, #6
 3210 0160 1A70     		strb	r2, [r3]
 709:.\main.c      ****         tracked_direction = robot_direction;
 3211              		.loc 1 709 0
 3212 0162 124B     		ldr	r3, .L186+28
 3213 0164 1B68     		ldr	r3, [r3]
 3214 0166 124A     		ldr	r2, .L186+32
 3215 0168 1360     		str	r3, [r2]
 710:.\main.c      ****         //generateDirections();
 711:.\main.c      ****         generateEntireMapDirections();
 3216              		.loc 1 711 0
 3217 016a FFF7FEFF 		bl	generateEntireMapDirections
 712:.\main.c      ****         char message[128];
 713:.\main.c      ****         sprintf(message, "p:%s\r\n", instructions);
 3218              		.loc 1 713 0
 3219 016e 3B1D     		adds	r3, r7, #4
 3220 0170 1846     		mov	r0, r3
 3221 0172 1049     		ldr	r1, .L186+36
 3222 0174 104A     		ldr	r2, .L186+40
 3223 0176 FFF7FEFF 		bl	sprintf
 714:.\main.c      ****         UART_PutString(message);
 3224              		.loc 1 714 0
 3225 017a 3B1D     		adds	r3, r7, #4
 3226 017c 1846     		mov	r0, r3
 3227 017e FFF7FEFF 		bl	UART_PutString
 715:.\main.c      ****         inittrackLineZ();
 3228              		.loc 1 715 0
 3229 0182 FFF7FEFF 		bl	inittrackLineZ
 716:.\main.c      ****         break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 71


 3230              		.loc 1 716 0
 3231 0186 00BF     		nop
 3232              	.L171:
 3233              	.LBE7:
 717:.\main.c      ****     }
 718:.\main.c      **** }
 3234              		.loc 1 718 0
 3235 0188 9837     		adds	r7, r7, #152
 3236              		.cfi_def_cfa_offset 8
 3237 018a BD46     		mov	sp, r7
 3238              		.cfi_def_cfa_register 13
 3239              		@ sp needed
 3240 018c 80BD     		pop	{r7, pc}
 3241              	.L187:
 3242 018e 00BF     		.align	2
 3243              	.L186:
 3244 0190 00000000 		.word	track_mode
 3245 0194 00000000 		.word	accum_dist
 3246 0198 00000000 		.word	target_distance_cm
 3247 019c 00000000 		.word	quad_per_cm
 3248 01a0 00000000 		.word	target_distance_quad
 3249 01a4 8C000000 		.word	.LC7
 3250 01a8 00000000 		.word	initial_pos_valid
 3251 01ac 00000000 		.word	robot_direction
 3252 01b0 00000000 		.word	tracked_direction
 3253 01b4 A0000000 		.word	.LC8
 3254 01b8 00000000 		.word	instructions
 3255              		.cfi_endproc
 3256              	.LFE93:
 3257              		.size	BT_rxInt, .-BT_rxInt
 3258              		.section	.text.changeToRF,"ax",%progbits
 3259              		.align	2
 3260              		.global	changeToRF
 3261              		.thumb
 3262              		.thumb_func
 3263              		.type	changeToRF, %function
 3264              	changeToRF:
 3265              	.LFB94:
 719:.\main.c      **** 
 720:.\main.c      **** 
 721:.\main.c      **** void changeToRF()
 722:.\main.c      **** {
 3266              		.loc 1 722 0
 3267              		.cfi_startproc
 3268              		@ args = 0, pretend = 0, frame = 0
 3269              		@ frame_needed = 1, uses_anonymous_args = 0
 3270 0000 80B5     		push	{r7, lr}
 3271              		.cfi_def_cfa_offset 8
 3272              		.cfi_offset 7, -8
 3273              		.cfi_offset 14, -4
 3274 0002 00AF     		add	r7, sp, #0
 3275              		.cfi_def_cfa_register 7
 723:.\main.c      ****         //disable BT
 724:.\main.c      ****         BT_ENABLED = 0;
 3276              		.loc 1 724 0
 3277 0004 0B4B     		ldr	r3, .L189
 3278 0006 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 72


 3279 0008 1A70     		strb	r2, [r3]
 725:.\main.c      ****         isrRF_RX_Stop();
 3280              		.loc 1 725 0
 3281 000a FFF7FEFF 		bl	isrRF_RX_Stop
 726:.\main.c      ****         UART_Stop();
 3282              		.loc 1 726 0
 3283 000e FFF7FEFF 		bl	UART_Stop
 727:.\main.c      ****         
 728:.\main.c      ****         //enable RF
 729:.\main.c      ****         BIN_ENABLED = 1;
 3284              		.loc 1 729 0
 3285 0012 094B     		ldr	r3, .L189+4
 3286 0014 0122     		movs	r2, #1
 3287 0016 1A70     		strb	r2, [r3]
 730:.\main.c      ****         UART_clk_SetDividerValue(130);
 3288              		.loc 1 730 0
 3289 0018 8120     		movs	r0, #129
 3290 001a 0121     		movs	r1, #1
 3291 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 731:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 3292              		.loc 1 731 0
 3293 0020 0648     		ldr	r0, .L189+8
 3294 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 732:.\main.c      ****         UART_Start();
 3295              		.loc 1 732 0
 3296 0026 FFF7FEFF 		bl	UART_Start
 733:.\main.c      ****         RF_BT_SELECT_Write(0);
 3297              		.loc 1 733 0
 3298 002a 0020     		movs	r0, #0
 3299 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 734:.\main.c      **** }
 3300              		.loc 1 734 0
 3301 0030 80BD     		pop	{r7, pc}
 3302              	.L190:
 3303 0032 00BF     		.align	2
 3304              	.L189:
 3305 0034 00000000 		.word	BT_ENABLED
 3306 0038 00000000 		.word	BIN_ENABLED
 3307 003c 00000000 		.word	rxInt
 3308              		.cfi_endproc
 3309              	.LFE94:
 3310              		.size	changeToRF, .-changeToRF
 3311              		.section	.text.changeToBT,"ax",%progbits
 3312              		.align	2
 3313              		.global	changeToBT
 3314              		.thumb
 3315              		.thumb_func
 3316              		.type	changeToBT, %function
 3317              	changeToBT:
 3318              	.LFB95:
 735:.\main.c      **** 
 736:.\main.c      **** void changeToBT()
 737:.\main.c      **** {
 3319              		.loc 1 737 0
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 0
 3322              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 73


 3323 0000 80B5     		push	{r7, lr}
 3324              		.cfi_def_cfa_offset 8
 3325              		.cfi_offset 7, -8
 3326              		.cfi_offset 14, -4
 3327 0002 00AF     		add	r7, sp, #0
 3328              		.cfi_def_cfa_register 7
 738:.\main.c      ****         //disable RF
 739:.\main.c      ****         BIN_ENABLED = 0;
 3329              		.loc 1 739 0
 3330 0004 0B4B     		ldr	r3, .L192
 3331 0006 0022     		movs	r2, #0
 3332 0008 1A70     		strb	r2, [r3]
 740:.\main.c      ****         isrRF_RX_Stop();
 3333              		.loc 1 740 0
 3334 000a FFF7FEFF 		bl	isrRF_RX_Stop
 741:.\main.c      ****         UART_Stop();
 3335              		.loc 1 741 0
 3336 000e FFF7FEFF 		bl	UART_Stop
 742:.\main.c      ****         
 743:.\main.c      ****         //enable BT
 744:.\main.c      ****         BT_ENABLED = 1;
 3337              		.loc 1 744 0
 3338 0012 094B     		ldr	r3, .L192+4
 3339 0014 0122     		movs	r2, #1
 3340 0016 1A70     		strb	r2, [r3]
 745:.\main.c      ****         UART_clk_SetDividerValue(781);
 3341              		.loc 1 745 0
 3342 0018 4FF44370 		mov	r0, #780
 3343 001c 0121     		movs	r1, #1
 3344 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 746:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3345              		.loc 1 746 0
 3346 0022 0648     		ldr	r0, .L192+8
 3347 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 747:.\main.c      ****         UART_Start();
 3348              		.loc 1 747 0
 3349 0028 FFF7FEFF 		bl	UART_Start
 748:.\main.c      ****         RF_BT_SELECT_Write(1);
 3350              		.loc 1 748 0
 3351 002c 0120     		movs	r0, #1
 3352 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 749:.\main.c      **** }
 3353              		.loc 1 749 0
 3354 0032 80BD     		pop	{r7, pc}
 3355              	.L193:
 3356              		.align	2
 3357              	.L192:
 3358 0034 00000000 		.word	BIN_ENABLED
 3359 0038 00000000 		.word	BT_ENABLED
 3360 003c 00000000 		.word	BT_rxInt
 3361              		.cfi_endproc
 3362              	.LFE95:
 3363              		.size	changeToBT, .-changeToBT
 3364              		.global	__aeabi_dmul
 3365              		.section	.text.Quad_Dec_response,"ax",%progbits
 3366              		.align	2
 3367              		.global	Quad_Dec_response
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 74


 3368              		.thumb
 3369              		.thumb_func
 3370              		.type	Quad_Dec_response, %function
 3371              	Quad_Dec_response:
 3372              	.LFB96:
 750:.\main.c      **** 
 751:.\main.c      **** 
 752:.\main.c      **** void Quad_Dec_response()
 753:.\main.c      **** {
 3373              		.loc 1 753 0
 3374              		.cfi_startproc
 3375              		@ args = 0, pretend = 0, frame = 32
 3376              		@ frame_needed = 1, uses_anonymous_args = 0
 3377 0000 B0B5     		push	{r4, r5, r7, lr}
 3378              		.cfi_def_cfa_offset 16
 3379              		.cfi_offset 4, -16
 3380              		.cfi_offset 5, -12
 3381              		.cfi_offset 7, -8
 3382              		.cfi_offset 14, -4
 3383 0002 88B0     		sub	sp, sp, #32
 3384              		.cfi_def_cfa_offset 48
 3385 0004 00AF     		add	r7, sp, #0
 3386              		.cfi_def_cfa_register 7
 754:.\main.c      ****     //Check if the flag has been set
 755:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 3387              		.loc 1 755 0
 3388 0006 824B     		ldr	r3, .L202
 3389 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3390 000a 002B     		cmp	r3, #0
 3391 000c 00D1     		bne	.L195
 3392 000e FCE0     		b	.L194
 3393              	.L195:
 756:.\main.c      ****     flag_calc_wheelspeed = 0;
 3394              		.loc 1 756 0
 3395 0010 7F4B     		ldr	r3, .L202
 3396 0012 0022     		movs	r2, #0
 3397 0014 1A70     		strb	r2, [r3]
 757:.\main.c      ****     
 758:.\main.c      ****     //char wheel_1_str [64];
 759:.\main.c      ****     //char wheel_2_str [64];
 760:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 761:.\main.c      ****     //usbPutString(wheel_1_str);
 762:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 763:.\main.c      ****     
 764:.\main.c      ****     //usbPutString(wheel_2_str);
 765:.\main.c      ****     
 766:.\main.c      ****     int16 leftSpeed = quad_diff1;
 3398              		.loc 1 766 0
 3399 0016 7F4B     		ldr	r3, .L202+4
 3400 0018 1B88     		ldrh	r3, [r3]	@ movhi
 3401 001a FB81     		strh	r3, [r7, #14]	@ movhi
 767:.\main.c      ****     int16 rightSpeed = quad_diff2;
 3402              		.loc 1 767 0
 3403 001c 7E4B     		ldr	r3, .L202+8
 3404 001e 1B88     		ldrh	r3, [r3]	@ movhi
 3405 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 768:.\main.c      ****     double scalingLeft = 1;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 75


 3406              		.loc 1 768 0
 3407 0022 4FF00002 		mov	r2, #0
 3408 0026 7D4B     		ldr	r3, .L202+12
 3409 0028 C7E90623 		strd	r2, [r7, #24]
 769:.\main.c      ****     double scalingRight = 1;
 3410              		.loc 1 769 0
 3411 002c 4FF00002 		mov	r2, #0
 3412 0030 7A4B     		ldr	r3, .L202+12
 3413 0032 C7E90423 		strd	r2, [r7, #16]
 770:.\main.c      ****     
 771:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 772:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 3414              		.loc 1 772 0
 3415 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 3416 003a 002B     		cmp	r3, #0
 3417 003c 0FD1     		bne	.L197
 3418              		.loc 1 772 0 is_stmt 0 discriminator 1
 3419 003e B7F90C30 		ldrsh	r3, [r7, #12]
 3420 0042 002B     		cmp	r3, #0
 3421 0044 0BD1     		bne	.L197
 773:.\main.c      ****        //leftSpeed = 3;
 774:.\main.c      ****         scalingLeft = 2;
 3422              		.loc 1 774 0 is_stmt 1
 3423 0046 4FF00002 		mov	r2, #0
 3424 004a 4FF08043 		mov	r3, #1073741824
 3425 004e C7E90623 		strd	r2, [r7, #24]
 775:.\main.c      ****         scalingRight = 2;
 3426              		.loc 1 775 0
 3427 0052 4FF00002 		mov	r2, #0
 3428 0056 4FF08043 		mov	r3, #1073741824
 3429 005a C7E90423 		strd	r2, [r7, #16]
 3430              	.L197:
 776:.\main.c      ****     }
 777:.\main.c      **** 
 778:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 3431              		.loc 1 778 0
 3432 005e 704B     		ldr	r3, .L202+16
 3433 0060 1B88     		ldrh	r3, [r3]
 3434 0062 1AB2     		sxth	r2, r3
 3435 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 3436 0068 002B     		cmp	r3, #0
 3437 006a B8BF     		it	lt
 3438 006c 5B42     		rsblt	r3, r3, #0
 3439 006e D31A     		subs	r3, r2, r3
 3440 0070 BB60     		str	r3, [r7, #8]
 779:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 3441              		.loc 1 779 0
 3442 0072 BB68     		ldr	r3, [r7, #8]
 3443 0074 83EAE372 		eor	r2, r3, r3, asr #31
 3444 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 3445 007c BB68     		ldr	r3, [r7, #8]
 3446 007e 92FBF3F3 		sdiv	r3, r2, r3
 3447 0082 1846     		mov	r0, r3
 3448 0084 FFF7FEFF 		bl	__aeabi_i2d
 3449 0088 0446     		mov	r4, r0
 3450 008a 0D46     		mov	r5, r1
 3451 008c BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 76


 3452 008e 002B     		cmp	r3, #0
 3453 0090 B8BF     		it	lt
 3454 0092 5B42     		rsblt	r3, r3, #0
 3455 0094 1846     		mov	r0, r3
 3456 0096 FFF7FEFF 		bl	__aeabi_i2d
 3457 009a 0246     		mov	r2, r0
 3458 009c 0B46     		mov	r3, r1
 3459 009e 1046     		mov	r0, r2
 3460 00a0 1946     		mov	r1, r3
 3461 00a2 FFF7FEFF 		bl	sqrt
 3462 00a6 0246     		mov	r2, r0
 3463 00a8 0B46     		mov	r3, r1
 3464 00aa 2046     		mov	r0, r4
 3465 00ac 2946     		mov	r1, r5
 3466 00ae FFF7FEFF 		bl	__aeabi_dmul
 3467 00b2 0246     		mov	r2, r0
 3468 00b4 0B46     		mov	r3, r1
 3469 00b6 1046     		mov	r0, r2
 3470 00b8 1946     		mov	r1, r3
 3471 00ba FFF7FEFF 		bl	__aeabi_d2iz
 3472 00be 0346     		mov	r3, r0
 3473 00c0 7B60     		str	r3, [r7, #4]
 780:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 3474              		.loc 1 780 0
 3475 00c2 584B     		ldr	r3, .L202+20
 3476 00c4 1B88     		ldrh	r3, [r3]
 3477 00c6 1BB2     		sxth	r3, r3
 3478 00c8 1846     		mov	r0, r3
 3479 00ca FFF7FEFF 		bl	__aeabi_i2d
 3480 00ce 0446     		mov	r4, r0
 3481 00d0 0D46     		mov	r5, r1
 3482 00d2 7868     		ldr	r0, [r7, #4]
 3483 00d4 FFF7FEFF 		bl	__aeabi_i2d
 3484 00d8 0246     		mov	r2, r0
 3485 00da 0B46     		mov	r3, r1
 3486 00dc 1046     		mov	r0, r2
 3487 00de 1946     		mov	r1, r3
 3488 00e0 D7E90623 		ldrd	r2, [r7, #24]
 3489 00e4 FFF7FEFF 		bl	__aeabi_dmul
 3490 00e8 0246     		mov	r2, r0
 3491 00ea 0B46     		mov	r3, r1
 3492 00ec 2046     		mov	r0, r4
 3493 00ee 2946     		mov	r1, r5
 3494 00f0 FFF7FEFF 		bl	__aeabi_dadd
 3495 00f4 0246     		mov	r2, r0
 3496 00f6 0B46     		mov	r3, r1
 3497 00f8 1046     		mov	r0, r2
 3498 00fa 1946     		mov	r1, r3
 3499 00fc FFF7FEFF 		bl	__aeabi_d2iz
 3500 0100 0346     		mov	r3, r0
 3501 0102 9AB2     		uxth	r2, r3
 3502 0104 474B     		ldr	r3, .L202+20
 3503 0106 1A80     		strh	r2, [r3]	@ movhi
 781:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 3504              		.loc 1 781 0
 3505 0108 474B     		ldr	r3, .L202+24
 3506 010a 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 77


 3507 010c 1AB2     		sxth	r2, r3
 3508 010e B7F90C30 		ldrsh	r3, [r7, #12]
 3509 0112 002B     		cmp	r3, #0
 3510 0114 B8BF     		it	lt
 3511 0116 5B42     		rsblt	r3, r3, #0
 3512 0118 D31A     		subs	r3, r2, r3
 3513 011a BB60     		str	r3, [r7, #8]
 782:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 3514              		.loc 1 782 0
 3515 011c BB68     		ldr	r3, [r7, #8]
 3516 011e 83EAE372 		eor	r2, r3, r3, asr #31
 3517 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 3518 0126 BB68     		ldr	r3, [r7, #8]
 3519 0128 92FBF3F3 		sdiv	r3, r2, r3
 3520 012c 1846     		mov	r0, r3
 3521 012e FFF7FEFF 		bl	__aeabi_i2d
 3522 0132 0446     		mov	r4, r0
 3523 0134 0D46     		mov	r5, r1
 3524 0136 BB68     		ldr	r3, [r7, #8]
 3525 0138 002B     		cmp	r3, #0
 3526 013a B8BF     		it	lt
 3527 013c 5B42     		rsblt	r3, r3, #0
 3528 013e 1846     		mov	r0, r3
 3529 0140 FFF7FEFF 		bl	__aeabi_i2d
 3530 0144 0246     		mov	r2, r0
 3531 0146 0B46     		mov	r3, r1
 3532 0148 1046     		mov	r0, r2
 3533 014a 1946     		mov	r1, r3
 3534 014c FFF7FEFF 		bl	sqrt
 3535 0150 0246     		mov	r2, r0
 3536 0152 0B46     		mov	r3, r1
 3537 0154 2046     		mov	r0, r4
 3538 0156 2946     		mov	r1, r5
 3539 0158 FFF7FEFF 		bl	__aeabi_dmul
 3540 015c 0246     		mov	r2, r0
 3541 015e 0B46     		mov	r3, r1
 3542 0160 1046     		mov	r0, r2
 3543 0162 1946     		mov	r1, r3
 3544 0164 FFF7FEFF 		bl	__aeabi_d2iz
 3545 0168 0346     		mov	r3, r0
 3546 016a 7B60     		str	r3, [r7, #4]
 783:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 3547              		.loc 1 783 0
 3548 016c 2F4B     		ldr	r3, .L202+28
 3549 016e 1B88     		ldrh	r3, [r3]
 3550 0170 1BB2     		sxth	r3, r3
 3551 0172 1846     		mov	r0, r3
 3552 0174 FFF7FEFF 		bl	__aeabi_i2d
 3553 0178 0446     		mov	r4, r0
 3554 017a 0D46     		mov	r5, r1
 3555 017c 7868     		ldr	r0, [r7, #4]
 3556 017e FFF7FEFF 		bl	__aeabi_i2d
 3557 0182 0246     		mov	r2, r0
 3558 0184 0B46     		mov	r3, r1
 3559 0186 1046     		mov	r0, r2
 3560 0188 1946     		mov	r1, r3
 3561 018a D7E90423 		ldrd	r2, [r7, #16]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 78


 3562 018e FFF7FEFF 		bl	__aeabi_dmul
 3563 0192 0246     		mov	r2, r0
 3564 0194 0B46     		mov	r3, r1
 3565 0196 2046     		mov	r0, r4
 3566 0198 2946     		mov	r1, r5
 3567 019a FFF7FEFF 		bl	__aeabi_dadd
 3568 019e 0246     		mov	r2, r0
 3569 01a0 0B46     		mov	r3, r1
 3570 01a2 1046     		mov	r0, r2
 3571 01a4 1946     		mov	r1, r3
 3572 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 3573 01aa 0346     		mov	r3, r0
 3574 01ac 9AB2     		uxth	r2, r3
 3575 01ae 1F4B     		ldr	r3, .L202+28
 3576 01b0 1A80     		strh	r2, [r3]	@ movhi
 784:.\main.c      ****     
 785:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 3577              		.loc 1 785 0
 3578 01b2 1E4B     		ldr	r3, .L202+28
 3579 01b4 1B88     		ldrh	r3, [r3]
 3580 01b6 1BB2     		sxth	r3, r3
 3581 01b8 002B     		cmp	r3, #0
 3582 01ba 02DA     		bge	.L198
 3583              		.loc 1 785 0 is_stmt 0 discriminator 1
 3584 01bc 1B4B     		ldr	r3, .L202+28
 3585 01be 0022     		movs	r2, #0
 3586 01c0 1A80     		strh	r2, [r3]	@ movhi
 3587              	.L198:
 786:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 3588              		.loc 1 786 0 is_stmt 1
 3589 01c2 184B     		ldr	r3, .L202+20
 3590 01c4 1B88     		ldrh	r3, [r3]
 3591 01c6 1BB2     		sxth	r3, r3
 3592 01c8 002B     		cmp	r3, #0
 3593 01ca 02DA     		bge	.L199
 3594              		.loc 1 786 0 is_stmt 0 discriminator 1
 3595 01cc 154B     		ldr	r3, .L202+20
 3596 01ce 0022     		movs	r2, #0
 3597 01d0 1A80     		strh	r2, [r3]	@ movhi
 3598              	.L199:
 787:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 3599              		.loc 1 787 0 is_stmt 1
 3600 01d2 164B     		ldr	r3, .L202+28
 3601 01d4 1B88     		ldrh	r3, [r3]
 3602 01d6 1BB2     		sxth	r3, r3
 3603 01d8 642B     		cmp	r3, #100
 3604 01da 02DD     		ble	.L200
 3605              		.loc 1 787 0 is_stmt 0 discriminator 1
 3606 01dc 134B     		ldr	r3, .L202+28
 3607 01de 6422     		movs	r2, #100
 3608 01e0 1A80     		strh	r2, [r3]	@ movhi
 3609              	.L200:
 788:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 3610              		.loc 1 788 0 is_stmt 1
 3611 01e2 104B     		ldr	r3, .L202+20
 3612 01e4 1B88     		ldrh	r3, [r3]
 3613 01e6 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 79


 3614 01e8 642B     		cmp	r3, #100
 3615 01ea 02DD     		ble	.L201
 3616              		.loc 1 788 0 is_stmt 0 discriminator 1
 3617 01ec 0D4B     		ldr	r3, .L202+20
 3618 01ee 6422     		movs	r2, #100
 3619 01f0 1A80     		strh	r2, [r3]	@ movhi
 3620              	.L201:
 789:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 3621              		.loc 1 789 0 is_stmt 1
 3622 01f2 0C4B     		ldr	r3, .L202+20
 3623 01f4 1B88     		ldrh	r3, [r3]
 3624 01f6 DBB2     		uxtb	r3, r3
 3625 01f8 1846     		mov	r0, r3
 3626 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 790:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 3627              		.loc 1 790 0
 3628 01fe 0B4B     		ldr	r3, .L202+28
 3629 0200 1B88     		ldrh	r3, [r3]
 3630 0202 DBB2     		uxtb	r3, r3
 3631 0204 1846     		mov	r0, r3
 3632 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 3633              	.L194:
 791:.\main.c      **** }
 3634              		.loc 1 791 0
 3635 020a 2037     		adds	r7, r7, #32
 3636              		.cfi_def_cfa_offset 16
 3637 020c BD46     		mov	sp, r7
 3638              		.cfi_def_cfa_register 13
 3639              		@ sp needed
 3640 020e B0BD     		pop	{r4, r5, r7, pc}
 3641              	.L203:
 3642              		.align	2
 3643              	.L202:
 3644 0210 00000000 		.word	flag_calc_wheelspeed
 3645 0214 00000000 		.word	quad_diff1
 3646 0218 00000000 		.word	quad_diff2
 3647 021c 0000F03F 		.word	1072693248
 3648 0220 00000000 		.word	leftSpeedLimit
 3649 0224 00000000 		.word	left_duty_cycle
 3650 0228 00000000 		.word	rightSpeedLimit
 3651 022c 00000000 		.word	right_duty_cycle
 3652              		.cfi_endproc
 3653              	.LFE96:
 3654              		.size	Quad_Dec_response, .-Quad_Dec_response
 3655              		.section	.text.trackLine,"ax",%progbits
 3656              		.align	2
 3657              		.global	trackLine
 3658              		.thumb
 3659              		.thumb_func
 3660              		.type	trackLine, %function
 3661              	trackLine:
 3662              	.LFB97:
 792:.\main.c      **** 
 793:.\main.c      **** void trackLine()
 794:.\main.c      **** {
 3663              		.loc 1 794 0
 3664              		.cfi_startproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 80


 3665              		@ args = 0, pretend = 0, frame = 0
 3666              		@ frame_needed = 1, uses_anonymous_args = 0
 3667              		@ link register save eliminated.
 3668 0000 80B4     		push	{r7}
 3669              		.cfi_def_cfa_offset 4
 3670              		.cfi_offset 7, -4
 3671 0002 00AF     		add	r7, sp, #0
 3672              		.cfi_def_cfa_register 7
 795:.\main.c      ****  //removed from implementation
 796:.\main.c      **** }
 3673              		.loc 1 796 0
 3674 0004 BD46     		mov	sp, r7
 3675              		.cfi_def_cfa_register 13
 3676              		@ sp needed
 3677 0006 5DF8047B 		ldr	r7, [sp], #4
 3678              		.cfi_restore 7
 3679              		.cfi_def_cfa_offset 0
 3680 000a 7047     		bx	lr
 3681              		.cfi_endproc
 3682              	.LFE97:
 3683              		.size	trackLine, .-trackLine
 3684              		.global	leftTurnCount
 3685              		.bss
 3686              		.align	1
 3687              		.type	leftTurnCount, %object
 3688              		.size	leftTurnCount, 2
 3689              	leftTurnCount:
 3690 28e4 0000     		.space	2
 3691              		.global	rightTurnCount
 3692              		.align	1
 3693              		.type	rightTurnCount, %object
 3694              		.size	rightTurnCount, 2
 3695              	rightTurnCount:
 3696 28e6 0000     		.space	2
 3697              		.section	.text.trackLineZ,"ax",%progbits
 3698              		.align	2
 3699              		.global	trackLineZ
 3700              		.thumb
 3701              		.thumb_func
 3702              		.type	trackLineZ, %function
 3703              	trackLineZ:
 3704              	.LFB98:
 797:.\main.c      **** uint16 leftTurnCount = 0;
 798:.\main.c      **** uint16 rightTurnCount = 0;
 799:.\main.c      **** void trackLineZ()
 800:.\main.c      **** {
 3705              		.loc 1 800 0
 3706              		.cfi_startproc
 3707              		@ args = 0, pretend = 0, frame = 8
 3708              		@ frame_needed = 1, uses_anonymous_args = 0
 3709 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3710              		.cfi_def_cfa_offset 24
 3711              		.cfi_offset 4, -24
 3712              		.cfi_offset 5, -20
 3713              		.cfi_offset 7, -16
 3714              		.cfi_offset 8, -12
 3715              		.cfi_offset 9, -8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 81


 3716              		.cfi_offset 14, -4
 3717 0004 82B0     		sub	sp, sp, #8
 3718              		.cfi_def_cfa_offset 32
 3719 0006 00AF     		add	r7, sp, #0
 3720              		.cfi_def_cfa_register 7
 801:.\main.c      ****     //read the value of the three central-front sensors
 802:.\main.c      ****     
 803:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3721              		.loc 1 803 0
 3722 0008 FFF7FEFF 		bl	NLSens_out_Read
 3723 000c 0346     		mov	r3, r0
 3724 000e FB71     		strb	r3, [r7, #7]
 804:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3725              		.loc 1 804 0
 3726 0010 FFF7FEFF 		bl	NRSens_out_Read
 3727 0014 0346     		mov	r3, r0
 3728 0016 BB71     		strb	r3, [r7, #6]
 805:.\main.c      ****     uint8 mid = MSens_out_Read();
 3729              		.loc 1 805 0
 3730 0018 FFF7FEFF 		bl	MSens_out_Read
 3731 001c 0346     		mov	r3, r0
 3732 001e 7B71     		strb	r3, [r7, #5]
 806:.\main.c      ****     
 807:.\main.c      ****         //if only the left one, hard left
 808:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 3733              		.loc 1 808 0
 3734 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3735 0022 002B     		cmp	r3, #0
 3736 0024 27D0     		beq	.L206
 3737              		.loc 1 808 0 is_stmt 0 discriminator 1
 3738 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3739 0028 002B     		cmp	r3, #0
 3740 002a 24D1     		bne	.L206
 3741              		.loc 1 808 0 discriminator 2
 3742 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3743 002e 002B     		cmp	r3, #0
 3744 0030 21D1     		bne	.L206
 809:.\main.c      ****     {
 810:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 3745              		.loc 1 810 0 is_stmt 1
 3746 0032 334B     		ldr	r3, .L209+8
 3747 0034 D3E90023 		ldrd	r2, [r3]
 3748 0038 1046     		mov	r0, r2
 3749 003a 1946     		mov	r1, r3
 3750 003c 2EA3     		adr	r3, .L209
 3751 003e D3E90023 		ldrd	r2, [r3]
 3752 0042 FFF7FEFF 		bl	__aeabi_ddiv
 3753 0046 0246     		mov	r2, r0
 3754 0048 0B46     		mov	r3, r1
 3755 004a 1446     		mov	r4, r2
 3756 004c 1D46     		mov	r5, r3
 3757 004e 2C4B     		ldr	r3, .L209+8
 3758 0050 D3E90023 		ldrd	r2, [r3]
 3759 0054 9046     		mov	r8, r2
 3760 0056 83F00049 		eor	r9, r3, #-2147483648
 3761 005a 4046     		mov	r0, r8
 3762 005c 4946     		mov	r1, r9
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 82


 3763 005e 26A3     		adr	r3, .L209
 3764 0060 D3E90023 		ldrd	r2, [r3]
 3765 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3766 0068 0246     		mov	r2, r0
 3767 006a 0B46     		mov	r3, r1
 3768 006c 2046     		mov	r0, r4
 3769 006e 2946     		mov	r1, r5
 3770 0070 FFF7FEFF 		bl	setSpeed
 3771 0074 3BE0     		b	.L205
 3772              	.L206:
 811:.\main.c      ****     }
 812:.\main.c      **** //    else if(nl && mid && !nr)   //if centre/middle, soft left
 813:.\main.c      **** //    {
 814:.\main.c      **** //        setSpeed(speed,speed / 1.5);
 815:.\main.c      **** //    }
 816:.\main.c      **** //    else if (nr && mid && !nl)//if centre/right, soft right
 817:.\main.c      **** //    {
 818:.\main.c      **** //        setSpeed(speed / 1.5,speed);
 819:.\main.c      **** //    }
 820:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3773              		.loc 1 820 0
 3774 0076 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3775 0078 002B     		cmp	r3, #0
 3776 007a 27D0     		beq	.L208
 3777              		.loc 1 820 0 is_stmt 0 discriminator 1
 3778 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3779 007e 002B     		cmp	r3, #0
 3780 0080 24D1     		bne	.L208
 3781              		.loc 1 820 0 discriminator 2
 3782 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3783 0084 002B     		cmp	r3, #0
 3784 0086 21D1     		bne	.L208
 821:.\main.c      ****     {
 822:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 3785              		.loc 1 822 0 is_stmt 1
 3786 0088 1D4B     		ldr	r3, .L209+8
 3787 008a D3E90023 		ldrd	r2, [r3]
 3788 008e 1446     		mov	r4, r2
 3789 0090 83F00045 		eor	r5, r3, #-2147483648
 3790 0094 2046     		mov	r0, r4
 3791 0096 2946     		mov	r1, r5
 3792 0098 17A3     		adr	r3, .L209
 3793 009a D3E90023 		ldrd	r2, [r3]
 3794 009e FFF7FEFF 		bl	__aeabi_ddiv
 3795 00a2 0246     		mov	r2, r0
 3796 00a4 0B46     		mov	r3, r1
 3797 00a6 1446     		mov	r4, r2
 3798 00a8 1D46     		mov	r5, r3
 3799 00aa 154B     		ldr	r3, .L209+8
 3800 00ac D3E90023 		ldrd	r2, [r3]
 3801 00b0 1046     		mov	r0, r2
 3802 00b2 1946     		mov	r1, r3
 3803 00b4 10A3     		adr	r3, .L209
 3804 00b6 D3E90023 		ldrd	r2, [r3]
 3805 00ba FFF7FEFF 		bl	__aeabi_ddiv
 3806 00be 0246     		mov	r2, r0
 3807 00c0 0B46     		mov	r3, r1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 83


 3808 00c2 2046     		mov	r0, r4
 3809 00c4 2946     		mov	r1, r5
 3810 00c6 FFF7FEFF 		bl	setSpeed
 3811 00ca 10E0     		b	.L205
 3812              	.L208:
 823:.\main.c      ****     }
 824:.\main.c      ****     else if (mid && !nr && !nl)
 3813              		.loc 1 824 0
 3814 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3815 00ce 002B     		cmp	r3, #0
 3816 00d0 0DD0     		beq	.L205
 3817              		.loc 1 824 0 is_stmt 0 discriminator 1
 3818 00d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3819 00d4 002B     		cmp	r3, #0
 3820 00d6 0AD1     		bne	.L205
 3821              		.loc 1 824 0 discriminator 2
 3822 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3823 00da 002B     		cmp	r3, #0
 3824 00dc 07D1     		bne	.L205
 825:.\main.c      ****     {
 826:.\main.c      ****         setSpeed(speed,speed);
 3825              		.loc 1 826 0 is_stmt 1
 3826 00de 084B     		ldr	r3, .L209+8
 3827 00e0 D3E90001 		ldrd	r0, [r3]
 3828 00e4 064B     		ldr	r3, .L209+8
 3829 00e6 D3E90023 		ldrd	r2, [r3]
 3830 00ea FFF7FEFF 		bl	setSpeed
 3831              	.L205:
 827:.\main.c      ****     }
 828:.\main.c      **** }
 3832              		.loc 1 828 0
 3833 00ee 0837     		adds	r7, r7, #8
 3834              		.cfi_def_cfa_offset 24
 3835 00f0 BD46     		mov	sp, r7
 3836              		.cfi_def_cfa_register 13
 3837              		@ sp needed
 3838 00f2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3839              	.L210:
 3840 00f6 00BF     		.align	3
 3841              	.L209:
 3842 00f8 9A999999 		.word	-1717986918
 3843 00fc 9999F93F 		.word	1073322393
 3844 0100 00000000 		.word	speed
 3845              		.cfi_endproc
 3846              	.LFE98:
 3847              		.size	trackLineZ, .-trackLineZ
 3848 0104 AFF30080 		.section	.text.trackLineU,"ax",%progbits
 3849              		.align	2
 3850              		.global	trackLineU
 3851              		.thumb
 3852              		.thumb_func
 3853              		.type	trackLineU, %function
 3854              	trackLineU:
 3855              	.LFB99:
 829:.\main.c      **** 
 830:.\main.c      **** 
 831:.\main.c      **** void trackLineU()
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 84


 832:.\main.c      **** { 
 3856              		.loc 1 832 0
 3857              		.cfi_startproc
 3858              		@ args = 0, pretend = 0, frame = 0
 3859              		@ frame_needed = 1, uses_anonymous_args = 0
 3860              		@ link register save eliminated.
 3861 0000 80B4     		push	{r7}
 3862              		.cfi_def_cfa_offset 4
 3863              		.cfi_offset 7, -4
 3864 0002 00AF     		add	r7, sp, #0
 3865              		.cfi_def_cfa_register 7
 833:.\main.c      **** //removed from final implementation
 834:.\main.c      **** }
 3866              		.loc 1 834 0
 3867 0004 BD46     		mov	sp, r7
 3868              		.cfi_def_cfa_register 13
 3869              		@ sp needed
 3870 0006 5DF8047B 		ldr	r7, [sp], #4
 3871              		.cfi_restore 7
 3872              		.cfi_def_cfa_offset 0
 3873 000a 7047     		bx	lr
 3874              		.cfi_endproc
 3875              	.LFE99:
 3876              		.size	trackLineU, .-trackLineU
 3877              		.global	__aeabi_fadd
 3878              		.section	.rodata
 3879 00a7 00       		.align	2
 3880              	.LC9:
 3881 00a8 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 3881      65727920 
 3881      566F6C74 
 3881      6167653A 
 3881      2025646D 
 3882              		.section	.text.print_ADC,"ax",%progbits
 3883              		.align	2
 3884              		.global	print_ADC
 3885              		.thumb
 3886              		.thumb_func
 3887              		.type	print_ADC, %function
 3888              	print_ADC:
 3889              	.LFB100:
 835:.\main.c      **** 
 836:.\main.c      **** void print_ADC()
 837:.\main.c      **** {
 3890              		.loc 1 837 0
 3891              		.cfi_startproc
 3892              		@ args = 0, pretend = 0, frame = 24
 3893              		@ frame_needed = 1, uses_anonymous_args = 0
 3894 0000 80B5     		push	{r7, lr}
 3895              		.cfi_def_cfa_offset 8
 3896              		.cfi_offset 7, -8
 3897              		.cfi_offset 14, -4
 3898 0002 86B0     		sub	sp, sp, #24
 3899              		.cfi_def_cfa_offset 32
 3900 0004 00AF     		add	r7, sp, #0
 3901              		.cfi_def_cfa_register 7
 838:.\main.c      ****    //usbPutString("HII\n");
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 85


 839:.\main.c      ****     if(flag_receive_ADC == 1)
 3902              		.loc 1 839 0
 3903 0006 274B     		ldr	r3, .L215
 3904 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3905 000a 012B     		cmp	r3, #1
 3906 000c 46D1     		bne	.L212
 3907              	.LBB8:
 840:.\main.c      ****     {
 841:.\main.c      ****         //usbPutString("AAA\r\n");
 842:.\main.c      ****         flag_receive_ADC = 0;
 3908              		.loc 1 842 0
 3909 000e 254B     		ldr	r3, .L215
 3910 0010 0022     		movs	r2, #0
 3911 0012 1A70     		strb	r2, [r3]
 843:.\main.c      ****         
 844:.\main.c      ****        // int8 channel = ADC_
 845:.\main.c      ****         float scalingFactor = 0.972;
 3912              		.loc 1 845 0
 3913 0014 244B     		ldr	r3, .L215+4
 3914 0016 7B61     		str	r3, [r7, #20]	@ float
 846:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3915              		.loc 1 846 0
 3916 0018 244B     		ldr	r3, .L215+8
 3917 001a 1B88     		ldrh	r3, [r3]
 3918 001c 1BB2     		sxth	r3, r3
 3919 001e 41F28832 		movw	r2, #5000
 3920 0022 02FB03F3 		mul	r3, r2, r3
 3921 0026 002B     		cmp	r3, #0
 3922 0028 01DA     		bge	.L214
 3923 002a 03F6FF73 		addw	r3, r3, #4095
 3924              	.L214:
 3925 002e 1B13     		asrs	r3, r3, #12
 3926 0030 1846     		mov	r0, r3
 3927 0032 FFF7FEFF 		bl	__aeabi_i2f
 3928 0036 0346     		mov	r3, r0
 3929 0038 1846     		mov	r0, r3
 3930 003a 7969     		ldr	r1, [r7, #20]	@ float
 3931 003c FFF7FEFF 		bl	__aeabi_fmul
 3932 0040 0346     		mov	r3, r0
 3933 0042 1846     		mov	r0, r3
 3934 0044 1946     		mov	r1, r3
 3935 0046 FFF7FEFF 		bl	__aeabi_fadd
 3936 004a 0346     		mov	r3, r0
 3937 004c 1846     		mov	r0, r3
 3938 004e FFF7FEFF 		bl	__aeabi_f2iz
 3939 0052 0346     		mov	r3, r0
 3940 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 847:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3941              		.loc 1 847 0
 3942 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3943 005a 154B     		ldr	r3, .L215+12
 3944 005c 1B88     		ldrh	r3, [r3]
 3945 005e 1BB2     		sxth	r3, r3
 3946 0060 1A44     		add	r2, r2, r3
 3947 0062 144B     		ldr	r3, .L215+16
 3948 0064 1B88     		ldrh	r3, [r3]
 3949 0066 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 86


 3950 0068 1344     		add	r3, r3, r2
 3951 006a 134A     		ldr	r2, .L215+20
 3952 006c 82FB0312 		smull	r1, r2, r2, r3
 3953 0070 DB17     		asrs	r3, r3, #31
 3954 0072 D31A     		subs	r3, r2, r3
 3955 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 848:.\main.c      ****         prevVoltage2 = prevVoltage;
 3956              		.loc 1 848 0
 3957 0076 0E4B     		ldr	r3, .L215+12
 3958 0078 1A88     		ldrh	r2, [r3]
 3959 007a 0E4B     		ldr	r3, .L215+16
 3960 007c 1A80     		strh	r2, [r3]	@ movhi
 849:.\main.c      ****         prevVoltage = converted_val;
 3961              		.loc 1 849 0
 3962 007e 0C4A     		ldr	r2, .L215+12
 3963 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3964 0082 1380     		strh	r3, [r2]	@ movhi
 850:.\main.c      ****         
 851:.\main.c      ****         char result_str[16];
 852:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3965              		.loc 1 852 0
 3966 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3967 0088 3A46     		mov	r2, r7
 3968 008a 1046     		mov	r0, r2
 3969 008c 0B49     		ldr	r1, .L215+24
 3970 008e 1A46     		mov	r2, r3
 3971 0090 FFF7FEFF 		bl	sprintf
 853:.\main.c      ****         
 854:.\main.c      ****         usbPutString(result_str);
 3972              		.loc 1 854 0
 3973 0094 3B46     		mov	r3, r7
 3974 0096 1846     		mov	r0, r3
 3975 0098 FFF7FEFF 		bl	usbPutString
 3976              	.L212:
 3977              	.LBE8:
 855:.\main.c      ****     }
 856:.\main.c      **** }
 3978              		.loc 1 856 0
 3979 009c 1837     		adds	r7, r7, #24
 3980              		.cfi_def_cfa_offset 8
 3981 009e BD46     		mov	sp, r7
 3982              		.cfi_def_cfa_register 13
 3983              		@ sp needed
 3984 00a0 80BD     		pop	{r7, pc}
 3985              	.L216:
 3986 00a2 00BF     		.align	2
 3987              	.L215:
 3988 00a4 00000000 		.word	flag_receive_ADC
 3989 00a8 FED4783F 		.word	1064883454
 3990 00ac 00000000 		.word	adc_result
 3991 00b0 00000000 		.word	prevVoltage
 3992 00b4 00000000 		.word	prevVoltage2
 3993 00b8 56555555 		.word	1431655766
 3994 00bc A8000000 		.word	.LC9
 3995              		.cfi_endproc
 3996              	.LFE100:
 3997              		.size	print_ADC, .-print_ADC
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 87


 3998              		.section	.rodata
 3999              		.align	2
 4000              	.LC10:
 4001 00c0 52535349 		.ascii	"RSSI:\000"
 4001      3A00
 4002 00c6 0000     		.align	2
 4003              	.LC11:
 4004 00c8 25640D0A 		.ascii	"%d\015\012\000"
 4004      00
 4005 00cd 000000   		.align	2
 4006              	.LC12:
 4007 00d0 726F626F 		.ascii	"robot_x:\000"
 4007      745F783A 
 4007      00
 4008 00d9 000000   		.align	2
 4009              	.LC13:
 4010 00dc 726F626F 		.ascii	"robot_y:\000"
 4010      745F793A 
 4010      00
 4011 00e5 000000   		.align	2
 4012              	.LC14:
 4013 00e8 726F626F 		.ascii	"robot_dir:\000"
 4013      745F6469 
 4013      723A00
 4014 00f3 00       		.section	.text.print_RF,"ax",%progbits
 4015              		.align	2
 4016              		.global	print_RF
 4017              		.thumb
 4018              		.thumb_func
 4019              		.type	print_RF, %function
 4020              	print_RF:
 4021              	.LFB101:
 857:.\main.c      **** 
 858:.\main.c      **** void print_RF()
 859:.\main.c      **** {
 4022              		.loc 1 859 0
 4023              		.cfi_startproc
 4024              		@ args = 0, pretend = 0, frame = 16
 4025              		@ frame_needed = 1, uses_anonymous_args = 0
 4026 0000 80B5     		push	{r7, lr}
 4027              		.cfi_def_cfa_offset 8
 4028              		.cfi_offset 7, -8
 4029              		.cfi_offset 14, -4
 4030 0002 84B0     		sub	sp, sp, #16
 4031              		.cfi_def_cfa_offset 24
 4032 0004 00AF     		add	r7, sp, #0
 4033              		.cfi_def_cfa_register 7
 860:.\main.c      ****     if(flag_print_rf == 1)
 4034              		.loc 1 860 0
 4035 0006 254B     		ldr	r3, .L219
 4036 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4037 000a 012B     		cmp	r3, #1
 4038 000c 42D1     		bne	.L217
 4039              	.LBB9:
 861:.\main.c      ****     {
 862:.\main.c      ****         char printString[16];
 863:.\main.c      ****         flag_print_rf = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 88


 4040              		.loc 1 863 0
 4041 000e 234B     		ldr	r3, .L219
 4042 0010 0022     		movs	r2, #0
 4043 0012 1A70     		strb	r2, [r3]
 864:.\main.c      ****         usbPutString("RSSI:");
 4044              		.loc 1 864 0
 4045 0014 2248     		ldr	r0, .L219+4
 4046 0016 FFF7FEFF 		bl	usbPutString
 865:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4047              		.loc 1 865 0
 4048 001a 224B     		ldr	r3, .L219+8
 4049 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4050 001e 5BB2     		sxtb	r3, r3
 4051 0020 3A46     		mov	r2, r7
 4052 0022 1046     		mov	r0, r2
 4053 0024 2049     		ldr	r1, .L219+12
 4054 0026 1A46     		mov	r2, r3
 4055 0028 FFF7FEFF 		bl	sprintf
 866:.\main.c      ****         usbPutString(printString);
 4056              		.loc 1 866 0
 4057 002c 3B46     		mov	r3, r7
 4058 002e 1846     		mov	r0, r3
 4059 0030 FFF7FEFF 		bl	usbPutString
 867:.\main.c      ****         usbPutString("robot_x:");
 4060              		.loc 1 867 0
 4061 0034 1D48     		ldr	r0, .L219+16
 4062 0036 FFF7FEFF 		bl	usbPutString
 868:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4063              		.loc 1 868 0
 4064 003a 1A4B     		ldr	r3, .L219+8
 4065 003c 5B88     		ldrh	r3, [r3, #2]
 4066 003e 1BB2     		sxth	r3, r3
 4067 0040 3A46     		mov	r2, r7
 4068 0042 1046     		mov	r0, r2
 4069 0044 1849     		ldr	r1, .L219+12
 4070 0046 1A46     		mov	r2, r3
 4071 0048 FFF7FEFF 		bl	sprintf
 869:.\main.c      ****         usbPutString(printString);
 4072              		.loc 1 869 0
 4073 004c 3B46     		mov	r3, r7
 4074 004e 1846     		mov	r0, r3
 4075 0050 FFF7FEFF 		bl	usbPutString
 870:.\main.c      ****         usbPutString("robot_y:");
 4076              		.loc 1 870 0
 4077 0054 1648     		ldr	r0, .L219+20
 4078 0056 FFF7FEFF 		bl	usbPutString
 871:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4079              		.loc 1 871 0
 4080 005a 124B     		ldr	r3, .L219+8
 4081 005c 9B88     		ldrh	r3, [r3, #4]
 4082 005e 1BB2     		sxth	r3, r3
 4083 0060 3A46     		mov	r2, r7
 4084 0062 1046     		mov	r0, r2
 4085 0064 1049     		ldr	r1, .L219+12
 4086 0066 1A46     		mov	r2, r3
 4087 0068 FFF7FEFF 		bl	sprintf
 872:.\main.c      ****         usbPutString(printString);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 89


 4088              		.loc 1 872 0
 4089 006c 3B46     		mov	r3, r7
 4090 006e 1846     		mov	r0, r3
 4091 0070 FFF7FEFF 		bl	usbPutString
 873:.\main.c      ****         usbPutString("robot_dir:");
 4092              		.loc 1 873 0
 4093 0074 0F48     		ldr	r0, .L219+24
 4094 0076 FFF7FEFF 		bl	usbPutString
 874:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4095              		.loc 1 874 0
 4096 007a 0A4B     		ldr	r3, .L219+8
 4097 007c DB88     		ldrh	r3, [r3, #6]
 4098 007e 1BB2     		sxth	r3, r3
 4099 0080 3A46     		mov	r2, r7
 4100 0082 1046     		mov	r0, r2
 4101 0084 0849     		ldr	r1, .L219+12
 4102 0086 1A46     		mov	r2, r3
 4103 0088 FFF7FEFF 		bl	sprintf
 875:.\main.c      ****         usbPutString(printString);
 4104              		.loc 1 875 0
 4105 008c 3B46     		mov	r3, r7
 4106 008e 1846     		mov	r0, r3
 4107 0090 FFF7FEFF 		bl	usbPutString
 4108              	.L217:
 4109              	.LBE9:
 876:.\main.c      ****     }
 877:.\main.c      **** }
 4110              		.loc 1 877 0
 4111 0094 1037     		adds	r7, r7, #16
 4112              		.cfi_def_cfa_offset 8
 4113 0096 BD46     		mov	sp, r7
 4114              		.cfi_def_cfa_register 13
 4115              		@ sp needed
 4116 0098 80BD     		pop	{r7, pc}
 4117              	.L220:
 4118 009a 00BF     		.align	2
 4119              	.L219:
 4120 009c 00000000 		.word	flag_print_rf
 4121 00a0 C0000000 		.word	.LC10
 4122 00a4 00000000 		.word	system_state
 4123 00a8 C8000000 		.word	.LC11
 4124 00ac D0000000 		.word	.LC12
 4125 00b0 DC000000 		.word	.LC13
 4126 00b4 E8000000 		.word	.LC14
 4127              		.cfi_endproc
 4128              	.LFE101:
 4129              		.size	print_RF, .-print_RF
 4130              		.section	.text.readFrontSensors,"ax",%progbits
 4131              		.align	2
 4132              		.global	readFrontSensors
 4133              		.thumb
 4134              		.thumb_func
 4135              		.type	readFrontSensors, %function
 4136              	readFrontSensors:
 4137              	.LFB102:
 878:.\main.c      **** 
 879:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 90


 880:.\main.c      **** {
 4138              		.loc 1 880 0
 4139              		.cfi_startproc
 4140              		@ args = 0, pretend = 0, frame = 8
 4141              		@ frame_needed = 1, uses_anonymous_args = 0
 4142 0000 90B5     		push	{r4, r7, lr}
 4143              		.cfi_def_cfa_offset 12
 4144              		.cfi_offset 4, -12
 4145              		.cfi_offset 7, -8
 4146              		.cfi_offset 14, -4
 4147 0002 83B0     		sub	sp, sp, #12
 4148              		.cfi_def_cfa_offset 24
 4149 0004 00AF     		add	r7, sp, #0
 4150              		.cfi_def_cfa_register 7
 4151 0006 7860     		str	r0, [r7, #4]
 881:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4152              		.loc 1 881 0
 4153 0008 FFF7FEFF 		bl	FLSens_out_Read
 4154 000c 0346     		mov	r3, r0
 4155 000e 1A46     		mov	r2, r3
 4156 0010 7B68     		ldr	r3, [r7, #4]
 4157 0012 1A70     		strb	r2, [r3]
 882:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4158              		.loc 1 882 0
 4159 0014 7B68     		ldr	r3, [r7, #4]
 4160 0016 5C1C     		adds	r4, r3, #1
 4161 0018 FFF7FEFF 		bl	NLSens_out_Read
 4162 001c 0346     		mov	r3, r0
 4163 001e 2370     		strb	r3, [r4]
 883:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4164              		.loc 1 883 0
 4165 0020 7B68     		ldr	r3, [r7, #4]
 4166 0022 9C1C     		adds	r4, r3, #2
 4167 0024 FFF7FEFF 		bl	MSens_out_Read
 4168 0028 0346     		mov	r3, r0
 4169 002a 2370     		strb	r3, [r4]
 884:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4170              		.loc 1 884 0
 4171 002c 7B68     		ldr	r3, [r7, #4]
 4172 002e DC1C     		adds	r4, r3, #3
 4173 0030 FFF7FEFF 		bl	NRSens_out_Read
 4174 0034 0346     		mov	r3, r0
 4175 0036 2370     		strb	r3, [r4]
 885:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4176              		.loc 1 885 0
 4177 0038 7B68     		ldr	r3, [r7, #4]
 4178 003a 1C1D     		adds	r4, r3, #4
 4179 003c FFF7FEFF 		bl	FRSens_out_Read
 4180 0040 0346     		mov	r3, r0
 4181 0042 2370     		strb	r3, [r4]
 886:.\main.c      **** }
 4182              		.loc 1 886 0
 4183 0044 0C37     		adds	r7, r7, #12
 4184              		.cfi_def_cfa_offset 12
 4185 0046 BD46     		mov	sp, r7
 4186              		.cfi_def_cfa_register 13
 4187              		@ sp needed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 91


 4188 0048 90BD     		pop	{r4, r7, pc}
 4189              		.cfi_endproc
 4190              	.LFE102:
 4191              		.size	readFrontSensors, .-readFrontSensors
 4192 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 4193              		.align	2
 4194              		.global	usbPutString
 4195              		.thumb
 4196              		.thumb_func
 4197              		.type	usbPutString, %function
 4198              	usbPutString:
 4199              	.LFB103:
 887:.\main.c      **** 
 888:.\main.c      **** 
 889:.\main.c      **** //* ========================================
 890:.\main.c      **** void usbPutString(char *s)
 891:.\main.c      **** {
 4200              		.loc 1 891 0
 4201              		.cfi_startproc
 4202              		@ args = 0, pretend = 0, frame = 16
 4203              		@ frame_needed = 1, uses_anonymous_args = 0
 4204 0000 80B5     		push	{r7, lr}
 4205              		.cfi_def_cfa_offset 8
 4206              		.cfi_offset 7, -8
 4207              		.cfi_offset 14, -4
 4208 0002 84B0     		sub	sp, sp, #16
 4209              		.cfi_def_cfa_offset 24
 4210 0004 00AF     		add	r7, sp, #0
 4211              		.cfi_def_cfa_register 7
 4212 0006 7860     		str	r0, [r7, #4]
 892:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 893:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 894:.\main.c      **** //  length to 62 char (63rd char is a '!')
 895:.\main.c      ****     if (USE_USB && portOpen)    
 4213              		.loc 1 895 0
 4214 0008 154B     		ldr	r3, .L226
 4215 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4216 000c 002B     		cmp	r3, #0
 4217 000e 23D0     		beq	.L222
 4218              	.LBB10:
 896:.\main.c      ****     {
 897:.\main.c      ****             uint32 cnt = 0;
 4219              		.loc 1 897 0
 4220 0010 0023     		movs	r3, #0
 4221 0012 FB60     		str	r3, [r7, #12]
 898:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4222              		.loc 1 898 0
 4223 0014 0AE0     		b	.L224
 4224              	.L225:
 899:.\main.c      ****             {
 900:.\main.c      ****                 cnt++;
 4225              		.loc 1 900 0
 4226 0016 FB68     		ldr	r3, [r7, #12]
 4227 0018 0133     		adds	r3, r3, #1
 4228 001a FB60     		str	r3, [r7, #12]
 901:.\main.c      ****                 if(cnt == 3000000){
 4229              		.loc 1 901 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 92


 4230 001c FB68     		ldr	r3, [r7, #12]
 4231 001e 114A     		ldr	r2, .L226+4
 4232 0020 9342     		cmp	r3, r2
 4233 0022 03D1     		bne	.L224
 902:.\main.c      ****                     portOpen = 0;
 4234              		.loc 1 902 0
 4235 0024 0E4B     		ldr	r3, .L226
 4236 0026 0022     		movs	r2, #0
 4237 0028 1A70     		strb	r2, [r3]
 903:.\main.c      ****                     return;
 4238              		.loc 1 903 0
 4239 002a 15E0     		b	.L222
 4240              	.L224:
 898:.\main.c      ****             {
 4241              		.loc 1 898 0
 4242 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4243 0030 0346     		mov	r3, r0
 4244 0032 002B     		cmp	r3, #0
 4245 0034 EFD0     		beq	.L225
 904:.\main.c      ****                 }
 905:.\main.c      ****             }
 906:.\main.c      ****             s[63]='\0';
 4246              		.loc 1 906 0
 4247 0036 7B68     		ldr	r3, [r7, #4]
 4248 0038 3F33     		adds	r3, r3, #63
 4249 003a 0022     		movs	r2, #0
 4250 003c 1A70     		strb	r2, [r3]
 907:.\main.c      ****             s[62]='!';
 4251              		.loc 1 907 0
 4252 003e 7B68     		ldr	r3, [r7, #4]
 4253 0040 3E33     		adds	r3, r3, #62
 4254 0042 2122     		movs	r2, #33
 4255 0044 1A70     		strb	r2, [r3]
 908:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4256              		.loc 1 908 0
 4257 0046 7868     		ldr	r0, [r7, #4]
 4258 0048 FFF7FEFF 		bl	strlen
 4259 004c 0346     		mov	r3, r0
 4260 004e 9BB2     		uxth	r3, r3
 4261 0050 7868     		ldr	r0, [r7, #4]
 4262 0052 1946     		mov	r1, r3
 4263 0054 FFF7FEFF 		bl	USBUART_PutData
 4264              	.L222:
 4265              	.LBE10:
 909:.\main.c      ****     }
 910:.\main.c      **** }
 4266              		.loc 1 910 0
 4267 0058 1037     		adds	r7, r7, #16
 4268              		.cfi_def_cfa_offset 8
 4269 005a BD46     		mov	sp, r7
 4270              		.cfi_def_cfa_register 13
 4271              		@ sp needed
 4272 005c 80BD     		pop	{r7, pc}
 4273              	.L227:
 4274 005e 00BF     		.align	2
 4275              	.L226:
 4276 0060 00000000 		.word	portOpen
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 93


 4277 0064 C0C62D00 		.word	3000000
 4278              		.cfi_endproc
 4279              	.LFE103:
 4280              		.size	usbPutString, .-usbPutString
 4281              		.section	.text.usbPutChar,"ax",%progbits
 4282              		.align	2
 4283              		.global	usbPutChar
 4284              		.thumb
 4285              		.thumb_func
 4286              		.type	usbPutChar, %function
 4287              	usbPutChar:
 4288              	.LFB104:
 911:.\main.c      **** //* ========================================
 912:.\main.c      **** void usbPutChar(char c)
 913:.\main.c      **** {
 4289              		.loc 1 913 0
 4290              		.cfi_startproc
 4291              		@ args = 0, pretend = 0, frame = 16
 4292              		@ frame_needed = 1, uses_anonymous_args = 0
 4293 0000 80B5     		push	{r7, lr}
 4294              		.cfi_def_cfa_offset 8
 4295              		.cfi_offset 7, -8
 4296              		.cfi_offset 14, -4
 4297 0002 84B0     		sub	sp, sp, #16
 4298              		.cfi_def_cfa_offset 24
 4299 0004 00AF     		add	r7, sp, #0
 4300              		.cfi_def_cfa_register 7
 4301 0006 0346     		mov	r3, r0
 4302 0008 FB71     		strb	r3, [r7, #7]
 914:.\main.c      ****     if (USE_USB && portOpen)    
 4303              		.loc 1 914 0
 4304 000a 0F4B     		ldr	r3, .L232
 4305 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4306 000e 002B     		cmp	r3, #0
 4307 0010 16D0     		beq	.L228
 4308              	.LBB11:
 915:.\main.c      ****     {    
 916:.\main.c      ****         uint32 cnt = 0;
 4309              		.loc 1 916 0
 4310 0012 0023     		movs	r3, #0
 4311 0014 FB60     		str	r3, [r7, #12]
 917:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4312              		.loc 1 917 0
 4313 0016 0AE0     		b	.L230
 4314              	.L231:
 918:.\main.c      ****             cnt++;
 4315              		.loc 1 918 0
 4316 0018 FB68     		ldr	r3, [r7, #12]
 4317 001a 0133     		adds	r3, r3, #1
 4318 001c FB60     		str	r3, [r7, #12]
 919:.\main.c      ****             if(cnt == 3000000){
 4319              		.loc 1 919 0
 4320 001e FB68     		ldr	r3, [r7, #12]
 4321 0020 0A4A     		ldr	r2, .L232+4
 4322 0022 9342     		cmp	r3, r2
 4323 0024 03D1     		bne	.L230
 920:.\main.c      ****                 portOpen = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 94


 4324              		.loc 1 920 0
 4325 0026 084B     		ldr	r3, .L232
 4326 0028 0022     		movs	r2, #0
 4327 002a 1A70     		strb	r2, [r3]
 921:.\main.c      ****                 return;
 4328              		.loc 1 921 0
 4329 002c 08E0     		b	.L228
 4330              	.L230:
 917:.\main.c      ****             cnt++;
 4331              		.loc 1 917 0
 4332 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4333 0032 0346     		mov	r3, r0
 4334 0034 002B     		cmp	r3, #0
 4335 0036 EFD0     		beq	.L231
 922:.\main.c      ****             }
 923:.\main.c      ****         }
 924:.\main.c      ****         USBUART_PutChar(c);
 4336              		.loc 1 924 0
 4337 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4338 003a 1846     		mov	r0, r3
 4339 003c FFF7FEFF 		bl	USBUART_PutChar
 4340              	.L228:
 4341              	.LBE11:
 925:.\main.c      ****     }    
 926:.\main.c      **** }
 4342              		.loc 1 926 0
 4343 0040 1037     		adds	r7, r7, #16
 4344              		.cfi_def_cfa_offset 8
 4345 0042 BD46     		mov	sp, r7
 4346              		.cfi_def_cfa_register 13
 4347              		@ sp needed
 4348 0044 80BD     		pop	{r7, pc}
 4349              	.L233:
 4350 0046 00BF     		.align	2
 4351              	.L232:
 4352 0048 00000000 		.word	portOpen
 4353 004c C0C62D00 		.word	3000000
 4354              		.cfi_endproc
 4355              	.LFE104:
 4356              		.size	usbPutChar, .-usbPutChar
 4357              		.section	.text.uart_set_PWM,"ax",%progbits
 4358              		.align	2
 4359              		.global	uart_set_PWM
 4360              		.thumb
 4361              		.thumb_func
 4362              		.type	uart_set_PWM, %function
 4363              	uart_set_PWM:
 4364              	.LFB105:
 927:.\main.c      **** //* ========================================
 928:.\main.c      **** 
 929:.\main.c      **** void uart_set_PWM()
 930:.\main.c      **** {
 4365              		.loc 1 930 0
 4366              		.cfi_startproc
 4367              		@ args = 0, pretend = 0, frame = 0
 4368              		@ frame_needed = 1, uses_anonymous_args = 0
 4369              		@ link register save eliminated.
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 95


 4370 0000 80B4     		push	{r7}
 4371              		.cfi_def_cfa_offset 4
 4372              		.cfi_offset 7, -4
 4373 0002 00AF     		add	r7, sp, #0
 4374              		.cfi_def_cfa_register 7
 931:.\main.c      ****     //removed from final implementation
 932:.\main.c      **** }
 4375              		.loc 1 932 0
 4376 0004 BD46     		mov	sp, r7
 4377              		.cfi_def_cfa_register 13
 4378              		@ sp needed
 4379 0006 5DF8047B 		ldr	r7, [sp], #4
 4380              		.cfi_restore 7
 4381              		.cfi_def_cfa_offset 0
 4382 000a 7047     		bx	lr
 4383              		.cfi_endproc
 4384              	.LFE105:
 4385              		.size	uart_set_PWM, .-uart_set_PWM
 4386              		.text
 4387              	.Letext0:
 4388              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4389              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4390              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4391              		.file 5 ".\\vars.h"
 4392              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4393              		.file 7 ".\\pathfinder.h"
 4394              		.section	.debug_info,"",%progbits
 4395              	.Ldebug_info0:
 4396 0000 AA0D0000 		.4byte	0xdaa
 4397 0004 0400     		.2byte	0x4
 4398 0006 00000000 		.4byte	.Ldebug_abbrev0
 4399 000a 04       		.byte	0x4
 4400 000b 01       		.uleb128 0x1
 4401 000c 96040000 		.4byte	.LASF193
 4402 0010 01       		.byte	0x1
 4403 0011 48090000 		.4byte	.LASF194
 4404 0015 1C000000 		.4byte	.LASF195
 4405 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4406 001d 00000000 		.4byte	0
 4407 0021 00000000 		.4byte	.Ldebug_line0
 4408 0025 02       		.uleb128 0x2
 4409 0026 01       		.byte	0x1
 4410 0027 06       		.byte	0x6
 4411 0028 7D080000 		.4byte	.LASF0
 4412 002c 02       		.uleb128 0x2
 4413 002d 01       		.byte	0x1
 4414 002e 08       		.byte	0x8
 4415 002f C9070000 		.4byte	.LASF1
 4416 0033 02       		.uleb128 0x2
 4417 0034 02       		.byte	0x2
 4418 0035 05       		.byte	0x5
 4419 0036 4C060000 		.4byte	.LASF2
 4420 003a 02       		.uleb128 0x2
 4421 003b 02       		.byte	0x2
 4422 003c 07       		.byte	0x7
 4423 003d 89080000 		.4byte	.LASF3
 4424 0041 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 96


 4425 0042 DF000000 		.4byte	.LASF5
 4426 0046 02       		.byte	0x2
 4427 0047 3F       		.byte	0x3f
 4428 0048 4C000000 		.4byte	0x4c
 4429 004c 02       		.uleb128 0x2
 4430 004d 04       		.byte	0x4
 4431 004e 05       		.byte	0x5
 4432 004f 80060000 		.4byte	.LASF4
 4433 0053 03       		.uleb128 0x3
 4434 0054 D7070000 		.4byte	.LASF6
 4435 0058 02       		.byte	0x2
 4436 0059 41       		.byte	0x41
 4437 005a 5E000000 		.4byte	0x5e
 4438 005e 02       		.uleb128 0x2
 4439 005f 04       		.byte	0x4
 4440 0060 07       		.byte	0x7
 4441 0061 74070000 		.4byte	.LASF7
 4442 0065 02       		.uleb128 0x2
 4443 0066 08       		.byte	0x8
 4444 0067 05       		.byte	0x5
 4445 0068 60040000 		.4byte	.LASF8
 4446 006c 02       		.uleb128 0x2
 4447 006d 08       		.byte	0x8
 4448 006e 07       		.byte	0x7
 4449 006f 86020000 		.4byte	.LASF9
 4450 0073 04       		.uleb128 0x4
 4451 0074 04       		.byte	0x4
 4452 0075 05       		.byte	0x5
 4453 0076 696E7400 		.ascii	"int\000"
 4454 007a 02       		.uleb128 0x2
 4455 007b 04       		.byte	0x4
 4456 007c 07       		.byte	0x7
 4457 007d C7000000 		.4byte	.LASF10
 4458 0081 02       		.uleb128 0x2
 4459 0082 04       		.byte	0x4
 4460 0083 07       		.byte	0x7
 4461 0084 6B070000 		.4byte	.LASF11
 4462 0088 05       		.uleb128 0x5
 4463 0089 04       		.byte	0x4
 4464 008a 8E000000 		.4byte	0x8e
 4465 008e 02       		.uleb128 0x2
 4466 008f 01       		.byte	0x1
 4467 0090 08       		.byte	0x8
 4468 0091 B5030000 		.4byte	.LASF12
 4469 0095 03       		.uleb128 0x3
 4470 0096 92070000 		.4byte	.LASF13
 4471 009a 03       		.byte	0x3
 4472 009b 2C       		.byte	0x2c
 4473 009c 41000000 		.4byte	0x41
 4474 00a0 03       		.uleb128 0x3
 4475 00a1 06020000 		.4byte	.LASF14
 4476 00a5 03       		.byte	0x3
 4477 00a6 2D       		.byte	0x2d
 4478 00a7 53000000 		.4byte	0x53
 4479 00ab 06       		.uleb128 0x6
 4480 00ac D5080000 		.4byte	.LASF15
 4481 00b0 04       		.byte	0x4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 97


 4482 00b1 9201     		.2byte	0x192
 4483 00b3 2C000000 		.4byte	0x2c
 4484 00b7 06       		.uleb128 0x6
 4485 00b8 FD030000 		.4byte	.LASF16
 4486 00bc 04       		.byte	0x4
 4487 00bd 9301     		.2byte	0x193
 4488 00bf 3A000000 		.4byte	0x3a
 4489 00c3 06       		.uleb128 0x6
 4490 00c4 67050000 		.4byte	.LASF17
 4491 00c8 04       		.byte	0x4
 4492 00c9 9401     		.2byte	0x194
 4493 00cb 5E000000 		.4byte	0x5e
 4494 00cf 06       		.uleb128 0x6
 4495 00d0 04040000 		.4byte	.LASF18
 4496 00d4 04       		.byte	0x4
 4497 00d5 9501     		.2byte	0x195
 4498 00d7 25000000 		.4byte	0x25
 4499 00db 06       		.uleb128 0x6
 4500 00dc E9000000 		.4byte	.LASF19
 4501 00e0 04       		.byte	0x4
 4502 00e1 9601     		.2byte	0x196
 4503 00e3 33000000 		.4byte	0x33
 4504 00e7 02       		.uleb128 0x2
 4505 00e8 04       		.byte	0x4
 4506 00e9 04       		.byte	0x4
 4507 00ea 26020000 		.4byte	.LASF20
 4508 00ee 02       		.uleb128 0x2
 4509 00ef 08       		.byte	0x8
 4510 00f0 04       		.byte	0x4
 4511 00f1 DB080000 		.4byte	.LASF21
 4512 00f5 07       		.uleb128 0x7
 4513 00f6 A0000000 		.4byte	0xa0
 4514 00fa 05010000 		.4byte	0x105
 4515 00fe 08       		.uleb128 0x8
 4516 00ff 81000000 		.4byte	0x81
 4517 0103 01       		.byte	0x1
 4518 0104 00       		.byte	0
 4519 0105 02       		.uleb128 0x2
 4520 0106 08       		.byte	0x8
 4521 0107 04       		.byte	0x4
 4522 0108 E3050000 		.4byte	.LASF22
 4523 010c 09       		.uleb128 0x9
 4524 010d 15080000 		.4byte	.LASF31
 4525 0111 01       		.byte	0x1
 4526 0112 05       		.byte	0x5
 4527 0113 5B       		.byte	0x5b
 4528 0114 49010000 		.4byte	0x149
 4529 0118 0A       		.uleb128 0xa
 4530 0119 45020000 		.4byte	.LASF23
 4531 011d 00       		.sleb128 0
 4532 011e 0A       		.uleb128 0xa
 4533 011f FC000000 		.4byte	.LASF24
 4534 0123 01       		.sleb128 1
 4535 0124 0A       		.uleb128 0xa
 4536 0125 5B000000 		.4byte	.LASF25
 4537 0129 02       		.sleb128 2
 4538 012a 0A       		.uleb128 0xa
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 98


 4539 012b D2050000 		.4byte	.LASF26
 4540 012f 03       		.sleb128 3
 4541 0130 0A       		.uleb128 0xa
 4542 0131 17010000 		.4byte	.LASF27
 4543 0135 04       		.sleb128 4
 4544 0136 0A       		.uleb128 0xa
 4545 0137 EF010000 		.4byte	.LASF28
 4546 013b 05       		.sleb128 5
 4547 013c 0A       		.uleb128 0xa
 4548 013d F6060000 		.4byte	.LASF29
 4549 0141 06       		.sleb128 6
 4550 0142 0A       		.uleb128 0xa
 4551 0143 15090000 		.4byte	.LASF30
 4552 0147 07       		.sleb128 7
 4553 0148 00       		.byte	0
 4554 0149 09       		.uleb128 0x9
 4555 014a 52010000 		.4byte	.LASF32
 4556 014e 01       		.byte	0x1
 4557 014f 05       		.byte	0x5
 4558 0150 5C       		.byte	0x5c
 4559 0151 86010000 		.4byte	0x186
 4560 0155 0A       		.uleb128 0xa
 4561 0156 C8060000 		.4byte	.LASF33
 4562 015a 00       		.sleb128 0
 4563 015b 0A       		.uleb128 0xa
 4564 015c 27040000 		.4byte	.LASF34
 4565 0160 01       		.sleb128 1
 4566 0161 0A       		.uleb128 0xa
 4567 0162 97060000 		.4byte	.LASF35
 4568 0166 02       		.sleb128 2
 4569 0167 0A       		.uleb128 0xa
 4570 0168 A9010000 		.4byte	.LASF36
 4571 016c 03       		.sleb128 3
 4572 016d 0A       		.uleb128 0xa
 4573 016e AE080000 		.4byte	.LASF37
 4574 0172 04       		.sleb128 4
 4575 0173 0A       		.uleb128 0xa
 4576 0174 F3080000 		.4byte	.LASF38
 4577 0178 05       		.sleb128 5
 4578 0179 0A       		.uleb128 0xa
 4579 017a 70000000 		.4byte	.LASF39
 4580 017e 06       		.sleb128 6
 4581 017f 0A       		.uleb128 0xa
 4582 0180 E9060000 		.4byte	.LASF40
 4583 0184 07       		.sleb128 7
 4584 0185 00       		.byte	0
 4585 0186 0B       		.uleb128 0xb
 4586 0187 87050000 		.4byte	.LASF196
 4587 018b 20       		.byte	0x20
 4588 018c 05       		.byte	0x5
 4589 018d 62       		.byte	0x62
 4590 018e 5F020000 		.4byte	0x25f
 4591 0192 0C       		.uleb128 0xc
 4592 0193 A5050000 		.4byte	.LASF41
 4593 0197 05       		.byte	0x5
 4594 0198 63       		.byte	0x63
 4595 0199 CF000000 		.4byte	0xcf
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 99


 4596 019d 00       		.byte	0
 4597 019e 0C       		.uleb128 0xc
 4598 019f 3F020000 		.4byte	.LASF42
 4599 01a3 05       		.byte	0x5
 4600 01a4 64       		.byte	0x64
 4601 01a5 AB000000 		.4byte	0xab
 4602 01a9 01       		.byte	0x1
 4603 01aa 0C       		.uleb128 0xc
 4604 01ab A1070000 		.4byte	.LASF43
 4605 01af 05       		.byte	0x5
 4606 01b0 65       		.byte	0x65
 4607 01b1 DB000000 		.4byte	0xdb
 4608 01b5 02       		.byte	0x2
 4609 01b6 0C       		.uleb128 0xc
 4610 01b7 89030000 		.4byte	.LASF44
 4611 01bb 05       		.byte	0x5
 4612 01bc 66       		.byte	0x66
 4613 01bd DB000000 		.4byte	0xdb
 4614 01c1 04       		.byte	0x4
 4615 01c2 0C       		.uleb128 0xc
 4616 01c3 9C080000 		.4byte	.LASF45
 4617 01c7 05       		.byte	0x5
 4618 01c8 67       		.byte	0x67
 4619 01c9 DB000000 		.4byte	0xdb
 4620 01cd 06       		.byte	0x6
 4621 01ce 0C       		.uleb128 0xc
 4622 01cf 1B090000 		.4byte	.LASF46
 4623 01d3 05       		.byte	0x5
 4624 01d4 68       		.byte	0x68
 4625 01d5 DB000000 		.4byte	0xdb
 4626 01d9 08       		.byte	0x8
 4627 01da 0C       		.uleb128 0xc
 4628 01db 2D050000 		.4byte	.LASF47
 4629 01df 05       		.byte	0x5
 4630 01e0 69       		.byte	0x69
 4631 01e1 DB000000 		.4byte	0xdb
 4632 01e5 0A       		.byte	0xa
 4633 01e6 0C       		.uleb128 0xc
 4634 01e7 BA030000 		.4byte	.LASF48
 4635 01eb 05       		.byte	0x5
 4636 01ec 6A       		.byte	0x6a
 4637 01ed DB000000 		.4byte	0xdb
 4638 01f1 0C       		.byte	0xc
 4639 01f2 0C       		.uleb128 0xc
 4640 01f3 B4050000 		.4byte	.LASF49
 4641 01f7 05       		.byte	0x5
 4642 01f8 6B       		.byte	0x6b
 4643 01f9 DB000000 		.4byte	0xdb
 4644 01fd 0E       		.byte	0xe
 4645 01fe 0C       		.uleb128 0xc
 4646 01ff 7B040000 		.4byte	.LASF50
 4647 0203 05       		.byte	0x5
 4648 0204 6C       		.byte	0x6c
 4649 0205 DB000000 		.4byte	0xdb
 4650 0209 10       		.byte	0x10
 4651 020a 0C       		.uleb128 0xc
 4652 020b 2B070000 		.4byte	.LASF51
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 100


 4653 020f 05       		.byte	0x5
 4654 0210 6D       		.byte	0x6d
 4655 0211 DB000000 		.4byte	0xdb
 4656 0215 12       		.byte	0x12
 4657 0216 0C       		.uleb128 0xc
 4658 0217 3F090000 		.4byte	.LASF52
 4659 021b 05       		.byte	0x5
 4660 021c 6E       		.byte	0x6e
 4661 021d DB000000 		.4byte	0xdb
 4662 0221 14       		.byte	0x14
 4663 0222 0C       		.uleb128 0xc
 4664 0223 09040000 		.4byte	.LASF53
 4665 0227 05       		.byte	0x5
 4666 0228 6F       		.byte	0x6f
 4667 0229 DB000000 		.4byte	0xdb
 4668 022d 16       		.byte	0x16
 4669 022e 0C       		.uleb128 0xc
 4670 022f 4A010000 		.4byte	.LASF54
 4671 0233 05       		.byte	0x5
 4672 0234 70       		.byte	0x70
 4673 0235 DB000000 		.4byte	0xdb
 4674 0239 18       		.byte	0x18
 4675 023a 0C       		.uleb128 0xc
 4676 023b F5030000 		.4byte	.LASF55
 4677 023f 05       		.byte	0x5
 4678 0240 71       		.byte	0x71
 4679 0241 DB000000 		.4byte	0xdb
 4680 0245 1A       		.byte	0x1a
 4681 0246 0C       		.uleb128 0xc
 4682 0247 24050000 		.4byte	.LASF56
 4683 024b 05       		.byte	0x5
 4684 024c 72       		.byte	0x72
 4685 024d DB000000 		.4byte	0xdb
 4686 0251 1C       		.byte	0x1c
 4687 0252 0C       		.uleb128 0xc
 4688 0253 0F020000 		.4byte	.LASF57
 4689 0257 05       		.byte	0x5
 4690 0258 73       		.byte	0x73
 4691 0259 DB000000 		.4byte	0xdb
 4692 025d 1E       		.byte	0x1e
 4693 025e 00       		.byte	0
 4694 025f 0D       		.uleb128 0xd
 4695 0260 BD080000 		.4byte	.LASF58
 4696 0264 01       		.byte	0x1
 4697 0265 58       		.byte	0x58
 4698 0266 00000000 		.4byte	.LFB63
 4699 026a 0C000000 		.4byte	.LFE63-.LFB63
 4700 026e 01       		.uleb128 0x1
 4701 026f 9C       		.byte	0x9c
 4702 0270 0E       		.uleb128 0xe
 4703 0271 33070000 		.4byte	.LASF59
 4704 0275 01       		.byte	0x1
 4705 0276 5E       		.byte	0x5e
 4706 0277 00000000 		.4byte	.LFB64
 4707 027b 2C000000 		.4byte	.LFE64-.LFB64
 4708 027f 01       		.uleb128 0x1
 4709 0280 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 101


 4710 0281 0F       		.uleb128 0xf
 4711 0282 1C020000 		.4byte	.LASF66
 4712 0286 01       		.byte	0x1
 4713 0287 67       		.byte	0x67
 4714 0288 00000000 		.4byte	.LFB65
 4715 028c EC010000 		.4byte	.LFE65-.LFB65
 4716 0290 01       		.uleb128 0x1
 4717 0291 9C       		.byte	0x9c
 4718 0292 CB020000 		.4byte	0x2cb
 4719 0296 10       		.uleb128 0x10
 4720 0297 B4000000 		.4byte	.LBB2
 4721 029b 52000000 		.4byte	.LBE2-.LBB2
 4722 029f B2020000 		.4byte	0x2b2
 4723 02a3 11       		.uleb128 0x11
 4724 02a4 6D657300 		.ascii	"mes\000"
 4725 02a8 01       		.byte	0x1
 4726 02a9 7E       		.byte	0x7e
 4727 02aa CB020000 		.4byte	0x2cb
 4728 02ae 02       		.uleb128 0x2
 4729 02af 91       		.byte	0x91
 4730 02b0 58       		.sleb128 -40
 4731 02b1 00       		.byte	0
 4732 02b2 12       		.uleb128 0x12
 4733 02b3 12010000 		.4byte	.LBB3
 4734 02b7 90000000 		.4byte	.LBE3-.LBB3
 4735 02bb 13       		.uleb128 0x13
 4736 02bc D0080000 		.4byte	.LASF60
 4737 02c0 01       		.byte	0x1
 4738 02c1 89       		.byte	0x89
 4739 02c2 EE000000 		.4byte	0xee
 4740 02c6 02       		.uleb128 0x2
 4741 02c7 91       		.byte	0x91
 4742 02c8 68       		.sleb128 -24
 4743 02c9 00       		.byte	0
 4744 02ca 00       		.byte	0
 4745 02cb 07       		.uleb128 0x7
 4746 02cc 8E000000 		.4byte	0x8e
 4747 02d0 DB020000 		.4byte	0x2db
 4748 02d4 08       		.uleb128 0x8
 4749 02d5 81000000 		.4byte	0x81
 4750 02d9 0F       		.byte	0xf
 4751 02da 00       		.byte	0
 4752 02db 0E       		.uleb128 0xe
 4753 02dc B6020000 		.4byte	.LASF61
 4754 02e0 01       		.byte	0x1
 4755 02e1 92       		.byte	0x92
 4756 02e2 00000000 		.4byte	.LFB66
 4757 02e6 AC000000 		.4byte	.LFE66-.LFB66
 4758 02ea 01       		.uleb128 0x1
 4759 02eb 9C       		.byte	0x9c
 4760 02ec 0D       		.uleb128 0xd
 4761 02ed E7070000 		.4byte	.LASF62
 4762 02f1 01       		.byte	0x1
 4763 02f2 B5       		.byte	0xb5
 4764 02f3 00000000 		.4byte	.LFB67
 4765 02f7 20000000 		.4byte	.LFE67-.LFB67
 4766 02fb 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 102


 4767 02fc 9C       		.byte	0x9c
 4768 02fd 0E       		.uleb128 0xe
 4769 02fe 3C030000 		.4byte	.LASF63
 4770 0302 01       		.byte	0x1
 4771 0303 BC       		.byte	0xbc
 4772 0304 00000000 		.4byte	.LFB68
 4773 0308 28000000 		.4byte	.LFE68-.LFB68
 4774 030c 01       		.uleb128 0x1
 4775 030d 9C       		.byte	0x9c
 4776 030e 0E       		.uleb128 0xe
 4777 030f EF050000 		.4byte	.LASF64
 4778 0313 01       		.byte	0x1
 4779 0314 C5       		.byte	0xc5
 4780 0315 00000000 		.4byte	.LFB69
 4781 0319 0A000000 		.4byte	.LFE69-.LFB69
 4782 031d 01       		.uleb128 0x1
 4783 031e 9C       		.byte	0x9c
 4784 031f 0E       		.uleb128 0xe
 4785 0320 0C060000 		.4byte	.LASF65
 4786 0324 01       		.byte	0x1
 4787 0325 CA       		.byte	0xca
 4788 0326 00000000 		.4byte	.LFB70
 4789 032a 28000000 		.4byte	.LFE70-.LFB70
 4790 032e 01       		.uleb128 0x1
 4791 032f 9C       		.byte	0x9c
 4792 0330 14       		.uleb128 0x14
 4793 0331 B8080000 		.4byte	.LASF67
 4794 0335 01       		.byte	0x1
 4795 0336 D5       		.byte	0xd5
 4796 0337 73000000 		.4byte	0x73
 4797 033b 00000000 		.4byte	.LFB71
 4798 033f 18030000 		.4byte	.LFE71-.LFB71
 4799 0343 01       		.uleb128 0x1
 4800 0344 9C       		.byte	0x9c
 4801 0345 8B030000 		.4byte	0x38b
 4802 0349 15       		.uleb128 0x15
 4803 034a 2D030000 		.4byte	.LASF68
 4804 034e 01       		.byte	0x1
 4805 034f 0E01     		.2byte	0x10e
 4806 0351 B7000000 		.4byte	0xb7
 4807 0355 02       		.uleb128 0x2
 4808 0356 91       		.byte	0x91
 4809 0357 76       		.sleb128 -10
 4810 0358 12       		.uleb128 0x12
 4811 0359 66000000 		.4byte	.LBB4
 4812 035d 64020000 		.4byte	.LBE4-.LBB4
 4813 0361 15       		.uleb128 0x15
 4814 0362 A9020000 		.4byte	.LASF69
 4815 0366 01       		.byte	0x1
 4816 0367 1C01     		.2byte	0x11c
 4817 0369 8B030000 		.4byte	0x38b
 4818 036d 02       		.uleb128 0x2
 4819 036e 91       		.byte	0x91
 4820 036f 70       		.sleb128 -16
 4821 0370 12       		.uleb128 0x12
 4822 0371 34010000 		.4byte	.LBB5
 4823 0375 32010000 		.4byte	.LBE5-.LBB5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 103


 4824 0379 15       		.uleb128 0x15
 4825 037a 8D040000 		.4byte	.LASF70
 4826 037e 01       		.byte	0x1
 4827 037f 4601     		.2byte	0x146
 4828 0381 8E000000 		.4byte	0x8e
 4829 0385 02       		.uleb128 0x2
 4830 0386 91       		.byte	0x91
 4831 0387 75       		.sleb128 -11
 4832 0388 00       		.byte	0
 4833 0389 00       		.byte	0
 4834 038a 00       		.byte	0
 4835 038b 07       		.uleb128 0x7
 4836 038c AB000000 		.4byte	0xab
 4837 0390 9B030000 		.4byte	0x39b
 4838 0394 08       		.uleb128 0x8
 4839 0395 81000000 		.4byte	0x81
 4840 0399 04       		.byte	0x4
 4841 039a 00       		.byte	0
 4842 039b 16       		.uleb128 0x16
 4843 039c FB080000 		.4byte	.LASF76
 4844 03a0 01       		.byte	0x1
 4845 03a1 A701     		.2byte	0x1a7
 4846 03a3 00000000 		.4byte	.LFB72
 4847 03a7 60010000 		.4byte	.LFE72-.LFB72
 4848 03ab 01       		.uleb128 0x1
 4849 03ac 9C       		.byte	0x9c
 4850 03ad E9030000 		.4byte	0x3e9
 4851 03b1 12       		.uleb128 0x12
 4852 03b2 10000000 		.4byte	.LBB6
 4853 03b6 34010000 		.4byte	.LBE6-.LBB6
 4854 03ba 15       		.uleb128 0x15
 4855 03bb 3D010000 		.4byte	.LASF71
 4856 03bf 01       		.byte	0x1
 4857 03c0 AD01     		.2byte	0x1ad
 4858 03c2 B7000000 		.4byte	0xb7
 4859 03c6 02       		.uleb128 0x2
 4860 03c7 91       		.byte	0x91
 4861 03c8 76       		.sleb128 -10
 4862 03c9 15       		.uleb128 0x15
 4863 03ca 86070000 		.4byte	.LASF72
 4864 03ce 01       		.byte	0x1
 4865 03cf AE01     		.2byte	0x1ae
 4866 03d1 E9030000 		.4byte	0x3e9
 4867 03d5 02       		.uleb128 0x2
 4868 03d6 91       		.byte	0x91
 4869 03d7 68       		.sleb128 -24
 4870 03d8 15       		.uleb128 0x15
 4871 03d9 4B020000 		.4byte	.LASF73
 4872 03dd 01       		.byte	0x1
 4873 03de AF01     		.2byte	0x1af
 4874 03e0 E9030000 		.4byte	0x3e9
 4875 03e4 02       		.uleb128 0x2
 4876 03e5 91       		.byte	0x91
 4877 03e6 5C       		.sleb128 -36
 4878 03e7 00       		.byte	0
 4879 03e8 00       		.byte	0
 4880 03e9 07       		.uleb128 0x7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 104


 4881 03ea 8E000000 		.4byte	0x8e
 4882 03ee F9030000 		.4byte	0x3f9
 4883 03f2 08       		.uleb128 0x8
 4884 03f3 81000000 		.4byte	0x81
 4885 03f7 0B       		.byte	0xb
 4886 03f8 00       		.byte	0
 4887 03f9 17       		.uleb128 0x17
 4888 03fa D3030000 		.4byte	.LASF74
 4889 03fe 01       		.byte	0x1
 4890 03ff E801     		.2byte	0x1e8
 4891 0401 00000000 		.4byte	.LFB73
 4892 0405 18000000 		.4byte	.LFE73-.LFB73
 4893 0409 01       		.uleb128 0x1
 4894 040a 9C       		.byte	0x9c
 4895 040b 1F040000 		.4byte	0x41f
 4896 040f 18       		.uleb128 0x18
 4897 0410 64697200 		.ascii	"dir\000"
 4898 0414 01       		.byte	0x1
 4899 0415 E801     		.2byte	0x1e8
 4900 0417 AB000000 		.4byte	0xab
 4901 041b 02       		.uleb128 0x2
 4902 041c 91       		.byte	0x91
 4903 041d 77       		.sleb128 -9
 4904 041e 00       		.byte	0
 4905 041f 17       		.uleb128 0x17
 4906 0420 1B040000 		.4byte	.LASF75
 4907 0424 01       		.byte	0x1
 4908 0425 ED01     		.2byte	0x1ed
 4909 0427 00000000 		.4byte	.LFB74
 4910 042b 18000000 		.4byte	.LFE74-.LFB74
 4911 042f 01       		.uleb128 0x1
 4912 0430 9C       		.byte	0x9c
 4913 0431 45040000 		.4byte	0x445
 4914 0435 18       		.uleb128 0x18
 4915 0436 64697200 		.ascii	"dir\000"
 4916 043a 01       		.byte	0x1
 4917 043b ED01     		.2byte	0x1ed
 4918 043d AB000000 		.4byte	0xab
 4919 0441 02       		.uleb128 0x2
 4920 0442 91       		.byte	0x91
 4921 0443 77       		.sleb128 -9
 4922 0444 00       		.byte	0
 4923 0445 19       		.uleb128 0x19
 4924 0446 1B080000 		.4byte	.LASF77
 4925 044a 01       		.byte	0x1
 4926 044b F201     		.2byte	0x1f2
 4927 044d 00000000 		.4byte	.LFB75
 4928 0451 54000000 		.4byte	.LFE75-.LFB75
 4929 0455 01       		.uleb128 0x1
 4930 0456 9C       		.byte	0x9c
 4931 0457 6B040000 		.4byte	0x46b
 4932 045b 1A       		.uleb128 0x1a
 4933 045c 6D657300 		.ascii	"mes\000"
 4934 0460 01       		.byte	0x1
 4935 0461 F701     		.2byte	0x1f7
 4936 0463 CB020000 		.4byte	0x2cb
 4937 0467 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 105


 4938 0468 91       		.byte	0x91
 4939 0469 68       		.sleb128 -24
 4940 046a 00       		.byte	0
 4941 046b 17       		.uleb128 0x17
 4942 046c 2C020000 		.4byte	.LASF78
 4943 0470 01       		.byte	0x1
 4944 0471 FC01     		.2byte	0x1fc
 4945 0473 00000000 		.4byte	.LFB76
 4946 0477 F4000000 		.4byte	.LFE76-.LFB76
 4947 047b 01       		.uleb128 0x1
 4948 047c 9C       		.byte	0x9c
 4949 047d BE040000 		.4byte	0x4be
 4950 0481 1B       		.uleb128 0x1b
 4951 0482 04070000 		.4byte	.LASF79
 4952 0486 01       		.byte	0x1
 4953 0487 FC01     		.2byte	0x1fc
 4954 0489 EE000000 		.4byte	0xee
 4955 048d 02       		.uleb128 0x2
 4956 048e 91       		.byte	0x91
 4957 048f 68       		.sleb128 -24
 4958 0490 1B       		.uleb128 0x1b
 4959 0491 48040000 		.4byte	.LASF80
 4960 0495 01       		.byte	0x1
 4961 0496 FC01     		.2byte	0x1fc
 4962 0498 EE000000 		.4byte	0xee
 4963 049c 02       		.uleb128 0x2
 4964 049d 91       		.byte	0x91
 4965 049e 60       		.sleb128 -32
 4966 049f 15       		.uleb128 0x15
 4967 04a0 64020000 		.4byte	.LASF81
 4968 04a4 01       		.byte	0x1
 4969 04a5 1102     		.2byte	0x211
 4970 04a7 DB000000 		.4byte	0xdb
 4971 04ab 02       		.uleb128 0x2
 4972 04ac 91       		.byte	0x91
 4973 04ad 76       		.sleb128 -10
 4974 04ae 15       		.uleb128 0x15
 4975 04af 7B050000 		.4byte	.LASF82
 4976 04b3 01       		.byte	0x1
 4977 04b4 1202     		.2byte	0x212
 4978 04b6 DB000000 		.4byte	0xdb
 4979 04ba 02       		.uleb128 0x2
 4980 04bb 91       		.byte	0x91
 4981 04bc 74       		.sleb128 -12
 4982 04bd 00       		.byte	0
 4983 04be 1C       		.uleb128 0x1c
 4984 04bf 2C080000 		.4byte	.LASF83
 4985 04c3 01       		.byte	0x1
 4986 04c4 1802     		.2byte	0x218
 4987 04c6 00000000 		.4byte	.LFB77
 4988 04ca 18000000 		.4byte	.LFE77-.LFB77
 4989 04ce 01       		.uleb128 0x1
 4990 04cf 9C       		.byte	0x9c
 4991 04d0 1C       		.uleb128 0x1c
 4992 04d1 5F090000 		.4byte	.LASF84
 4993 04d5 01       		.byte	0x1
 4994 04d6 1E02     		.2byte	0x21e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 106


 4995 04d8 00000000 		.4byte	.LFB78
 4996 04dc 18000000 		.4byte	.LFE78-.LFB78
 4997 04e0 01       		.uleb128 0x1
 4998 04e1 9C       		.byte	0x9c
 4999 04e2 1C       		.uleb128 0x1c
 5000 04e3 AC070000 		.4byte	.LASF85
 5001 04e7 01       		.byte	0x1
 5002 04e8 2402     		.2byte	0x224
 5003 04ea 00000000 		.4byte	.LFB79
 5004 04ee 22000000 		.4byte	.LFE79-.LFB79
 5005 04f2 01       		.uleb128 0x1
 5006 04f3 9C       		.byte	0x9c
 5007 04f4 1C       		.uleb128 0x1c
 5008 04f5 6F020000 		.4byte	.LASF86
 5009 04f9 01       		.byte	0x1
 5010 04fa 2A02     		.2byte	0x22a
 5011 04fc 00000000 		.4byte	.LFB80
 5012 0500 1C000000 		.4byte	.LFE80-.LFB80
 5013 0504 01       		.uleb128 0x1
 5014 0505 9C       		.byte	0x9c
 5015 0506 1C       		.uleb128 0x1c
 5016 0507 21070000 		.4byte	.LASF87
 5017 050b 01       		.byte	0x1
 5018 050c 2F02     		.2byte	0x22f
 5019 050e 00000000 		.4byte	.LFB81
 5020 0512 28000000 		.4byte	.LFE81-.LFB81
 5021 0516 01       		.uleb128 0x1
 5022 0517 9C       		.byte	0x9c
 5023 0518 1C       		.uleb128 0x1c
 5024 0519 7D020000 		.4byte	.LASF88
 5025 051d 01       		.byte	0x1
 5026 051e 3402     		.2byte	0x234
 5027 0520 00000000 		.4byte	.LFB82
 5028 0524 2C000000 		.4byte	.LFE82-.LFB82
 5029 0528 01       		.uleb128 0x1
 5030 0529 9C       		.byte	0x9c
 5031 052a 1C       		.uleb128 0x1c
 5032 052b EF030000 		.4byte	.LASF89
 5033 052f 01       		.byte	0x1
 5034 0530 3902     		.2byte	0x239
 5035 0532 00000000 		.4byte	.LFB83
 5036 0536 44000000 		.4byte	.LFE83-.LFB83
 5037 053a 01       		.uleb128 0x1
 5038 053b 9C       		.byte	0x9c
 5039 053c 1C       		.uleb128 0x1c
 5040 053d D0020000 		.4byte	.LASF90
 5041 0541 01       		.byte	0x1
 5042 0542 3E02     		.2byte	0x23e
 5043 0544 00000000 		.4byte	.LFB84
 5044 0548 38000000 		.4byte	.LFE84-.LFB84
 5045 054c 01       		.uleb128 0x1
 5046 054d 9C       		.byte	0x9c
 5047 054e 1C       		.uleb128 0x1c
 5048 054f 89060000 		.4byte	.LASF91
 5049 0553 01       		.byte	0x1
 5050 0554 4702     		.2byte	0x247
 5051 0556 00000000 		.4byte	.LFB85
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 107


 5052 055a 38000000 		.4byte	.LFE85-.LFB85
 5053 055e 01       		.uleb128 0x1
 5054 055f 9C       		.byte	0x9c
 5055 0560 1C       		.uleb128 0x1c
 5056 0561 61060000 		.4byte	.LASF92
 5057 0565 01       		.byte	0x1
 5058 0566 5002     		.2byte	0x250
 5059 0568 00000000 		.4byte	.LFB86
 5060 056c 38000000 		.4byte	.LFE86-.LFB86
 5061 0570 01       		.uleb128 0x1
 5062 0571 9C       		.byte	0x9c
 5063 0572 1C       		.uleb128 0x1c
 5064 0573 FA010000 		.4byte	.LASF93
 5065 0577 01       		.byte	0x1
 5066 0578 5902     		.2byte	0x259
 5067 057a 00000000 		.4byte	.LFB87
 5068 057e 14000000 		.4byte	.LFE87-.LFB87
 5069 0582 01       		.uleb128 0x1
 5070 0583 9C       		.byte	0x9c
 5071 0584 1D       		.uleb128 0x1d
 5072 0585 E6020000 		.4byte	.LASF94
 5073 0589 01       		.byte	0x1
 5074 058a 5E02     		.2byte	0x25e
 5075 058c 00000000 		.4byte	.LFB88
 5076 0590 18000000 		.4byte	.LFE88-.LFB88
 5077 0594 01       		.uleb128 0x1
 5078 0595 9C       		.byte	0x9c
 5079 0596 1D       		.uleb128 0x1d
 5080 0597 83040000 		.4byte	.LASF95
 5081 059b 01       		.byte	0x1
 5082 059c 6202     		.2byte	0x262
 5083 059e 00000000 		.4byte	.LFB89
 5084 05a2 18000000 		.4byte	.LFE89-.LFB89
 5085 05a6 01       		.uleb128 0x1
 5086 05a7 9C       		.byte	0x9c
 5087 05a8 1D       		.uleb128 0x1d
 5088 05a9 6A090000 		.4byte	.LASF96
 5089 05ad 01       		.byte	0x1
 5090 05ae 6702     		.2byte	0x267
 5091 05b0 00000000 		.4byte	.LFB90
 5092 05b4 18000000 		.4byte	.LFE90-.LFB90
 5093 05b8 01       		.uleb128 0x1
 5094 05b9 9C       		.byte	0x9c
 5095 05ba 1D       		.uleb128 0x1d
 5096 05bb 7A030000 		.4byte	.LASF97
 5097 05bf 01       		.byte	0x1
 5098 05c0 6B02     		.2byte	0x26b
 5099 05c2 00000000 		.4byte	.LFB91
 5100 05c6 18000000 		.4byte	.LFE91-.LFB91
 5101 05ca 01       		.uleb128 0x1
 5102 05cb 9C       		.byte	0x9c
 5103 05cc 17       		.uleb128 0x17
 5104 05cd B8060000 		.4byte	.LASF98
 5105 05d1 01       		.byte	0x1
 5106 05d2 7202     		.2byte	0x272
 5107 05d4 00000000 		.4byte	.LFB92
 5108 05d8 B8000000 		.4byte	.LFE92-.LFB92
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 108


 5109 05dc 01       		.uleb128 0x1
 5110 05dd 9C       		.byte	0x9c
 5111 05de F2050000 		.4byte	0x5f2
 5112 05e2 15       		.uleb128 0x15
 5113 05e3 35050000 		.4byte	.LASF99
 5114 05e7 01       		.byte	0x1
 5115 05e8 7302     		.2byte	0x273
 5116 05ea 8E000000 		.4byte	0x8e
 5117 05ee 02       		.uleb128 0x2
 5118 05ef 91       		.byte	0x91
 5119 05f0 6F       		.sleb128 -17
 5120 05f1 00       		.byte	0
 5121 05f2 17       		.uleb128 0x17
 5122 05f3 DA050000 		.4byte	.LASF100
 5123 05f7 01       		.byte	0x1
 5124 05f8 8F02     		.2byte	0x28f
 5125 05fa 00000000 		.4byte	.LFB93
 5126 05fe BC010000 		.4byte	.LFE93-.LFB93
 5127 0602 01       		.uleb128 0x1
 5128 0603 9C       		.byte	0x9c
 5129 0604 41060000 		.4byte	0x641
 5130 0608 15       		.uleb128 0x15
 5131 0609 35050000 		.4byte	.LASF99
 5132 060d 01       		.byte	0x1
 5133 060e 9102     		.2byte	0x291
 5134 0610 8E000000 		.4byte	0x8e
 5135 0614 02       		.uleb128 0x2
 5136 0615 91       		.byte	0x91
 5137 0616 77       		.sleb128 -9
 5138 0617 12       		.uleb128 0x12
 5139 0618 8C000000 		.4byte	.LBB7
 5140 061c FC000000 		.4byte	.LBE7-.LBB7
 5141 0620 1A       		.uleb128 0x1a
 5142 0621 6D657300 		.ascii	"mes\000"
 5143 0625 01       		.byte	0x1
 5144 0626 B702     		.2byte	0x2b7
 5145 0628 CB020000 		.4byte	0x2cb
 5146 062c 02       		.uleb128 0x2
 5147 062d 91       		.byte	0x91
 5148 062e 64       		.sleb128 -28
 5149 062f 15       		.uleb128 0x15
 5150 0630 90000000 		.4byte	.LASF101
 5151 0634 01       		.byte	0x1
 5152 0635 C802     		.2byte	0x2c8
 5153 0637 41060000 		.4byte	0x641
 5154 063b 03       		.uleb128 0x3
 5155 063c 91       		.byte	0x91
 5156 063d E47E     		.sleb128 -156
 5157 063f 00       		.byte	0
 5158 0640 00       		.byte	0
 5159 0641 07       		.uleb128 0x7
 5160 0642 8E000000 		.4byte	0x8e
 5161 0646 51060000 		.4byte	0x651
 5162 064a 08       		.uleb128 0x8
 5163 064b 81000000 		.4byte	0x81
 5164 064f 7F       		.byte	0x7f
 5165 0650 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 109


 5166 0651 1C       		.uleb128 0x1c
 5167 0652 C5020000 		.4byte	.LASF102
 5168 0656 01       		.byte	0x1
 5169 0657 D102     		.2byte	0x2d1
 5170 0659 00000000 		.4byte	.LFB94
 5171 065d 40000000 		.4byte	.LFE94-.LFB94
 5172 0661 01       		.uleb128 0x1
 5173 0662 9C       		.byte	0x9c
 5174 0663 1C       		.uleb128 0x1c
 5175 0664 59020000 		.4byte	.LASF103
 5176 0668 01       		.byte	0x1
 5177 0669 E002     		.2byte	0x2e0
 5178 066b 00000000 		.4byte	.LFB95
 5179 066f 40000000 		.4byte	.LFE95-.LFB95
 5180 0673 01       		.uleb128 0x1
 5181 0674 9C       		.byte	0x9c
 5182 0675 19       		.uleb128 0x19
 5183 0676 98000000 		.4byte	.LASF104
 5184 067a 01       		.byte	0x1
 5185 067b F002     		.2byte	0x2f0
 5186 067d 00000000 		.4byte	.LFB96
 5187 0681 30020000 		.4byte	.LFE96-.LFB96
 5188 0685 01       		.uleb128 0x1
 5189 0686 9C       		.byte	0x9c
 5190 0687 E6060000 		.4byte	0x6e6
 5191 068b 15       		.uleb128 0x15
 5192 068c 0D030000 		.4byte	.LASF105
 5193 0690 01       		.byte	0x1
 5194 0691 FE02     		.2byte	0x2fe
 5195 0693 DB000000 		.4byte	0xdb
 5196 0697 02       		.uleb128 0x2
 5197 0698 91       		.byte	0x91
 5198 0699 5E       		.sleb128 -34
 5199 069a 15       		.uleb128 0x15
 5200 069b 53050000 		.4byte	.LASF106
 5201 069f 01       		.byte	0x1
 5202 06a0 FF02     		.2byte	0x2ff
 5203 06a2 DB000000 		.4byte	0xdb
 5204 06a6 02       		.uleb128 0x2
 5205 06a7 91       		.byte	0x91
 5206 06a8 5C       		.sleb128 -36
 5207 06a9 15       		.uleb128 0x15
 5208 06aa A9030000 		.4byte	.LASF107
 5209 06ae 01       		.byte	0x1
 5210 06af 0003     		.2byte	0x300
 5211 06b1 EE000000 		.4byte	0xee
 5212 06b5 02       		.uleb128 0x2
 5213 06b6 91       		.byte	0x91
 5214 06b7 68       		.sleb128 -24
 5215 06b8 15       		.uleb128 0x15
 5216 06b9 23090000 		.4byte	.LASF108
 5217 06bd 01       		.byte	0x1
 5218 06be 0103     		.2byte	0x301
 5219 06c0 EE000000 		.4byte	0xee
 5220 06c4 02       		.uleb128 0x2
 5221 06c5 91       		.byte	0x91
 5222 06c6 60       		.sleb128 -32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 110


 5223 06c7 15       		.uleb128 0x15
 5224 06c8 33040000 		.4byte	.LASF109
 5225 06cc 01       		.byte	0x1
 5226 06cd 0A03     		.2byte	0x30a
 5227 06cf 73000000 		.4byte	0x73
 5228 06d3 02       		.uleb128 0x2
 5229 06d4 91       		.byte	0x91
 5230 06d5 58       		.sleb128 -40
 5231 06d6 15       		.uleb128 0x15
 5232 06d7 C6080000 		.4byte	.LASF110
 5233 06db 01       		.byte	0x1
 5234 06dc 0B03     		.2byte	0x30b
 5235 06de 73000000 		.4byte	0x73
 5236 06e2 02       		.uleb128 0x2
 5237 06e3 91       		.byte	0x91
 5238 06e4 54       		.sleb128 -44
 5239 06e5 00       		.byte	0
 5240 06e6 1D       		.uleb128 0x1d
 5241 06e7 AA050000 		.4byte	.LASF111
 5242 06eb 01       		.byte	0x1
 5243 06ec 1903     		.2byte	0x319
 5244 06ee 00000000 		.4byte	.LFB97
 5245 06f2 0C000000 		.4byte	.LFE97-.LFB97
 5246 06f6 01       		.uleb128 0x1
 5247 06f7 9C       		.byte	0x9c
 5248 06f8 19       		.uleb128 0x19
 5249 06f9 8A010000 		.4byte	.LASF112
 5250 06fd 01       		.byte	0x1
 5251 06fe 1F03     		.2byte	0x31f
 5252 0700 00000000 		.4byte	.LFB98
 5253 0704 04010000 		.4byte	.LFE98-.LFB98
 5254 0708 01       		.uleb128 0x1
 5255 0709 9C       		.byte	0x9c
 5256 070a 3A070000 		.4byte	0x73a
 5257 070e 1A       		.uleb128 0x1a
 5258 070f 6E6C00   		.ascii	"nl\000"
 5259 0712 01       		.byte	0x1
 5260 0713 2303     		.2byte	0x323
 5261 0715 AB000000 		.4byte	0xab
 5262 0719 02       		.uleb128 0x2
 5263 071a 91       		.byte	0x91
 5264 071b 67       		.sleb128 -25
 5265 071c 1A       		.uleb128 0x1a
 5266 071d 6E7200   		.ascii	"nr\000"
 5267 0720 01       		.byte	0x1
 5268 0721 2403     		.2byte	0x324
 5269 0723 AB000000 		.4byte	0xab
 5270 0727 02       		.uleb128 0x2
 5271 0728 91       		.byte	0x91
 5272 0729 66       		.sleb128 -26
 5273 072a 1A       		.uleb128 0x1a
 5274 072b 6D696400 		.ascii	"mid\000"
 5275 072f 01       		.byte	0x1
 5276 0730 2503     		.2byte	0x325
 5277 0732 AB000000 		.4byte	0xab
 5278 0736 02       		.uleb128 0x2
 5279 0737 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 111


 5280 0738 65       		.sleb128 -27
 5281 0739 00       		.byte	0
 5282 073a 1D       		.uleb128 0x1d
 5283 073b 6F010000 		.4byte	.LASF113
 5284 073f 01       		.byte	0x1
 5285 0740 3F03     		.2byte	0x33f
 5286 0742 00000000 		.4byte	.LFB99
 5287 0746 0C000000 		.4byte	.LFE99-.LFB99
 5288 074a 01       		.uleb128 0x1
 5289 074b 9C       		.byte	0x9c
 5290 074c 19       		.uleb128 0x19
 5291 074d 9F030000 		.4byte	.LASF114
 5292 0751 01       		.byte	0x1
 5293 0752 4403     		.2byte	0x344
 5294 0754 00000000 		.4byte	.LFB100
 5295 0758 C0000000 		.4byte	.LFE100-.LFB100
 5296 075c 01       		.uleb128 0x1
 5297 075d 9C       		.byte	0x9c
 5298 075e 9A070000 		.4byte	0x79a
 5299 0762 12       		.uleb128 0x12
 5300 0763 0E000000 		.4byte	.LBB8
 5301 0767 8E000000 		.4byte	.LBE8-.LBB8
 5302 076b 15       		.uleb128 0x15
 5303 076c FF020000 		.4byte	.LASF115
 5304 0770 01       		.byte	0x1
 5305 0771 4D03     		.2byte	0x34d
 5306 0773 E7000000 		.4byte	0xe7
 5307 0777 02       		.uleb128 0x2
 5308 0778 91       		.byte	0x91
 5309 0779 74       		.sleb128 -12
 5310 077a 15       		.uleb128 0x15
 5311 077b 91050000 		.4byte	.LASF116
 5312 077f 01       		.byte	0x1
 5313 0780 4E03     		.2byte	0x34e
 5314 0782 DB000000 		.4byte	0xdb
 5315 0786 02       		.uleb128 0x2
 5316 0787 91       		.byte	0x91
 5317 0788 72       		.sleb128 -14
 5318 0789 15       		.uleb128 0x15
 5319 078a 62030000 		.4byte	.LASF117
 5320 078e 01       		.byte	0x1
 5321 078f 5303     		.2byte	0x353
 5322 0791 CB020000 		.4byte	0x2cb
 5323 0795 02       		.uleb128 0x2
 5324 0796 91       		.byte	0x91
 5325 0797 60       		.sleb128 -32
 5326 0798 00       		.byte	0
 5327 0799 00       		.byte	0
 5328 079a 19       		.uleb128 0x19
 5329 079b 0C090000 		.4byte	.LASF118
 5330 079f 01       		.byte	0x1
 5331 07a0 5A03     		.2byte	0x35a
 5332 07a2 00000000 		.4byte	.LFB101
 5333 07a6 B8000000 		.4byte	.LFE101-.LFB101
 5334 07aa 01       		.uleb128 0x1
 5335 07ab 9C       		.byte	0x9c
 5336 07ac CA070000 		.4byte	0x7ca
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 112


 5337 07b0 12       		.uleb128 0x12
 5338 07b1 0E000000 		.4byte	.LBB9
 5339 07b5 86000000 		.4byte	.LBE9-.LBB9
 5340 07b9 15       		.uleb128 0x15
 5341 07ba AC060000 		.4byte	.LASF119
 5342 07be 01       		.byte	0x1
 5343 07bf 5E03     		.2byte	0x35e
 5344 07c1 CB020000 		.4byte	0x2cb
 5345 07c5 02       		.uleb128 0x2
 5346 07c6 91       		.byte	0x91
 5347 07c7 68       		.sleb128 -24
 5348 07c8 00       		.byte	0
 5349 07c9 00       		.byte	0
 5350 07ca 17       		.uleb128 0x17
 5351 07cb 3B070000 		.4byte	.LASF120
 5352 07cf 01       		.byte	0x1
 5353 07d0 6F03     		.2byte	0x36f
 5354 07d2 00000000 		.4byte	.LFB102
 5355 07d6 4A000000 		.4byte	.LFE102-.LFB102
 5356 07da 01       		.uleb128 0x1
 5357 07db 9C       		.byte	0x9c
 5358 07dc F0070000 		.4byte	0x7f0
 5359 07e0 1B       		.uleb128 0x1b
 5360 07e1 57030000 		.4byte	.LASF121
 5361 07e5 01       		.byte	0x1
 5362 07e6 6F03     		.2byte	0x36f
 5363 07e8 F0070000 		.4byte	0x7f0
 5364 07ec 02       		.uleb128 0x2
 5365 07ed 91       		.byte	0x91
 5366 07ee 6C       		.sleb128 -20
 5367 07ef 00       		.byte	0
 5368 07f0 05       		.uleb128 0x5
 5369 07f1 04       		.byte	0x4
 5370 07f2 AB000000 		.4byte	0xab
 5371 07f6 17       		.uleb128 0x17
 5372 07f7 14070000 		.4byte	.LASF122
 5373 07fb 01       		.byte	0x1
 5374 07fc 7A03     		.2byte	0x37a
 5375 07fe 00000000 		.4byte	.LFB103
 5376 0802 68000000 		.4byte	.LFE103-.LFB103
 5377 0806 01       		.uleb128 0x1
 5378 0807 9C       		.byte	0x9c
 5379 0808 33080000 		.4byte	0x833
 5380 080c 18       		.uleb128 0x18
 5381 080d 7300     		.ascii	"s\000"
 5382 080f 01       		.byte	0x1
 5383 0810 7A03     		.2byte	0x37a
 5384 0812 88000000 		.4byte	0x88
 5385 0816 02       		.uleb128 0x2
 5386 0817 91       		.byte	0x91
 5387 0818 6C       		.sleb128 -20
 5388 0819 12       		.uleb128 0x12
 5389 081a 10000000 		.4byte	.LBB10
 5390 081e 48000000 		.4byte	.LBE10-.LBB10
 5391 0822 1A       		.uleb128 0x1a
 5392 0823 636E7400 		.ascii	"cnt\000"
 5393 0827 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 113


 5394 0828 8103     		.2byte	0x381
 5395 082a C3000000 		.4byte	0xc3
 5396 082e 02       		.uleb128 0x2
 5397 082f 91       		.byte	0x91
 5398 0830 74       		.sleb128 -12
 5399 0831 00       		.byte	0
 5400 0832 00       		.byte	0
 5401 0833 17       		.uleb128 0x17
 5402 0834 72080000 		.4byte	.LASF123
 5403 0838 01       		.byte	0x1
 5404 0839 9003     		.2byte	0x390
 5405 083b 00000000 		.4byte	.LFB104
 5406 083f 50000000 		.4byte	.LFE104-.LFB104
 5407 0843 01       		.uleb128 0x1
 5408 0844 9C       		.byte	0x9c
 5409 0845 70080000 		.4byte	0x870
 5410 0849 18       		.uleb128 0x18
 5411 084a 6300     		.ascii	"c\000"
 5412 084c 01       		.byte	0x1
 5413 084d 9003     		.2byte	0x390
 5414 084f 8E000000 		.4byte	0x8e
 5415 0853 02       		.uleb128 0x2
 5416 0854 91       		.byte	0x91
 5417 0855 6F       		.sleb128 -17
 5418 0856 12       		.uleb128 0x12
 5419 0857 12000000 		.4byte	.LBB11
 5420 085b 2E000000 		.4byte	.LBE11-.LBB11
 5421 085f 1A       		.uleb128 0x1a
 5422 0860 636E7400 		.ascii	"cnt\000"
 5423 0864 01       		.byte	0x1
 5424 0865 9403     		.2byte	0x394
 5425 0867 C3000000 		.4byte	0xc3
 5426 086b 02       		.uleb128 0x2
 5427 086c 91       		.byte	0x91
 5428 086d 74       		.sleb128 -12
 5429 086e 00       		.byte	0
 5430 086f 00       		.byte	0
 5431 0870 1D       		.uleb128 0x1d
 5432 0871 6D030000 		.4byte	.LASF124
 5433 0875 01       		.byte	0x1
 5434 0876 A103     		.2byte	0x3a1
 5435 0878 00000000 		.4byte	.LFB105
 5436 087c 0C000000 		.4byte	.LFE105-.LFB105
 5437 0880 01       		.uleb128 0x1
 5438 0881 9C       		.byte	0x9c
 5439 0882 1E       		.uleb128 0x1e
 5440 0883 9F060000 		.4byte	.LASF125
 5441 0887 06       		.byte	0x6
 5442 0888 9606     		.2byte	0x696
 5443 088a 8E080000 		.4byte	0x88e
 5444 088e 1F       		.uleb128 0x1f
 5445 088f 95000000 		.4byte	0x95
 5446 0893 20       		.uleb128 0x20
 5447 0894 747300   		.ascii	"ts\000"
 5448 0897 05       		.byte	0x5
 5449 0898 10       		.byte	0x10
 5450 0899 AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 114


 5451 089d 05       		.uleb128 0x5
 5452 089e 03       		.byte	0x3
 5453 089f 00000000 		.4byte	ts
 5454 08a3 21       		.uleb128 0x21
 5455 08a4 F4070000 		.4byte	.LASF126
 5456 08a8 05       		.byte	0x5
 5457 08a9 11       		.byte	0x11
 5458 08aa B7000000 		.4byte	0xb7
 5459 08ae 05       		.uleb128 0x5
 5460 08af 03       		.byte	0x3
 5461 08b0 00000000 		.4byte	ts_enc
 5462 08b4 21       		.uleb128 0x21
 5463 08b5 BE060000 		.4byte	.LASF127
 5464 08b9 05       		.byte	0x5
 5465 08ba 12       		.byte	0x12
 5466 08bb B7000000 		.4byte	0xb7
 5467 08bf 05       		.uleb128 0x5
 5468 08c0 03       		.byte	0x3
 5469 08c1 00000000 		.4byte	ts_update
 5470 08c5 21       		.uleb128 0x21
 5471 08c6 5E050000 		.4byte	.LASF128
 5472 08ca 05       		.byte	0x5
 5473 08cb 13       		.byte	0x13
 5474 08cc B7000000 		.4byte	0xb7
 5475 08d0 05       		.uleb128 0x5
 5476 08d1 03       		.byte	0x3
 5477 08d2 00000000 		.4byte	ts_speed
 5478 08d6 21       		.uleb128 0x21
 5479 08d7 94030000 		.4byte	.LASF129
 5480 08db 05       		.byte	0x5
 5481 08dc 14       		.byte	0x14
 5482 08dd B7000000 		.4byte	0xb7
 5483 08e1 05       		.uleb128 0x5
 5484 08e2 03       		.byte	0x3
 5485 08e3 00000000 		.4byte	ts_display
 5486 08e7 21       		.uleb128 0x21
 5487 08e8 17030000 		.4byte	.LASF130
 5488 08ec 05       		.byte	0x5
 5489 08ed 16       		.byte	0x16
 5490 08ee AB000000 		.4byte	0xab
 5491 08f2 05       		.uleb128 0x5
 5492 08f3 03       		.byte	0x3
 5493 08f4 00000000 		.4byte	flag_ts_enc
 5494 08f8 21       		.uleb128 0x21
 5495 08f9 F0020000 		.4byte	.LASF131
 5496 08fd 05       		.byte	0x5
 5497 08fe 17       		.byte	0x17
 5498 08ff AB000000 		.4byte	0xab
 5499 0903 05       		.uleb128 0x5
 5500 0904 03       		.byte	0x3
 5501 0905 00000000 		.4byte	flag_ts_update
 5502 0909 21       		.uleb128 0x21
 5503 090a 19060000 		.4byte	.LASF132
 5504 090e 05       		.byte	0x5
 5505 090f 18       		.byte	0x18
 5506 0910 AB000000 		.4byte	0xab
 5507 0914 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 115


 5508 0915 03       		.byte	0x3
 5509 0916 00000000 		.4byte	flag_ts_speed
 5510 091a 21       		.uleb128 0x21
 5511 091b 05080000 		.4byte	.LASF133
 5512 091f 05       		.byte	0x5
 5513 0920 19       		.byte	0x19
 5514 0921 AB000000 		.4byte	0xab
 5515 0925 05       		.uleb128 0x5
 5516 0926 03       		.byte	0x3
 5517 0927 00000000 		.4byte	flag_ts_display
 5518 092b 21       		.uleb128 0x21
 5519 092c 44060000 		.4byte	.LASF134
 5520 0930 05       		.byte	0x5
 5521 0931 1C       		.byte	0x1c
 5522 0932 AB000000 		.4byte	0xab
 5523 0936 05       		.uleb128 0x5
 5524 0937 03       		.byte	0x3
 5525 0938 00000000 		.4byte	flag_rx
 5526 093c 21       		.uleb128 0x21
 5527 093d 9D020000 		.4byte	.LASF135
 5528 0941 05       		.byte	0x5
 5529 0942 1D       		.byte	0x1d
 5530 0943 AB000000 		.4byte	0xab
 5531 0947 05       		.uleb128 0x5
 5532 0948 03       		.byte	0x3
 5533 0949 00000000 		.4byte	flag_packet
 5534 094d 21       		.uleb128 0x21
 5535 094e 30090000 		.4byte	.LASF136
 5536 0952 05       		.byte	0x5
 5537 0953 1E       		.byte	0x1e
 5538 0954 AB000000 		.4byte	0xab
 5539 0958 05       		.uleb128 0x5
 5540 0959 03       		.byte	0x3
 5541 095a 00000000 		.4byte	flag_KB_string
 5542 095e 21       		.uleb128 0x21
 5543 095f 27060000 		.4byte	.LASF137
 5544 0963 05       		.byte	0x5
 5545 0964 20       		.byte	0x20
 5546 0965 AB000000 		.4byte	0xab
 5547 0969 05       		.uleb128 0x5
 5548 096a 03       		.byte	0x3
 5549 096b 00000000 		.4byte	dataready_flag
 5550 096f 21       		.uleb128 0x21
 5551 0970 B6010000 		.4byte	.LASF138
 5552 0974 05       		.byte	0x5
 5553 0975 22       		.byte	0x22
 5554 0976 AB000000 		.4byte	0xab
 5555 097a 05       		.uleb128 0x5
 5556 097b 03       		.byte	0x3
 5557 097c 00000000 		.4byte	flag_rf_transmission_active
 5558 0980 21       		.uleb128 0x21
 5559 0981 D2010000 		.4byte	.LASF139
 5560 0985 05       		.byte	0x5
 5561 0986 23       		.byte	0x23
 5562 0987 AB000000 		.4byte	0xab
 5563 098b 05       		.uleb128 0x5
 5564 098c 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 116


 5565 098d 00000000 		.4byte	flag_print_rf
 5566 0991 21       		.uleb128 0x21
 5567 0992 C1050000 		.4byte	.LASF140
 5568 0996 05       		.byte	0x5
 5569 0997 25       		.byte	0x25
 5570 0998 AB000000 		.4byte	0xab
 5571 099c 05       		.uleb128 0x5
 5572 099d 03       		.byte	0x3
 5573 099e 00000000 		.4byte	flag_receive_ADC
 5574 09a2 21       		.uleb128 0x21
 5575 09a3 56060000 		.4byte	.LASF141
 5576 09a7 05       		.byte	0x5
 5577 09a8 26       		.byte	0x26
 5578 09a9 DB000000 		.4byte	0xdb
 5579 09ad 05       		.uleb128 0x5
 5580 09ae 03       		.byte	0x3
 5581 09af 00000000 		.4byte	adc_result
 5582 09b3 21       		.uleb128 0x21
 5583 09b4 00000000 		.4byte	.LASF142
 5584 09b8 05       		.byte	0x5
 5585 09b9 28       		.byte	0x28
 5586 09ba AB000000 		.4byte	0xab
 5587 09be 05       		.uleb128 0x5
 5588 09bf 03       		.byte	0x3
 5589 09c0 00000000 		.4byte	direction
 5590 09c4 21       		.uleb128 0x21
 5591 09c5 47050000 		.4byte	.LASF143
 5592 09c9 05       		.byte	0x5
 5593 09ca 2B       		.byte	0x2b
 5594 09cb AB000000 		.4byte	0xab
 5595 09cf 05       		.uleb128 0x5
 5596 09d0 03       		.byte	0x3
 5597 09d1 00000000 		.4byte	BIN_ENABLED
 5598 09d5 21       		.uleb128 0x21
 5599 09d6 3D040000 		.4byte	.LASF144
 5600 09da 05       		.byte	0x5
 5601 09db 2D       		.byte	0x2d
 5602 09dc AB000000 		.4byte	0xab
 5603 09e0 05       		.uleb128 0x5
 5604 09e1 03       		.byte	0x3
 5605 09e2 00000000 		.4byte	BT_ENABLED
 5606 09e6 21       		.uleb128 0x21
 5607 09e7 6B060000 		.4byte	.LASF145
 5608 09eb 05       		.byte	0x5
 5609 09ec 32       		.byte	0x32
 5610 09ed AB000000 		.4byte	0xab
 5611 09f1 05       		.uleb128 0x5
 5612 09f2 03       		.byte	0x3
 5613 09f3 00000000 		.4byte	flag_calc_wheelspeed
 5614 09f7 21       		.uleb128 0x21
 5615 09f8 57010000 		.4byte	.LASF146
 5616 09fc 05       		.byte	0x5
 5617 09fd 33       		.byte	0x33
 5618 09fe DB000000 		.4byte	0xdb
 5619 0a02 05       		.uleb128 0x5
 5620 0a03 03       		.byte	0x3
 5621 0a04 00000000 		.4byte	quad_count1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 117


 5622 0a08 21       		.uleb128 0x21
 5623 0a09 63010000 		.4byte	.LASF147
 5624 0a0d 05       		.byte	0x5
 5625 0a0e 34       		.byte	0x34
 5626 0a0f DB000000 		.4byte	0xdb
 5627 0a13 05       		.uleb128 0x5
 5628 0a14 03       		.byte	0x3
 5629 0a15 00000000 		.4byte	quad_count2
 5630 0a19 21       		.uleb128 0x21
 5631 0a1a 44080000 		.4byte	.LASF148
 5632 0a1e 05       		.byte	0x5
 5633 0a1f 35       		.byte	0x35
 5634 0a20 DB000000 		.4byte	0xdb
 5635 0a24 05       		.uleb128 0x5
 5636 0a25 03       		.byte	0x3
 5637 0a26 00000000 		.4byte	last_quad_count1
 5638 0a2a 21       		.uleb128 0x21
 5639 0a2b 55080000 		.4byte	.LASF149
 5640 0a2f 05       		.byte	0x5
 5641 0a30 36       		.byte	0x36
 5642 0a31 DB000000 		.4byte	0xdb
 5643 0a35 05       		.uleb128 0x5
 5644 0a36 03       		.byte	0x3
 5645 0a37 00000000 		.4byte	last_quad_count2
 5646 0a3b 21       		.uleb128 0x21
 5647 0a3c 7A000000 		.4byte	.LASF150
 5648 0a40 05       		.byte	0x5
 5649 0a41 37       		.byte	0x37
 5650 0a42 DB000000 		.4byte	0xdb
 5651 0a46 05       		.uleb128 0x5
 5652 0a47 03       		.byte	0x3
 5653 0a48 00000000 		.4byte	quad_diff1
 5654 0a4c 21       		.uleb128 0x21
 5655 0a4d 85000000 		.4byte	.LASF151
 5656 0a51 05       		.byte	0x5
 5657 0a52 38       		.byte	0x38
 5658 0a53 DB000000 		.4byte	0xdb
 5659 0a57 05       		.uleb128 0x5
 5660 0a58 03       		.byte	0x3
 5661 0a59 00000000 		.4byte	quad_diff2
 5662 0a5d 21       		.uleb128 0x21
 5663 0a5e D1060000 		.4byte	.LASF152
 5664 0a62 05       		.byte	0x5
 5665 0a63 39       		.byte	0x39
 5666 0a64 AB000000 		.4byte	0xab
 5667 0a68 05       		.uleb128 0x5
 5668 0a69 03       		.byte	0x3
 5669 0a6a 00000000 		.4byte	deadzone
 5670 0a6e 21       		.uleb128 0x21
 5671 0a6f B6000000 		.4byte	.LASF153
 5672 0a73 05       		.byte	0x5
 5673 0a74 3C       		.byte	0x3c
 5674 0a75 DB000000 		.4byte	0xdb
 5675 0a79 05       		.uleb128 0x5
 5676 0a7a 03       		.byte	0x3
 5677 0a7b 00000000 		.4byte	start_turn_count
 5678 0a7f 21       		.uleb128 0x21
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 118


 5679 0a80 FC050000 		.4byte	.LASF154
 5680 0a84 05       		.byte	0x5
 5681 0a85 3F       		.byte	0x3f
 5682 0a86 DB000000 		.4byte	0xdb
 5683 0a8a 05       		.uleb128 0x5
 5684 0a8b 03       		.byte	0x3
 5685 0a8c 00000000 		.4byte	left_duty_cycle
 5686 0a90 21       		.uleb128 0x21
 5687 0a91 E2080000 		.4byte	.LASF155
 5688 0a95 05       		.byte	0x5
 5689 0a96 40       		.byte	0x40
 5690 0a97 DB000000 		.4byte	0xdb
 5691 0a9b 05       		.uleb128 0x5
 5692 0a9c 03       		.byte	0x3
 5693 0a9d 00000000 		.4byte	right_duty_cycle
 5694 0aa1 21       		.uleb128 0x21
 5695 0aa2 DA060000 		.4byte	.LASF156
 5696 0aa6 05       		.byte	0x5
 5697 0aa7 43       		.byte	0x43
 5698 0aa8 DB000000 		.4byte	0xdb
 5699 0aac 05       		.uleb128 0x5
 5700 0aad 03       		.byte	0x3
 5701 0aae 00000000 		.4byte	leftSpeedLimit
 5702 0ab2 21       		.uleb128 0x21
 5703 0ab3 C3030000 		.4byte	.LASF157
 5704 0ab7 05       		.byte	0x5
 5705 0ab8 44       		.byte	0x44
 5706 0ab9 DB000000 		.4byte	0xdb
 5707 0abd 05       		.uleb128 0x5
 5708 0abe 03       		.byte	0x3
 5709 0abf 00000000 		.4byte	rightSpeedLimit
 5710 0ac3 21       		.uleb128 0x21
 5711 0ac4 58070000 		.4byte	.LASF158
 5712 0ac8 05       		.byte	0x5
 5713 0ac9 47       		.byte	0x47
 5714 0aca DB000000 		.4byte	0xdb
 5715 0ace 05       		.uleb128 0x5
 5716 0acf 03       		.byte	0x3
 5717 0ad0 00000000 		.4byte	target_distance_cm
 5718 0ad4 21       		.uleb128 0x21
 5719 0ad5 09070000 		.4byte	.LASF159
 5720 0ad9 05       		.byte	0x5
 5721 0ada 49       		.byte	0x49
 5722 0adb DB000000 		.4byte	0xdb
 5723 0adf 05       		.uleb128 0x5
 5724 0ae0 03       		.byte	0x3
 5725 0ae1 00000000 		.4byte	accum_dist
 5726 0ae5 21       		.uleb128 0x21
 5727 0ae6 02010000 		.4byte	.LASF160
 5728 0aea 05       		.byte	0x5
 5729 0aeb 4A       		.byte	0x4a
 5730 0aec DB000000 		.4byte	0xdb
 5731 0af0 05       		.uleb128 0x5
 5732 0af1 03       		.byte	0x3
 5733 0af2 00000000 		.4byte	target_distance_quad
 5734 0af6 21       		.uleb128 0x21
 5735 0af7 4C070000 		.4byte	.LASF161
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 119


 5736 0afb 05       		.byte	0x5
 5737 0afc 4B       		.byte	0x4b
 5738 0afd E7000000 		.4byte	0xe7
 5739 0b01 05       		.uleb128 0x5
 5740 0b02 03       		.byte	0x3
 5741 0b03 00000000 		.4byte	quad_per_cm
 5742 0b07 21       		.uleb128 0x21
 5743 0b08 4E040000 		.4byte	.LASF162
 5744 0b0c 05       		.byte	0x5
 5745 0b0d 4E       		.byte	0x4e
 5746 0b0e AB000000 		.4byte	0xab
 5747 0b12 05       		.uleb128 0x5
 5748 0b13 03       		.byte	0x3
 5749 0b14 00000000 		.4byte	initial_pos_valid
 5750 0b18 21       		.uleb128 0x21
 5751 0b19 51090000 		.4byte	.LASF163
 5752 0b1d 05       		.byte	0x5
 5753 0b1e 4F       		.byte	0x4f
 5754 0b1f DB000000 		.4byte	0xdb
 5755 0b23 05       		.uleb128 0x5
 5756 0b24 03       		.byte	0x3
 5757 0b25 00000000 		.4byte	initial_x_pos
 5758 0b29 21       		.uleb128 0x21
 5759 0b2a 36060000 		.4byte	.LASF164
 5760 0b2e 05       		.byte	0x5
 5761 0b2f 50       		.byte	0x50
 5762 0b30 DB000000 		.4byte	0xdb
 5763 0b34 05       		.uleb128 0x5
 5764 0b35 03       		.byte	0x3
 5765 0b36 00000000 		.4byte	initial_y_pos
 5766 0b3a 21       		.uleb128 0x21
 5767 0b3b FB070000 		.4byte	.LASF165
 5768 0b3f 05       		.byte	0x5
 5769 0b40 53       		.byte	0x53
 5770 0b41 AB000000 		.4byte	0xab
 5771 0b45 05       		.uleb128 0x5
 5772 0b46 03       		.byte	0x3
 5773 0b47 00000000 		.4byte	brakeFlag
 5774 0b4b 21       		.uleb128 0x21
 5775 0b4c DD020000 		.4byte	.LASF166
 5776 0b50 05       		.byte	0x5
 5777 0b51 54       		.byte	0x54
 5778 0b52 AB000000 		.4byte	0xab
 5779 0b56 05       		.uleb128 0x5
 5780 0b57 03       		.byte	0x3
 5781 0b58 00000000 		.4byte	portOpen
 5782 0b5c 21       		.uleb128 0x21
 5783 0b5d AA000000 		.4byte	.LASF167
 5784 0b61 05       		.byte	0x5
 5785 0b62 57       		.byte	0x57
 5786 0b63 DB000000 		.4byte	0xdb
 5787 0b67 05       		.uleb128 0x5
 5788 0b68 03       		.byte	0x3
 5789 0b69 00000000 		.4byte	prevVoltage
 5790 0b6d 21       		.uleb128 0x21
 5791 0b6e 20010000 		.4byte	.LASF168
 5792 0b72 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 120


 5793 0b73 58       		.byte	0x58
 5794 0b74 DB000000 		.4byte	0xdb
 5795 0b78 05       		.uleb128 0x5
 5796 0b79 03       		.byte	0x3
 5797 0b7a 00000000 		.4byte	prevVoltage2
 5798 0b7e 07       		.uleb128 0x7
 5799 0b7f 8E000000 		.4byte	0x8e
 5800 0b83 8E0B0000 		.4byte	0xb8e
 5801 0b87 08       		.uleb128 0x8
 5802 0b88 81000000 		.4byte	0x81
 5803 0b8c 3F       		.byte	0x3f
 5804 0b8d 00       		.byte	0
 5805 0b8e 21       		.uleb128 0x21
 5806 0b8f 36080000 		.4byte	.LASF169
 5807 0b93 05       		.byte	0x5
 5808 0b94 5E       		.byte	0x5e
 5809 0b95 7E0B0000 		.4byte	0xb7e
 5810 0b99 05       		.uleb128 0x5
 5811 0b9a 03       		.byte	0x3
 5812 0b9b 00000000 		.4byte	displaystring
 5813 0b9f 21       		.uleb128 0x21
 5814 0ba0 E2070000 		.4byte	.LASF170
 5815 0ba4 05       		.byte	0x5
 5816 0ba5 5F       		.byte	0x5f
 5817 0ba6 7E0B0000 		.4byte	0xb7e
 5818 0baa 05       		.uleb128 0x5
 5819 0bab 03       		.byte	0x3
 5820 0bac 00000000 		.4byte	line
 5821 0bb0 21       		.uleb128 0x21
 5822 0bb1 C3070000 		.4byte	.LASF171
 5823 0bb5 05       		.byte	0x5
 5824 0bb6 5F       		.byte	0x5f
 5825 0bb7 7E0B0000 		.4byte	0xb7e
 5826 0bbb 05       		.uleb128 0x5
 5827 0bbc 03       		.byte	0x3
 5828 0bbd 00000000 		.4byte	entry
 5829 0bc1 07       		.uleb128 0x7
 5830 0bc2 AB000000 		.4byte	0xab
 5831 0bc6 D10B0000 		.4byte	0xbd1
 5832 0bca 08       		.uleb128 0x8
 5833 0bcb 81000000 		.4byte	0x81
 5834 0bcf 3F       		.byte	0x3f
 5835 0bd0 00       		.byte	0
 5836 0bd1 21       		.uleb128 0x21
 5837 0bd2 35020000 		.4byte	.LASF172
 5838 0bd6 05       		.byte	0x5
 5839 0bd7 60       		.byte	0x60
 5840 0bd8 C10B0000 		.4byte	0xbc1
 5841 0bdc 05       		.uleb128 0x5
 5842 0bdd 03       		.byte	0x3
 5843 0bde 00000000 		.4byte	usbBuffer
 5844 0be2 21       		.uleb128 0x21
 5845 0be3 6E040000 		.4byte	.LASF173
 5846 0be7 05       		.byte	0x5
 5847 0be8 75       		.byte	0x75
 5848 0be9 86010000 		.4byte	0x186
 5849 0bed 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 121


 5850 0bee 03       		.byte	0x3
 5851 0bef 00000000 		.4byte	buffer_state
 5852 0bf3 21       		.uleb128 0x21
 5853 0bf4 EF000000 		.4byte	.LASF174
 5854 0bf8 05       		.byte	0x5
 5855 0bf9 76       		.byte	0x76
 5856 0bfa 86010000 		.4byte	0x186
 5857 0bfe 05       		.uleb128 0x5
 5858 0bff 03       		.byte	0x3
 5859 0c00 00000000 		.4byte	system_state
 5860 0c04 21       		.uleb128 0x21
 5861 0c05 43030000 		.4byte	.LASF175
 5862 0c09 05       		.byte	0x5
 5863 0c0a 78       		.byte	0x78
 5864 0c0b 0C010000 		.4byte	0x10c
 5865 0c0f 05       		.uleb128 0x5
 5866 0c10 03       		.byte	0x3
 5867 0c11 00000000 		.4byte	prev_movement_state
 5868 0c15 21       		.uleb128 0x21
 5869 0c16 E0010000 		.4byte	.LASF176
 5870 0c1a 05       		.byte	0x5
 5871 0c1b 79       		.byte	0x79
 5872 0c1c 0C010000 		.4byte	0x10c
 5873 0c20 05       		.uleb128 0x5
 5874 0c21 03       		.byte	0x3
 5875 0c22 00000000 		.4byte	movement_state
 5876 0c26 21       		.uleb128 0x21
 5877 0c27 D4000000 		.4byte	.LASF177
 5878 0c2b 05       		.byte	0x5
 5879 0c2c 7A       		.byte	0x7a
 5880 0c2d 49010000 		.4byte	0x149
 5881 0c31 05       		.uleb128 0x5
 5882 0c32 03       		.byte	0x3
 5883 0c33 00000000 		.4byte	track_mode
 5884 0c37 21       		.uleb128 0x21
 5885 0c38 23030000 		.4byte	.LASF178
 5886 0c3c 05       		.byte	0x5
 5887 0c3d 7C       		.byte	0x7c
 5888 0c3e AB000000 		.4byte	0xab
 5889 0c42 05       		.uleb128 0x5
 5890 0c43 03       		.byte	0x3
 5891 0c44 00000000 		.4byte	byteCount
 5892 0c48 07       		.uleb128 0x7
 5893 0c49 8E000000 		.4byte	0x8e
 5894 0c4d 580C0000 		.4byte	0xc58
 5895 0c51 08       		.uleb128 0x8
 5896 0c52 81000000 		.4byte	0x81
 5897 0c56 01       		.byte	0x1
 5898 0c57 00       		.byte	0
 5899 0c58 21       		.uleb128 0x21
 5900 0c59 9A070000 		.4byte	.LASF179
 5901 0c5d 05       		.byte	0x5
 5902 0c5e 7D       		.byte	0x7d
 5903 0c5f 480C0000 		.4byte	0xc48
 5904 0c63 05       		.uleb128 0x5
 5905 0c64 03       		.byte	0x3
 5906 0c65 00000000 		.4byte	packet
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 122


 5907 0c69 21       		.uleb128 0x21
 5908 0c6a A3010000 		.4byte	.LASF180
 5909 0c6e 05       		.byte	0x5
 5910 0c6f 81       		.byte	0x81
 5911 0c70 EE000000 		.4byte	0xee
 5912 0c74 05       		.uleb128 0x5
 5913 0c75 03       		.byte	0x3
 5914 0c76 00000000 		.4byte	speed
 5915 0c7a 21       		.uleb128 0x21
 5916 0c7b DE030000 		.4byte	.LASF181
 5917 0c7f 01       		.byte	0x1
 5918 0c80 1E       		.byte	0x1e
 5919 0c81 B7000000 		.4byte	0xb7
 5920 0c85 05       		.uleb128 0x5
 5921 0c86 03       		.byte	0x3
 5922 0c87 00000000 		.4byte	instructionCount
 5923 0c8b 21       		.uleb128 0x21
 5924 0c8c 2D010000 		.4byte	.LASF182
 5925 0c90 01       		.byte	0x1
 5926 0c91 1F       		.byte	0x1f
 5927 0c92 A0000000 		.4byte	0xa0
 5928 0c96 05       		.uleb128 0x5
 5929 0c97 03       		.byte	0x3
 5930 0c98 00000000 		.4byte	sensorsDisabled
 5931 0c9c 07       		.uleb128 0x7
 5932 0c9d A0000000 		.4byte	0xa0
 5933 0ca1 B20C0000 		.4byte	0xcb2
 5934 0ca5 08       		.uleb128 0x8
 5935 0ca6 81000000 		.4byte	0x81
 5936 0caa 0E       		.byte	0xe
 5937 0cab 08       		.uleb128 0x8
 5938 0cac 81000000 		.4byte	0x81
 5939 0cb0 12       		.byte	0x12
 5940 0cb1 00       		.byte	0
 5941 0cb2 20       		.uleb128 0x20
 5942 0cb3 6D617000 		.ascii	"map\000"
 5943 0cb7 01       		.byte	0x1
 5944 0cb8 27       		.byte	0x27
 5945 0cb9 9C0C0000 		.4byte	0xc9c
 5946 0cbd 05       		.uleb128 0x5
 5947 0cbe 03       		.byte	0x3
 5948 0cbf 00000000 		.4byte	map
 5949 0cc3 07       		.uleb128 0x7
 5950 0cc4 A0000000 		.4byte	0xa0
 5951 0cc8 D90C0000 		.4byte	0xcd9
 5952 0ccc 08       		.uleb128 0x8
 5953 0ccd 81000000 		.4byte	0x81
 5954 0cd1 05       		.byte	0x5
 5955 0cd2 08       		.uleb128 0x8
 5956 0cd3 81000000 		.4byte	0x81
 5957 0cd7 01       		.byte	0x1
 5958 0cd8 00       		.byte	0
 5959 0cd9 21       		.uleb128 0x21
 5960 0cda 3D050000 		.4byte	.LASF183
 5961 0cde 01       		.byte	0x1
 5962 0cdf 3B       		.byte	0x3b
 5963 0ce0 C30C0000 		.4byte	0xcc3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 123


 5964 0ce4 05       		.uleb128 0x5
 5965 0ce5 03       		.byte	0x3
 5966 0ce6 00000000 		.4byte	food_list
 5967 0cea 07       		.uleb128 0x7
 5968 0ceb A0000000 		.4byte	0xa0
 5969 0cef 010D0000 		.4byte	0xd01
 5970 0cf3 22       		.uleb128 0x22
 5971 0cf4 81000000 		.4byte	0x81
 5972 0cf8 1F03     		.2byte	0x31f
 5973 0cfa 08       		.uleb128 0x8
 5974 0cfb 81000000 		.4byte	0x81
 5975 0cff 02       		.byte	0x2
 5976 0d00 00       		.byte	0
 5977 0d01 21       		.uleb128 0x21
 5978 0d02 16040000 		.4byte	.LASF184
 5979 0d06 01       		.byte	0x1
 5980 0d07 23       		.byte	0x23
 5981 0d08 EA0C0000 		.4byte	0xcea
 5982 0d0c 05       		.uleb128 0x5
 5983 0d0d 03       		.byte	0x3
 5984 0d0e 00000000 		.4byte	path
 5985 0d12 21       		.uleb128 0x21
 5986 0d13 9F050000 		.4byte	.LASF185
 5987 0d17 01       		.byte	0x1
 5988 0d18 24       		.byte	0x24
 5989 0d19 F5000000 		.4byte	0xf5
 5990 0d1d 05       		.uleb128 0x5
 5991 0d1e 03       		.byte	0x3
 5992 0d1f 00000000 		.4byte	start
 5993 0d23 21       		.uleb128 0x21
 5994 0d24 66080000 		.4byte	.LASF186
 5995 0d28 01       		.byte	0x1
 5996 0d29 25       		.byte	0x25
 5997 0d2a F5000000 		.4byte	0xf5
 5998 0d2e 05       		.uleb128 0x5
 5999 0d2f 03       		.byte	0x3
 6000 0d30 00000000 		.4byte	destination
 6001 0d34 21       		.uleb128 0x21
 6002 0d35 7A010000 		.4byte	.LASF187
 6003 0d39 01       		.byte	0x1
 6004 0d3a 21       		.byte	0x21
 6005 0d3b A0000000 		.4byte	0xa0
 6006 0d3f 05       		.uleb128 0x5
 6007 0d40 03       		.byte	0x3
 6008 0d41 00000000 		.4byte	robot_direction
 6009 0d45 21       		.uleb128 0x21
 6010 0d46 0A000000 		.4byte	.LASF188
 6011 0d4a 07       		.byte	0x7
 6012 0d4b 22       		.byte	0x22
 6013 0d4c A0000000 		.4byte	0xa0
 6014 0d50 05       		.uleb128 0x5
 6015 0d51 03       		.byte	0x3
 6016 0d52 00000000 		.4byte	tracked_direction
 6017 0d56 21       		.uleb128 0x21
 6018 0d57 B7070000 		.4byte	.LASF189
 6019 0d5b 01       		.byte	0x1
 6020 0d5c 3D       		.byte	0x3d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 124


 6021 0d5d A0000000 		.4byte	0xa0
 6022 0d61 05       		.uleb128 0x5
 6023 0d62 03       		.byte	0x3
 6024 0d63 00000000 		.4byte	food_length
 6025 0d67 07       		.uleb128 0x7
 6026 0d68 8E000000 		.4byte	0x8e
 6027 0d6c 780D0000 		.4byte	0xd78
 6028 0d70 22       		.uleb128 0x22
 6029 0d71 81000000 		.4byte	0x81
 6030 0d75 1F03     		.2byte	0x31f
 6031 0d77 00       		.byte	0
 6032 0d78 21       		.uleb128 0x21
 6033 0d79 6E050000 		.4byte	.LASF190
 6034 0d7d 01       		.byte	0x1
 6035 0d7e 1D       		.byte	0x1d
 6036 0d7f 670D0000 		.4byte	0xd67
 6037 0d83 05       		.uleb128 0x5
 6038 0d84 03       		.byte	0x3
 6039 0d85 00000000 		.4byte	instructions
 6040 0d89 23       		.uleb128 0x23
 6041 0d8a 95010000 		.4byte	.LASF191
 6042 0d8e 01       		.byte	0x1
 6043 0d8f 1D03     		.2byte	0x31d
 6044 0d91 B7000000 		.4byte	0xb7
 6045 0d95 05       		.uleb128 0x5
 6046 0d96 03       		.byte	0x3
 6047 0d97 00000000 		.4byte	leftTurnCount
 6048 0d9b 23       		.uleb128 0x23
 6049 0d9c 61000000 		.4byte	.LASF192
 6050 0da0 01       		.byte	0x1
 6051 0da1 1E03     		.2byte	0x31e
 6052 0da3 B7000000 		.4byte	0xb7
 6053 0da7 05       		.uleb128 0x5
 6054 0da8 03       		.byte	0x3
 6055 0da9 00000000 		.4byte	rightTurnCount
 6056 0dad 00       		.byte	0
 6057              		.section	.debug_abbrev,"",%progbits
 6058              	.Ldebug_abbrev0:
 6059 0000 01       		.uleb128 0x1
 6060 0001 11       		.uleb128 0x11
 6061 0002 01       		.byte	0x1
 6062 0003 25       		.uleb128 0x25
 6063 0004 0E       		.uleb128 0xe
 6064 0005 13       		.uleb128 0x13
 6065 0006 0B       		.uleb128 0xb
 6066 0007 03       		.uleb128 0x3
 6067 0008 0E       		.uleb128 0xe
 6068 0009 1B       		.uleb128 0x1b
 6069 000a 0E       		.uleb128 0xe
 6070 000b 55       		.uleb128 0x55
 6071 000c 17       		.uleb128 0x17
 6072 000d 11       		.uleb128 0x11
 6073 000e 01       		.uleb128 0x1
 6074 000f 10       		.uleb128 0x10
 6075 0010 17       		.uleb128 0x17
 6076 0011 00       		.byte	0
 6077 0012 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 125


 6078 0013 02       		.uleb128 0x2
 6079 0014 24       		.uleb128 0x24
 6080 0015 00       		.byte	0
 6081 0016 0B       		.uleb128 0xb
 6082 0017 0B       		.uleb128 0xb
 6083 0018 3E       		.uleb128 0x3e
 6084 0019 0B       		.uleb128 0xb
 6085 001a 03       		.uleb128 0x3
 6086 001b 0E       		.uleb128 0xe
 6087 001c 00       		.byte	0
 6088 001d 00       		.byte	0
 6089 001e 03       		.uleb128 0x3
 6090 001f 16       		.uleb128 0x16
 6091 0020 00       		.byte	0
 6092 0021 03       		.uleb128 0x3
 6093 0022 0E       		.uleb128 0xe
 6094 0023 3A       		.uleb128 0x3a
 6095 0024 0B       		.uleb128 0xb
 6096 0025 3B       		.uleb128 0x3b
 6097 0026 0B       		.uleb128 0xb
 6098 0027 49       		.uleb128 0x49
 6099 0028 13       		.uleb128 0x13
 6100 0029 00       		.byte	0
 6101 002a 00       		.byte	0
 6102 002b 04       		.uleb128 0x4
 6103 002c 24       		.uleb128 0x24
 6104 002d 00       		.byte	0
 6105 002e 0B       		.uleb128 0xb
 6106 002f 0B       		.uleb128 0xb
 6107 0030 3E       		.uleb128 0x3e
 6108 0031 0B       		.uleb128 0xb
 6109 0032 03       		.uleb128 0x3
 6110 0033 08       		.uleb128 0x8
 6111 0034 00       		.byte	0
 6112 0035 00       		.byte	0
 6113 0036 05       		.uleb128 0x5
 6114 0037 0F       		.uleb128 0xf
 6115 0038 00       		.byte	0
 6116 0039 0B       		.uleb128 0xb
 6117 003a 0B       		.uleb128 0xb
 6118 003b 49       		.uleb128 0x49
 6119 003c 13       		.uleb128 0x13
 6120 003d 00       		.byte	0
 6121 003e 00       		.byte	0
 6122 003f 06       		.uleb128 0x6
 6123 0040 16       		.uleb128 0x16
 6124 0041 00       		.byte	0
 6125 0042 03       		.uleb128 0x3
 6126 0043 0E       		.uleb128 0xe
 6127 0044 3A       		.uleb128 0x3a
 6128 0045 0B       		.uleb128 0xb
 6129 0046 3B       		.uleb128 0x3b
 6130 0047 05       		.uleb128 0x5
 6131 0048 49       		.uleb128 0x49
 6132 0049 13       		.uleb128 0x13
 6133 004a 00       		.byte	0
 6134 004b 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 126


 6135 004c 07       		.uleb128 0x7
 6136 004d 01       		.uleb128 0x1
 6137 004e 01       		.byte	0x1
 6138 004f 49       		.uleb128 0x49
 6139 0050 13       		.uleb128 0x13
 6140 0051 01       		.uleb128 0x1
 6141 0052 13       		.uleb128 0x13
 6142 0053 00       		.byte	0
 6143 0054 00       		.byte	0
 6144 0055 08       		.uleb128 0x8
 6145 0056 21       		.uleb128 0x21
 6146 0057 00       		.byte	0
 6147 0058 49       		.uleb128 0x49
 6148 0059 13       		.uleb128 0x13
 6149 005a 2F       		.uleb128 0x2f
 6150 005b 0B       		.uleb128 0xb
 6151 005c 00       		.byte	0
 6152 005d 00       		.byte	0
 6153 005e 09       		.uleb128 0x9
 6154 005f 04       		.uleb128 0x4
 6155 0060 01       		.byte	0x1
 6156 0061 03       		.uleb128 0x3
 6157 0062 0E       		.uleb128 0xe
 6158 0063 0B       		.uleb128 0xb
 6159 0064 0B       		.uleb128 0xb
 6160 0065 3A       		.uleb128 0x3a
 6161 0066 0B       		.uleb128 0xb
 6162 0067 3B       		.uleb128 0x3b
 6163 0068 0B       		.uleb128 0xb
 6164 0069 01       		.uleb128 0x1
 6165 006a 13       		.uleb128 0x13
 6166 006b 00       		.byte	0
 6167 006c 00       		.byte	0
 6168 006d 0A       		.uleb128 0xa
 6169 006e 28       		.uleb128 0x28
 6170 006f 00       		.byte	0
 6171 0070 03       		.uleb128 0x3
 6172 0071 0E       		.uleb128 0xe
 6173 0072 1C       		.uleb128 0x1c
 6174 0073 0D       		.uleb128 0xd
 6175 0074 00       		.byte	0
 6176 0075 00       		.byte	0
 6177 0076 0B       		.uleb128 0xb
 6178 0077 13       		.uleb128 0x13
 6179 0078 01       		.byte	0x1
 6180 0079 03       		.uleb128 0x3
 6181 007a 0E       		.uleb128 0xe
 6182 007b 0B       		.uleb128 0xb
 6183 007c 0B       		.uleb128 0xb
 6184 007d 3A       		.uleb128 0x3a
 6185 007e 0B       		.uleb128 0xb
 6186 007f 3B       		.uleb128 0x3b
 6187 0080 0B       		.uleb128 0xb
 6188 0081 01       		.uleb128 0x1
 6189 0082 13       		.uleb128 0x13
 6190 0083 00       		.byte	0
 6191 0084 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 127


 6192 0085 0C       		.uleb128 0xc
 6193 0086 0D       		.uleb128 0xd
 6194 0087 00       		.byte	0
 6195 0088 03       		.uleb128 0x3
 6196 0089 0E       		.uleb128 0xe
 6197 008a 3A       		.uleb128 0x3a
 6198 008b 0B       		.uleb128 0xb
 6199 008c 3B       		.uleb128 0x3b
 6200 008d 0B       		.uleb128 0xb
 6201 008e 49       		.uleb128 0x49
 6202 008f 13       		.uleb128 0x13
 6203 0090 38       		.uleb128 0x38
 6204 0091 0B       		.uleb128 0xb
 6205 0092 00       		.byte	0
 6206 0093 00       		.byte	0
 6207 0094 0D       		.uleb128 0xd
 6208 0095 2E       		.uleb128 0x2e
 6209 0096 00       		.byte	0
 6210 0097 3F       		.uleb128 0x3f
 6211 0098 19       		.uleb128 0x19
 6212 0099 03       		.uleb128 0x3
 6213 009a 0E       		.uleb128 0xe
 6214 009b 3A       		.uleb128 0x3a
 6215 009c 0B       		.uleb128 0xb
 6216 009d 3B       		.uleb128 0x3b
 6217 009e 0B       		.uleb128 0xb
 6218 009f 27       		.uleb128 0x27
 6219 00a0 19       		.uleb128 0x19
 6220 00a1 11       		.uleb128 0x11
 6221 00a2 01       		.uleb128 0x1
 6222 00a3 12       		.uleb128 0x12
 6223 00a4 06       		.uleb128 0x6
 6224 00a5 40       		.uleb128 0x40
 6225 00a6 18       		.uleb128 0x18
 6226 00a7 9742     		.uleb128 0x2117
 6227 00a9 19       		.uleb128 0x19
 6228 00aa 00       		.byte	0
 6229 00ab 00       		.byte	0
 6230 00ac 0E       		.uleb128 0xe
 6231 00ad 2E       		.uleb128 0x2e
 6232 00ae 00       		.byte	0
 6233 00af 3F       		.uleb128 0x3f
 6234 00b0 19       		.uleb128 0x19
 6235 00b1 03       		.uleb128 0x3
 6236 00b2 0E       		.uleb128 0xe
 6237 00b3 3A       		.uleb128 0x3a
 6238 00b4 0B       		.uleb128 0xb
 6239 00b5 3B       		.uleb128 0x3b
 6240 00b6 0B       		.uleb128 0xb
 6241 00b7 27       		.uleb128 0x27
 6242 00b8 19       		.uleb128 0x19
 6243 00b9 11       		.uleb128 0x11
 6244 00ba 01       		.uleb128 0x1
 6245 00bb 12       		.uleb128 0x12
 6246 00bc 06       		.uleb128 0x6
 6247 00bd 40       		.uleb128 0x40
 6248 00be 18       		.uleb128 0x18
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 128


 6249 00bf 9642     		.uleb128 0x2116
 6250 00c1 19       		.uleb128 0x19
 6251 00c2 00       		.byte	0
 6252 00c3 00       		.byte	0
 6253 00c4 0F       		.uleb128 0xf
 6254 00c5 2E       		.uleb128 0x2e
 6255 00c6 01       		.byte	0x1
 6256 00c7 3F       		.uleb128 0x3f
 6257 00c8 19       		.uleb128 0x19
 6258 00c9 03       		.uleb128 0x3
 6259 00ca 0E       		.uleb128 0xe
 6260 00cb 3A       		.uleb128 0x3a
 6261 00cc 0B       		.uleb128 0xb
 6262 00cd 3B       		.uleb128 0x3b
 6263 00ce 0B       		.uleb128 0xb
 6264 00cf 27       		.uleb128 0x27
 6265 00d0 19       		.uleb128 0x19
 6266 00d1 11       		.uleb128 0x11
 6267 00d2 01       		.uleb128 0x1
 6268 00d3 12       		.uleb128 0x12
 6269 00d4 06       		.uleb128 0x6
 6270 00d5 40       		.uleb128 0x40
 6271 00d6 18       		.uleb128 0x18
 6272 00d7 9642     		.uleb128 0x2116
 6273 00d9 19       		.uleb128 0x19
 6274 00da 01       		.uleb128 0x1
 6275 00db 13       		.uleb128 0x13
 6276 00dc 00       		.byte	0
 6277 00dd 00       		.byte	0
 6278 00de 10       		.uleb128 0x10
 6279 00df 0B       		.uleb128 0xb
 6280 00e0 01       		.byte	0x1
 6281 00e1 11       		.uleb128 0x11
 6282 00e2 01       		.uleb128 0x1
 6283 00e3 12       		.uleb128 0x12
 6284 00e4 06       		.uleb128 0x6
 6285 00e5 01       		.uleb128 0x1
 6286 00e6 13       		.uleb128 0x13
 6287 00e7 00       		.byte	0
 6288 00e8 00       		.byte	0
 6289 00e9 11       		.uleb128 0x11
 6290 00ea 34       		.uleb128 0x34
 6291 00eb 00       		.byte	0
 6292 00ec 03       		.uleb128 0x3
 6293 00ed 08       		.uleb128 0x8
 6294 00ee 3A       		.uleb128 0x3a
 6295 00ef 0B       		.uleb128 0xb
 6296 00f0 3B       		.uleb128 0x3b
 6297 00f1 0B       		.uleb128 0xb
 6298 00f2 49       		.uleb128 0x49
 6299 00f3 13       		.uleb128 0x13
 6300 00f4 02       		.uleb128 0x2
 6301 00f5 18       		.uleb128 0x18
 6302 00f6 00       		.byte	0
 6303 00f7 00       		.byte	0
 6304 00f8 12       		.uleb128 0x12
 6305 00f9 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 129


 6306 00fa 01       		.byte	0x1
 6307 00fb 11       		.uleb128 0x11
 6308 00fc 01       		.uleb128 0x1
 6309 00fd 12       		.uleb128 0x12
 6310 00fe 06       		.uleb128 0x6
 6311 00ff 00       		.byte	0
 6312 0100 00       		.byte	0
 6313 0101 13       		.uleb128 0x13
 6314 0102 34       		.uleb128 0x34
 6315 0103 00       		.byte	0
 6316 0104 03       		.uleb128 0x3
 6317 0105 0E       		.uleb128 0xe
 6318 0106 3A       		.uleb128 0x3a
 6319 0107 0B       		.uleb128 0xb
 6320 0108 3B       		.uleb128 0x3b
 6321 0109 0B       		.uleb128 0xb
 6322 010a 49       		.uleb128 0x49
 6323 010b 13       		.uleb128 0x13
 6324 010c 02       		.uleb128 0x2
 6325 010d 18       		.uleb128 0x18
 6326 010e 00       		.byte	0
 6327 010f 00       		.byte	0
 6328 0110 14       		.uleb128 0x14
 6329 0111 2E       		.uleb128 0x2e
 6330 0112 01       		.byte	0x1
 6331 0113 3F       		.uleb128 0x3f
 6332 0114 19       		.uleb128 0x19
 6333 0115 03       		.uleb128 0x3
 6334 0116 0E       		.uleb128 0xe
 6335 0117 3A       		.uleb128 0x3a
 6336 0118 0B       		.uleb128 0xb
 6337 0119 3B       		.uleb128 0x3b
 6338 011a 0B       		.uleb128 0xb
 6339 011b 49       		.uleb128 0x49
 6340 011c 13       		.uleb128 0x13
 6341 011d 11       		.uleb128 0x11
 6342 011e 01       		.uleb128 0x1
 6343 011f 12       		.uleb128 0x12
 6344 0120 06       		.uleb128 0x6
 6345 0121 40       		.uleb128 0x40
 6346 0122 18       		.uleb128 0x18
 6347 0123 9642     		.uleb128 0x2116
 6348 0125 19       		.uleb128 0x19
 6349 0126 01       		.uleb128 0x1
 6350 0127 13       		.uleb128 0x13
 6351 0128 00       		.byte	0
 6352 0129 00       		.byte	0
 6353 012a 15       		.uleb128 0x15
 6354 012b 34       		.uleb128 0x34
 6355 012c 00       		.byte	0
 6356 012d 03       		.uleb128 0x3
 6357 012e 0E       		.uleb128 0xe
 6358 012f 3A       		.uleb128 0x3a
 6359 0130 0B       		.uleb128 0xb
 6360 0131 3B       		.uleb128 0x3b
 6361 0132 05       		.uleb128 0x5
 6362 0133 49       		.uleb128 0x49
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 130


 6363 0134 13       		.uleb128 0x13
 6364 0135 02       		.uleb128 0x2
 6365 0136 18       		.uleb128 0x18
 6366 0137 00       		.byte	0
 6367 0138 00       		.byte	0
 6368 0139 16       		.uleb128 0x16
 6369 013a 2E       		.uleb128 0x2e
 6370 013b 01       		.byte	0x1
 6371 013c 3F       		.uleb128 0x3f
 6372 013d 19       		.uleb128 0x19
 6373 013e 03       		.uleb128 0x3
 6374 013f 0E       		.uleb128 0xe
 6375 0140 3A       		.uleb128 0x3a
 6376 0141 0B       		.uleb128 0xb
 6377 0142 3B       		.uleb128 0x3b
 6378 0143 05       		.uleb128 0x5
 6379 0144 11       		.uleb128 0x11
 6380 0145 01       		.uleb128 0x1
 6381 0146 12       		.uleb128 0x12
 6382 0147 06       		.uleb128 0x6
 6383 0148 40       		.uleb128 0x40
 6384 0149 18       		.uleb128 0x18
 6385 014a 9742     		.uleb128 0x2117
 6386 014c 19       		.uleb128 0x19
 6387 014d 01       		.uleb128 0x1
 6388 014e 13       		.uleb128 0x13
 6389 014f 00       		.byte	0
 6390 0150 00       		.byte	0
 6391 0151 17       		.uleb128 0x17
 6392 0152 2E       		.uleb128 0x2e
 6393 0153 01       		.byte	0x1
 6394 0154 3F       		.uleb128 0x3f
 6395 0155 19       		.uleb128 0x19
 6396 0156 03       		.uleb128 0x3
 6397 0157 0E       		.uleb128 0xe
 6398 0158 3A       		.uleb128 0x3a
 6399 0159 0B       		.uleb128 0xb
 6400 015a 3B       		.uleb128 0x3b
 6401 015b 05       		.uleb128 0x5
 6402 015c 27       		.uleb128 0x27
 6403 015d 19       		.uleb128 0x19
 6404 015e 11       		.uleb128 0x11
 6405 015f 01       		.uleb128 0x1
 6406 0160 12       		.uleb128 0x12
 6407 0161 06       		.uleb128 0x6
 6408 0162 40       		.uleb128 0x40
 6409 0163 18       		.uleb128 0x18
 6410 0164 9642     		.uleb128 0x2116
 6411 0166 19       		.uleb128 0x19
 6412 0167 01       		.uleb128 0x1
 6413 0168 13       		.uleb128 0x13
 6414 0169 00       		.byte	0
 6415 016a 00       		.byte	0
 6416 016b 18       		.uleb128 0x18
 6417 016c 05       		.uleb128 0x5
 6418 016d 00       		.byte	0
 6419 016e 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 131


 6420 016f 08       		.uleb128 0x8
 6421 0170 3A       		.uleb128 0x3a
 6422 0171 0B       		.uleb128 0xb
 6423 0172 3B       		.uleb128 0x3b
 6424 0173 05       		.uleb128 0x5
 6425 0174 49       		.uleb128 0x49
 6426 0175 13       		.uleb128 0x13
 6427 0176 02       		.uleb128 0x2
 6428 0177 18       		.uleb128 0x18
 6429 0178 00       		.byte	0
 6430 0179 00       		.byte	0
 6431 017a 19       		.uleb128 0x19
 6432 017b 2E       		.uleb128 0x2e
 6433 017c 01       		.byte	0x1
 6434 017d 3F       		.uleb128 0x3f
 6435 017e 19       		.uleb128 0x19
 6436 017f 03       		.uleb128 0x3
 6437 0180 0E       		.uleb128 0xe
 6438 0181 3A       		.uleb128 0x3a
 6439 0182 0B       		.uleb128 0xb
 6440 0183 3B       		.uleb128 0x3b
 6441 0184 05       		.uleb128 0x5
 6442 0185 11       		.uleb128 0x11
 6443 0186 01       		.uleb128 0x1
 6444 0187 12       		.uleb128 0x12
 6445 0188 06       		.uleb128 0x6
 6446 0189 40       		.uleb128 0x40
 6447 018a 18       		.uleb128 0x18
 6448 018b 9642     		.uleb128 0x2116
 6449 018d 19       		.uleb128 0x19
 6450 018e 01       		.uleb128 0x1
 6451 018f 13       		.uleb128 0x13
 6452 0190 00       		.byte	0
 6453 0191 00       		.byte	0
 6454 0192 1A       		.uleb128 0x1a
 6455 0193 34       		.uleb128 0x34
 6456 0194 00       		.byte	0
 6457 0195 03       		.uleb128 0x3
 6458 0196 08       		.uleb128 0x8
 6459 0197 3A       		.uleb128 0x3a
 6460 0198 0B       		.uleb128 0xb
 6461 0199 3B       		.uleb128 0x3b
 6462 019a 05       		.uleb128 0x5
 6463 019b 49       		.uleb128 0x49
 6464 019c 13       		.uleb128 0x13
 6465 019d 02       		.uleb128 0x2
 6466 019e 18       		.uleb128 0x18
 6467 019f 00       		.byte	0
 6468 01a0 00       		.byte	0
 6469 01a1 1B       		.uleb128 0x1b
 6470 01a2 05       		.uleb128 0x5
 6471 01a3 00       		.byte	0
 6472 01a4 03       		.uleb128 0x3
 6473 01a5 0E       		.uleb128 0xe
 6474 01a6 3A       		.uleb128 0x3a
 6475 01a7 0B       		.uleb128 0xb
 6476 01a8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 132


 6477 01a9 05       		.uleb128 0x5
 6478 01aa 49       		.uleb128 0x49
 6479 01ab 13       		.uleb128 0x13
 6480 01ac 02       		.uleb128 0x2
 6481 01ad 18       		.uleb128 0x18
 6482 01ae 00       		.byte	0
 6483 01af 00       		.byte	0
 6484 01b0 1C       		.uleb128 0x1c
 6485 01b1 2E       		.uleb128 0x2e
 6486 01b2 00       		.byte	0
 6487 01b3 3F       		.uleb128 0x3f
 6488 01b4 19       		.uleb128 0x19
 6489 01b5 03       		.uleb128 0x3
 6490 01b6 0E       		.uleb128 0xe
 6491 01b7 3A       		.uleb128 0x3a
 6492 01b8 0B       		.uleb128 0xb
 6493 01b9 3B       		.uleb128 0x3b
 6494 01ba 05       		.uleb128 0x5
 6495 01bb 11       		.uleb128 0x11
 6496 01bc 01       		.uleb128 0x1
 6497 01bd 12       		.uleb128 0x12
 6498 01be 06       		.uleb128 0x6
 6499 01bf 40       		.uleb128 0x40
 6500 01c0 18       		.uleb128 0x18
 6501 01c1 9642     		.uleb128 0x2116
 6502 01c3 19       		.uleb128 0x19
 6503 01c4 00       		.byte	0
 6504 01c5 00       		.byte	0
 6505 01c6 1D       		.uleb128 0x1d
 6506 01c7 2E       		.uleb128 0x2e
 6507 01c8 00       		.byte	0
 6508 01c9 3F       		.uleb128 0x3f
 6509 01ca 19       		.uleb128 0x19
 6510 01cb 03       		.uleb128 0x3
 6511 01cc 0E       		.uleb128 0xe
 6512 01cd 3A       		.uleb128 0x3a
 6513 01ce 0B       		.uleb128 0xb
 6514 01cf 3B       		.uleb128 0x3b
 6515 01d0 05       		.uleb128 0x5
 6516 01d1 11       		.uleb128 0x11
 6517 01d2 01       		.uleb128 0x1
 6518 01d3 12       		.uleb128 0x12
 6519 01d4 06       		.uleb128 0x6
 6520 01d5 40       		.uleb128 0x40
 6521 01d6 18       		.uleb128 0x18
 6522 01d7 9742     		.uleb128 0x2117
 6523 01d9 19       		.uleb128 0x19
 6524 01da 00       		.byte	0
 6525 01db 00       		.byte	0
 6526 01dc 1E       		.uleb128 0x1e
 6527 01dd 34       		.uleb128 0x34
 6528 01de 00       		.byte	0
 6529 01df 03       		.uleb128 0x3
 6530 01e0 0E       		.uleb128 0xe
 6531 01e1 3A       		.uleb128 0x3a
 6532 01e2 0B       		.uleb128 0xb
 6533 01e3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 133


 6534 01e4 05       		.uleb128 0x5
 6535 01e5 49       		.uleb128 0x49
 6536 01e6 13       		.uleb128 0x13
 6537 01e7 3F       		.uleb128 0x3f
 6538 01e8 19       		.uleb128 0x19
 6539 01e9 3C       		.uleb128 0x3c
 6540 01ea 19       		.uleb128 0x19
 6541 01eb 00       		.byte	0
 6542 01ec 00       		.byte	0
 6543 01ed 1F       		.uleb128 0x1f
 6544 01ee 35       		.uleb128 0x35
 6545 01ef 00       		.byte	0
 6546 01f0 49       		.uleb128 0x49
 6547 01f1 13       		.uleb128 0x13
 6548 01f2 00       		.byte	0
 6549 01f3 00       		.byte	0
 6550 01f4 20       		.uleb128 0x20
 6551 01f5 34       		.uleb128 0x34
 6552 01f6 00       		.byte	0
 6553 01f7 03       		.uleb128 0x3
 6554 01f8 08       		.uleb128 0x8
 6555 01f9 3A       		.uleb128 0x3a
 6556 01fa 0B       		.uleb128 0xb
 6557 01fb 3B       		.uleb128 0x3b
 6558 01fc 0B       		.uleb128 0xb
 6559 01fd 49       		.uleb128 0x49
 6560 01fe 13       		.uleb128 0x13
 6561 01ff 3F       		.uleb128 0x3f
 6562 0200 19       		.uleb128 0x19
 6563 0201 02       		.uleb128 0x2
 6564 0202 18       		.uleb128 0x18
 6565 0203 00       		.byte	0
 6566 0204 00       		.byte	0
 6567 0205 21       		.uleb128 0x21
 6568 0206 34       		.uleb128 0x34
 6569 0207 00       		.byte	0
 6570 0208 03       		.uleb128 0x3
 6571 0209 0E       		.uleb128 0xe
 6572 020a 3A       		.uleb128 0x3a
 6573 020b 0B       		.uleb128 0xb
 6574 020c 3B       		.uleb128 0x3b
 6575 020d 0B       		.uleb128 0xb
 6576 020e 49       		.uleb128 0x49
 6577 020f 13       		.uleb128 0x13
 6578 0210 3F       		.uleb128 0x3f
 6579 0211 19       		.uleb128 0x19
 6580 0212 02       		.uleb128 0x2
 6581 0213 18       		.uleb128 0x18
 6582 0214 00       		.byte	0
 6583 0215 00       		.byte	0
 6584 0216 22       		.uleb128 0x22
 6585 0217 21       		.uleb128 0x21
 6586 0218 00       		.byte	0
 6587 0219 49       		.uleb128 0x49
 6588 021a 13       		.uleb128 0x13
 6589 021b 2F       		.uleb128 0x2f
 6590 021c 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 134


 6591 021d 00       		.byte	0
 6592 021e 00       		.byte	0
 6593 021f 23       		.uleb128 0x23
 6594 0220 34       		.uleb128 0x34
 6595 0221 00       		.byte	0
 6596 0222 03       		.uleb128 0x3
 6597 0223 0E       		.uleb128 0xe
 6598 0224 3A       		.uleb128 0x3a
 6599 0225 0B       		.uleb128 0xb
 6600 0226 3B       		.uleb128 0x3b
 6601 0227 05       		.uleb128 0x5
 6602 0228 49       		.uleb128 0x49
 6603 0229 13       		.uleb128 0x13
 6604 022a 3F       		.uleb128 0x3f
 6605 022b 19       		.uleb128 0x19
 6606 022c 02       		.uleb128 0x2
 6607 022d 18       		.uleb128 0x18
 6608 022e 00       		.byte	0
 6609 022f 00       		.byte	0
 6610 0230 00       		.byte	0
 6611              		.section	.debug_aranges,"",%progbits
 6612 0000 6C010000 		.4byte	0x16c
 6613 0004 0200     		.2byte	0x2
 6614 0006 00000000 		.4byte	.Ldebug_info0
 6615 000a 04       		.byte	0x4
 6616 000b 00       		.byte	0
 6617 000c 0000     		.2byte	0
 6618 000e 0000     		.2byte	0
 6619 0010 00000000 		.4byte	.LFB63
 6620 0014 0C000000 		.4byte	.LFE63-.LFB63
 6621 0018 00000000 		.4byte	.LFB64
 6622 001c 2C000000 		.4byte	.LFE64-.LFB64
 6623 0020 00000000 		.4byte	.LFB65
 6624 0024 EC010000 		.4byte	.LFE65-.LFB65
 6625 0028 00000000 		.4byte	.LFB66
 6626 002c AC000000 		.4byte	.LFE66-.LFB66
 6627 0030 00000000 		.4byte	.LFB67
 6628 0034 20000000 		.4byte	.LFE67-.LFB67
 6629 0038 00000000 		.4byte	.LFB68
 6630 003c 28000000 		.4byte	.LFE68-.LFB68
 6631 0040 00000000 		.4byte	.LFB69
 6632 0044 0A000000 		.4byte	.LFE69-.LFB69
 6633 0048 00000000 		.4byte	.LFB70
 6634 004c 28000000 		.4byte	.LFE70-.LFB70
 6635 0050 00000000 		.4byte	.LFB71
 6636 0054 18030000 		.4byte	.LFE71-.LFB71
 6637 0058 00000000 		.4byte	.LFB72
 6638 005c 60010000 		.4byte	.LFE72-.LFB72
 6639 0060 00000000 		.4byte	.LFB73
 6640 0064 18000000 		.4byte	.LFE73-.LFB73
 6641 0068 00000000 		.4byte	.LFB74
 6642 006c 18000000 		.4byte	.LFE74-.LFB74
 6643 0070 00000000 		.4byte	.LFB75
 6644 0074 54000000 		.4byte	.LFE75-.LFB75
 6645 0078 00000000 		.4byte	.LFB76
 6646 007c F4000000 		.4byte	.LFE76-.LFB76
 6647 0080 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 135


 6648 0084 18000000 		.4byte	.LFE77-.LFB77
 6649 0088 00000000 		.4byte	.LFB78
 6650 008c 18000000 		.4byte	.LFE78-.LFB78
 6651 0090 00000000 		.4byte	.LFB79
 6652 0094 22000000 		.4byte	.LFE79-.LFB79
 6653 0098 00000000 		.4byte	.LFB80
 6654 009c 1C000000 		.4byte	.LFE80-.LFB80
 6655 00a0 00000000 		.4byte	.LFB81
 6656 00a4 28000000 		.4byte	.LFE81-.LFB81
 6657 00a8 00000000 		.4byte	.LFB82
 6658 00ac 2C000000 		.4byte	.LFE82-.LFB82
 6659 00b0 00000000 		.4byte	.LFB83
 6660 00b4 44000000 		.4byte	.LFE83-.LFB83
 6661 00b8 00000000 		.4byte	.LFB84
 6662 00bc 38000000 		.4byte	.LFE84-.LFB84
 6663 00c0 00000000 		.4byte	.LFB85
 6664 00c4 38000000 		.4byte	.LFE85-.LFB85
 6665 00c8 00000000 		.4byte	.LFB86
 6666 00cc 38000000 		.4byte	.LFE86-.LFB86
 6667 00d0 00000000 		.4byte	.LFB87
 6668 00d4 14000000 		.4byte	.LFE87-.LFB87
 6669 00d8 00000000 		.4byte	.LFB88
 6670 00dc 18000000 		.4byte	.LFE88-.LFB88
 6671 00e0 00000000 		.4byte	.LFB89
 6672 00e4 18000000 		.4byte	.LFE89-.LFB89
 6673 00e8 00000000 		.4byte	.LFB90
 6674 00ec 18000000 		.4byte	.LFE90-.LFB90
 6675 00f0 00000000 		.4byte	.LFB91
 6676 00f4 18000000 		.4byte	.LFE91-.LFB91
 6677 00f8 00000000 		.4byte	.LFB92
 6678 00fc B8000000 		.4byte	.LFE92-.LFB92
 6679 0100 00000000 		.4byte	.LFB93
 6680 0104 BC010000 		.4byte	.LFE93-.LFB93
 6681 0108 00000000 		.4byte	.LFB94
 6682 010c 40000000 		.4byte	.LFE94-.LFB94
 6683 0110 00000000 		.4byte	.LFB95
 6684 0114 40000000 		.4byte	.LFE95-.LFB95
 6685 0118 00000000 		.4byte	.LFB96
 6686 011c 30020000 		.4byte	.LFE96-.LFB96
 6687 0120 00000000 		.4byte	.LFB97
 6688 0124 0C000000 		.4byte	.LFE97-.LFB97
 6689 0128 00000000 		.4byte	.LFB98
 6690 012c 04010000 		.4byte	.LFE98-.LFB98
 6691 0130 00000000 		.4byte	.LFB99
 6692 0134 0C000000 		.4byte	.LFE99-.LFB99
 6693 0138 00000000 		.4byte	.LFB100
 6694 013c C0000000 		.4byte	.LFE100-.LFB100
 6695 0140 00000000 		.4byte	.LFB101
 6696 0144 B8000000 		.4byte	.LFE101-.LFB101
 6697 0148 00000000 		.4byte	.LFB102
 6698 014c 4A000000 		.4byte	.LFE102-.LFB102
 6699 0150 00000000 		.4byte	.LFB103
 6700 0154 68000000 		.4byte	.LFE103-.LFB103
 6701 0158 00000000 		.4byte	.LFB104
 6702 015c 50000000 		.4byte	.LFE104-.LFB104
 6703 0160 00000000 		.4byte	.LFB105
 6704 0164 0C000000 		.4byte	.LFE105-.LFB105
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 136


 6705 0168 00000000 		.4byte	0
 6706 016c 00000000 		.4byte	0
 6707              		.section	.debug_ranges,"",%progbits
 6708              	.Ldebug_ranges0:
 6709 0000 00000000 		.4byte	.LFB63
 6710 0004 0C000000 		.4byte	.LFE63
 6711 0008 00000000 		.4byte	.LFB64
 6712 000c 2C000000 		.4byte	.LFE64
 6713 0010 00000000 		.4byte	.LFB65
 6714 0014 EC010000 		.4byte	.LFE65
 6715 0018 00000000 		.4byte	.LFB66
 6716 001c AC000000 		.4byte	.LFE66
 6717 0020 00000000 		.4byte	.LFB67
 6718 0024 20000000 		.4byte	.LFE67
 6719 0028 00000000 		.4byte	.LFB68
 6720 002c 28000000 		.4byte	.LFE68
 6721 0030 00000000 		.4byte	.LFB69
 6722 0034 0A000000 		.4byte	.LFE69
 6723 0038 00000000 		.4byte	.LFB70
 6724 003c 28000000 		.4byte	.LFE70
 6725 0040 00000000 		.4byte	.LFB71
 6726 0044 18030000 		.4byte	.LFE71
 6727 0048 00000000 		.4byte	.LFB72
 6728 004c 60010000 		.4byte	.LFE72
 6729 0050 00000000 		.4byte	.LFB73
 6730 0054 18000000 		.4byte	.LFE73
 6731 0058 00000000 		.4byte	.LFB74
 6732 005c 18000000 		.4byte	.LFE74
 6733 0060 00000000 		.4byte	.LFB75
 6734 0064 54000000 		.4byte	.LFE75
 6735 0068 00000000 		.4byte	.LFB76
 6736 006c F4000000 		.4byte	.LFE76
 6737 0070 00000000 		.4byte	.LFB77
 6738 0074 18000000 		.4byte	.LFE77
 6739 0078 00000000 		.4byte	.LFB78
 6740 007c 18000000 		.4byte	.LFE78
 6741 0080 00000000 		.4byte	.LFB79
 6742 0084 22000000 		.4byte	.LFE79
 6743 0088 00000000 		.4byte	.LFB80
 6744 008c 1C000000 		.4byte	.LFE80
 6745 0090 00000000 		.4byte	.LFB81
 6746 0094 28000000 		.4byte	.LFE81
 6747 0098 00000000 		.4byte	.LFB82
 6748 009c 2C000000 		.4byte	.LFE82
 6749 00a0 00000000 		.4byte	.LFB83
 6750 00a4 44000000 		.4byte	.LFE83
 6751 00a8 00000000 		.4byte	.LFB84
 6752 00ac 38000000 		.4byte	.LFE84
 6753 00b0 00000000 		.4byte	.LFB85
 6754 00b4 38000000 		.4byte	.LFE85
 6755 00b8 00000000 		.4byte	.LFB86
 6756 00bc 38000000 		.4byte	.LFE86
 6757 00c0 00000000 		.4byte	.LFB87
 6758 00c4 14000000 		.4byte	.LFE87
 6759 00c8 00000000 		.4byte	.LFB88
 6760 00cc 18000000 		.4byte	.LFE88
 6761 00d0 00000000 		.4byte	.LFB89
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 137


 6762 00d4 18000000 		.4byte	.LFE89
 6763 00d8 00000000 		.4byte	.LFB90
 6764 00dc 18000000 		.4byte	.LFE90
 6765 00e0 00000000 		.4byte	.LFB91
 6766 00e4 18000000 		.4byte	.LFE91
 6767 00e8 00000000 		.4byte	.LFB92
 6768 00ec B8000000 		.4byte	.LFE92
 6769 00f0 00000000 		.4byte	.LFB93
 6770 00f4 BC010000 		.4byte	.LFE93
 6771 00f8 00000000 		.4byte	.LFB94
 6772 00fc 40000000 		.4byte	.LFE94
 6773 0100 00000000 		.4byte	.LFB95
 6774 0104 40000000 		.4byte	.LFE95
 6775 0108 00000000 		.4byte	.LFB96
 6776 010c 30020000 		.4byte	.LFE96
 6777 0110 00000000 		.4byte	.LFB97
 6778 0114 0C000000 		.4byte	.LFE97
 6779 0118 00000000 		.4byte	.LFB98
 6780 011c 04010000 		.4byte	.LFE98
 6781 0120 00000000 		.4byte	.LFB99
 6782 0124 0C000000 		.4byte	.LFE99
 6783 0128 00000000 		.4byte	.LFB100
 6784 012c C0000000 		.4byte	.LFE100
 6785 0130 00000000 		.4byte	.LFB101
 6786 0134 B8000000 		.4byte	.LFE101
 6787 0138 00000000 		.4byte	.LFB102
 6788 013c 4A000000 		.4byte	.LFE102
 6789 0140 00000000 		.4byte	.LFB103
 6790 0144 68000000 		.4byte	.LFE103
 6791 0148 00000000 		.4byte	.LFB104
 6792 014c 50000000 		.4byte	.LFE104
 6793 0150 00000000 		.4byte	.LFB105
 6794 0154 0C000000 		.4byte	.LFE105
 6795 0158 00000000 		.4byte	0
 6796 015c 00000000 		.4byte	0
 6797              		.section	.debug_line,"",%progbits
 6798              	.Ldebug_line0:
 6799 0000 A7060000 		.section	.debug_str,"MS",%progbits,1
 6799      02006701 
 6799      00000201 
 6799      FB0E0D00 
 6799      01010101 
 6800              	.LASF142:
 6801 0000 64697265 		.ascii	"direction\000"
 6801      6374696F 
 6801      6E00
 6802              	.LASF188:
 6803 000a 74726163 		.ascii	"tracked_direction\000"
 6803      6B65645F 
 6803      64697265 
 6803      6374696F 
 6803      6E00
 6804              	.LASF195:
 6805 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 6805      73657273 
 6805      5C4C6F67 
 6805      616E5C44 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 138


 6805      65736B74 
 6806 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 6806      315F436C 
 6806      6173732E 
 6806      63796473 
 6806      6E00
 6807              	.LASF25:
 6808 005b 52545552 		.ascii	"RTURN\000"
 6808      4E00
 6809              	.LASF192:
 6810 0061 72696768 		.ascii	"rightTurnCount\000"
 6810      74547572 
 6810      6E436F75 
 6810      6E7400
 6811              	.LASF39:
 6812 0070 44455354 		.ascii	"DEST_TEST\000"
 6812      5F544553 
 6812      5400
 6813              	.LASF150:
 6814 007a 71756164 		.ascii	"quad_diff1\000"
 6814      5F646966 
 6814      663100
 6815              	.LASF151:
 6816 0085 71756164 		.ascii	"quad_diff2\000"
 6816      5F646966 
 6816      663200
 6817              	.LASF101:
 6818 0090 6D657373 		.ascii	"message\000"
 6818      61676500 
 6819              	.LASF104:
 6820 0098 51756164 		.ascii	"Quad_Dec_response\000"
 6820      5F446563 
 6820      5F726573 
 6820      706F6E73 
 6820      6500
 6821              	.LASF167:
 6822 00aa 70726576 		.ascii	"prevVoltage\000"
 6822      566F6C74 
 6822      61676500 
 6823              	.LASF153:
 6824 00b6 73746172 		.ascii	"start_turn_count\000"
 6824      745F7475 
 6824      726E5F63 
 6824      6F756E74 
 6824      00
 6825              	.LASF10:
 6826 00c7 756E7369 		.ascii	"unsigned int\000"
 6826      676E6564 
 6826      20696E74 
 6826      00
 6827              	.LASF177:
 6828 00d4 74726163 		.ascii	"track_mode\000"
 6828      6B5F6D6F 
 6828      646500
 6829              	.LASF5:
 6830 00df 5F5F696E 		.ascii	"__int32_t\000"
 6830      7433325F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 139


 6830      7400
 6831              	.LASF19:
 6832 00e9 696E7431 		.ascii	"int16\000"
 6832      3600
 6833              	.LASF174:
 6834 00ef 73797374 		.ascii	"system_state\000"
 6834      656D5F73 
 6834      74617465 
 6834      00
 6835              	.LASF24:
 6836 00fc 4C545552 		.ascii	"LTURN\000"
 6836      4E00
 6837              	.LASF160:
 6838 0102 74617267 		.ascii	"target_distance_quad\000"
 6838      65745F64 
 6838      69737461 
 6838      6E63655F 
 6838      71756164 
 6839              	.LASF27:
 6840 0117 54524143 		.ascii	"TRACKING\000"
 6840      4B494E47 
 6840      00
 6841              	.LASF168:
 6842 0120 70726576 		.ascii	"prevVoltage2\000"
 6842      566F6C74 
 6842      61676532 
 6842      00
 6843              	.LASF182:
 6844 012d 73656E73 		.ascii	"sensorsDisabled\000"
 6844      6F727344 
 6844      69736162 
 6844      6C656400 
 6845              	.LASF71:
 6846 013d 7061636B 		.ascii	"packet_bytes\000"
 6846      65745F62 
 6846      79746573 
 6846      00
 6847              	.LASF54:
 6848 014a 67325F78 		.ascii	"g2_xpos\000"
 6848      706F7300 
 6849              	.LASF32:
 6850 0152 6D6F6465 		.ascii	"mode\000"
 6850      00
 6851              	.LASF146:
 6852 0157 71756164 		.ascii	"quad_count1\000"
 6852      5F636F75 
 6852      6E743100 
 6853              	.LASF147:
 6854 0163 71756164 		.ascii	"quad_count2\000"
 6854      5F636F75 
 6854      6E743200 
 6855              	.LASF113:
 6856 016f 74726163 		.ascii	"trackLineU\000"
 6856      6B4C696E 
 6856      655500
 6857              	.LASF187:
 6858 017a 726F626F 		.ascii	"robot_direction\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 140


 6858      745F6469 
 6858      72656374 
 6858      696F6E00 
 6859              	.LASF112:
 6860 018a 74726163 		.ascii	"trackLineZ\000"
 6860      6B4C696E 
 6860      655A00
 6861              	.LASF191:
 6862 0195 6C656674 		.ascii	"leftTurnCount\000"
 6862      5475726E 
 6862      436F756E 
 6862      7400
 6863              	.LASF180:
 6864 01a3 73706565 		.ascii	"speed\000"
 6864      6400
 6865              	.LASF36:
 6866 01a9 53515541 		.ascii	"SQUARE_TRACK\000"
 6866      52455F54 
 6866      5241434B 
 6866      00
 6867              	.LASF138:
 6868 01b6 666C6167 		.ascii	"flag_rf_transmission_active\000"
 6868      5F72665F 
 6868      7472616E 
 6868      736D6973 
 6868      73696F6E 
 6869              	.LASF139:
 6870 01d2 666C6167 		.ascii	"flag_print_rf\000"
 6870      5F707269 
 6870      6E745F72 
 6870      6600
 6871              	.LASF176:
 6872 01e0 6D6F7665 		.ascii	"movement_state\000"
 6872      6D656E74 
 6872      5F737461 
 6872      746500
 6873              	.LASF28:
 6874 01ef 54524143 		.ascii	"TRACKING_U\000"
 6874      4B494E47 
 6874      5F5500
 6875              	.LASF93:
 6876 01fa 696E6974 		.ascii	"initForward\000"
 6876      466F7277 
 6876      61726400 
 6877              	.LASF14:
 6878 0206 75696E74 		.ascii	"uint32_t\000"
 6878      33325F74 
 6878      00
 6879              	.LASF57:
 6880 020f 67325F64 		.ascii	"g2_direction\000"
 6880      69726563 
 6880      74696F6E 
 6880      00
 6881              	.LASF66:
 6882 021c 6973725F 		.ascii	"isr_quad1\000"
 6882      71756164 
 6882      3100
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 141


 6883              	.LASF20:
 6884 0226 666C6F61 		.ascii	"float\000"
 6884      7400
 6885              	.LASF78:
 6886 022c 73657453 		.ascii	"setSpeed\000"
 6886      70656564 
 6886      00
 6887              	.LASF172:
 6888 0235 75736242 		.ascii	"usbBuffer\000"
 6888      75666665 
 6888      7200
 6889              	.LASF42:
 6890 023f 696E6465 		.ascii	"index\000"
 6890      7800
 6891              	.LASF23:
 6892 0245 44524956 		.ascii	"DRIVE\000"
 6892      4500
 6893              	.LASF73:
 6894 024b 73747269 		.ascii	"string_packet\000"
 6894      6E675F70 
 6894      61636B65 
 6894      7400
 6895              	.LASF103:
 6896 0259 6368616E 		.ascii	"changeToBT\000"
 6896      6765546F 
 6896      425400
 6897              	.LASF81:
 6898 0264 636F756E 		.ascii	"countsLeft\000"
 6898      74734C65 
 6898      667400
 6899              	.LASF86:
 6900 026f 64726976 		.ascii	"driveForwards\000"
 6900      65466F72 
 6900      77617264 
 6900      7300
 6901              	.LASF88:
 6902 027d 7475726E 		.ascii	"turnLeft\000"
 6902      4C656674 
 6902      00
 6903              	.LASF9:
 6904 0286 6C6F6E67 		.ascii	"long long unsigned int\000"
 6904      206C6F6E 
 6904      6720756E 
 6904      7369676E 
 6904      65642069 
 6905              	.LASF135:
 6906 029d 666C6167 		.ascii	"flag_packet\000"
 6906      5F706163 
 6906      6B657400 
 6907              	.LASF69:
 6908 02a9 66726F6E 		.ascii	"frontSensors\000"
 6908      7453656E 
 6908      736F7273 
 6908      00
 6909              	.LASF61:
 6910 02b6 6973725F 		.ascii	"isr_turn_timer\000"
 6910      7475726E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 142


 6910      5F74696D 
 6910      657200
 6911              	.LASF102:
 6912 02c5 6368616E 		.ascii	"changeToRF\000"
 6912      6765546F 
 6912      524600
 6913              	.LASF90:
 6914 02d0 696E6974 		.ascii	"initTurnLeft\000"
 6914      5475726E 
 6914      4C656674 
 6914      00
 6915              	.LASF166:
 6916 02dd 706F7274 		.ascii	"portOpen\000"
 6916      4F70656E 
 6916      00
 6917              	.LASF94:
 6918 02e6 696E6974 		.ascii	"initBrake\000"
 6918      4272616B 
 6918      6500
 6919              	.LASF131:
 6920 02f0 666C6167 		.ascii	"flag_ts_update\000"
 6920      5F74735F 
 6920      75706461 
 6920      746500
 6921              	.LASF115:
 6922 02ff 7363616C 		.ascii	"scalingFactor\000"
 6922      696E6746 
 6922      6163746F 
 6922      7200
 6923              	.LASF105:
 6924 030d 6C656674 		.ascii	"leftSpeed\000"
 6924      53706565 
 6924      6400
 6925              	.LASF130:
 6926 0317 666C6167 		.ascii	"flag_ts_enc\000"
 6926      5F74735F 
 6926      656E6300 
 6927              	.LASF178:
 6928 0323 62797465 		.ascii	"byteCount\000"
 6928      436F756E 
 6928      7400
 6929              	.LASF68:
 6930 032d 61637469 		.ascii	"actionDebounce\000"
 6930      6F6E4465 
 6930      626F756E 
 6930      636500
 6931              	.LASF63:
 6932 033c 62757474 		.ascii	"button\000"
 6932      6F6E00
 6933              	.LASF175:
 6934 0343 70726576 		.ascii	"prev_movement_state\000"
 6934      5F6D6F76 
 6934      656D656E 
 6934      745F7374 
 6934      61746500 
 6935              	.LASF121:
 6936 0357 73656E73 		.ascii	"sensorVals\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 143


 6936      6F725661 
 6936      6C7300
 6937              	.LASF117:
 6938 0362 72657375 		.ascii	"result_str\000"
 6938      6C745F73 
 6938      747200
 6939              	.LASF124:
 6940 036d 75617274 		.ascii	"uart_set_PWM\000"
 6940      5F736574 
 6940      5F50574D 
 6940      00
 6941              	.LASF97:
 6942 037a 696E6974 		.ascii	"inittrackLineZ\000"
 6942      74726163 
 6942      6B4C696E 
 6942      655A00
 6943              	.LASF44:
 6944 0389 726F626F 		.ascii	"robot_ypos\000"
 6944      745F7970 
 6944      6F7300
 6945              	.LASF129:
 6946 0394 74735F64 		.ascii	"ts_display\000"
 6946      6973706C 
 6946      617900
 6947              	.LASF114:
 6948 039f 7072696E 		.ascii	"print_ADC\000"
 6948      745F4144 
 6948      4300
 6949              	.LASF107:
 6950 03a9 7363616C 		.ascii	"scalingLeft\000"
 6950      696E674C 
 6950      65667400 
 6951              	.LASF12:
 6952 03b5 63686172 		.ascii	"char\000"
 6952      00
 6953              	.LASF48:
 6954 03ba 67305F73 		.ascii	"g0_speed\000"
 6954      70656564 
 6954      00
 6955              	.LASF157:
 6956 03c3 72696768 		.ascii	"rightSpeedLimit\000"
 6956      74537065 
 6956      65644C69 
 6956      6D697400 
 6957              	.LASF74:
 6958 03d3 7365744C 		.ascii	"setLeftDir\000"
 6958      65667444 
 6958      697200
 6959              	.LASF181:
 6960 03de 696E7374 		.ascii	"instructionCount\000"
 6960      72756374 
 6960      696F6E43 
 6960      6F756E74 
 6960      00
 6961              	.LASF89:
 6962 03ef 7475726E 		.ascii	"turnU\000"
 6962      5500
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 144


 6963              	.LASF55:
 6964 03f5 67325F79 		.ascii	"g2_ypos\000"
 6964      706F7300 
 6965              	.LASF16:
 6966 03fd 75696E74 		.ascii	"uint16\000"
 6966      313600
 6967              	.LASF18:
 6968 0404 696E7438 		.ascii	"int8\000"
 6968      00
 6969              	.LASF53:
 6970 0409 67315F64 		.ascii	"g1_direction\000"
 6970      69726563 
 6970      74696F6E 
 6970      00
 6971              	.LASF184:
 6972 0416 70617468 		.ascii	"path\000"
 6972      00
 6973              	.LASF75:
 6974 041b 73657452 		.ascii	"setRightDir\000"
 6974      69676874 
 6974      44697200 
 6975              	.LASF34:
 6976 0427 43555256 		.ascii	"CURVE_TRACK\000"
 6976      455F5452 
 6976      41434B00 
 6977              	.LASF109:
 6978 0433 696E7465 		.ascii	"interCalc\000"
 6978      7243616C 
 6978      6300
 6979              	.LASF144:
 6980 043d 42545F45 		.ascii	"BT_ENABLED\000"
 6980      4E41424C 
 6980      454400
 6981              	.LASF80:
 6982 0448 72696768 		.ascii	"right\000"
 6982      7400
 6983              	.LASF162:
 6984 044e 696E6974 		.ascii	"initial_pos_valid\000"
 6984      69616C5F 
 6984      706F735F 
 6984      76616C69 
 6984      6400
 6985              	.LASF8:
 6986 0460 6C6F6E67 		.ascii	"long long int\000"
 6986      206C6F6E 
 6986      6720696E 
 6986      7400
 6987              	.LASF173:
 6988 046e 62756666 		.ascii	"buffer_state\000"
 6988      65725F73 
 6988      74617465 
 6988      00
 6989              	.LASF50:
 6990 047b 67315F78 		.ascii	"g1_xpos\000"
 6990      706F7300 
 6991              	.LASF95:
 6992 0483 696E6974 		.ascii	"initTrack\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 145


 6992      54726163 
 6992      6B00
 6993              	.LASF70:
 6994 048d 6E657874 		.ascii	"nextStep\000"
 6994      53746570 
 6994      00
 6995              	.LASF193:
 6996 0496 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6996      4320342E 
 6996      392E3320 
 6996      32303135 
 6996      30333033 
 6997 04c9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 6997      20726576 
 6997      6973696F 
 6997      6E203232 
 6997      31323230 
 6998 04fc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6998      66756E63 
 6998      74696F6E 
 6998      2D736563 
 6998      74696F6E 
 6999              	.LASF56:
 7000 0524 67325F73 		.ascii	"g2_speed\000"
 7000      70656564 
 7000      00
 7001              	.LASF47:
 7002 052d 67305F79 		.ascii	"g0_ypos\000"
 7002      706F7300 
 7003              	.LASF99:
 7004 0535 72665F63 		.ascii	"rf_char\000"
 7004      68617200 
 7005              	.LASF183:
 7006 053d 666F6F64 		.ascii	"food_list\000"
 7006      5F6C6973 
 7006      7400
 7007              	.LASF143:
 7008 0547 42494E5F 		.ascii	"BIN_ENABLED\000"
 7008      454E4142 
 7008      4C454400 
 7009              	.LASF106:
 7010 0553 72696768 		.ascii	"rightSpeed\000"
 7010      74537065 
 7010      656400
 7011              	.LASF128:
 7012 055e 74735F73 		.ascii	"ts_speed\000"
 7012      70656564 
 7012      00
 7013              	.LASF17:
 7014 0567 75696E74 		.ascii	"uint32\000"
 7014      333200
 7015              	.LASF190:
 7016 056e 696E7374 		.ascii	"instructions\000"
 7016      72756374 
 7016      696F6E73 
 7016      00
 7017              	.LASF82:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 146


 7018 057b 636F756E 		.ascii	"countsRight\000"
 7018      74735269 
 7018      67687400 
 7019              	.LASF196:
 7020 0587 64617461 		.ascii	"data_main\000"
 7020      5F6D6169 
 7020      6E00
 7021              	.LASF116:
 7022 0591 636F6E76 		.ascii	"converted_val\000"
 7022      65727465 
 7022      645F7661 
 7022      6C00
 7023              	.LASF185:
 7024 059f 73746172 		.ascii	"start\000"
 7024      7400
 7025              	.LASF41:
 7026 05a5 72737369 		.ascii	"rssi\000"
 7026      00
 7027              	.LASF111:
 7028 05aa 74726163 		.ascii	"trackLine\000"
 7028      6B4C696E 
 7028      6500
 7029              	.LASF49:
 7030 05b4 67305F64 		.ascii	"g0_direction\000"
 7030      69726563 
 7030      74696F6E 
 7030      00
 7031              	.LASF140:
 7032 05c1 666C6167 		.ascii	"flag_receive_ADC\000"
 7032      5F726563 
 7032      65697665 
 7032      5F414443 
 7032      00
 7033              	.LASF26:
 7034 05d2 53544F50 		.ascii	"STOPPED\000"
 7034      50454400 
 7035              	.LASF100:
 7036 05da 42545F72 		.ascii	"BT_rxInt\000"
 7036      78496E74 
 7036      00
 7037              	.LASF22:
 7038 05e3 6C6F6E67 		.ascii	"long double\000"
 7038      20646F75 
 7038      626C6500 
 7039              	.LASF64:
 7040 05ef 6973725F 		.ascii	"isr_adcTimer\000"
 7040      61646354 
 7040      696D6572 
 7040      00
 7041              	.LASF154:
 7042 05fc 6C656674 		.ascii	"left_duty_cycle\000"
 7042      5F647574 
 7042      795F6379 
 7042      636C6500 
 7043              	.LASF65:
 7044 060c 6973725F 		.ascii	"isr_deadzone\000"
 7044      64656164 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 147


 7044      7A6F6E65 
 7044      00
 7045              	.LASF132:
 7046 0619 666C6167 		.ascii	"flag_ts_speed\000"
 7046      5F74735F 
 7046      73706565 
 7046      6400
 7047              	.LASF137:
 7048 0627 64617461 		.ascii	"dataready_flag\000"
 7048      72656164 
 7048      795F666C 
 7048      616700
 7049              	.LASF164:
 7050 0636 696E6974 		.ascii	"initial_y_pos\000"
 7050      69616C5F 
 7050      795F706F 
 7050      7300
 7051              	.LASF134:
 7052 0644 666C6167 		.ascii	"flag_rx\000"
 7052      5F727800 
 7053              	.LASF2:
 7054 064c 73686F72 		.ascii	"short int\000"
 7054      7420696E 
 7054      7400
 7055              	.LASF141:
 7056 0656 6164635F 		.ascii	"adc_result\000"
 7056      72657375 
 7056      6C7400
 7057              	.LASF92:
 7058 0661 696E6974 		.ascii	"initTurnU\000"
 7058      5475726E 
 7058      5500
 7059              	.LASF145:
 7060 066b 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7060      5F63616C 
 7060      635F7768 
 7060      65656C73 
 7060      70656564 
 7061              	.LASF4:
 7062 0680 6C6F6E67 		.ascii	"long int\000"
 7062      20696E74 
 7062      00
 7063              	.LASF91:
 7064 0689 696E6974 		.ascii	"initTurnRight\000"
 7064      5475726E 
 7064      52696768 
 7064      7400
 7065              	.LASF35:
 7066 0697 555F5452 		.ascii	"U_TRACK\000"
 7066      41434B00 
 7067              	.LASF125:
 7068 069f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7068      52784275 
 7068      66666572 
 7068      00
 7069              	.LASF119:
 7070 06ac 7072696E 		.ascii	"printString\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 148


 7070      74537472 
 7070      696E6700 
 7071              	.LASF98:
 7072 06b8 7278496E 		.ascii	"rxInt\000"
 7072      7400
 7073              	.LASF127:
 7074 06be 74735F75 		.ascii	"ts_update\000"
 7074      70646174 
 7074      6500
 7075              	.LASF33:
 7076 06c8 4E4F5F54 		.ascii	"NO_TRACK\000"
 7076      5241434B 
 7076      00
 7077              	.LASF152:
 7078 06d1 64656164 		.ascii	"deadzone\000"
 7078      7A6F6E65 
 7078      00
 7079              	.LASF156:
 7080 06da 6C656674 		.ascii	"leftSpeedLimit\000"
 7080      53706565 
 7080      644C696D 
 7080      697400
 7081              	.LASF40:
 7082 06e9 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7082      54524156 
 7082      45525345 
 7082      00
 7083              	.LASF29:
 7084 06f6 54524143 		.ascii	"TRACKING_SOFT\000"
 7084      4B494E47 
 7084      5F534F46 
 7084      5400
 7085              	.LASF79:
 7086 0704 6C656674 		.ascii	"left\000"
 7086      00
 7087              	.LASF159:
 7088 0709 61636375 		.ascii	"accum_dist\000"
 7088      6D5F6469 
 7088      737400
 7089              	.LASF122:
 7090 0714 75736250 		.ascii	"usbPutString\000"
 7090      75745374 
 7090      72696E67 
 7090      00
 7091              	.LASF87:
 7092 0721 7475726E 		.ascii	"turnRight\000"
 7092      52696768 
 7092      7400
 7093              	.LASF51:
 7094 072b 67315F79 		.ascii	"g1_ypos\000"
 7094      706F7300 
 7095              	.LASF59:
 7096 0733 6164635F 		.ascii	"adc_isr\000"
 7096      69737200 
 7097              	.LASF120:
 7098 073b 72656164 		.ascii	"readFrontSensors\000"
 7098      46726F6E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 149


 7098      7453656E 
 7098      736F7273 
 7098      00
 7099              	.LASF161:
 7100 074c 71756164 		.ascii	"quad_per_cm\000"
 7100      5F706572 
 7100      5F636D00 
 7101              	.LASF158:
 7102 0758 74617267 		.ascii	"target_distance_cm\000"
 7102      65745F64 
 7102      69737461 
 7102      6E63655F 
 7102      636D00
 7103              	.LASF11:
 7104 076b 73697A65 		.ascii	"sizetype\000"
 7104      74797065 
 7104      00
 7105              	.LASF7:
 7106 0774 6C6F6E67 		.ascii	"long unsigned int\000"
 7106      20756E73 
 7106      69676E65 
 7106      6420696E 
 7106      7400
 7107              	.LASF72:
 7108 0786 62797465 		.ascii	"byte_packet\000"
 7108      5F706163 
 7108      6B657400 
 7109              	.LASF13:
 7110 0792 696E7433 		.ascii	"int32_t\000"
 7110      325F7400 
 7111              	.LASF179:
 7112 079a 7061636B 		.ascii	"packet\000"
 7112      657400
 7113              	.LASF43:
 7114 07a1 726F626F 		.ascii	"robot_xpos\000"
 7114      745F7870 
 7114      6F7300
 7115              	.LASF85:
 7116 07ac 6272616B 		.ascii	"brakeMotor\000"
 7116      654D6F74 
 7116      6F7200
 7117              	.LASF189:
 7118 07b7 666F6F64 		.ascii	"food_length\000"
 7118      5F6C656E 
 7118      67746800 
 7119              	.LASF171:
 7120 07c3 656E7472 		.ascii	"entry\000"
 7120      7900
 7121              	.LASF1:
 7122 07c9 756E7369 		.ascii	"unsigned char\000"
 7122      676E6564 
 7122      20636861 
 7122      7200
 7123              	.LASF6:
 7124 07d7 5F5F7569 		.ascii	"__uint32_t\000"
 7124      6E743332 
 7124      5F7400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 150


 7125              	.LASF170:
 7126 07e2 6C696E65 		.ascii	"line\000"
 7126      00
 7127              	.LASF62:
 7128 07e7 53746F70 		.ascii	"Stop_on_line\000"
 7128      5F6F6E5F 
 7128      6C696E65 
 7128      00
 7129              	.LASF126:
 7130 07f4 74735F65 		.ascii	"ts_enc\000"
 7130      6E6300
 7131              	.LASF165:
 7132 07fb 6272616B 		.ascii	"brakeFlag\000"
 7132      65466C61 
 7132      6700
 7133              	.LASF133:
 7134 0805 666C6167 		.ascii	"flag_ts_display\000"
 7134      5F74735F 
 7134      64697370 
 7134      6C617900 
 7135              	.LASF31:
 7136 0815 73746174 		.ascii	"state\000"
 7136      6500
 7137              	.LASF77:
 7138 081b 72657665 		.ascii	"reverseDirection\000"
 7138      72736544 
 7138      69726563 
 7138      74696F6E 
 7138      00
 7139              	.LASF83:
 7140 082c 6272616B 		.ascii	"brakeLeft\000"
 7140      654C6566 
 7140      7400
 7141              	.LASF169:
 7142 0836 64697370 		.ascii	"displaystring\000"
 7142      6C617973 
 7142      7472696E 
 7142      6700
 7143              	.LASF148:
 7144 0844 6C617374 		.ascii	"last_quad_count1\000"
 7144      5F717561 
 7144      645F636F 
 7144      756E7431 
 7144      00
 7145              	.LASF149:
 7146 0855 6C617374 		.ascii	"last_quad_count2\000"
 7146      5F717561 
 7146      645F636F 
 7146      756E7432 
 7146      00
 7147              	.LASF186:
 7148 0866 64657374 		.ascii	"destination\000"
 7148      696E6174 
 7148      696F6E00 
 7149              	.LASF123:
 7150 0872 75736250 		.ascii	"usbPutChar\000"
 7150      75744368 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 151


 7150      617200
 7151              	.LASF0:
 7152 087d 7369676E 		.ascii	"signed char\000"
 7152      65642063 
 7152      68617200 
 7153              	.LASF3:
 7154 0889 73686F72 		.ascii	"short unsigned int\000"
 7154      7420756E 
 7154      7369676E 
 7154      65642069 
 7154      6E7400
 7155              	.LASF45:
 7156 089c 726F626F 		.ascii	"robot_orientation\000"
 7156      745F6F72 
 7156      69656E74 
 7156      6174696F 
 7156      6E00
 7157              	.LASF37:
 7158 08ae 51554144 		.ascii	"QUAD_STOP\000"
 7158      5F53544F 
 7158      5000
 7159              	.LASF67:
 7160 08b8 6D61696E 		.ascii	"main\000"
 7160      00
 7161              	.LASF58:
 7162 08bd 42545F74 		.ascii	"BT_txInt\000"
 7162      78496E74 
 7162      00
 7163              	.LASF110:
 7164 08c6 6E657874 		.ascii	"nextSpeed\000"
 7164      53706565 
 7164      6400
 7165              	.LASF60:
 7166 08d0 64697374 		.ascii	"dist\000"
 7166      00
 7167              	.LASF15:
 7168 08d5 75696E74 		.ascii	"uint8\000"
 7168      3800
 7169              	.LASF21:
 7170 08db 646F7562 		.ascii	"double\000"
 7170      6C6500
 7171              	.LASF155:
 7172 08e2 72696768 		.ascii	"right_duty_cycle\000"
 7172      745F6475 
 7172      74795F63 
 7172      79636C65 
 7172      00
 7173              	.LASF38:
 7174 08f3 52465F53 		.ascii	"RF_STOP\000"
 7174      544F5000 
 7175              	.LASF76:
 7176 08fb 68616E64 		.ascii	"handle_rx_binary\000"
 7176      6C655F72 
 7176      785F6269 
 7176      6E617279 
 7176      00
 7177              	.LASF118:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9jKSGo.s 			page 152


 7178 090c 7072696E 		.ascii	"print_RF\000"
 7178      745F5246 
 7178      00
 7179              	.LASF30:
 7180 0915 55545552 		.ascii	"UTURN\000"
 7180      4E00
 7181              	.LASF46:
 7182 091b 67305F78 		.ascii	"g0_xpos\000"
 7182      706F7300 
 7183              	.LASF108:
 7184 0923 7363616C 		.ascii	"scalingRight\000"
 7184      696E6752 
 7184      69676874 
 7184      00
 7185              	.LASF136:
 7186 0930 666C6167 		.ascii	"flag_KB_string\000"
 7186      5F4B425F 
 7186      73747269 
 7186      6E6700
 7187              	.LASF52:
 7188 093f 67315F73 		.ascii	"g1_speed\000"
 7188      70656564 
 7188      00
 7189              	.LASF194:
 7190 0948 2E5C6D61 		.ascii	".\\main.c\000"
 7190      696E2E63 
 7190      00
 7191              	.LASF163:
 7192 0951 696E6974 		.ascii	"initial_x_pos\000"
 7192      69616C5F 
 7192      785F706F 
 7192      7300
 7193              	.LASF84:
 7194 095f 6272616B 		.ascii	"brakeRight\000"
 7194      65526967 
 7194      687400
 7195              	.LASF96:
 7196 096a 696E6974 		.ascii	"initTrackU\000"
 7196      54726163 
 7196      6B5500
 7197              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
