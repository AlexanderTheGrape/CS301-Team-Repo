ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	start_turn_count
 165              		.align	1
 166              		.type	start_turn_count, %object
 167              		.size	start_turn_count, 2
 168              	start_turn_count:
 169 0024 0000     		.space	2
 170              		.global	left_duty_cycle
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 4


 172              		.type	left_duty_cycle, %object
 173              		.size	left_duty_cycle, 2
 174              	left_duty_cycle:
 175 0026 0000     		.space	2
 176              		.global	right_duty_cycle
 177              		.align	1
 178              		.type	right_duty_cycle, %object
 179              		.size	right_duty_cycle, 2
 180              	right_duty_cycle:
 181 0028 0000     		.space	2
 182              		.global	leftSpeedLimit
 183              		.align	1
 184              		.type	leftSpeedLimit, %object
 185              		.size	leftSpeedLimit, 2
 186              	leftSpeedLimit:
 187 002a 0000     		.space	2
 188              		.global	rightSpeedLimit
 189              		.align	1
 190              		.type	rightSpeedLimit, %object
 191              		.size	rightSpeedLimit, 2
 192              	rightSpeedLimit:
 193 002c 0000     		.space	2
 194              		.global	target_distance_cm
 195              		.data
 196              		.align	1
 197              		.type	target_distance_cm, %object
 198              		.size	target_distance_cm, 2
 199              	target_distance_cm:
 200 0002 9900     		.short	153
 201              		.global	accum_dist
 202              		.bss
 203              		.align	1
 204              		.type	accum_dist, %object
 205              		.size	accum_dist, 2
 206              	accum_dist:
 207 002e 0000     		.space	2
 208              		.global	target_distance_quad
 209              		.align	1
 210              		.type	target_distance_quad, %object
 211              		.size	target_distance_quad, 2
 212              	target_distance_quad:
 213 0030 0000     		.space	2
 214              		.global	quad_per_cm
 215              		.data
 216              		.align	2
 217              		.type	quad_per_cm, %object
 218              		.size	quad_per_cm, 4
 219              	quad_per_cm:
 220 0004 F0A73241 		.word	1093838832
 221              		.global	initial_pos_valid
 222              		.bss
 223              		.type	initial_pos_valid, %object
 224              		.size	initial_pos_valid, 1
 225              	initial_pos_valid:
 226 0032 00       		.space	1
 227              		.global	initial_x_pos
 228 0033 00       		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 5


 229              		.type	initial_x_pos, %object
 230              		.size	initial_x_pos, 2
 231              	initial_x_pos:
 232 0034 0000     		.space	2
 233              		.global	initial_y_pos
 234              		.align	1
 235              		.type	initial_y_pos, %object
 236              		.size	initial_y_pos, 2
 237              	initial_y_pos:
 238 0036 0000     		.space	2
 239              		.comm	brakeFlag,1,1
 240              		.global	portOpen
 241              		.data
 242              		.type	portOpen, %object
 243              		.size	portOpen, 1
 244              	portOpen:
 245 0008 01       		.byte	1
 246              		.comm	prevVoltage,2,2
 247              		.comm	prevVoltage2,2,2
 248              		.global	displaystring
 249 0009 000000   		.align	2
 250              		.type	displaystring, %object
 251              		.size	displaystring, 64
 252              	displaystring:
 253 000c 43533330 		.ascii	"CS301 2016\012\000"
 253      31203230 
 253      31360A00 
 254 0018 00000000 		.space	52
 254      00000000 
 254      00000000 
 254      00000000 
 254      00000000 
 255              		.comm	line,64,4
 256              		.comm	entry,64,4
 257              		.comm	usbBuffer,64,4
 258              		.comm	buffer_state,32,4
 259              		.comm	system_state,32,4
 260              		.global	prev_movement_state
 261              		.type	prev_movement_state, %object
 262              		.size	prev_movement_state, 1
 263              	prev_movement_state:
 264 004c 03       		.byte	3
 265              		.global	movement_state
 266              		.type	movement_state, %object
 267              		.size	movement_state, 1
 268              	movement_state:
 269 004d 03       		.byte	3
 270              		.global	track_mode
 271              		.bss
 272              		.type	track_mode, %object
 273              		.size	track_mode, 1
 274              	track_mode:
 275 0038 00       		.space	1
 276              		.global	byteCount
 277              		.type	byteCount, %object
 278              		.size	byteCount, 1
 279              	byteCount:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 6


 280 0039 00       		.space	1
 281              		.comm	packet,2,4
 282              		.global	speed
 283              		.data
 284 004e 0000     		.align	3
 285              		.type	speed, %object
 286              		.size	speed, 8
 287              	speed:
 288 0050 00000000 		.word	0
 289 0054 00003040 		.word	1076887552
 290              		.section	.text.handle_rx_binary,"ax",%progbits
 291              		.align	2
 292              		.global	handle_rx_binary
 293              		.thumb
 294              		.thumb_func
 295              		.type	handle_rx_binary, %function
 296              	handle_rx_binary:
 297              	.LFB63:
 298              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 7


  39:.\main.c      **** #define QUAD_RATIO 0.99556
  40:.\main.c      **** 
  41:.\main.c      **** void changeToRF();
  42:.\main.c      **** void changeToBT();
  43:.\main.c      **** 
  44:.\main.c      **** void handle_rx_binary()
  45:.\main.c      **** {
 299              		.loc 1 45 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 32
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 89B0     		sub	sp, sp, #36
 308              		.cfi_def_cfa_offset 40
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  46:.\main.c      ****     if(flag_rx == 1)
 311              		.loc 1 46 0
 312 0006 524B     		ldr	r3, .L21
 313 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 314 000a 012B     		cmp	r3, #1
 315 000c 40F09A80 		bne	.L1
 316              	.LBB2:
  47:.\main.c      ****     {    
  48:.\main.c      ****         flag_rx = 0;
 317              		.loc 1 48 0
 318 0010 4F4B     		ldr	r3, .L21
 319 0012 0022     		movs	r2, #0
 320 0014 1A70     		strb	r2, [r3]
  49:.\main.c      ****         
  50:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 321              		.loc 1 50 0
 322 0016 4F4B     		ldr	r3, .L21+4
 323 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 324 001a 1B02     		lsls	r3, r3, #8
 325 001c 9AB2     		uxth	r2, r3
 326 001e 4D4B     		ldr	r3, .L21+4
 327 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 0022 9BB2     		uxth	r3, r3
 329 0024 1343     		orrs	r3, r3, r2
 330 0026 9BB2     		uxth	r3, r3
 331 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  51:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  52:.\main.c      ****         char byte_packet[12];
  53:.\main.c      ****         char string_packet[12];
  54:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  55:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  56:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  57:.\main.c      ****         //usbPutString(string_packet);
  58:.\main.c      ****        // usbPutString(string_packet);
  59:.\main.c      ****        // usbPutChar(' ');
  60:.\main.c      ****         
  61:.\main.c      ****         switch(byteCount)
 332              		.loc 1 61 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 8


 333 002a 4B4B     		ldr	r3, .L21+8
 334 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 335 002e 043B     		subs	r3, r3, #4
 336 0030 1E2B     		cmp	r3, #30
 337 0032 00F28780 		bhi	.L1
 338 0036 01A2     		adr	r2, .L5
 339 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 340              		.p2align 2
 341              	.L5:
 342 003c B9000000 		.word	.L4+1
 343 0040 45010000 		.word	.L1+1
 344 0044 CD000000 		.word	.L6+1
 345 0048 45010000 		.word	.L1+1
 346 004c D5000000 		.word	.L7+1
 347 0050 45010000 		.word	.L1+1
 348 0054 DD000000 		.word	.L8+1
 349 0058 45010000 		.word	.L1+1
 350 005c E5000000 		.word	.L9+1
 351 0060 45010000 		.word	.L1+1
 352 0064 ED000000 		.word	.L10+1
 353 0068 45010000 		.word	.L1+1
 354 006c F5000000 		.word	.L11+1
 355 0070 45010000 		.word	.L1+1
 356 0074 FD000000 		.word	.L12+1
 357 0078 45010000 		.word	.L1+1
 358 007c 05010000 		.word	.L13+1
 359 0080 45010000 		.word	.L1+1
 360 0084 0D010000 		.word	.L14+1
 361 0088 45010000 		.word	.L1+1
 362 008c 15010000 		.word	.L15+1
 363 0090 45010000 		.word	.L1+1
 364 0094 1D010000 		.word	.L16+1
 365 0098 45010000 		.word	.L1+1
 366 009c 25010000 		.word	.L17+1
 367 00a0 45010000 		.word	.L1+1
 368 00a4 2D010000 		.word	.L18+1
 369 00a8 45010000 		.word	.L1+1
 370 00ac 35010000 		.word	.L19+1
 371 00b0 45010000 		.word	.L1+1
 372 00b4 3D010000 		.word	.L20+1
 373              		.p2align 1
 374              	.L4:
  62:.\main.c      ****         {
  63:.\main.c      ****             case 4:
  64:.\main.c      ****                 //usbPutString("RSSI:");
  65:.\main.c      ****                 //usbPutString(byte_packet);
  66:.\main.c      ****                 //usbPutString("\r\n");
  67:.\main.c      ****                 buffer_state.rssi = packet[0];
 375              		.loc 1 67 0
 376 00b8 264B     		ldr	r3, .L21+4
 377 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 378 00bc DAB2     		uxtb	r2, r3
 379 00be 274B     		ldr	r3, .L21+12
 380 00c0 1A70     		strb	r2, [r3]
  68:.\main.c      ****                 buffer_state.index = packet[1];
 381              		.loc 1 68 0
 382 00c2 244B     		ldr	r3, .L21+4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 9


 383 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 384 00c6 254B     		ldr	r3, .L21+12
 385 00c8 5A70     		strb	r2, [r3, #1]
  69:.\main.c      ****             break;
 386              		.loc 1 69 0
 387 00ca 3BE0     		b	.L1
 388              	.L6:
  70:.\main.c      ****             case 6:
  71:.\main.c      ****                 //usbPutString("robot_x:");
  72:.\main.c      ****                 //usbPutString(string_packet);
  73:.\main.c      ****                 //usbPutString("\r\n");
  74:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 389              		.loc 1 74 0
 390 00cc FA8B     		ldrh	r2, [r7, #30]
 391 00ce 234B     		ldr	r3, .L21+12
 392 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  75:.\main.c      ****             break;
 393              		.loc 1 75 0
 394 00d2 37E0     		b	.L1
 395              	.L7:
  76:.\main.c      ****             case 8:
  77:.\main.c      ****                 //usbPutString("robot_y:");
  78:.\main.c      ****                 //usbPutString(string_packet);
  79:.\main.c      ****                 //usbPutString("\r\n");
  80:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 396              		.loc 1 80 0
 397 00d4 FA8B     		ldrh	r2, [r7, #30]
 398 00d6 214B     		ldr	r3, .L21+12
 399 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  81:.\main.c      ****             break;
 400              		.loc 1 81 0
 401 00da 33E0     		b	.L1
 402              	.L8:
  82:.\main.c      ****             case 10:
  83:.\main.c      ****                 //usbPutString("robot_dir:");
  84:.\main.c      ****                 //usbPutString(string_packet);
  85:.\main.c      ****                 //usbPutString("\r\n");
  86:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 403              		.loc 1 86 0
 404 00dc FA8B     		ldrh	r2, [r7, #30]
 405 00de 1F4B     		ldr	r3, .L21+12
 406 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  87:.\main.c      ****             break;
 407              		.loc 1 87 0
 408 00e2 2FE0     		b	.L1
 409              	.L9:
  88:.\main.c      ****             case 12:
  89:.\main.c      ****                 //usbPutString("g0_x:");
  90:.\main.c      ****                 //usbPutString(string_packet);
  91:.\main.c      ****                 //usbPutString("\r\n");
  92:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 410              		.loc 1 92 0
 411 00e4 FA8B     		ldrh	r2, [r7, #30]
 412 00e6 1D4B     		ldr	r3, .L21+12
 413 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  93:.\main.c      ****             break;
 414              		.loc 1 93 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 10


 415 00ea 2BE0     		b	.L1
 416              	.L10:
  94:.\main.c      ****             case 14:
  95:.\main.c      ****                 //usbPutString("g0_y:");
  96:.\main.c      ****                 //usbPutString(string_packet);
  97:.\main.c      ****                 //usbPutString("\r\n");
  98:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 417              		.loc 1 98 0
 418 00ec FA8B     		ldrh	r2, [r7, #30]
 419 00ee 1B4B     		ldr	r3, .L21+12
 420 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  99:.\main.c      ****             break;
 421              		.loc 1 99 0
 422 00f2 27E0     		b	.L1
 423              	.L11:
 100:.\main.c      ****             case 16:
 101:.\main.c      ****                 //usbPutString("g0_speed:");
 102:.\main.c      ****                 //usbPutString(string_packet);
 103:.\main.c      ****                 //usbPutString("\r\n");
 104:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 424              		.loc 1 104 0
 425 00f4 FA8B     		ldrh	r2, [r7, #30]
 426 00f6 194B     		ldr	r3, .L21+12
 427 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 105:.\main.c      ****             break;
 428              		.loc 1 105 0
 429 00fa 23E0     		b	.L1
 430              	.L12:
 106:.\main.c      ****             case 18:
 107:.\main.c      ****                 //usbPutString("g1_dir:");
 108:.\main.c      ****                 //usbPutString(string_packet);
 109:.\main.c      ****                 //usbPutString("\r\n");
 110:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 431              		.loc 1 110 0
 432 00fc FA8B     		ldrh	r2, [r7, #30]
 433 00fe 174B     		ldr	r3, .L21+12
 434 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 111:.\main.c      ****             break;
 435              		.loc 1 111 0
 436 0102 1FE0     		b	.L1
 437              	.L13:
 112:.\main.c      ****             case 20:
 113:.\main.c      ****                 //usbPutString("g1_x:");
 114:.\main.c      ****                 //usbPutString(string_packet);
 115:.\main.c      ****                 //usbPutString("\r\n");
 116:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 438              		.loc 1 116 0
 439 0104 FA8B     		ldrh	r2, [r7, #30]
 440 0106 154B     		ldr	r3, .L21+12
 441 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 117:.\main.c      ****             break;
 442              		.loc 1 117 0
 443 010a 1BE0     		b	.L1
 444              	.L14:
 118:.\main.c      ****             case 22:
 119:.\main.c      ****                 //usbPutString("g1_y:");
 120:.\main.c      ****                 //usbPutString(string_packet);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 11


 121:.\main.c      ****                 //usbPutString("\r\n");
 122:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 445              		.loc 1 122 0
 446 010c FA8B     		ldrh	r2, [r7, #30]
 447 010e 134B     		ldr	r3, .L21+12
 448 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 123:.\main.c      ****             break;
 449              		.loc 1 123 0
 450 0112 17E0     		b	.L1
 451              	.L15:
 124:.\main.c      ****             case 24:
 125:.\main.c      ****                 //usbPutString("g1_speed:");
 126:.\main.c      ****                 //usbPutString(string_packet);
 127:.\main.c      ****                 //usbPutString("\r\n");
 128:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 452              		.loc 1 128 0
 453 0114 FA8B     		ldrh	r2, [r7, #30]
 454 0116 114B     		ldr	r3, .L21+12
 455 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 129:.\main.c      ****             break;
 456              		.loc 1 129 0
 457 011a 13E0     		b	.L1
 458              	.L16:
 130:.\main.c      ****             case 26:
 131:.\main.c      ****                 //usbPutString("g1_dir:");
 132:.\main.c      ****                 //usbPutString(string_packet);
 133:.\main.c      ****                 //usbPutString("\r\n");
 134:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 459              		.loc 1 134 0
 460 011c FA8B     		ldrh	r2, [r7, #30]
 461 011e 0F4B     		ldr	r3, .L21+12
 462 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 135:.\main.c      ****             break;
 463              		.loc 1 135 0
 464 0122 0FE0     		b	.L1
 465              	.L17:
 136:.\main.c      ****             case 28:
 137:.\main.c      ****                 //usbPutString("g2_x:");
 138:.\main.c      ****                 //usbPutString(string_packet);
 139:.\main.c      ****                 //usbPutString("\r\n");
 140:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 466              		.loc 1 140 0
 467 0124 FA8B     		ldrh	r2, [r7, #30]
 468 0126 0D4B     		ldr	r3, .L21+12
 469 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 141:.\main.c      ****             break;
 470              		.loc 1 141 0
 471 012a 0BE0     		b	.L1
 472              	.L18:
 142:.\main.c      ****             case 30:
 143:.\main.c      ****                 //usbPutString("g2_y:");
 144:.\main.c      ****                 //usbPutString(string_packet);
 145:.\main.c      ****                 //usbPutString("\r\n");
 146:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 473              		.loc 1 146 0
 474 012c FA8B     		ldrh	r2, [r7, #30]
 475 012e 0B4B     		ldr	r3, .L21+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 12


 476 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 147:.\main.c      ****             break;
 477              		.loc 1 147 0
 478 0132 07E0     		b	.L1
 479              	.L19:
 148:.\main.c      ****             case 32:
 149:.\main.c      ****                 //usbPutString("g1_speed:");
 150:.\main.c      ****                 //usbPutString(string_packet);
 151:.\main.c      ****                 //usbPutString("\r\n");
 152:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 480              		.loc 1 152 0
 481 0134 FA8B     		ldrh	r2, [r7, #30]
 482 0136 094B     		ldr	r3, .L21+12
 483 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 153:.\main.c      ****             break;
 484              		.loc 1 153 0
 485 013a 03E0     		b	.L1
 486              	.L20:
 154:.\main.c      ****             case 34:
 155:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 487              		.loc 1 155 0
 488 013c FA8B     		ldrh	r2, [r7, #30]
 489 013e 074B     		ldr	r3, .L21+12
 490 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 156:.\main.c      ****                 //usbPutString("g2_dir:");
 157:.\main.c      ****                 //usbPutString(string_packet);
 158:.\main.c      ****                 //usbPutString("\r\n");
 159:.\main.c      ****                 
 160:.\main.c      ****             break;
 491              		.loc 1 160 0
 492 0142 00BF     		nop
 493              	.L1:
 494              	.LBE2:
 161:.\main.c      ****         }
 162:.\main.c      ****     }
 163:.\main.c      **** }
 495              		.loc 1 163 0
 496 0144 2437     		adds	r7, r7, #36
 497              		.cfi_def_cfa_offset 4
 498 0146 BD46     		mov	sp, r7
 499              		.cfi_def_cfa_register 13
 500              		@ sp needed
 501 0148 5DF8047B 		ldr	r7, [sp], #4
 502              		.cfi_restore 7
 503              		.cfi_def_cfa_offset 0
 504 014c 7047     		bx	lr
 505              	.L22:
 506 014e 00BF     		.align	2
 507              	.L21:
 508 0150 00000000 		.word	flag_rx
 509 0154 00000000 		.word	packet
 510 0158 00000000 		.word	byteCount
 511 015c 00000000 		.word	buffer_state
 512              		.cfi_endproc
 513              	.LFE63:
 514              		.size	handle_rx_binary, .-handle_rx_binary
 515              		.section	.text.setLeftDir,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 13


 516              		.align	2
 517              		.global	setLeftDir
 518              		.thumb
 519              		.thumb_func
 520              		.type	setLeftDir, %function
 521              	setLeftDir:
 522              	.LFB64:
 164:.\main.c      **** 
 165:.\main.c      **** 
 166:.\main.c      **** 
 167:.\main.c      **** void setLeftDir(uint8 dir)
 168:.\main.c      **** {
 523              		.loc 1 168 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527 0000 80B5     		push	{r7, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 82B0     		sub	sp, sp, #8
 532              		.cfi_def_cfa_offset 16
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 0346     		mov	r3, r0
 536 0008 FB71     		strb	r3, [r7, #7]
 169:.\main.c      ****     M2_IN2_Write(dir);
 537              		.loc 1 169 0
 538 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 539 000c 1846     		mov	r0, r3
 540 000e FFF7FEFF 		bl	M2_IN2_Write
 170:.\main.c      **** }
 541              		.loc 1 170 0
 542 0012 0837     		adds	r7, r7, #8
 543              		.cfi_def_cfa_offset 8
 544 0014 BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0016 80BD     		pop	{r7, pc}
 548              		.cfi_endproc
 549              	.LFE64:
 550              		.size	setLeftDir, .-setLeftDir
 551              		.section	.text.setRightDir,"ax",%progbits
 552              		.align	2
 553              		.global	setRightDir
 554              		.thumb
 555              		.thumb_func
 556              		.type	setRightDir, %function
 557              	setRightDir:
 558              	.LFB65:
 171:.\main.c      **** 
 172:.\main.c      **** void setRightDir(uint8 dir)
 173:.\main.c      **** {
 559              		.loc 1 173 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 14


 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 82B0     		sub	sp, sp, #8
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 0346     		mov	r3, r0
 572 0008 FB71     		strb	r3, [r7, #7]
 174:.\main.c      ****     M1_IN2_Write(dir);
 573              		.loc 1 174 0
 574 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 575 000c 1846     		mov	r0, r3
 576 000e FFF7FEFF 		bl	M1_IN2_Write
 175:.\main.c      **** }
 577              		.loc 1 175 0
 578 0012 0837     		adds	r7, r7, #8
 579              		.cfi_def_cfa_offset 8
 580 0014 BD46     		mov	sp, r7
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 0016 80BD     		pop	{r7, pc}
 584              		.cfi_endproc
 585              	.LFE65:
 586              		.size	setRightDir, .-setRightDir
 587              		.section	.rodata
 588              		.align	2
 589              	.LC0:
 590 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 590      2025640D 
 590      0A00
 591              		.section	.text.reverseDirection,"ax",%progbits
 592              		.align	2
 593              		.global	reverseDirection
 594              		.thumb
 595              		.thumb_func
 596              		.type	reverseDirection, %function
 597              	reverseDirection:
 598              	.LFB66:
 176:.\main.c      **** 
 177:.\main.c      **** void reverseDirection()
 178:.\main.c      **** {
 599              		.loc 1 178 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 16
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603 0000 80B5     		push	{r7, lr}
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 84B0     		sub	sp, sp, #16
 608              		.cfi_def_cfa_offset 24
 609 0004 00AF     		add	r7, sp, #0
 610              		.cfi_def_cfa_register 7
 179:.\main.c      ****     direction = !direction;
 611              		.loc 1 179 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 15


 612 0006 114B     		ldr	r3, .L26
 613 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 000a 002B     		cmp	r3, #0
 615 000c 0CBF     		ite	eq
 616 000e 0123     		moveq	r3, #1
 617 0010 0023     		movne	r3, #0
 618 0012 DBB2     		uxtb	r3, r3
 619 0014 1A46     		mov	r2, r3
 620 0016 0D4B     		ldr	r3, .L26
 621 0018 1A70     		strb	r2, [r3]
 180:.\main.c      ****     setLeftDir(direction);
 622              		.loc 1 180 0
 623 001a 0C4B     		ldr	r3, .L26
 624 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 001e 1846     		mov	r0, r3
 626 0020 FFF7FEFF 		bl	setLeftDir
 181:.\main.c      ****     setRightDir(direction);
 627              		.loc 1 181 0
 628 0024 094B     		ldr	r3, .L26
 629 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 0028 1846     		mov	r0, r3
 631 002a FFF7FEFF 		bl	setRightDir
 182:.\main.c      ****     char mes[16];
 183:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 632              		.loc 1 183 0
 633 002e 074B     		ldr	r3, .L26
 634 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635 0032 1A46     		mov	r2, r3
 636 0034 3B46     		mov	r3, r7
 637 0036 1846     		mov	r0, r3
 638 0038 0549     		ldr	r1, .L26+4
 639 003a FFF7FEFF 		bl	sprintf
 184:.\main.c      ****     UART_PutString(mes);
 640              		.loc 1 184 0
 641 003e 3B46     		mov	r3, r7
 642 0040 1846     		mov	r0, r3
 643 0042 FFF7FEFF 		bl	UART_PutString
 185:.\main.c      **** }
 644              		.loc 1 185 0
 645 0046 1037     		adds	r7, r7, #16
 646              		.cfi_def_cfa_offset 8
 647 0048 BD46     		mov	sp, r7
 648              		.cfi_def_cfa_register 13
 649              		@ sp needed
 650 004a 80BD     		pop	{r7, pc}
 651              	.L27:
 652              		.align	2
 653              	.L26:
 654 004c 00000000 		.word	direction
 655 0050 00000000 		.word	.LC0
 656              		.cfi_endproc
 657              	.LFE66:
 658              		.size	reverseDirection, .-reverseDirection
 659              		.global	__aeabi_dcmplt
 660              		.global	__aeabi_dmul
 661              		.global	__aeabi_d2iz
 662              		.section	.text.setSpeed,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 16


 663              		.align	2
 664              		.global	setSpeed
 665              		.thumb
 666              		.thumb_func
 667              		.type	setSpeed, %function
 668              	setSpeed:
 669              	.LFB67:
 186:.\main.c      **** 
 187:.\main.c      **** void setSpeed(double left, double right){
 670              		.loc 1 187 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 24
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674 0000 80B5     		push	{r7, lr}
 675              		.cfi_def_cfa_offset 8
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 86B0     		sub	sp, sp, #24
 679              		.cfi_def_cfa_offset 32
 680 0004 00AF     		add	r7, sp, #0
 681              		.cfi_def_cfa_register 7
 682 0006 C7E90201 		strd	r0, [r7, #8]
 683 000a C7E90023 		strd	r2, [r7]
 188:.\main.c      ****     if(right < 0.0)
 684              		.loc 1 188 0
 685 000e D7E90001 		ldrd	r0, [r7]
 686 0012 4FF00002 		mov	r2, #0
 687 0016 4FF00003 		mov	r3, #0
 688 001a FFF7FEFF 		bl	__aeabi_dcmplt
 689 001e 0346     		mov	r3, r0
 690 0020 002B     		cmp	r3, #0
 691 0022 10D0     		beq	.L37
 189:.\main.c      ****     {
 190:.\main.c      ****         //char mes[16];
 191:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 192:.\main.c      ****        // UART_PutString(mes);
 193:.\main.c      ****         setRightDir(!direction);
 692              		.loc 1 193 0
 693 0024 304B     		ldr	r3, .L39+8
 694 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 695 0028 002B     		cmp	r3, #0
 696 002a 0CBF     		ite	eq
 697 002c 0123     		moveq	r3, #1
 698 002e 0023     		movne	r3, #0
 699 0030 DBB2     		uxtb	r3, r3
 700 0032 1846     		mov	r0, r3
 701 0034 FFF7FEFF 		bl	setRightDir
 194:.\main.c      ****         right = -right;
 702              		.loc 1 194 0
 703 0038 3B68     		ldr	r3, [r7]
 704 003a 3B60     		str	r3, [r7]
 705 003c 7B68     		ldr	r3, [r7, #4]
 706 003e 83F00043 		eor	r3, r3, #-2147483648
 707 0042 7B60     		str	r3, [r7, #4]
 708 0044 04E0     		b	.L31
 709              	.L37:
 195:.\main.c      ****     }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 17


 196:.\main.c      ****     else setRightDir(direction);
 710              		.loc 1 196 0
 711 0046 284B     		ldr	r3, .L39+8
 712 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 713 004a 1846     		mov	r0, r3
 714 004c FFF7FEFF 		bl	setRightDir
 715              	.L31:
 197:.\main.c      ****     
 198:.\main.c      ****     if(left < 0.0)
 716              		.loc 1 198 0
 717 0050 D7E90201 		ldrd	r0, [r7, #8]
 718 0054 4FF00002 		mov	r2, #0
 719 0058 4FF00003 		mov	r3, #0
 720 005c FFF7FEFF 		bl	__aeabi_dcmplt
 721 0060 0346     		mov	r3, r0
 722 0062 002B     		cmp	r3, #0
 723 0064 10D0     		beq	.L38
 199:.\main.c      ****     {
 200:.\main.c      ****        // char mes[16];
 201:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 202:.\main.c      ****         //UART_PutString(mes);
 203:.\main.c      ****         setLeftDir(!direction);
 724              		.loc 1 203 0
 725 0066 204B     		ldr	r3, .L39+8
 726 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 727 006a 002B     		cmp	r3, #0
 728 006c 0CBF     		ite	eq
 729 006e 0123     		moveq	r3, #1
 730 0070 0023     		movne	r3, #0
 731 0072 DBB2     		uxtb	r3, r3
 732 0074 1846     		mov	r0, r3
 733 0076 FFF7FEFF 		bl	setLeftDir
 204:.\main.c      ****         left = -left;
 734              		.loc 1 204 0
 735 007a BB68     		ldr	r3, [r7, #8]
 736 007c BB60     		str	r3, [r7, #8]
 737 007e FB68     		ldr	r3, [r7, #12]
 738 0080 83F00043 		eor	r3, r3, #-2147483648
 739 0084 FB60     		str	r3, [r7, #12]
 740 0086 04E0     		b	.L34
 741              	.L38:
 205:.\main.c      ****     }
 206:.\main.c      ****     else setLeftDir(direction);
 742              		.loc 1 206 0
 743 0088 174B     		ldr	r3, .L39+8
 744 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 745 008c 1846     		mov	r0, r3
 746 008e FFF7FEFF 		bl	setLeftDir
 747              	.L34:
 207:.\main.c      ****     
 208:.\main.c      ****     int16 countsLeft = left*QUAD_RATIO;
 748              		.loc 1 208 0
 749 0092 D7E90201 		ldrd	r0, [r7, #8]
 750 0096 12A3     		adr	r3, .L39
 751 0098 D3E90023 		ldrd	r2, [r3]
 752 009c FFF7FEFF 		bl	__aeabi_dmul
 753 00a0 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 18


 754 00a2 0B46     		mov	r3, r1
 755 00a4 1046     		mov	r0, r2
 756 00a6 1946     		mov	r1, r3
 757 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 758 00ac 0346     		mov	r3, r0
 759 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 209:.\main.c      ****     int16 countsRight = right*QUAD_RATIO;
 760              		.loc 1 209 0
 761 00b0 D7E90001 		ldrd	r0, [r7]
 762 00b4 0AA3     		adr	r3, .L39
 763 00b6 D3E90023 		ldrd	r2, [r3]
 764 00ba FFF7FEFF 		bl	__aeabi_dmul
 765 00be 0246     		mov	r2, r0
 766 00c0 0B46     		mov	r3, r1
 767 00c2 1046     		mov	r0, r2
 768 00c4 1946     		mov	r1, r3
 769 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 770 00ca 0346     		mov	r3, r0
 771 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 210:.\main.c      ****     
 211:.\main.c      ****     leftSpeedLimit = countsRight;
 772              		.loc 1 211 0
 773 00ce 074A     		ldr	r2, .L39+12
 774 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 775 00d2 1380     		strh	r3, [r2]	@ movhi
 212:.\main.c      ****     rightSpeedLimit = countsLeft;
 776              		.loc 1 212 0
 777 00d4 064A     		ldr	r2, .L39+16
 778 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 779 00d8 1380     		strh	r3, [r2]	@ movhi
 213:.\main.c      **** }
 780              		.loc 1 213 0
 781 00da 1837     		adds	r7, r7, #24
 782              		.cfi_def_cfa_offset 8
 783 00dc BD46     		mov	sp, r7
 784              		.cfi_def_cfa_register 13
 785              		@ sp needed
 786 00de 80BD     		pop	{r7, pc}
 787              	.L40:
 788              		.align	3
 789              	.L39:
 790 00e0 969526A5 		.word	-1524197994
 791 00e4 A0DBEF3F 		.word	1072683936
 792 00e8 00000000 		.word	direction
 793 00ec 00000000 		.word	leftSpeedLimit
 794 00f0 00000000 		.word	rightSpeedLimit
 795              		.cfi_endproc
 796              	.LFE67:
 797              		.size	setSpeed, .-setSpeed
 798 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 799              		.align	2
 800              		.global	brakeLeft
 801              		.thumb
 802              		.thumb_func
 803              		.type	brakeLeft, %function
 804              	brakeLeft:
 805              	.LFB68:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 19


 214:.\main.c      **** 
 215:.\main.c      **** void brakeLeft()
 216:.\main.c      **** {
 806              		.loc 1 216 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810 0000 80B5     		push	{r7, lr}
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 217:.\main.c      ****     PWM_1_WriteCompare(0);
 816              		.loc 1 217 0
 817 0004 0020     		movs	r0, #0
 818 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 218:.\main.c      ****     left_duty_cycle = 0;
 819              		.loc 1 218 0
 820 000a 024B     		ldr	r3, .L42
 821 000c 0022     		movs	r2, #0
 822 000e 1A80     		strh	r2, [r3]	@ movhi
 219:.\main.c      **** }
 823              		.loc 1 219 0
 824 0010 80BD     		pop	{r7, pc}
 825              	.L43:
 826 0012 00BF     		.align	2
 827              	.L42:
 828 0014 00000000 		.word	left_duty_cycle
 829              		.cfi_endproc
 830              	.LFE68:
 831              		.size	brakeLeft, .-brakeLeft
 832              		.section	.text.brakeRight,"ax",%progbits
 833              		.align	2
 834              		.global	brakeRight
 835              		.thumb
 836              		.thumb_func
 837              		.type	brakeRight, %function
 838              	brakeRight:
 839              	.LFB69:
 220:.\main.c      **** 
 221:.\main.c      **** void brakeRight()
 222:.\main.c      **** {
 840              		.loc 1 222 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 223:.\main.c      ****      PWM_2_WriteCompare(0);
 850              		.loc 1 223 0
 851 0004 0020     		movs	r0, #0
 852 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 20


 224:.\main.c      ****      right_duty_cycle = 0;
 853              		.loc 1 224 0
 854 000a 024B     		ldr	r3, .L45
 855 000c 0022     		movs	r2, #0
 856 000e 1A80     		strh	r2, [r3]	@ movhi
 225:.\main.c      **** }
 857              		.loc 1 225 0
 858 0010 80BD     		pop	{r7, pc}
 859              	.L46:
 860 0012 00BF     		.align	2
 861              	.L45:
 862 0014 00000000 		.word	right_duty_cycle
 863              		.cfi_endproc
 864              	.LFE69:
 865              		.size	brakeRight, .-brakeRight
 866              		.section	.text.brakeMotor,"ax",%progbits
 867              		.align	2
 868              		.global	brakeMotor
 869              		.thumb
 870              		.thumb_func
 871              		.type	brakeMotor, %function
 872              	brakeMotor:
 873              	.LFB70:
 226:.\main.c      **** 
 227:.\main.c      **** void brakeMotor(){
 874              		.loc 1 227 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 00AF     		add	r7, sp, #0
 883              		.cfi_def_cfa_register 7
 228:.\main.c      ****     setSpeed(0, 0);
 884              		.loc 1 228 0
 885 0004 4FF00000 		mov	r0, #0
 886 0008 4FF00001 		mov	r1, #0
 887 000c 4FF00002 		mov	r2, #0
 888 0010 4FF00003 		mov	r3, #0
 889 0014 FFF7FEFF 		bl	setSpeed
 229:.\main.c      ****     brakeLeft();
 890              		.loc 1 229 0
 891 0018 FFF7FEFF 		bl	brakeLeft
 230:.\main.c      ****     brakeRight();
 892              		.loc 1 230 0
 893 001c FFF7FEFF 		bl	brakeRight
 231:.\main.c      **** }
 894              		.loc 1 231 0
 895 0020 80BD     		pop	{r7, pc}
 896              		.cfi_endproc
 897              	.LFE70:
 898              		.size	brakeMotor, .-brakeMotor
 899 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 900              		.align	2
 901              		.global	driveForwards
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 21


 902              		.thumb
 903              		.thumb_func
 904              		.type	driveForwards, %function
 905              	driveForwards:
 906              	.LFB71:
 232:.\main.c      **** 
 233:.\main.c      **** void driveForwards()
 234:.\main.c      **** {
 907              		.loc 1 234 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 235:.\main.c      ****     setSpeed(speed, speed);
 917              		.loc 1 235 0
 918 0004 044B     		ldr	r3, .L49
 919 0006 D3E90001 		ldrd	r0, [r3]
 920 000a 034B     		ldr	r3, .L49
 921 000c D3E90023 		ldrd	r2, [r3]
 922 0010 FFF7FEFF 		bl	setSpeed
 236:.\main.c      **** }
 923              		.loc 1 236 0
 924 0014 80BD     		pop	{r7, pc}
 925              	.L50:
 926 0016 00BF     		.align	2
 927              	.L49:
 928 0018 00000000 		.word	speed
 929              		.cfi_endproc
 930              	.LFE71:
 931              		.size	driveForwards, .-driveForwards
 932              		.global	__aeabi_dadd
 933              		.section	.text.turnRight,"ax",%progbits
 934              		.align	2
 935              		.global	turnRight
 936              		.thumb
 937              		.thumb_func
 938              		.type	turnRight, %function
 939              	turnRight:
 940              	.LFB72:
 237:.\main.c      **** 
 238:.\main.c      **** void turnRight()
 239:.\main.c      **** {
 941              		.loc 1 239 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945 0000 80B5     		push	{r7, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 7, -8
 948              		.cfi_offset 14, -4
 949 0002 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 22


 240:.\main.c      ****     setSpeed(0,speed*2.0);
 951              		.loc 1 240 0
 952 0004 074B     		ldr	r3, .L52
 953 0006 D3E90023 		ldrd	r2, [r3]
 954 000a 1046     		mov	r0, r2
 955 000c 1946     		mov	r1, r3
 956 000e FFF7FEFF 		bl	__aeabi_dadd
 957 0012 0246     		mov	r2, r0
 958 0014 0B46     		mov	r3, r1
 959 0016 4FF00000 		mov	r0, #0
 960 001a 4FF00001 		mov	r1, #0
 961 001e FFF7FEFF 		bl	setSpeed
 241:.\main.c      **** }
 962              		.loc 1 241 0
 963 0022 80BD     		pop	{r7, pc}
 964              	.L53:
 965              		.align	2
 966              	.L52:
 967 0024 00000000 		.word	speed
 968              		.cfi_endproc
 969              	.LFE72:
 970              		.size	turnRight, .-turnRight
 971              		.section	.text.turnLeft,"ax",%progbits
 972              		.align	2
 973              		.global	turnLeft
 974              		.thumb
 975              		.thumb_func
 976              		.type	turnLeft, %function
 977              	turnLeft:
 978              	.LFB73:
 242:.\main.c      **** 
 243:.\main.c      **** void turnLeft()
 244:.\main.c      **** {
 979              		.loc 1 244 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983 0000 80B5     		push	{r7, lr}
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0002 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 245:.\main.c      ****     setSpeed(speed*2.0,0);
 989              		.loc 1 245 0
 990 0004 084B     		ldr	r3, .L55
 991 0006 D3E90023 		ldrd	r2, [r3]
 992 000a 1046     		mov	r0, r2
 993 000c 1946     		mov	r1, r3
 994 000e FFF7FEFF 		bl	__aeabi_dadd
 995 0012 0246     		mov	r2, r0
 996 0014 0B46     		mov	r3, r1
 997 0016 1046     		mov	r0, r2
 998 0018 1946     		mov	r1, r3
 999 001a 4FF00002 		mov	r2, #0
 1000 001e 4FF00003 		mov	r3, #0
 1001 0022 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 23


 246:.\main.c      **** }
 1002              		.loc 1 246 0
 1003 0026 80BD     		pop	{r7, pc}
 1004              	.L56:
 1005              		.align	2
 1006              	.L55:
 1007 0028 00000000 		.word	speed
 1008              		.cfi_endproc
 1009              	.LFE73:
 1010              		.size	turnLeft, .-turnLeft
 1011              		.section	.text.initTurnLeft,"ax",%progbits
 1012              		.align	2
 1013              		.global	initTurnLeft
 1014              		.thumb
 1015              		.thumb_func
 1016              		.type	initTurnLeft, %function
 1017              	initTurnLeft:
 1018              	.LFB74:
 247:.\main.c      **** 
 248:.\main.c      **** void initTurnLeft(){
 1019              		.loc 1 248 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023 0000 80B5     		push	{r7, lr}
 1024              		.cfi_def_cfa_offset 8
 1025              		.cfi_offset 7, -8
 1026              		.cfi_offset 14, -4
 1027 0002 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 249:.\main.c      ****     Timer_2_Stop();
 1029              		.loc 1 249 0
 1030 0004 FFF7FEFF 		bl	Timer_2_Stop
 250:.\main.c      ****     prev_movement_state = movement_state;
 1031              		.loc 1 250 0
 1032 0008 084B     		ldr	r3, .L58
 1033 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1034 000c 084B     		ldr	r3, .L58+4
 1035 000e 1A70     		strb	r2, [r3]
 251:.\main.c      ****     movement_state = LTURN;
 1036              		.loc 1 251 0
 1037 0010 064B     		ldr	r3, .L58
 1038 0012 0122     		movs	r2, #1
 1039 0014 1A70     		strb	r2, [r3]
 252:.\main.c      ****     brakeLeft();
 1040              		.loc 1 252 0
 1041 0016 FFF7FEFF 		bl	brakeLeft
 253:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1042              		.loc 1 253 0
 1043 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1044 001e 0346     		mov	r3, r0
 1045 0020 1A46     		mov	r2, r3
 1046 0022 044B     		ldr	r3, .L58+8
 1047 0024 1A80     		strh	r2, [r3]	@ movhi
 254:.\main.c      ****     Timer_2_Start();
 1048              		.loc 1 254 0
 1049 0026 FFF7FEFF 		bl	Timer_2_Start
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 24


 255:.\main.c      **** }
 1050              		.loc 1 255 0
 1051 002a 80BD     		pop	{r7, pc}
 1052              	.L59:
 1053              		.align	2
 1054              	.L58:
 1055 002c 00000000 		.word	movement_state
 1056 0030 00000000 		.word	prev_movement_state
 1057 0034 00000000 		.word	start_turn_count
 1058              		.cfi_endproc
 1059              	.LFE74:
 1060              		.size	initTurnLeft, .-initTurnLeft
 1061              		.section	.text.initTurnRight,"ax",%progbits
 1062              		.align	2
 1063              		.global	initTurnRight
 1064              		.thumb
 1065              		.thumb_func
 1066              		.type	initTurnRight, %function
 1067              	initTurnRight:
 1068              	.LFB75:
 256:.\main.c      **** 
 257:.\main.c      **** void initTurnRight(){
 1069              		.loc 1 257 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073 0000 80B5     		push	{r7, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 7, -8
 1076              		.cfi_offset 14, -4
 1077 0002 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
 258:.\main.c      ****     Timer_2_Stop();
 1079              		.loc 1 258 0
 1080 0004 FFF7FEFF 		bl	Timer_2_Stop
 259:.\main.c      ****     prev_movement_state = movement_state;
 1081              		.loc 1 259 0
 1082 0008 084B     		ldr	r3, .L61
 1083 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1084 000c 084B     		ldr	r3, .L61+4
 1085 000e 1A70     		strb	r2, [r3]
 260:.\main.c      ****     movement_state = RTURN;
 1086              		.loc 1 260 0
 1087 0010 064B     		ldr	r3, .L61
 1088 0012 0222     		movs	r2, #2
 1089 0014 1A70     		strb	r2, [r3]
 261:.\main.c      ****     brakeRight();
 1090              		.loc 1 261 0
 1091 0016 FFF7FEFF 		bl	brakeRight
 262:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1092              		.loc 1 262 0
 1093 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1094 001e 0346     		mov	r3, r0
 1095 0020 1A46     		mov	r2, r3
 1096 0022 044B     		ldr	r3, .L61+8
 1097 0024 1A80     		strh	r2, [r3]	@ movhi
 263:.\main.c      ****     Timer_2_Start();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 25


 1098              		.loc 1 263 0
 1099 0026 FFF7FEFF 		bl	Timer_2_Start
 264:.\main.c      **** }
 1100              		.loc 1 264 0
 1101 002a 80BD     		pop	{r7, pc}
 1102              	.L62:
 1103              		.align	2
 1104              	.L61:
 1105 002c 00000000 		.word	movement_state
 1106 0030 00000000 		.word	prev_movement_state
 1107 0034 00000000 		.word	start_turn_count
 1108              		.cfi_endproc
 1109              	.LFE75:
 1110              		.size	initTurnRight, .-initTurnRight
 1111              		.section	.text.initForward,"ax",%progbits
 1112              		.align	2
 1113              		.global	initForward
 1114              		.thumb
 1115              		.thumb_func
 1116              		.type	initForward, %function
 1117              	initForward:
 1118              	.LFB76:
 265:.\main.c      **** 
 266:.\main.c      **** void initForward(){
 1119              		.loc 1 266 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 267:.\main.c      ****     brakeMotor();
 1129              		.loc 1 267 0
 1130 0004 FFF7FEFF 		bl	brakeMotor
 268:.\main.c      ****     movement_state = DRIVE;
 1131              		.loc 1 268 0
 1132 0008 014B     		ldr	r3, .L64
 1133 000a 0022     		movs	r2, #0
 1134 000c 1A70     		strb	r2, [r3]
 269:.\main.c      **** }
 1135              		.loc 1 269 0
 1136 000e 80BD     		pop	{r7, pc}
 1137              	.L65:
 1138              		.align	2
 1139              	.L64:
 1140 0010 00000000 		.word	movement_state
 1141              		.cfi_endproc
 1142              	.LFE76:
 1143              		.size	initForward, .-initForward
 1144              		.section	.text.initBrake,"ax",%progbits
 1145              		.align	2
 1146              		.global	initBrake
 1147              		.thumb
 1148              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 26


 1149              		.type	initBrake, %function
 1150              	initBrake:
 1151              	.LFB77:
 270:.\main.c      **** 
 271:.\main.c      **** void initBrake(){
 1152              		.loc 1 271 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
 1157 0000 80B4     		push	{r7}
 1158              		.cfi_def_cfa_offset 4
 1159              		.cfi_offset 7, -4
 1160 0002 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
 272:.\main.c      ****     movement_state = STOPPED;
 1162              		.loc 1 272 0
 1163 0004 034B     		ldr	r3, .L67
 1164 0006 0322     		movs	r2, #3
 1165 0008 1A70     		strb	r2, [r3]
 273:.\main.c      **** }
 1166              		.loc 1 273 0
 1167 000a BD46     		mov	sp, r7
 1168              		.cfi_def_cfa_register 13
 1169              		@ sp needed
 1170 000c 5DF8047B 		ldr	r7, [sp], #4
 1171              		.cfi_restore 7
 1172              		.cfi_def_cfa_offset 0
 1173 0010 7047     		bx	lr
 1174              	.L68:
 1175 0012 00BF     		.align	2
 1176              	.L67:
 1177 0014 00000000 		.word	movement_state
 1178              		.cfi_endproc
 1179              	.LFE77:
 1180              		.size	initBrake, .-initBrake
 1181              		.section	.text.initTrack,"ax",%progbits
 1182              		.align	2
 1183              		.global	initTrack
 1184              		.thumb
 1185              		.thumb_func
 1186              		.type	initTrack, %function
 1187              	initTrack:
 1188              	.LFB78:
 274:.\main.c      **** 
 275:.\main.c      **** void initTrack()
 276:.\main.c      **** {
 1189              		.loc 1 276 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 1194 0000 80B4     		push	{r7}
 1195              		.cfi_def_cfa_offset 4
 1196              		.cfi_offset 7, -4
 1197 0002 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 27


 277:.\main.c      ****     movement_state = TRACKING;
 1199              		.loc 1 277 0
 1200 0004 034B     		ldr	r3, .L70
 1201 0006 0422     		movs	r2, #4
 1202 0008 1A70     		strb	r2, [r3]
 278:.\main.c      **** }
 1203              		.loc 1 278 0
 1204 000a BD46     		mov	sp, r7
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 000c 5DF8047B 		ldr	r7, [sp], #4
 1208              		.cfi_restore 7
 1209              		.cfi_def_cfa_offset 0
 1210 0010 7047     		bx	lr
 1211              	.L71:
 1212 0012 00BF     		.align	2
 1213              	.L70:
 1214 0014 00000000 		.word	movement_state
 1215              		.cfi_endproc
 1216              	.LFE78:
 1217              		.size	initTrack, .-initTrack
 1218              		.section	.text.initTrackU,"ax",%progbits
 1219              		.align	2
 1220              		.global	initTrackU
 1221              		.thumb
 1222              		.thumb_func
 1223              		.type	initTrackU, %function
 1224              	initTrackU:
 1225              	.LFB79:
 279:.\main.c      **** 
 280:.\main.c      **** void initTrackU(){
 1226              		.loc 1 280 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 1, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231 0000 80B4     		push	{r7}
 1232              		.cfi_def_cfa_offset 4
 1233              		.cfi_offset 7, -4
 1234 0002 00AF     		add	r7, sp, #0
 1235              		.cfi_def_cfa_register 7
 281:.\main.c      ****     movement_state = TRACKING_U;
 1236              		.loc 1 281 0
 1237 0004 034B     		ldr	r3, .L73
 1238 0006 0522     		movs	r2, #5
 1239 0008 1A70     		strb	r2, [r3]
 282:.\main.c      **** }
 1240              		.loc 1 282 0
 1241 000a BD46     		mov	sp, r7
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed
 1244 000c 5DF8047B 		ldr	r7, [sp], #4
 1245              		.cfi_restore 7
 1246              		.cfi_def_cfa_offset 0
 1247 0010 7047     		bx	lr
 1248              	.L74:
 1249 0012 00BF     		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 28


 1250              	.L73:
 1251 0014 00000000 		.word	movement_state
 1252              		.cfi_endproc
 1253              	.LFE79:
 1254              		.size	initTrackU, .-initTrackU
 1255              		.section	.text.inittrackLineZ,"ax",%progbits
 1256              		.align	2
 1257              		.global	inittrackLineZ
 1258              		.thumb
 1259              		.thumb_func
 1260              		.type	inittrackLineZ, %function
 1261              	inittrackLineZ:
 1262              	.LFB80:
 283:.\main.c      **** 
 284:.\main.c      **** void inittrackLineZ(){
 1263              		.loc 1 284 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 1268 0000 80B4     		push	{r7}
 1269              		.cfi_def_cfa_offset 4
 1270              		.cfi_offset 7, -4
 1271 0002 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 285:.\main.c      ****     movement_state = TRACKING_SOFT;
 1273              		.loc 1 285 0
 1274 0004 034B     		ldr	r3, .L76
 1275 0006 0622     		movs	r2, #6
 1276 0008 1A70     		strb	r2, [r3]
 286:.\main.c      **** }
 1277              		.loc 1 286 0
 1278 000a BD46     		mov	sp, r7
 1279              		.cfi_def_cfa_register 13
 1280              		@ sp needed
 1281 000c 5DF8047B 		ldr	r7, [sp], #4
 1282              		.cfi_restore 7
 1283              		.cfi_def_cfa_offset 0
 1284 0010 7047     		bx	lr
 1285              	.L77:
 1286 0012 00BF     		.align	2
 1287              	.L76:
 1288 0014 00000000 		.word	movement_state
 1289              		.cfi_endproc
 1290              	.LFE80:
 1291              		.size	inittrackLineZ, .-inittrackLineZ
 1292              		.section	.text.rxInt,"ax",%progbits
 1293              		.align	2
 1294              		.global	rxInt
 1295              		.thumb
 1296              		.thumb_func
 1297              		.type	rxInt, %function
 1298              	rxInt:
 1299              	.LFB81:
 287:.\main.c      **** 
 288:.\main.c      **** 
 289:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 29


 290:.\main.c      **** //Binary RF Data
 291:.\main.c      **** CY_ISR(rxInt){
 1300              		.loc 1 291 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 8
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 B0B5     		push	{r4, r5, r7, lr}
 1305              		.cfi_def_cfa_offset 16
 1306              		.cfi_offset 4, -16
 1307              		.cfi_offset 5, -12
 1308              		.cfi_offset 7, -8
 1309              		.cfi_offset 14, -4
 1310 0002 82B0     		sub	sp, sp, #8
 1311              		.cfi_def_cfa_offset 24
 1312 0004 00AF     		add	r7, sp, #0
 1313              		.cfi_def_cfa_register 7
 292:.\main.c      ****     char rf_char = UART_GetChar();
 1314              		.loc 1 292 0
 1315 0006 FFF7FEFF 		bl	UART_GetChar
 1316 000a 0346     		mov	r3, r0
 1317 000c FB71     		strb	r3, [r7, #7]
 293:.\main.c      ****     if(rf_char == SOP){
 1318              		.loc 1 293 0
 1319 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1320 0010 AA2B     		cmp	r3, #170
 1321 0012 2BD1     		bne	.L79
 294:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 295:.\main.c      ****             if(byteCount == 34)
 1322              		.loc 1 295 0
 1323 0014 224B     		ldr	r3, .L83
 1324 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0018 222B     		cmp	r3, #34
 1326 001a 20D1     		bne	.L80
 296:.\main.c      ****             {
 297:.\main.c      ****                 system_state = buffer_state;
 1327              		.loc 1 297 0
 1328 001c 214B     		ldr	r3, .L83+4
 1329 001e 224A     		ldr	r2, .L83+8
 1330 0020 1568     		ldr	r5, [r2]	@ unaligned
 1331 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1332 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1333 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1334 0028 1D60     		str	r5, [r3]	@ unaligned
 1335 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1336 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1337 002e D960     		str	r1, [r3, #12]	@ unaligned
 1338 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1339 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1340 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1341 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1342 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1343 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1344 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1345 003e D961     		str	r1, [r3, #28]	@ unaligned
 298:.\main.c      ****                 if(initial_pos_valid == 0)
 1346              		.loc 1 298 0
 1347 0040 1A4B     		ldr	r3, .L83+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 30


 1348 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1349 0044 002B     		cmp	r3, #0
 1350 0046 0AD1     		bne	.L80
 299:.\main.c      ****                 {
 300:.\main.c      ****                     LED_Write(~LED_Read());
 1351              		.loc 1 300 0
 1352 0048 FFF7FEFF 		bl	LED_Read
 1353 004c 0346     		mov	r3, r0
 1354 004e DB43     		mvns	r3, r3
 1355 0050 DBB2     		uxtb	r3, r3
 1356 0052 1846     		mov	r0, r3
 1357 0054 FFF7FEFF 		bl	LED_Write
 301:.\main.c      ****                     initial_pos_valid = 1;
 1358              		.loc 1 301 0
 1359 0058 144B     		ldr	r3, .L83+12
 1360 005a 0122     		movs	r2, #1
 1361 005c 1A70     		strb	r2, [r3]
 1362              	.L80:
 302:.\main.c      ****                 }
 303:.\main.c      ****             }
 304:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1363              		.loc 1 304 0
 1364 005e 104B     		ldr	r3, .L83
 1365 0060 0222     		movs	r2, #2
 1366 0062 1A70     		strb	r2, [r3]
 305:.\main.c      ****             flag_rx = 0;
 1367              		.loc 1 305 0
 1368 0064 124B     		ldr	r3, .L83+16
 1369 0066 0022     		movs	r2, #0
 1370 0068 1A70     		strb	r2, [r3]
 1371 006a 16E0     		b	.L78
 1372              	.L79:
 306:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 307:.\main.c      ****         }
 308:.\main.c      ****         else
 309:.\main.c      ****         {
 310:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1373              		.loc 1 310 0
 1374 006c 0C4B     		ldr	r3, .L83
 1375 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 0070 03F00103 		and	r3, r3, #1
 1377 0074 0F49     		ldr	r1, .L83+20
 1378 0076 FA79     		ldrb	r2, [r7, #7]
 1379 0078 CA54     		strb	r2, [r1, r3]
 311:.\main.c      ****            
 312:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1380              		.loc 1 312 0
 1381 007a 094B     		ldr	r3, .L83
 1382 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1383 007e 03F00103 		and	r3, r3, #1
 1384 0082 DBB2     		uxtb	r3, r3
 1385 0084 002B     		cmp	r3, #0
 1386 0086 02D0     		beq	.L82
 313:.\main.c      ****             {
 314:.\main.c      ****                 flag_rx = 1;
 1387              		.loc 1 314 0
 1388 0088 094B     		ldr	r3, .L83+16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 31


 1389 008a 0122     		movs	r2, #1
 1390 008c 1A70     		strb	r2, [r3]
 1391              	.L82:
 315:.\main.c      ****             }
 316:.\main.c      ****             byteCount = (byteCount + 1);
 1392              		.loc 1 316 0
 1393 008e 044B     		ldr	r3, .L83
 1394 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1395 0092 0133     		adds	r3, r3, #1
 1396 0094 DAB2     		uxtb	r2, r3
 1397 0096 024B     		ldr	r3, .L83
 1398 0098 1A70     		strb	r2, [r3]
 1399              	.L78:
 317:.\main.c      ****         }
 318:.\main.c      **** }
 1400              		.loc 1 318 0
 1401 009a 0837     		adds	r7, r7, #8
 1402              		.cfi_def_cfa_offset 16
 1403 009c BD46     		mov	sp, r7
 1404              		.cfi_def_cfa_register 13
 1405              		@ sp needed
 1406 009e B0BD     		pop	{r4, r5, r7, pc}
 1407              	.L84:
 1408              		.align	2
 1409              	.L83:
 1410 00a0 00000000 		.word	byteCount
 1411 00a4 00000000 		.word	system_state
 1412 00a8 00000000 		.word	buffer_state
 1413 00ac 00000000 		.word	initial_pos_valid
 1414 00b0 00000000 		.word	flag_rx
 1415 00b4 00000000 		.word	packet
 1416              		.cfi_endproc
 1417              	.LFE81:
 1418              		.size	rxInt, .-rxInt
 1419              		.global	__aeabi_i2f
 1420              		.global	__aeabi_fmul
 1421              		.global	__aeabi_f2iz
 1422              		.section	.rodata
 1423 000a 0000     		.align	2
 1424              	.LC1:
 1425 000c 74617267 		.ascii	"target quad: %d\015\012\000"
 1425      65742071 
 1425      7561643A 
 1425      2025640D 
 1425      0A00
 1426              		.section	.text.BT_rxInt,"ax",%progbits
 1427              		.align	2
 1428              		.global	BT_rxInt
 1429              		.thumb
 1430              		.thumb_func
 1431              		.type	BT_rxInt, %function
 1432              	BT_rxInt:
 1433              	.LFB82:
 319:.\main.c      **** 
 320:.\main.c      **** CY_ISR(BT_rxInt)
 321:.\main.c      **** {
 1434              		.loc 1 321 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 32


 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 24
 1437              		@ frame_needed = 1, uses_anonymous_args = 0
 1438 0000 80B5     		push	{r7, lr}
 1439              		.cfi_def_cfa_offset 8
 1440              		.cfi_offset 7, -8
 1441              		.cfi_offset 14, -4
 1442 0002 86B0     		sub	sp, sp, #24
 1443              		.cfi_def_cfa_offset 32
 1444 0004 00AF     		add	r7, sp, #0
 1445              		.cfi_def_cfa_register 7
 322:.\main.c      ****     char rf_char = UART_GetChar();
 1446              		.loc 1 322 0
 1447 0006 FFF7FEFF 		bl	UART_GetChar
 1448 000a 0346     		mov	r3, r0
 1449 000c FB75     		strb	r3, [r7, #23]
 323:.\main.c      ****     switch(rf_char){
 1450              		.loc 1 323 0
 1451 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1452 0010 613B     		subs	r3, r3, #97
 1453 0012 192B     		cmp	r3, #25
 1454 0014 00F29E80 		bhi	.L85
 1455 0018 01A2     		adr	r2, .L88
 1456 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1457 001e 00BF     		.p2align 2
 1458              	.L88:
 1459 0020 89000000 		.word	.L87+1
 1460 0024 55010000 		.word	.L85+1
 1461 0028 55010000 		.word	.L85+1
 1462 002c AD000000 		.word	.L89+1
 1463 0030 55010000 		.word	.L85+1
 1464 0034 B9000000 		.word	.L90+1
 1465 0038 55010000 		.word	.L85+1
 1466 003c 55010000 		.word	.L85+1
 1467 0040 55010000 		.word	.L85+1
 1468 0044 55010000 		.word	.L85+1
 1469 0048 55010000 		.word	.L85+1
 1470 004c 55010000 		.word	.L85+1
 1471 0050 55010000 		.word	.L85+1
 1472 0054 55010000 		.word	.L85+1
 1473 0058 55010000 		.word	.L85+1
 1474 005c 55010000 		.word	.L85+1
 1475 0060 E9000000 		.word	.L91+1
 1476 0064 3F010000 		.word	.L92+1
 1477 0068 A1000000 		.word	.L93+1
 1478 006c C5000000 		.word	.L94+1
 1479 0070 D1000000 		.word	.L95+1
 1480 0074 55010000 		.word	.L85+1
 1481 0078 95000000 		.word	.L96+1
 1482 007c 55010000 		.word	.L85+1
 1483 0080 55010000 		.word	.L85+1
 1484 0084 DD000000 		.word	.L97+1
 1485              		.p2align 1
 1486              	.L87:
 1487              	.LBB3:
 324:.\main.c      ****     case 'a':
 325:.\main.c      ****         initTurnLeft();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 33


 1488              		.loc 1 325 0
 1489 0088 FFF7FEFF 		bl	initTurnLeft
 326:.\main.c      ****         track_mode = NO_TRACK;
 1490              		.loc 1 326 0
 1491 008c 334B     		ldr	r3, .L99
 1492 008e 0022     		movs	r2, #0
 1493 0090 1A70     		strb	r2, [r3]
 327:.\main.c      ****         break;
 1494              		.loc 1 327 0
 1495 0092 5FE0     		b	.L85
 1496              	.L96:
 328:.\main.c      ****     case 'w':
 329:.\main.c      ****         initForward();
 1497              		.loc 1 329 0
 1498 0094 FFF7FEFF 		bl	initForward
 330:.\main.c      ****         track_mode = NO_TRACK;
 1499              		.loc 1 330 0
 1500 0098 304B     		ldr	r3, .L99
 1501 009a 0022     		movs	r2, #0
 1502 009c 1A70     		strb	r2, [r3]
 331:.\main.c      ****         break;
 1503              		.loc 1 331 0
 1504 009e 59E0     		b	.L85
 1505              	.L93:
 332:.\main.c      ****     case 's': 
 333:.\main.c      ****         reverseDirection();
 1506              		.loc 1 333 0
 1507 00a0 FFF7FEFF 		bl	reverseDirection
 334:.\main.c      ****         track_mode = NO_TRACK;
 1508              		.loc 1 334 0
 1509 00a4 2D4B     		ldr	r3, .L99
 1510 00a6 0022     		movs	r2, #0
 1511 00a8 1A70     		strb	r2, [r3]
 335:.\main.c      ****         break;
 1512              		.loc 1 335 0
 1513 00aa 53E0     		b	.L85
 1514              	.L89:
 336:.\main.c      ****     case 'd':
 337:.\main.c      ****         initTurnRight();
 1515              		.loc 1 337 0
 1516 00ac FFF7FEFF 		bl	initTurnRight
 338:.\main.c      ****         track_mode = NO_TRACK;
 1517              		.loc 1 338 0
 1518 00b0 2A4B     		ldr	r3, .L99
 1519 00b2 0022     		movs	r2, #0
 1520 00b4 1A70     		strb	r2, [r3]
 339:.\main.c      ****         break;
 1521              		.loc 1 339 0
 1522 00b6 4DE0     		b	.L85
 1523              	.L90:
 340:.\main.c      ****     case 'f':
 341:.\main.c      ****         initBrake();
 1524              		.loc 1 341 0
 1525 00b8 FFF7FEFF 		bl	initBrake
 342:.\main.c      ****         track_mode = NO_TRACK;
 1526              		.loc 1 342 0
 1527 00bc 274B     		ldr	r3, .L99
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 34


 1528 00be 0022     		movs	r2, #0
 1529 00c0 1A70     		strb	r2, [r3]
 343:.\main.c      ****         break;
 1530              		.loc 1 343 0
 1531 00c2 47E0     		b	.L85
 1532              	.L94:
 344:.\main.c      ****     case('t'):
 345:.\main.c      ****         track_mode = CURVE_TRACK;
 1533              		.loc 1 345 0
 1534 00c4 254B     		ldr	r3, .L99
 1535 00c6 0122     		movs	r2, #1
 1536 00c8 1A70     		strb	r2, [r3]
 346:.\main.c      ****         initTrack();
 1537              		.loc 1 346 0
 1538 00ca FFF7FEFF 		bl	initTrack
 347:.\main.c      ****         break;
 1539              		.loc 1 347 0
 1540 00ce 41E0     		b	.L85
 1541              	.L95:
 348:.\main.c      ****     case('u'):
 349:.\main.c      ****         initTrackU();
 1542              		.loc 1 349 0
 1543 00d0 FFF7FEFF 		bl	initTrackU
 350:.\main.c      ****         track_mode = U_TRACK;
 1544              		.loc 1 350 0
 1545 00d4 214B     		ldr	r3, .L99
 1546 00d6 0222     		movs	r2, #2
 1547 00d8 1A70     		strb	r2, [r3]
 351:.\main.c      ****         break;
 1548              		.loc 1 351 0
 1549 00da 3BE0     		b	.L85
 1550              	.L97:
 352:.\main.c      ****     case('z'):
 353:.\main.c      ****         track_mode = SQUARE_TRACK;
 1551              		.loc 1 353 0
 1552 00dc 1F4B     		ldr	r3, .L99
 1553 00de 0322     		movs	r2, #3
 1554 00e0 1A70     		strb	r2, [r3]
 354:.\main.c      ****         initTrack();
 1555              		.loc 1 354 0
 1556 00e2 FFF7FEFF 		bl	initTrack
 355:.\main.c      ****         break;
 1557              		.loc 1 355 0
 1558 00e6 35E0     		b	.L85
 1559              	.L91:
 356:.\main.c      ****     case('q'):
 357:.\main.c      ****         track_mode = QUAD_STOP;
 1560              		.loc 1 357 0
 1561 00e8 1C4B     		ldr	r3, .L99
 1562 00ea 0422     		movs	r2, #4
 1563 00ec 1A70     		strb	r2, [r3]
 358:.\main.c      ****         accum_dist = 0;
 1564              		.loc 1 358 0
 1565 00ee 1C4B     		ldr	r3, .L99+4
 1566 00f0 0022     		movs	r2, #0
 1567 00f2 1A80     		strh	r2, [r3]	@ movhi
 359:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 35


 1568              		.loc 1 359 0
 1569 00f4 1B4B     		ldr	r3, .L99+8
 1570 00f6 1B88     		ldrh	r3, [r3]
 1571 00f8 1BB2     		sxth	r3, r3
 1572 00fa 1846     		mov	r0, r3
 1573 00fc FFF7FEFF 		bl	__aeabi_i2f
 1574 0100 0246     		mov	r2, r0
 1575 0102 194B     		ldr	r3, .L99+12
 1576 0104 1B68     		ldr	r3, [r3]	@ float
 1577 0106 1046     		mov	r0, r2
 1578 0108 1946     		mov	r1, r3
 1579 010a FFF7FEFF 		bl	__aeabi_fmul
 1580 010e 0346     		mov	r3, r0
 1581 0110 1846     		mov	r0, r3
 1582 0112 FFF7FEFF 		bl	__aeabi_f2iz
 1583 0116 0346     		mov	r3, r0
 1584 0118 9AB2     		uxth	r2, r3
 1585 011a 144B     		ldr	r3, .L99+16
 1586 011c 1A80     		strh	r2, [r3]	@ movhi
 360:.\main.c      ****         char mes[16];
 361:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 1587              		.loc 1 361 0
 1588 011e 134B     		ldr	r3, .L99+16
 1589 0120 1B88     		ldrh	r3, [r3]
 1590 0122 1BB2     		sxth	r3, r3
 1591 0124 3A1D     		adds	r2, r7, #4
 1592 0126 1046     		mov	r0, r2
 1593 0128 1149     		ldr	r1, .L99+20
 1594 012a 1A46     		mov	r2, r3
 1595 012c FFF7FEFF 		bl	sprintf
 362:.\main.c      ****         UART_PutString(mes);
 1596              		.loc 1 362 0
 1597 0130 3B1D     		adds	r3, r7, #4
 1598 0132 1846     		mov	r0, r3
 1599 0134 FFF7FEFF 		bl	UART_PutString
 363:.\main.c      ****         initForward();
 1600              		.loc 1 363 0
 1601 0138 FFF7FEFF 		bl	initForward
 364:.\main.c      ****         break;
 1602              		.loc 1 364 0
 1603 013c 0AE0     		b	.L85
 1604              	.L92:
 365:.\main.c      ****     case ('r'):
 366:.\main.c      ****         track_mode = RF_STOP;
 1605              		.loc 1 366 0
 1606 013e 074B     		ldr	r3, .L99
 1607 0140 0522     		movs	r2, #5
 1608 0142 1A70     		strb	r2, [r3]
 367:.\main.c      ****         changeToRF();
 1609              		.loc 1 367 0
 1610 0144 FFF7FEFF 		bl	changeToRF
 368:.\main.c      ****         // Make initial position
 369:.\main.c      ****         initial_pos_valid = 0;
 1611              		.loc 1 369 0
 1612 0148 0A4B     		ldr	r3, .L99+24
 1613 014a 0022     		movs	r2, #0
 1614 014c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 36


 370:.\main.c      ****         initBrake();
 1615              		.loc 1 370 0
 1616 014e FFF7FEFF 		bl	initBrake
 371:.\main.c      ****         break;
 1617              		.loc 1 371 0
 1618 0152 00BF     		nop
 1619              	.L85:
 1620              	.LBE3:
 372:.\main.c      ****     }
 373:.\main.c      **** }
 1621              		.loc 1 373 0
 1622 0154 1837     		adds	r7, r7, #24
 1623              		.cfi_def_cfa_offset 8
 1624 0156 BD46     		mov	sp, r7
 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 0158 80BD     		pop	{r7, pc}
 1628              	.L100:
 1629 015a 00BF     		.align	2
 1630              	.L99:
 1631 015c 00000000 		.word	track_mode
 1632 0160 00000000 		.word	accum_dist
 1633 0164 00000000 		.word	target_distance_cm
 1634 0168 00000000 		.word	quad_per_cm
 1635 016c 00000000 		.word	target_distance_quad
 1636 0170 0C000000 		.word	.LC1
 1637 0174 00000000 		.word	initial_pos_valid
 1638              		.cfi_endproc
 1639              	.LFE82:
 1640              		.size	BT_rxInt, .-BT_rxInt
 1641              		.section	.text.BT_txInt,"ax",%progbits
 1642              		.align	2
 1643              		.global	BT_txInt
 1644              		.thumb
 1645              		.thumb_func
 1646              		.type	BT_txInt, %function
 1647              	BT_txInt:
 1648              	.LFB83:
 374:.\main.c      **** 
 375:.\main.c      **** //BT
 376:.\main.c      **** CY_ISR(BT_txInt)
 377:.\main.c      **** {
 1649              		.loc 1 377 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 0
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653              		@ link register save eliminated.
 1654 0000 80B4     		push	{r7}
 1655              		.cfi_def_cfa_offset 4
 1656              		.cfi_offset 7, -4
 1657 0002 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 378:.\main.c      ****     
 379:.\main.c      **** }
 1659              		.loc 1 379 0
 1660 0004 BD46     		mov	sp, r7
 1661              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 37


 1662              		@ sp needed
 1663 0006 5DF8047B 		ldr	r7, [sp], #4
 1664              		.cfi_restore 7
 1665              		.cfi_def_cfa_offset 0
 1666 000a 7047     		bx	lr
 1667              		.cfi_endproc
 1668              	.LFE83:
 1669              		.size	BT_txInt, .-BT_txInt
 1670              		.section	.text.adc_isr,"ax",%progbits
 1671              		.align	2
 1672              		.global	adc_isr
 1673              		.thumb
 1674              		.thumb_func
 1675              		.type	adc_isr, %function
 1676              	adc_isr:
 1677              	.LFB84:
 380:.\main.c      **** 
 381:.\main.c      **** //ADC:
 382:.\main.c      **** CY_ISR (adc_isr)
 383:.\main.c      **** {
 1678              		.loc 1 383 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 0
 1681              		@ frame_needed = 1, uses_anonymous_args = 0
 1682 0000 80B5     		push	{r7, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 7, -8
 1685              		.cfi_offset 14, -4
 1686 0002 00AF     		add	r7, sp, #0
 1687              		.cfi_def_cfa_register 7
 384:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 385:.\main.c      ****     adc_result = ADC_GetResult16();
 1688              		.loc 1 385 0
 1689 0004 FFF7FEFF 		bl	ADC_GetResult16
 1690 0008 0346     		mov	r3, r0
 1691 000a 1A46     		mov	r2, r3
 1692 000c 044B     		ldr	r3, .L103
 1693 000e 1A80     		strh	r2, [r3]	@ movhi
 386:.\main.c      ****     flag_receive_ADC = 1;
 1694              		.loc 1 386 0
 1695 0010 044B     		ldr	r3, .L103+4
 1696 0012 0122     		movs	r2, #1
 1697 0014 1A70     		strb	r2, [r3]
 387:.\main.c      ****     flag_print_rf = 1;
 1698              		.loc 1 387 0
 1699 0016 044B     		ldr	r3, .L103+8
 1700 0018 0122     		movs	r2, #1
 1701 001a 1A70     		strb	r2, [r3]
 388:.\main.c      ****     //LED_Write(~LED_Read());
 389:.\main.c      **** }
 1702              		.loc 1 389 0
 1703 001c 80BD     		pop	{r7, pc}
 1704              	.L104:
 1705 001e 00BF     		.align	2
 1706              	.L103:
 1707 0020 00000000 		.word	adc_result
 1708 0024 00000000 		.word	flag_receive_ADC
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 38


 1709 0028 00000000 		.word	flag_print_rf
 1710              		.cfi_endproc
 1711              	.LFE84:
 1712              		.size	adc_isr, .-adc_isr
 1713              		.section	.rodata
 1714 001e 0000     		.align	2
 1715              	.LC2:
 1716 0020 64697374 		.ascii	"dist: %d\015\012\000"
 1716      3A202564 
 1716      0D0A00
 1717              		.global	__aeabi_i2d
 1718              		.global	__aeabi_ddiv
 1719              		.global	__aeabi_dcmple
 1720              		.section	.text.isr_quad1,"ax",%progbits
 1721              		.align	2
 1722              		.global	isr_quad1
 1723              		.thumb
 1724              		.thumb_func
 1725              		.type	isr_quad1, %function
 1726              	isr_quad1:
 1727              	.LFB85:
 390:.\main.c      **** 
 391:.\main.c      **** CY_ISR (isr_quad1)
 392:.\main.c      **** {
 1728              		.loc 1 392 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 24
 1731              		@ frame_needed = 1, uses_anonymous_args = 0
 1732 0000 B0B5     		push	{r4, r5, r7, lr}
 1733              		.cfi_def_cfa_offset 16
 1734              		.cfi_offset 4, -16
 1735              		.cfi_offset 5, -12
 1736              		.cfi_offset 7, -8
 1737              		.cfi_offset 14, -4
 1738 0002 86B0     		sub	sp, sp, #24
 1739              		.cfi_def_cfa_offset 40
 1740 0004 00AF     		add	r7, sp, #0
 1741              		.cfi_def_cfa_register 7
 393:.\main.c      ****     //LED_Write(~LED_Read());
 394:.\main.c      ****     last_quad_count1 = quad_count1;
 1742              		.loc 1 394 0
 1743 0006 6A4B     		ldr	r3, .L112+16
 1744 0008 1A88     		ldrh	r2, [r3]
 1745 000a 6A4B     		ldr	r3, .L112+20
 1746 000c 1A80     		strh	r2, [r3]	@ movhi
 395:.\main.c      ****     last_quad_count2 = quad_count2;
 1747              		.loc 1 395 0
 1748 000e 6A4B     		ldr	r3, .L112+24
 1749 0010 1A88     		ldrh	r2, [r3]
 1750 0012 6A4B     		ldr	r3, .L112+28
 1751 0014 1A80     		strh	r2, [r3]	@ movhi
 396:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1752              		.loc 1 396 0
 1753 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1754 001a 0346     		mov	r3, r0
 1755 001c 1A46     		mov	r2, r3
 1756 001e 644B     		ldr	r3, .L112+16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 39


 1757 0020 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1758              		.loc 1 397 0
 1759 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1760 0026 0346     		mov	r3, r0
 1761 0028 1A46     		mov	r2, r3
 1762 002a 634B     		ldr	r3, .L112+24
 1763 002c 1A80     		strh	r2, [r3]	@ movhi
 398:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1764              		.loc 1 398 0
 1765 002e 604B     		ldr	r3, .L112+16
 1766 0030 1B88     		ldrh	r3, [r3]
 1767 0032 9AB2     		uxth	r2, r3
 1768 0034 5F4B     		ldr	r3, .L112+20
 1769 0036 1B88     		ldrh	r3, [r3]
 1770 0038 9BB2     		uxth	r3, r3
 1771 003a D31A     		subs	r3, r2, r3
 1772 003c 9BB2     		uxth	r3, r3
 1773 003e 9AB2     		uxth	r2, r3
 1774 0040 5F4B     		ldr	r3, .L112+32
 1775 0042 1A80     		strh	r2, [r3]	@ movhi
 399:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1776              		.loc 1 399 0
 1777 0044 5C4B     		ldr	r3, .L112+24
 1778 0046 1B88     		ldrh	r3, [r3]
 1779 0048 9AB2     		uxth	r2, r3
 1780 004a 5C4B     		ldr	r3, .L112+28
 1781 004c 1B88     		ldrh	r3, [r3]
 1782 004e 9BB2     		uxth	r3, r3
 1783 0050 D31A     		subs	r3, r2, r3
 1784 0052 9BB2     		uxth	r3, r3
 1785 0054 9AB2     		uxth	r2, r3
 1786 0056 5B4B     		ldr	r3, .L112+36
 1787 0058 1A80     		strh	r2, [r3]	@ movhi
 400:.\main.c      ****     
 401:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 1788              		.loc 1 401 0
 1789 005a 554B     		ldr	r3, .L112+16
 1790 005c 1B88     		ldrh	r3, [r3]
 1791 005e 1BB2     		sxth	r3, r3
 1792 0060 002B     		cmp	r3, #0
 1793 0062 B8BF     		it	lt
 1794 0064 5B42     		rsblt	r3, r3, #0
 1795 0066 40F6B832 		movw	r2, #3000
 1796 006a 9342     		cmp	r3, r2
 1797 006c 17DD     		ble	.L106
 1798              		.loc 1 401 0 is_stmt 0 discriminator 1
 1799 006e 564B     		ldr	r3, .L112+40
 1800 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 0072 012B     		cmp	r3, #1
 1802 0074 13D0     		beq	.L106
 1803              		.loc 1 401 0 discriminator 2
 1804 0076 544B     		ldr	r3, .L112+40
 1805 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1806 007a 022B     		cmp	r3, #2
 1807 007c 0FD0     		beq	.L106
 1808              		.loc 1 401 0 discriminator 3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 40


 1809 007e 524B     		ldr	r3, .L112+40
 1810 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 0082 042B     		cmp	r3, #4
 1812 0084 0BD0     		beq	.L106
 402:.\main.c      ****     {
 403:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1813              		.loc 1 403 0 is_stmt 1
 1814 0086 0020     		movs	r0, #0
 1815 0088 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 404:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1816              		.loc 1 404 0
 1817 008c 0020     		movs	r0, #0
 1818 008e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 405:.\main.c      ****         quad_count1 = 0;
 1819              		.loc 1 405 0
 1820 0092 474B     		ldr	r3, .L112+16
 1821 0094 0022     		movs	r2, #0
 1822 0096 1A80     		strh	r2, [r3]	@ movhi
 406:.\main.c      ****         quad_count2 = 0;
 1823              		.loc 1 406 0
 1824 0098 474B     		ldr	r3, .L112+24
 1825 009a 0022     		movs	r2, #0
 1826 009c 1A80     		strh	r2, [r3]	@ movhi
 1827              	.L106:
 407:.\main.c      ****     }
 408:.\main.c      **** 
 409:.\main.c      ****     flag_calc_wheelspeed = 1;
 1828              		.loc 1 409 0
 1829 009e 4B4B     		ldr	r3, .L112+44
 1830 00a0 0122     		movs	r2, #1
 1831 00a2 1A70     		strb	r2, [r3]
 410:.\main.c      ****     
 411:.\main.c      ****     if (track_mode == QUAD_STOP)
 1832              		.loc 1 411 0
 1833 00a4 4A4B     		ldr	r3, .L112+48
 1834 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 00a8 042B     		cmp	r3, #4
 1836 00aa 2AD1     		bne	.L107
 1837              	.LBB4:
 412:.\main.c      ****     {
 413:.\main.c      ****         accum_dist += quad_diff1;
 1838              		.loc 1 413 0
 1839 00ac 494B     		ldr	r3, .L112+52
 1840 00ae 1B88     		ldrh	r3, [r3]
 1841 00b0 9AB2     		uxth	r2, r3
 1842 00b2 434B     		ldr	r3, .L112+32
 1843 00b4 1B88     		ldrh	r3, [r3]
 1844 00b6 9BB2     		uxth	r3, r3
 1845 00b8 1344     		add	r3, r3, r2
 1846 00ba 9BB2     		uxth	r3, r3
 1847 00bc 9AB2     		uxth	r2, r3
 1848 00be 454B     		ldr	r3, .L112+52
 1849 00c0 1A80     		strh	r2, [r3]	@ movhi
 414:.\main.c      ****         char mes[16];
 415:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 1850              		.loc 1 415 0
 1851 00c2 444B     		ldr	r3, .L112+52
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 41


 1852 00c4 1B88     		ldrh	r3, [r3]
 1853 00c6 1BB2     		sxth	r3, r3
 1854 00c8 3A46     		mov	r2, r7
 1855 00ca 1046     		mov	r0, r2
 1856 00cc 4249     		ldr	r1, .L112+56
 1857 00ce 1A46     		mov	r2, r3
 1858 00d0 FFF7FEFF 		bl	sprintf
 416:.\main.c      ****         UART_PutString(mes);
 1859              		.loc 1 416 0
 1860 00d4 3B46     		mov	r3, r7
 1861 00d6 1846     		mov	r0, r3
 1862 00d8 FFF7FEFF 		bl	UART_PutString
 417:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 1863              		.loc 1 417 0
 1864 00dc 3D4B     		ldr	r3, .L112+52
 1865 00de 1B88     		ldrh	r3, [r3]
 1866 00e0 1BB2     		sxth	r3, r3
 1867 00e2 83EAE372 		eor	r2, r3, r3, asr #31
 1868 00e6 A2EBE372 		sub	r2, r2, r3, asr #31
 1869 00ea 3C4B     		ldr	r3, .L112+60
 1870 00ec 1B88     		ldrh	r3, [r3]
 1871 00ee 1BB2     		sxth	r3, r3
 1872 00f0 9A42     		cmp	r2, r3
 1873 00f2 05DB     		blt	.L108
 418:.\main.c      ****         {
 419:.\main.c      ****             initBrake();
 1874              		.loc 1 419 0
 1875 00f4 FFF7FEFF 		bl	initBrake
 420:.\main.c      ****             track_mode = NO_TRACK;
 1876              		.loc 1 420 0
 1877 00f8 354B     		ldr	r3, .L112+48
 1878 00fa 0022     		movs	r2, #0
 1879 00fc 1A70     		strb	r2, [r3]
 1880              	.LBE4:
 1881 00fe 4CE0     		b	.L105
 1882              	.L108:
 1883 0100 4BE0     		b	.L105
 1884              	.L107:
 421:.\main.c      ****         }
 422:.\main.c      ****     } else if (track_mode == RF_STOP)
 1885              		.loc 1 422 0
 1886 0102 334B     		ldr	r3, .L112+48
 1887 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1888 0106 052B     		cmp	r3, #5
 1889 0108 47D1     		bne	.L105
 1890              	.LBB5:
 423:.\main.c      ****     { 
 424:.\main.c      ****         // Do pythag
 425:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 1891              		.loc 1 425 0
 1892 010a 354B     		ldr	r3, .L112+64
 1893 010c 5B88     		ldrh	r3, [r3, #2]
 1894 010e 1AB2     		sxth	r2, r3
 1895 0110 344B     		ldr	r3, .L112+68
 1896 0112 1B88     		ldrh	r3, [r3]
 1897 0114 1BB2     		sxth	r3, r3
 1898 0116 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 42


 1899 0118 1846     		mov	r0, r3
 1900 011a FFF7FEFF 		bl	__aeabi_i2d
 1901 011e 0246     		mov	r2, r0
 1902 0120 0B46     		mov	r3, r1
 1903 0122 1046     		mov	r0, r2
 1904 0124 1946     		mov	r1, r3
 1905 0126 1EA3     		adr	r3, .L112
 1906 0128 D3E90023 		ldrd	r2, [r3]
 1907 012c FFF7FEFF 		bl	__aeabi_ddiv
 1908 0130 0246     		mov	r2, r0
 1909 0132 0B46     		mov	r3, r1
 1910 0134 1446     		mov	r4, r2
 1911 0136 1D46     		mov	r5, r3
 1912 0138 294B     		ldr	r3, .L112+64
 1913 013a 9B88     		ldrh	r3, [r3, #4]
 1914 013c 1AB2     		sxth	r2, r3
 1915 013e 2A4B     		ldr	r3, .L112+72
 1916 0140 1B88     		ldrh	r3, [r3]
 1917 0142 1BB2     		sxth	r3, r3
 1918 0144 D31A     		subs	r3, r2, r3
 1919 0146 1846     		mov	r0, r3
 1920 0148 FFF7FEFF 		bl	__aeabi_i2d
 1921 014c 0246     		mov	r2, r0
 1922 014e 0B46     		mov	r3, r1
 1923 0150 1046     		mov	r0, r2
 1924 0152 1946     		mov	r1, r3
 1925 0154 14A3     		adr	r3, .L112+8
 1926 0156 D3E90023 		ldrd	r2, [r3]
 1927 015a FFF7FEFF 		bl	__aeabi_ddiv
 1928 015e 0246     		mov	r2, r0
 1929 0160 0B46     		mov	r3, r1
 1930 0162 2046     		mov	r0, r4
 1931 0164 2946     		mov	r1, r5
 1932 0166 FFF7FEFF 		bl	hypot
 1933 016a C7E90401 		strd	r0, [r7, #16]
 426:.\main.c      ****         if (dist >= target_distance_cm)
 1934              		.loc 1 426 0
 1935 016e 1F4B     		ldr	r3, .L112+76
 1936 0170 1B88     		ldrh	r3, [r3]
 1937 0172 1BB2     		sxth	r3, r3
 1938 0174 1846     		mov	r0, r3
 1939 0176 FFF7FEFF 		bl	__aeabi_i2d
 1940 017a 0246     		mov	r2, r0
 1941 017c 0B46     		mov	r3, r1
 1942 017e 1046     		mov	r0, r2
 1943 0180 1946     		mov	r1, r3
 1944 0182 D7E90423 		ldrd	r2, [r7, #16]
 1945 0186 FFF7FEFF 		bl	__aeabi_dcmple
 1946 018a 0346     		mov	r3, r0
 1947 018c 002B     		cmp	r3, #0
 1948 018e 04D0     		beq	.L105
 427:.\main.c      ****         {
 428:.\main.c      ****             initBrake();
 1949              		.loc 1 428 0
 1950 0190 FFF7FEFF 		bl	initBrake
 429:.\main.c      ****             track_mode = NO_TRACK;
 1951              		.loc 1 429 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 43


 1952 0194 0E4B     		ldr	r3, .L112+48
 1953 0196 0022     		movs	r2, #0
 1954 0198 1A70     		strb	r2, [r3]
 1955              	.L105:
 1956              	.LBE5:
 430:.\main.c      ****         }
 431:.\main.c      ****     }
 432:.\main.c      ****     
 433:.\main.c      **** }
 1957              		.loc 1 433 0
 1958 019a 1837     		adds	r7, r7, #24
 1959              		.cfi_def_cfa_offset 16
 1960 019c BD46     		mov	sp, r7
 1961              		.cfi_def_cfa_register 13
 1962              		@ sp needed
 1963 019e B0BD     		pop	{r4, r5, r7, pc}
 1964              	.L113:
 1965              		.align	3
 1966              	.L112:
 1967 01a0 711B0DE0 		.word	-536011919
 1968 01a4 2DF01140 		.word	1074917421
 1969 01a8 9C6D6E4C 		.word	1282305436
 1970 01ac 4F181740 		.word	1075255375
 1971 01b0 00000000 		.word	quad_count1
 1972 01b4 00000000 		.word	last_quad_count1
 1973 01b8 00000000 		.word	quad_count2
 1974 01bc 00000000 		.word	last_quad_count2
 1975 01c0 00000000 		.word	quad_diff1
 1976 01c4 00000000 		.word	quad_diff2
 1977 01c8 00000000 		.word	movement_state
 1978 01cc 00000000 		.word	flag_calc_wheelspeed
 1979 01d0 00000000 		.word	track_mode
 1980 01d4 00000000 		.word	accum_dist
 1981 01d8 20000000 		.word	.LC2
 1982 01dc 00000000 		.word	target_distance_quad
 1983 01e0 00000000 		.word	system_state
 1984 01e4 00000000 		.word	initial_x_pos
 1985 01e8 00000000 		.word	initial_y_pos
 1986 01ec 00000000 		.word	target_distance_cm
 1987              		.cfi_endproc
 1988              	.LFE85:
 1989              		.size	isr_quad1, .-isr_quad1
 1990              		.section	.text.isr_turn_timer,"ax",%progbits
 1991              		.align	2
 1992              		.global	isr_turn_timer
 1993              		.thumb
 1994              		.thumb_func
 1995              		.type	isr_turn_timer, %function
 1996              	isr_turn_timer:
 1997              	.LFB86:
 434:.\main.c      **** 
 435:.\main.c      **** CY_ISR(isr_turn_timer)
 436:.\main.c      **** {
 1998              		.loc 1 436 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 44


 2002 0000 80B5     		push	{r7, lr}
 2003              		.cfi_def_cfa_offset 8
 2004              		.cfi_offset 7, -8
 2005              		.cfi_offset 14, -4
 2006 0002 00AF     		add	r7, sp, #0
 2007              		.cfi_def_cfa_register 7
 437:.\main.c      ****     if(movement_state == LTURN)
 2008              		.loc 1 437 0
 2009 0004 194B     		ldr	r3, .L118
 2010 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2011 0008 012B     		cmp	r3, #1
 2012 000a 15D1     		bne	.L115
 438:.\main.c      ****     {
 439:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 2013              		.loc 1 439 0
 2014 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2015 0010 0346     		mov	r3, r0
 2016 0012 1A46     		mov	r2, r3
 2017 0014 164B     		ldr	r3, .L118+4
 2018 0016 1B88     		ldrh	r3, [r3]
 2019 0018 1BB2     		sxth	r3, r3
 2020 001a D31A     		subs	r3, r2, r3
 2021 001c 002B     		cmp	r3, #0
 2022 001e B8BF     		it	lt
 2023 0020 5B42     		rsblt	r3, r3, #0
 2024 0022 CF2B     		cmp	r3, #207
 2025 0024 21DD     		ble	.L114
 440:.\main.c      ****         {
 441:.\main.c      ****             //movement_state = STOPPED;
 442:.\main.c      ****             brakeMotor();
 2026              		.loc 1 442 0
 2027 0026 FFF7FEFF 		bl	brakeMotor
 443:.\main.c      ****             movement_state = prev_movement_state;
 2028              		.loc 1 443 0
 2029 002a 124B     		ldr	r3, .L118+8
 2030 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2031 002e 0F4B     		ldr	r3, .L118
 2032 0030 1A70     		strb	r2, [r3]
 444:.\main.c      ****             Timer_2_Stop();
 2033              		.loc 1 444 0
 2034 0032 FFF7FEFF 		bl	Timer_2_Stop
 2035 0036 18E0     		b	.L114
 2036              	.L115:
 445:.\main.c      ****         }
 446:.\main.c      ****     }
 447:.\main.c      ****     else if (movement_state == RTURN)
 2037              		.loc 1 447 0
 2038 0038 0C4B     		ldr	r3, .L118
 2039 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2040 003c 022B     		cmp	r3, #2
 2041 003e 14D1     		bne	.L114
 448:.\main.c      ****     {
 449:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2042              		.loc 1 449 0
 2043 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2044 0044 0346     		mov	r3, r0
 2045 0046 1A46     		mov	r2, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 45


 2046 0048 094B     		ldr	r3, .L118+4
 2047 004a 1B88     		ldrh	r3, [r3]
 2048 004c 1BB2     		sxth	r3, r3
 2049 004e D31A     		subs	r3, r2, r3
 2050 0050 002B     		cmp	r3, #0
 2051 0052 B8BF     		it	lt
 2052 0054 5B42     		rsblt	r3, r3, #0
 2053 0056 CF2B     		cmp	r3, #207
 2054 0058 07DD     		ble	.L114
 450:.\main.c      ****         {
 451:.\main.c      ****             //movement_state = STOPPED;
 452:.\main.c      ****             brakeMotor();
 2055              		.loc 1 452 0
 2056 005a FFF7FEFF 		bl	brakeMotor
 453:.\main.c      ****             movement_state = prev_movement_state;
 2057              		.loc 1 453 0
 2058 005e 054B     		ldr	r3, .L118+8
 2059 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2060 0062 024B     		ldr	r3, .L118
 2061 0064 1A70     		strb	r2, [r3]
 454:.\main.c      ****             Timer_2_Stop();
 2062              		.loc 1 454 0
 2063 0066 FFF7FEFF 		bl	Timer_2_Stop
 2064              	.L114:
 455:.\main.c      ****         }
 456:.\main.c      ****     }
 457:.\main.c      **** }
 2065              		.loc 1 457 0
 2066 006a 80BD     		pop	{r7, pc}
 2067              	.L119:
 2068              		.align	2
 2069              	.L118:
 2070 006c 00000000 		.word	movement_state
 2071 0070 00000000 		.word	start_turn_count
 2072 0074 00000000 		.word	prev_movement_state
 2073              		.cfi_endproc
 2074              	.LFE86:
 2075              		.size	isr_turn_timer, .-isr_turn_timer
 2076              		.section	.text.Stop_on_line,"ax",%progbits
 2077              		.align	2
 2078              		.global	Stop_on_line
 2079              		.thumb
 2080              		.thumb_func
 2081              		.type	Stop_on_line, %function
 2082              	Stop_on_line:
 2083              	.LFB87:
 458:.\main.c      **** 
 459:.\main.c      **** 
 460:.\main.c      **** CY_ISR (Stop_on_line)
 461:.\main.c      **** {
 2084              		.loc 1 461 0
 2085              		.cfi_startproc
 2086              		@ args = 0, pretend = 0, frame = 0
 2087              		@ frame_needed = 1, uses_anonymous_args = 0
 2088              		@ link register save eliminated.
 2089 0000 80B4     		push	{r7}
 2090              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 46


 2091              		.cfi_offset 7, -4
 2092 0002 00AF     		add	r7, sp, #0
 2093              		.cfi_def_cfa_register 7
 462:.\main.c      ****     movement_state = STOPPED;
 2094              		.loc 1 462 0
 2095 0004 054B     		ldr	r3, .L122
 2096 0006 0322     		movs	r2, #3
 2097 0008 1A70     		strb	r2, [r3]
 463:.\main.c      ****     if(movement_state != DRIVE) return;
 2098              		.loc 1 463 0
 2099 000a 044B     		ldr	r3, .L122
 2100 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2101 000e 002B     		cmp	r3, #0
 2102 0010 00D0     		beq	.L120
 2103 0012 00BF     		nop
 2104              	.L120:
 464:.\main.c      ****     //initTurnLeft();
 465:.\main.c      **** }
 2105              		.loc 1 465 0
 2106 0014 BD46     		mov	sp, r7
 2107              		.cfi_def_cfa_register 13
 2108              		@ sp needed
 2109 0016 5DF8047B 		ldr	r7, [sp], #4
 2110              		.cfi_restore 7
 2111              		.cfi_def_cfa_offset 0
 2112 001a 7047     		bx	lr
 2113              	.L123:
 2114              		.align	2
 2115              	.L122:
 2116 001c 00000000 		.word	movement_state
 2117              		.cfi_endproc
 2118              	.LFE87:
 2119              		.size	Stop_on_line, .-Stop_on_line
 2120              		.section	.rodata
 2121 002b 00       		.align	2
 2122              	.LC3:
 2123 002c 53746172 		.ascii	"Starting robot!\015\012\000"
 2123      74696E67 
 2123      20726F62 
 2123      6F74210D 
 2123      0A00
 2124              		.section	.text.button,"ax",%progbits
 2125              		.align	2
 2126              		.global	button
 2127              		.thumb
 2128              		.thumb_func
 2129              		.type	button, %function
 2130              	button:
 2131              	.LFB88:
 466:.\main.c      **** 
 467:.\main.c      **** CY_ISR (button)
 468:.\main.c      **** {
 2132              		.loc 1 468 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 1, uses_anonymous_args = 0
 2136 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 47


 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 7, -8
 2139              		.cfi_offset 14, -4
 2140 0002 00AF     		add	r7, sp, #0
 2141              		.cfi_def_cfa_register 7
 469:.\main.c      ****     if(BT_ENABLED)
 2142              		.loc 1 469 0
 2143 0004 054B     		ldr	r3, .L126
 2144 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2145 0008 002B     		cmp	r3, #0
 2146 000a 02D0     		beq	.L125
 470:.\main.c      ****     {
 471:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 2147              		.loc 1 471 0
 2148 000c 0448     		ldr	r0, .L126+4
 2149 000e FFF7FEFF 		bl	UART_PutString
 2150              	.L125:
 472:.\main.c      ****     }
 473:.\main.c      ****     movement_state = DRIVE;
 2151              		.loc 1 473 0
 2152 0012 044B     		ldr	r3, .L126+8
 2153 0014 0022     		movs	r2, #0
 2154 0016 1A70     		strb	r2, [r3]
 474:.\main.c      **** }
 2155              		.loc 1 474 0
 2156 0018 80BD     		pop	{r7, pc}
 2157              	.L127:
 2158 001a 00BF     		.align	2
 2159              	.L126:
 2160 001c 00000000 		.word	BT_ENABLED
 2161 0020 2C000000 		.word	.LC3
 2162 0024 00000000 		.word	movement_state
 2163              		.cfi_endproc
 2164              	.LFE88:
 2165              		.size	button, .-button
 2166              		.section	.text.isr_adcTimer,"ax",%progbits
 2167              		.align	2
 2168              		.global	isr_adcTimer
 2169              		.thumb
 2170              		.thumb_func
 2171              		.type	isr_adcTimer, %function
 2172              	isr_adcTimer:
 2173              	.LFB89:
 475:.\main.c      **** 
 476:.\main.c      **** CY_ISR(isr_adcTimer)
 477:.\main.c      **** {
 2174              		.loc 1 477 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 1, uses_anonymous_args = 0
 2178 0000 80B5     		push	{r7, lr}
 2179              		.cfi_def_cfa_offset 8
 2180              		.cfi_offset 7, -8
 2181              		.cfi_offset 14, -4
 2182 0002 00AF     		add	r7, sp, #0
 2183              		.cfi_def_cfa_register 7
 478:.\main.c      ****     ADC_StartConvert();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 48


 2184              		.loc 1 478 0
 2185 0004 FFF7FEFF 		bl	ADC_StartConvert
 479:.\main.c      **** }
 2186              		.loc 1 479 0
 2187 0008 80BD     		pop	{r7, pc}
 2188              		.cfi_endproc
 2189              	.LFE89:
 2190              		.size	isr_adcTimer, .-isr_adcTimer
 2191 000a 00BF     		.section	.text.changeToRF,"ax",%progbits
 2192              		.align	2
 2193              		.global	changeToRF
 2194              		.thumb
 2195              		.thumb_func
 2196              		.type	changeToRF, %function
 2197              	changeToRF:
 2198              	.LFB90:
 480:.\main.c      **** 
 481:.\main.c      **** 
 482:.\main.c      **** void changeToRF()
 483:.\main.c      **** {
 2199              		.loc 1 483 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 1, uses_anonymous_args = 0
 2203 0000 80B5     		push	{r7, lr}
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 7, -8
 2206              		.cfi_offset 14, -4
 2207 0002 00AF     		add	r7, sp, #0
 2208              		.cfi_def_cfa_register 7
 484:.\main.c      ****         //disable BT
 485:.\main.c      ****         BT_ENABLED = 0;
 2209              		.loc 1 485 0
 2210 0004 0B4B     		ldr	r3, .L130
 2211 0006 0022     		movs	r2, #0
 2212 0008 1A70     		strb	r2, [r3]
 486:.\main.c      ****         isrRF_RX_Stop();
 2213              		.loc 1 486 0
 2214 000a FFF7FEFF 		bl	isrRF_RX_Stop
 487:.\main.c      ****         UART_Stop();
 2215              		.loc 1 487 0
 2216 000e FFF7FEFF 		bl	UART_Stop
 488:.\main.c      ****         
 489:.\main.c      ****         //enable RF
 490:.\main.c      ****         BIN_ENABLED = 1;
 2217              		.loc 1 490 0
 2218 0012 094B     		ldr	r3, .L130+4
 2219 0014 0122     		movs	r2, #1
 2220 0016 1A70     		strb	r2, [r3]
 491:.\main.c      ****         UART_clk_SetDividerValue(130);
 2221              		.loc 1 491 0
 2222 0018 8120     		movs	r0, #129
 2223 001a 0121     		movs	r1, #1
 2224 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 492:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 2225              		.loc 1 492 0
 2226 0020 0648     		ldr	r0, .L130+8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 49


 2227 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 493:.\main.c      ****         UART_Start();
 2228              		.loc 1 493 0
 2229 0026 FFF7FEFF 		bl	UART_Start
 494:.\main.c      ****         RF_BT_SELECT_Write(0);
 2230              		.loc 1 494 0
 2231 002a 0020     		movs	r0, #0
 2232 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 495:.\main.c      **** }
 2233              		.loc 1 495 0
 2234 0030 80BD     		pop	{r7, pc}
 2235              	.L131:
 2236 0032 00BF     		.align	2
 2237              	.L130:
 2238 0034 00000000 		.word	BT_ENABLED
 2239 0038 00000000 		.word	BIN_ENABLED
 2240 003c 00000000 		.word	rxInt
 2241              		.cfi_endproc
 2242              	.LFE90:
 2243              		.size	changeToRF, .-changeToRF
 2244              		.section	.text.changeToBT,"ax",%progbits
 2245              		.align	2
 2246              		.global	changeToBT
 2247              		.thumb
 2248              		.thumb_func
 2249              		.type	changeToBT, %function
 2250              	changeToBT:
 2251              	.LFB91:
 496:.\main.c      **** 
 497:.\main.c      **** void changeToBT()
 498:.\main.c      **** {
 2252              		.loc 1 498 0
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 0
 2255              		@ frame_needed = 1, uses_anonymous_args = 0
 2256 0000 80B5     		push	{r7, lr}
 2257              		.cfi_def_cfa_offset 8
 2258              		.cfi_offset 7, -8
 2259              		.cfi_offset 14, -4
 2260 0002 00AF     		add	r7, sp, #0
 2261              		.cfi_def_cfa_register 7
 499:.\main.c      ****         //disable RF
 500:.\main.c      ****         BIN_ENABLED = 0;
 2262              		.loc 1 500 0
 2263 0004 0B4B     		ldr	r3, .L133
 2264 0006 0022     		movs	r2, #0
 2265 0008 1A70     		strb	r2, [r3]
 501:.\main.c      ****         isrRF_RX_Stop();
 2266              		.loc 1 501 0
 2267 000a FFF7FEFF 		bl	isrRF_RX_Stop
 502:.\main.c      ****         UART_Stop();
 2268              		.loc 1 502 0
 2269 000e FFF7FEFF 		bl	UART_Stop
 503:.\main.c      ****         
 504:.\main.c      ****         //enable BT
 505:.\main.c      ****         BT_ENABLED = 1;
 2270              		.loc 1 505 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 50


 2271 0012 094B     		ldr	r3, .L133+4
 2272 0014 0122     		movs	r2, #1
 2273 0016 1A70     		strb	r2, [r3]
 506:.\main.c      ****         UART_clk_SetDividerValue(781);
 2274              		.loc 1 506 0
 2275 0018 4FF44370 		mov	r0, #780
 2276 001c 0121     		movs	r1, #1
 2277 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 507:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2278              		.loc 1 507 0
 2279 0022 0648     		ldr	r0, .L133+8
 2280 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 508:.\main.c      ****         UART_Start();
 2281              		.loc 1 508 0
 2282 0028 FFF7FEFF 		bl	UART_Start
 509:.\main.c      ****         RF_BT_SELECT_Write(1);
 2283              		.loc 1 509 0
 2284 002c 0120     		movs	r0, #1
 2285 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 510:.\main.c      **** }
 2286              		.loc 1 510 0
 2287 0032 80BD     		pop	{r7, pc}
 2288              	.L134:
 2289              		.align	2
 2290              	.L133:
 2291 0034 00000000 		.word	BIN_ENABLED
 2292 0038 00000000 		.word	BT_ENABLED
 2293 003c 00000000 		.word	BT_rxInt
 2294              		.cfi_endproc
 2295              	.LFE91:
 2296              		.size	changeToBT, .-changeToBT
 2297              		.section	.text.Quad_Dec_response,"ax",%progbits
 2298              		.align	2
 2299              		.global	Quad_Dec_response
 2300              		.thumb
 2301              		.thumb_func
 2302              		.type	Quad_Dec_response, %function
 2303              	Quad_Dec_response:
 2304              	.LFB92:
 511:.\main.c      **** 
 512:.\main.c      **** 
 513:.\main.c      **** void Quad_Dec_response()
 514:.\main.c      **** {
 2305              		.loc 1 514 0
 2306              		.cfi_startproc
 2307              		@ args = 0, pretend = 0, frame = 32
 2308              		@ frame_needed = 1, uses_anonymous_args = 0
 2309 0000 B0B5     		push	{r4, r5, r7, lr}
 2310              		.cfi_def_cfa_offset 16
 2311              		.cfi_offset 4, -16
 2312              		.cfi_offset 5, -12
 2313              		.cfi_offset 7, -8
 2314              		.cfi_offset 14, -4
 2315 0002 88B0     		sub	sp, sp, #32
 2316              		.cfi_def_cfa_offset 48
 2317 0004 00AF     		add	r7, sp, #0
 2318              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 51


 515:.\main.c      ****     //Check if the flag has been set
 516:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 2319              		.loc 1 516 0
 2320 0006 814B     		ldr	r3, .L143
 2321 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2322 000a 002B     		cmp	r3, #0
 2323 000c 00D1     		bne	.L136
 2324 000e FAE0     		b	.L135
 2325              	.L136:
 517:.\main.c      ****     flag_calc_wheelspeed = 0;
 2326              		.loc 1 517 0
 2327 0010 7E4B     		ldr	r3, .L143
 2328 0012 0022     		movs	r2, #0
 2329 0014 1A70     		strb	r2, [r3]
 518:.\main.c      ****     
 519:.\main.c      ****     //char wheel_1_str [64];
 520:.\main.c      ****     //char wheel_2_str [64];
 521:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 522:.\main.c      ****     //usbPutString(wheel_1_str);
 523:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 524:.\main.c      ****     
 525:.\main.c      ****     //usbPutString(wheel_2_str);
 526:.\main.c      ****     
 527:.\main.c      ****     int16 leftSpeed = quad_diff1;
 2330              		.loc 1 527 0
 2331 0016 7E4B     		ldr	r3, .L143+4
 2332 0018 1B88     		ldrh	r3, [r3]	@ movhi
 2333 001a FB81     		strh	r3, [r7, #14]	@ movhi
 528:.\main.c      ****     int16 rightSpeed = quad_diff2;
 2334              		.loc 1 528 0
 2335 001c 7D4B     		ldr	r3, .L143+8
 2336 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2337 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 529:.\main.c      ****     double scalingLeft = 1;
 2338              		.loc 1 529 0
 2339 0022 4FF00002 		mov	r2, #0
 2340 0026 7C4B     		ldr	r3, .L143+12
 2341 0028 C7E90623 		strd	r2, [r7, #24]
 530:.\main.c      ****     double scalingRight = 1;
 2342              		.loc 1 530 0
 2343 002c 4FF00002 		mov	r2, #0
 2344 0030 794B     		ldr	r3, .L143+12
 2345 0032 C7E90423 		strd	r2, [r7, #16]
 531:.\main.c      ****     
 532:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 533:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 2346              		.loc 1 533 0
 2347 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 2348 003a 002B     		cmp	r3, #0
 2349 003c 0DD1     		bne	.L138
 2350              		.loc 1 533 0 is_stmt 0 discriminator 1
 2351 003e B7F90C30 		ldrsh	r3, [r7, #12]
 2352 0042 002B     		cmp	r3, #0
 2353 0044 09D1     		bne	.L138
 534:.\main.c      ****        //leftSpeed = 3;
 535:.\main.c      ****         scalingLeft = 8;
 2354              		.loc 1 535 0 is_stmt 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 52


 2355 0046 4FF00002 		mov	r2, #0
 2356 004a 744B     		ldr	r3, .L143+16
 2357 004c C7E90623 		strd	r2, [r7, #24]
 536:.\main.c      ****         scalingRight = 8;
 2358              		.loc 1 536 0
 2359 0050 4FF00002 		mov	r2, #0
 2360 0054 714B     		ldr	r3, .L143+16
 2361 0056 C7E90423 		strd	r2, [r7, #16]
 2362              	.L138:
 537:.\main.c      ****     }
 538:.\main.c      **** 
 539:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 2363              		.loc 1 539 0
 2364 005a 714B     		ldr	r3, .L143+20
 2365 005c 1B88     		ldrh	r3, [r3]
 2366 005e 1AB2     		sxth	r2, r3
 2367 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 2368 0064 002B     		cmp	r3, #0
 2369 0066 B8BF     		it	lt
 2370 0068 5B42     		rsblt	r3, r3, #0
 2371 006a D31A     		subs	r3, r2, r3
 2372 006c BB60     		str	r3, [r7, #8]
 540:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 2373              		.loc 1 540 0
 2374 006e BB68     		ldr	r3, [r7, #8]
 2375 0070 83EAE372 		eor	r2, r3, r3, asr #31
 2376 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 2377 0078 BB68     		ldr	r3, [r7, #8]
 2378 007a 92FBF3F3 		sdiv	r3, r2, r3
 2379 007e 1846     		mov	r0, r3
 2380 0080 FFF7FEFF 		bl	__aeabi_i2d
 2381 0084 0446     		mov	r4, r0
 2382 0086 0D46     		mov	r5, r1
 2383 0088 BB68     		ldr	r3, [r7, #8]
 2384 008a 002B     		cmp	r3, #0
 2385 008c B8BF     		it	lt
 2386 008e 5B42     		rsblt	r3, r3, #0
 2387 0090 1846     		mov	r0, r3
 2388 0092 FFF7FEFF 		bl	__aeabi_i2d
 2389 0096 0246     		mov	r2, r0
 2390 0098 0B46     		mov	r3, r1
 2391 009a 1046     		mov	r0, r2
 2392 009c 1946     		mov	r1, r3
 2393 009e FFF7FEFF 		bl	sqrt
 2394 00a2 0246     		mov	r2, r0
 2395 00a4 0B46     		mov	r3, r1
 2396 00a6 2046     		mov	r0, r4
 2397 00a8 2946     		mov	r1, r5
 2398 00aa FFF7FEFF 		bl	__aeabi_dmul
 2399 00ae 0246     		mov	r2, r0
 2400 00b0 0B46     		mov	r3, r1
 2401 00b2 1046     		mov	r0, r2
 2402 00b4 1946     		mov	r1, r3
 2403 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2404 00ba 0346     		mov	r3, r0
 2405 00bc 7B60     		str	r3, [r7, #4]
 541:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 53


 2406              		.loc 1 541 0
 2407 00be 594B     		ldr	r3, .L143+24
 2408 00c0 1B88     		ldrh	r3, [r3]
 2409 00c2 1BB2     		sxth	r3, r3
 2410 00c4 1846     		mov	r0, r3
 2411 00c6 FFF7FEFF 		bl	__aeabi_i2d
 2412 00ca 0446     		mov	r4, r0
 2413 00cc 0D46     		mov	r5, r1
 2414 00ce 7868     		ldr	r0, [r7, #4]
 2415 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2416 00d4 0246     		mov	r2, r0
 2417 00d6 0B46     		mov	r3, r1
 2418 00d8 1046     		mov	r0, r2
 2419 00da 1946     		mov	r1, r3
 2420 00dc D7E90623 		ldrd	r2, [r7, #24]
 2421 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2422 00e4 0246     		mov	r2, r0
 2423 00e6 0B46     		mov	r3, r1
 2424 00e8 2046     		mov	r0, r4
 2425 00ea 2946     		mov	r1, r5
 2426 00ec FFF7FEFF 		bl	__aeabi_dadd
 2427 00f0 0246     		mov	r2, r0
 2428 00f2 0B46     		mov	r3, r1
 2429 00f4 1046     		mov	r0, r2
 2430 00f6 1946     		mov	r1, r3
 2431 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 2432 00fc 0346     		mov	r3, r0
 2433 00fe 9AB2     		uxth	r2, r3
 2434 0100 484B     		ldr	r3, .L143+24
 2435 0102 1A80     		strh	r2, [r3]	@ movhi
 542:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 2436              		.loc 1 542 0
 2437 0104 484B     		ldr	r3, .L143+28
 2438 0106 1B88     		ldrh	r3, [r3]
 2439 0108 1AB2     		sxth	r2, r3
 2440 010a B7F90C30 		ldrsh	r3, [r7, #12]
 2441 010e 002B     		cmp	r3, #0
 2442 0110 B8BF     		it	lt
 2443 0112 5B42     		rsblt	r3, r3, #0
 2444 0114 D31A     		subs	r3, r2, r3
 2445 0116 BB60     		str	r3, [r7, #8]
 543:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 2446              		.loc 1 543 0
 2447 0118 BB68     		ldr	r3, [r7, #8]
 2448 011a 83EAE372 		eor	r2, r3, r3, asr #31
 2449 011e A2EBE372 		sub	r2, r2, r3, asr #31
 2450 0122 BB68     		ldr	r3, [r7, #8]
 2451 0124 92FBF3F3 		sdiv	r3, r2, r3
 2452 0128 1846     		mov	r0, r3
 2453 012a FFF7FEFF 		bl	__aeabi_i2d
 2454 012e 0446     		mov	r4, r0
 2455 0130 0D46     		mov	r5, r1
 2456 0132 BB68     		ldr	r3, [r7, #8]
 2457 0134 002B     		cmp	r3, #0
 2458 0136 B8BF     		it	lt
 2459 0138 5B42     		rsblt	r3, r3, #0
 2460 013a 1846     		mov	r0, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 54


 2461 013c FFF7FEFF 		bl	__aeabi_i2d
 2462 0140 0246     		mov	r2, r0
 2463 0142 0B46     		mov	r3, r1
 2464 0144 1046     		mov	r0, r2
 2465 0146 1946     		mov	r1, r3
 2466 0148 FFF7FEFF 		bl	sqrt
 2467 014c 0246     		mov	r2, r0
 2468 014e 0B46     		mov	r3, r1
 2469 0150 2046     		mov	r0, r4
 2470 0152 2946     		mov	r1, r5
 2471 0154 FFF7FEFF 		bl	__aeabi_dmul
 2472 0158 0246     		mov	r2, r0
 2473 015a 0B46     		mov	r3, r1
 2474 015c 1046     		mov	r0, r2
 2475 015e 1946     		mov	r1, r3
 2476 0160 FFF7FEFF 		bl	__aeabi_d2iz
 2477 0164 0346     		mov	r3, r0
 2478 0166 7B60     		str	r3, [r7, #4]
 544:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 2479              		.loc 1 544 0
 2480 0168 304B     		ldr	r3, .L143+32
 2481 016a 1B88     		ldrh	r3, [r3]
 2482 016c 1BB2     		sxth	r3, r3
 2483 016e 1846     		mov	r0, r3
 2484 0170 FFF7FEFF 		bl	__aeabi_i2d
 2485 0174 0446     		mov	r4, r0
 2486 0176 0D46     		mov	r5, r1
 2487 0178 7868     		ldr	r0, [r7, #4]
 2488 017a FFF7FEFF 		bl	__aeabi_i2d
 2489 017e 0246     		mov	r2, r0
 2490 0180 0B46     		mov	r3, r1
 2491 0182 1046     		mov	r0, r2
 2492 0184 1946     		mov	r1, r3
 2493 0186 D7E90423 		ldrd	r2, [r7, #16]
 2494 018a FFF7FEFF 		bl	__aeabi_dmul
 2495 018e 0246     		mov	r2, r0
 2496 0190 0B46     		mov	r3, r1
 2497 0192 2046     		mov	r0, r4
 2498 0194 2946     		mov	r1, r5
 2499 0196 FFF7FEFF 		bl	__aeabi_dadd
 2500 019a 0246     		mov	r2, r0
 2501 019c 0B46     		mov	r3, r1
 2502 019e 1046     		mov	r0, r2
 2503 01a0 1946     		mov	r1, r3
 2504 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 2505 01a6 0346     		mov	r3, r0
 2506 01a8 9AB2     		uxth	r2, r3
 2507 01aa 204B     		ldr	r3, .L143+32
 2508 01ac 1A80     		strh	r2, [r3]	@ movhi
 545:.\main.c      ****     
 546:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 2509              		.loc 1 546 0
 2510 01ae 1F4B     		ldr	r3, .L143+32
 2511 01b0 1B88     		ldrh	r3, [r3]
 2512 01b2 1BB2     		sxth	r3, r3
 2513 01b4 002B     		cmp	r3, #0
 2514 01b6 02DA     		bge	.L139
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 55


 2515              		.loc 1 546 0 is_stmt 0 discriminator 1
 2516 01b8 1C4B     		ldr	r3, .L143+32
 2517 01ba 0022     		movs	r2, #0
 2518 01bc 1A80     		strh	r2, [r3]	@ movhi
 2519              	.L139:
 547:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 2520              		.loc 1 547 0 is_stmt 1
 2521 01be 194B     		ldr	r3, .L143+24
 2522 01c0 1B88     		ldrh	r3, [r3]
 2523 01c2 1BB2     		sxth	r3, r3
 2524 01c4 002B     		cmp	r3, #0
 2525 01c6 02DA     		bge	.L140
 2526              		.loc 1 547 0 is_stmt 0 discriminator 1
 2527 01c8 164B     		ldr	r3, .L143+24
 2528 01ca 0022     		movs	r2, #0
 2529 01cc 1A80     		strh	r2, [r3]	@ movhi
 2530              	.L140:
 548:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 2531              		.loc 1 548 0 is_stmt 1
 2532 01ce 174B     		ldr	r3, .L143+32
 2533 01d0 1B88     		ldrh	r3, [r3]
 2534 01d2 1BB2     		sxth	r3, r3
 2535 01d4 642B     		cmp	r3, #100
 2536 01d6 02DD     		ble	.L141
 2537              		.loc 1 548 0 is_stmt 0 discriminator 1
 2538 01d8 144B     		ldr	r3, .L143+32
 2539 01da 6422     		movs	r2, #100
 2540 01dc 1A80     		strh	r2, [r3]	@ movhi
 2541              	.L141:
 549:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 2542              		.loc 1 549 0 is_stmt 1
 2543 01de 114B     		ldr	r3, .L143+24
 2544 01e0 1B88     		ldrh	r3, [r3]
 2545 01e2 1BB2     		sxth	r3, r3
 2546 01e4 642B     		cmp	r3, #100
 2547 01e6 02DD     		ble	.L142
 2548              		.loc 1 549 0 is_stmt 0 discriminator 1
 2549 01e8 0E4B     		ldr	r3, .L143+24
 2550 01ea 6422     		movs	r2, #100
 2551 01ec 1A80     		strh	r2, [r3]	@ movhi
 2552              	.L142:
 550:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 2553              		.loc 1 550 0 is_stmt 1
 2554 01ee 0D4B     		ldr	r3, .L143+24
 2555 01f0 1B88     		ldrh	r3, [r3]
 2556 01f2 DBB2     		uxtb	r3, r3
 2557 01f4 1846     		mov	r0, r3
 2558 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 551:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 2559              		.loc 1 551 0
 2560 01fa 0C4B     		ldr	r3, .L143+32
 2561 01fc 1B88     		ldrh	r3, [r3]
 2562 01fe DBB2     		uxtb	r3, r3
 2563 0200 1846     		mov	r0, r3
 2564 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 2565              	.L135:
 552:.\main.c      **** }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 56


 2566              		.loc 1 552 0
 2567 0206 2037     		adds	r7, r7, #32
 2568              		.cfi_def_cfa_offset 16
 2569 0208 BD46     		mov	sp, r7
 2570              		.cfi_def_cfa_register 13
 2571              		@ sp needed
 2572 020a B0BD     		pop	{r4, r5, r7, pc}
 2573              	.L144:
 2574              		.align	2
 2575              	.L143:
 2576 020c 00000000 		.word	flag_calc_wheelspeed
 2577 0210 00000000 		.word	quad_diff1
 2578 0214 00000000 		.word	quad_diff2
 2579 0218 0000F03F 		.word	1072693248
 2580 021c 00002040 		.word	1075838976
 2581 0220 00000000 		.word	leftSpeedLimit
 2582 0224 00000000 		.word	left_duty_cycle
 2583 0228 00000000 		.word	rightSpeedLimit
 2584 022c 00000000 		.word	right_duty_cycle
 2585              		.cfi_endproc
 2586              	.LFE92:
 2587              		.size	Quad_Dec_response, .-Quad_Dec_response
 2588              		.section	.text.trackLine,"ax",%progbits
 2589              		.align	2
 2590              		.global	trackLine
 2591              		.thumb
 2592              		.thumb_func
 2593              		.type	trackLine, %function
 2594              	trackLine:
 2595              	.LFB93:
 553:.\main.c      **** 
 554:.\main.c      **** void trackLine()
 555:.\main.c      **** {
 2596              		.loc 1 555 0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 8
 2599              		@ frame_needed = 1, uses_anonymous_args = 0
 2600 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2601              		.cfi_def_cfa_offset 24
 2602              		.cfi_offset 4, -24
 2603              		.cfi_offset 5, -20
 2604              		.cfi_offset 7, -16
 2605              		.cfi_offset 8, -12
 2606              		.cfi_offset 9, -8
 2607              		.cfi_offset 14, -4
 2608 0004 82B0     		sub	sp, sp, #8
 2609              		.cfi_def_cfa_offset 32
 2610 0006 00AF     		add	r7, sp, #0
 2611              		.cfi_def_cfa_register 7
 556:.\main.c      ****     //read the value of the three central-front sensors
 557:.\main.c      ****     
 558:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2612              		.loc 1 558 0
 2613 0008 FFF7FEFF 		bl	NLSens_out_Read
 2614 000c 0346     		mov	r3, r0
 2615 000e FB71     		strb	r3, [r7, #7]
 559:.\main.c      ****     uint8 nr = NRSens_out_Read();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 57


 2616              		.loc 1 559 0
 2617 0010 FFF7FEFF 		bl	NRSens_out_Read
 2618 0014 0346     		mov	r3, r0
 2619 0016 BB71     		strb	r3, [r7, #6]
 560:.\main.c      ****     uint8 mid = MSens_out_Read();
 2620              		.loc 1 560 0
 2621 0018 FFF7FEFF 		bl	MSens_out_Read
 2622 001c 0346     		mov	r3, r0
 2623 001e 7B71     		strb	r3, [r7, #5]
 561:.\main.c      ****     //if only the left one, hard left
 562:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
 2624              		.loc 1 562 0
 2625 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2626 0022 002B     		cmp	r3, #0
 2627 0024 27D0     		beq	.L146
 2628              		.loc 1 562 0 is_stmt 0 discriminator 1
 2629 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2630 0028 002B     		cmp	r3, #0
 2631 002a 24D1     		bne	.L146
 2632              		.loc 1 562 0 discriminator 2
 2633 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2634 002e 002B     		cmp	r3, #0
 2635 0030 21D1     		bne	.L146
 563:.\main.c      ****     {
 564:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 2636              		.loc 1 564 0 is_stmt 1
 2637 0032 454B     		ldr	r3, .L151
 2638 0034 D3E90023 		ldrd	r2, [r3]
 2639 0038 1046     		mov	r0, r2
 2640 003a 1946     		mov	r1, r3
 2641 003c 4FF00002 		mov	r2, #0
 2642 0040 424B     		ldr	r3, .L151+4
 2643 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2644 0046 0246     		mov	r2, r0
 2645 0048 0B46     		mov	r3, r1
 2646 004a 1446     		mov	r4, r2
 2647 004c 1D46     		mov	r5, r3
 2648 004e 3E4B     		ldr	r3, .L151
 2649 0050 D3E90023 		ldrd	r2, [r3]
 2650 0054 9046     		mov	r8, r2
 2651 0056 83F00049 		eor	r9, r3, #-2147483648
 2652 005a 4046     		mov	r0, r8
 2653 005c 4946     		mov	r1, r9
 2654 005e 4FF00002 		mov	r2, #0
 2655 0062 3A4B     		ldr	r3, .L151+4
 2656 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2657 0068 0246     		mov	r2, r0
 2658 006a 0B46     		mov	r3, r1
 2659 006c 2046     		mov	r0, r4
 2660 006e 2946     		mov	r1, r5
 2661 0070 FFF7FEFF 		bl	setSpeed
 2662 0074 63E0     		b	.L145
 2663              	.L146:
 565:.\main.c      ****     }
 566:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2664              		.loc 1 566 0
 2665 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 58


 2666 0078 002B     		cmp	r3, #0
 2667 007a 11D0     		beq	.L148
 2668              		.loc 1 566 0 is_stmt 0 discriminator 1
 2669 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2670 007e 002B     		cmp	r3, #0
 2671 0080 0ED0     		beq	.L148
 2672              		.loc 1 566 0 discriminator 2
 2673 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2674 0084 002B     		cmp	r3, #0
 2675 0086 0BD1     		bne	.L148
 567:.\main.c      ****     {
 568:.\main.c      ****         setSpeed(speed, 0);
 2676              		.loc 1 568 0 is_stmt 1
 2677 0088 2F4B     		ldr	r3, .L151
 2678 008a D3E90023 		ldrd	r2, [r3]
 2679 008e 1046     		mov	r0, r2
 2680 0090 1946     		mov	r1, r3
 2681 0092 4FF00002 		mov	r2, #0
 2682 0096 4FF00003 		mov	r3, #0
 2683 009a FFF7FEFF 		bl	setSpeed
 2684 009e 4EE0     		b	.L145
 2685              	.L148:
 569:.\main.c      ****     }
 570:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2686              		.loc 1 570 0
 2687 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2688 00a2 002B     		cmp	r3, #0
 2689 00a4 0FD0     		beq	.L149
 2690              		.loc 1 570 0 is_stmt 0 discriminator 1
 2691 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2692 00a8 002B     		cmp	r3, #0
 2693 00aa 0CD0     		beq	.L149
 2694              		.loc 1 570 0 discriminator 2
 2695 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2696 00ae 002B     		cmp	r3, #0
 2697 00b0 09D1     		bne	.L149
 571:.\main.c      ****     {
 572:.\main.c      ****         setSpeed(0, speed);
 2698              		.loc 1 572 0 is_stmt 1
 2699 00b2 254B     		ldr	r3, .L151
 2700 00b4 D3E90023 		ldrd	r2, [r3]
 2701 00b8 4FF00000 		mov	r0, #0
 2702 00bc 4FF00001 		mov	r1, #0
 2703 00c0 FFF7FEFF 		bl	setSpeed
 2704 00c4 3BE0     		b	.L145
 2705              	.L149:
 573:.\main.c      ****     }
 574:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2706              		.loc 1 574 0
 2707 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2708 00c8 002B     		cmp	r3, #0
 2709 00ca 27D0     		beq	.L150
 2710              		.loc 1 574 0 is_stmt 0 discriminator 1
 2711 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2712 00ce 002B     		cmp	r3, #0
 2713 00d0 24D1     		bne	.L150
 2714              		.loc 1 574 0 discriminator 2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 59


 2715 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2716 00d4 002B     		cmp	r3, #0
 2717 00d6 21D1     		bne	.L150
 575:.\main.c      ****     {
 576:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 2718              		.loc 1 576 0 is_stmt 1
 2719 00d8 1B4B     		ldr	r3, .L151
 2720 00da D3E90023 		ldrd	r2, [r3]
 2721 00de 1446     		mov	r4, r2
 2722 00e0 83F00045 		eor	r5, r3, #-2147483648
 2723 00e4 2046     		mov	r0, r4
 2724 00e6 2946     		mov	r1, r5
 2725 00e8 4FF00002 		mov	r2, #0
 2726 00ec 174B     		ldr	r3, .L151+4
 2727 00ee FFF7FEFF 		bl	__aeabi_ddiv
 2728 00f2 0246     		mov	r2, r0
 2729 00f4 0B46     		mov	r3, r1
 2730 00f6 1446     		mov	r4, r2
 2731 00f8 1D46     		mov	r5, r3
 2732 00fa 134B     		ldr	r3, .L151
 2733 00fc D3E90023 		ldrd	r2, [r3]
 2734 0100 1046     		mov	r0, r2
 2735 0102 1946     		mov	r1, r3
 2736 0104 4FF00002 		mov	r2, #0
 2737 0108 104B     		ldr	r3, .L151+4
 2738 010a FFF7FEFF 		bl	__aeabi_ddiv
 2739 010e 0246     		mov	r2, r0
 2740 0110 0B46     		mov	r3, r1
 2741 0112 2046     		mov	r0, r4
 2742 0114 2946     		mov	r1, r5
 2743 0116 FFF7FEFF 		bl	setSpeed
 2744 011a 10E0     		b	.L145
 2745              	.L150:
 577:.\main.c      ****     }
 578:.\main.c      ****     else if (mid && !nr && !nl)
 2746              		.loc 1 578 0
 2747 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2748 011e 002B     		cmp	r3, #0
 2749 0120 0DD0     		beq	.L145
 2750              		.loc 1 578 0 is_stmt 0 discriminator 1
 2751 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2752 0124 002B     		cmp	r3, #0
 2753 0126 0AD1     		bne	.L145
 2754              		.loc 1 578 0 discriminator 2
 2755 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2756 012a 002B     		cmp	r3, #0
 2757 012c 07D1     		bne	.L145
 579:.\main.c      ****     {
 580:.\main.c      ****         setSpeed(speed,speed);
 2758              		.loc 1 580 0 is_stmt 1
 2759 012e 064B     		ldr	r3, .L151
 2760 0130 D3E90001 		ldrd	r0, [r3]
 2761 0134 044B     		ldr	r3, .L151
 2762 0136 D3E90023 		ldrd	r2, [r3]
 2763 013a FFF7FEFF 		bl	setSpeed
 2764              	.L145:
 581:.\main.c      ****     }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 60


 582:.\main.c      ****    // else if (!mid && !nr && !nl)
 583:.\main.c      ****     //{
 584:.\main.c      ****         //setSpeed(0,0);
 585:.\main.c      ****     //}
 586:.\main.c      **** }
 2765              		.loc 1 586 0
 2766 013e 0837     		adds	r7, r7, #8
 2767              		.cfi_def_cfa_offset 24
 2768 0140 BD46     		mov	sp, r7
 2769              		.cfi_def_cfa_register 13
 2770              		@ sp needed
 2771 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2772              	.L152:
 2773 0146 00BF     		.align	2
 2774              	.L151:
 2775 0148 00000000 		.word	speed
 2776 014c 0000F83F 		.word	1073217536
 2777              		.cfi_endproc
 2778              	.LFE93:
 2779              		.size	trackLine, .-trackLine
 2780              		.section	.text.trackLineZ,"ax",%progbits
 2781              		.align	2
 2782              		.global	trackLineZ
 2783              		.thumb
 2784              		.thumb_func
 2785              		.type	trackLineZ, %function
 2786              	trackLineZ:
 2787              	.LFB94:
 587:.\main.c      **** 
 588:.\main.c      **** void trackLineZ()
 589:.\main.c      **** {
 2788              		.loc 1 589 0
 2789              		.cfi_startproc
 2790              		@ args = 0, pretend = 0, frame = 8
 2791              		@ frame_needed = 1, uses_anonymous_args = 0
 2792 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2793              		.cfi_def_cfa_offset 24
 2794              		.cfi_offset 4, -24
 2795              		.cfi_offset 5, -20
 2796              		.cfi_offset 7, -16
 2797              		.cfi_offset 8, -12
 2798              		.cfi_offset 9, -8
 2799              		.cfi_offset 14, -4
 2800 0004 82B0     		sub	sp, sp, #8
 2801              		.cfi_def_cfa_offset 32
 2802 0006 00AF     		add	r7, sp, #0
 2803              		.cfi_def_cfa_register 7
 590:.\main.c      ****     //read the value of the three central-front sensors
 591:.\main.c      ****     
 592:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2804              		.loc 1 592 0
 2805 0008 FFF7FEFF 		bl	NLSens_out_Read
 2806 000c 0346     		mov	r3, r0
 2807 000e FB71     		strb	r3, [r7, #7]
 593:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2808              		.loc 1 593 0
 2809 0010 FFF7FEFF 		bl	NRSens_out_Read
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 61


 2810 0014 0346     		mov	r3, r0
 2811 0016 BB71     		strb	r3, [r7, #6]
 594:.\main.c      ****     uint8 mid = MSens_out_Read();
 2812              		.loc 1 594 0
 2813 0018 FFF7FEFF 		bl	MSens_out_Read
 2814 001c 0346     		mov	r3, r0
 2815 001e 7B71     		strb	r3, [r7, #5]
 595:.\main.c      ****     //if only the left one, hard left
 596:.\main.c      ****     if(nl && !nr && !mid)
 2816              		.loc 1 596 0
 2817 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2818 0022 002B     		cmp	r3, #0
 2819 0024 27D0     		beq	.L154
 2820              		.loc 1 596 0 is_stmt 0 discriminator 1
 2821 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2822 0028 002B     		cmp	r3, #0
 2823 002a 24D1     		bne	.L154
 2824              		.loc 1 596 0 discriminator 2
 2825 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2826 002e 002B     		cmp	r3, #0
 2827 0030 21D1     		bne	.L154
 597:.\main.c      ****     {
 598:.\main.c      ****         setSpeed(speed / 1.5,-speed / 1.5);
 2828              		.loc 1 598 0 is_stmt 1
 2829 0032 454B     		ldr	r3, .L159
 2830 0034 D3E90023 		ldrd	r2, [r3]
 2831 0038 1046     		mov	r0, r2
 2832 003a 1946     		mov	r1, r3
 2833 003c 4FF00002 		mov	r2, #0
 2834 0040 424B     		ldr	r3, .L159+4
 2835 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2836 0046 0246     		mov	r2, r0
 2837 0048 0B46     		mov	r3, r1
 2838 004a 1446     		mov	r4, r2
 2839 004c 1D46     		mov	r5, r3
 2840 004e 3E4B     		ldr	r3, .L159
 2841 0050 D3E90023 		ldrd	r2, [r3]
 2842 0054 9046     		mov	r8, r2
 2843 0056 83F00049 		eor	r9, r3, #-2147483648
 2844 005a 4046     		mov	r0, r8
 2845 005c 4946     		mov	r1, r9
 2846 005e 4FF00002 		mov	r2, #0
 2847 0062 3A4B     		ldr	r3, .L159+4
 2848 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2849 0068 0246     		mov	r2, r0
 2850 006a 0B46     		mov	r3, r1
 2851 006c 2046     		mov	r0, r4
 2852 006e 2946     		mov	r1, r5
 2853 0070 FFF7FEFF 		bl	setSpeed
 2854 0074 63E0     		b	.L153
 2855              	.L154:
 599:.\main.c      ****     }
 600:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2856              		.loc 1 600 0
 2857 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2858 0078 002B     		cmp	r3, #0
 2859 007a 11D0     		beq	.L156
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 62


 2860              		.loc 1 600 0 is_stmt 0 discriminator 1
 2861 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2862 007e 002B     		cmp	r3, #0
 2863 0080 0ED0     		beq	.L156
 2864              		.loc 1 600 0 discriminator 2
 2865 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2866 0084 002B     		cmp	r3, #0
 2867 0086 0BD1     		bne	.L156
 601:.\main.c      ****     {
 602:.\main.c      ****         setSpeed(speed, 0.0);
 2868              		.loc 1 602 0 is_stmt 1
 2869 0088 2F4B     		ldr	r3, .L159
 2870 008a D3E90023 		ldrd	r2, [r3]
 2871 008e 1046     		mov	r0, r2
 2872 0090 1946     		mov	r1, r3
 2873 0092 4FF00002 		mov	r2, #0
 2874 0096 4FF00003 		mov	r3, #0
 2875 009a FFF7FEFF 		bl	setSpeed
 2876 009e 4EE0     		b	.L153
 2877              	.L156:
 603:.\main.c      ****     }
 604:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2878              		.loc 1 604 0
 2879 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2880 00a2 002B     		cmp	r3, #0
 2881 00a4 0FD0     		beq	.L157
 2882              		.loc 1 604 0 is_stmt 0 discriminator 1
 2883 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2884 00a8 002B     		cmp	r3, #0
 2885 00aa 0CD0     		beq	.L157
 2886              		.loc 1 604 0 discriminator 2
 2887 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2888 00ae 002B     		cmp	r3, #0
 2889 00b0 09D1     		bne	.L157
 605:.\main.c      ****     {
 606:.\main.c      ****         setSpeed(0.0,speed);
 2890              		.loc 1 606 0 is_stmt 1
 2891 00b2 254B     		ldr	r3, .L159
 2892 00b4 D3E90023 		ldrd	r2, [r3]
 2893 00b8 4FF00000 		mov	r0, #0
 2894 00bc 4FF00001 		mov	r1, #0
 2895 00c0 FFF7FEFF 		bl	setSpeed
 2896 00c4 3BE0     		b	.L153
 2897              	.L157:
 607:.\main.c      ****     }
 608:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2898              		.loc 1 608 0
 2899 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2900 00c8 002B     		cmp	r3, #0
 2901 00ca 27D0     		beq	.L158
 2902              		.loc 1 608 0 is_stmt 0 discriminator 1
 2903 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2904 00ce 002B     		cmp	r3, #0
 2905 00d0 24D1     		bne	.L158
 2906              		.loc 1 608 0 discriminator 2
 2907 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2908 00d4 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 63


 2909 00d6 21D1     		bne	.L158
 609:.\main.c      ****     {
 610:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 2910              		.loc 1 610 0 is_stmt 1
 2911 00d8 1B4B     		ldr	r3, .L159
 2912 00da D3E90023 		ldrd	r2, [r3]
 2913 00de 1446     		mov	r4, r2
 2914 00e0 83F00045 		eor	r5, r3, #-2147483648
 2915 00e4 2046     		mov	r0, r4
 2916 00e6 2946     		mov	r1, r5
 2917 00e8 4FF00002 		mov	r2, #0
 2918 00ec 174B     		ldr	r3, .L159+4
 2919 00ee FFF7FEFF 		bl	__aeabi_ddiv
 2920 00f2 0246     		mov	r2, r0
 2921 00f4 0B46     		mov	r3, r1
 2922 00f6 1446     		mov	r4, r2
 2923 00f8 1D46     		mov	r5, r3
 2924 00fa 134B     		ldr	r3, .L159
 2925 00fc D3E90023 		ldrd	r2, [r3]
 2926 0100 1046     		mov	r0, r2
 2927 0102 1946     		mov	r1, r3
 2928 0104 4FF00002 		mov	r2, #0
 2929 0108 104B     		ldr	r3, .L159+4
 2930 010a FFF7FEFF 		bl	__aeabi_ddiv
 2931 010e 0246     		mov	r2, r0
 2932 0110 0B46     		mov	r3, r1
 2933 0112 2046     		mov	r0, r4
 2934 0114 2946     		mov	r1, r5
 2935 0116 FFF7FEFF 		bl	setSpeed
 2936 011a 10E0     		b	.L153
 2937              	.L158:
 611:.\main.c      ****     }
 612:.\main.c      ****     else if (mid && !nr && !nl)
 2938              		.loc 1 612 0
 2939 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2940 011e 002B     		cmp	r3, #0
 2941 0120 0DD0     		beq	.L153
 2942              		.loc 1 612 0 is_stmt 0 discriminator 1
 2943 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2944 0124 002B     		cmp	r3, #0
 2945 0126 0AD1     		bne	.L153
 2946              		.loc 1 612 0 discriminator 2
 2947 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2948 012a 002B     		cmp	r3, #0
 2949 012c 07D1     		bne	.L153
 613:.\main.c      ****     {
 614:.\main.c      ****         setSpeed(speed,speed);
 2950              		.loc 1 614 0 is_stmt 1
 2951 012e 064B     		ldr	r3, .L159
 2952 0130 D3E90001 		ldrd	r0, [r3]
 2953 0134 044B     		ldr	r3, .L159
 2954 0136 D3E90023 		ldrd	r2, [r3]
 2955 013a FFF7FEFF 		bl	setSpeed
 2956              	.L153:
 615:.\main.c      ****     }
 616:.\main.c      ****    // else if (!mid && !nr && !nl)
 617:.\main.c      ****     //{
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 64


 618:.\main.c      ****         //setSpeed(0,0);
 619:.\main.c      ****     //}
 620:.\main.c      **** }
 2957              		.loc 1 620 0
 2958 013e 0837     		adds	r7, r7, #8
 2959              		.cfi_def_cfa_offset 24
 2960 0140 BD46     		mov	sp, r7
 2961              		.cfi_def_cfa_register 13
 2962              		@ sp needed
 2963 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2964              	.L160:
 2965 0146 00BF     		.align	2
 2966              	.L159:
 2967 0148 00000000 		.word	speed
 2968 014c 0000F83F 		.word	1073217536
 2969              		.cfi_endproc
 2970              	.LFE94:
 2971              		.size	trackLineZ, .-trackLineZ
 2972              		.section	.text.trackLineU,"ax",%progbits
 2973              		.align	2
 2974              		.global	trackLineU
 2975              		.thumb
 2976              		.thumb_func
 2977              		.type	trackLineU, %function
 2978              	trackLineU:
 2979              	.LFB95:
 621:.\main.c      **** 
 622:.\main.c      **** void trackLineU()
 623:.\main.c      **** {
 2980              		.loc 1 623 0
 2981              		.cfi_startproc
 2982              		@ args = 0, pretend = 0, frame = 8
 2983              		@ frame_needed = 1, uses_anonymous_args = 0
 2984 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2985              		.cfi_def_cfa_offset 24
 2986              		.cfi_offset 4, -24
 2987              		.cfi_offset 5, -20
 2988              		.cfi_offset 7, -16
 2989              		.cfi_offset 8, -12
 2990              		.cfi_offset 9, -8
 2991              		.cfi_offset 14, -4
 2992 0004 82B0     		sub	sp, sp, #8
 2993              		.cfi_def_cfa_offset 32
 2994 0006 00AF     		add	r7, sp, #0
 2995              		.cfi_def_cfa_register 7
 624:.\main.c      ****     //read the value of the three central-front sensors
 625:.\main.c      ****     
 626:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2996              		.loc 1 626 0
 2997 0008 FFF7FEFF 		bl	NLSens_out_Read
 2998 000c 0346     		mov	r3, r0
 2999 000e FB71     		strb	r3, [r7, #7]
 627:.\main.c      ****     uint8 fl = FLSens_out_Read();
 3000              		.loc 1 627 0
 3001 0010 FFF7FEFF 		bl	FLSens_out_Read
 3002 0014 0346     		mov	r3, r0
 3003 0016 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 65


 628:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3004              		.loc 1 628 0
 3005 0018 FFF7FEFF 		bl	NRSens_out_Read
 3006 001c 0346     		mov	r3, r0
 3007 001e 7B71     		strb	r3, [r7, #5]
 629:.\main.c      ****     uint8 fr = FRSens_out_Read();
 3008              		.loc 1 629 0
 3009 0020 FFF7FEFF 		bl	FRSens_out_Read
 3010 0024 0346     		mov	r3, r0
 3011 0026 3B71     		strb	r3, [r7, #4]
 630:.\main.c      ****     uint8 mid = MSens_out_Read();
 3012              		.loc 1 630 0
 3013 0028 FFF7FEFF 		bl	MSens_out_Read
 3014 002c 0346     		mov	r3, r0
 3015 002e FB70     		strb	r3, [r7, #3]
 631:.\main.c      ****     if (fl && mid && fr) // T intersection
 3016              		.loc 1 631 0
 3017 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3018 0032 002B     		cmp	r3, #0
 3019 0034 06D0     		beq	.L162
 3020              		.loc 1 631 0 is_stmt 0 discriminator 1
 3021 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3022 0038 002B     		cmp	r3, #0
 3023 003a 03D0     		beq	.L162
 3024              		.loc 1 631 0 discriminator 2
 3025 003c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3026 003e 002B     		cmp	r3, #0
 3027 0040 00D0     		beq	.L162
 3028              		.loc 1 631 0
 3029 0042 ACE0     		b	.L161
 3030              	.L162:
 632:.\main.c      ****     {
 633:.\main.c      ****         // not implemented
 634:.\main.c      ****     }
 635:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 3031              		.loc 1 635 0 is_stmt 1
 3032 0044 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3033 0046 002B     		cmp	r3, #0
 3034 0048 0BD0     		beq	.L164
 3035              		.loc 1 635 0 is_stmt 0 discriminator 1
 3036 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3037 004c 002B     		cmp	r3, #0
 3038 004e 08D0     		beq	.L164
 636:.\main.c      ****     {
 637:.\main.c      ****         setSpeed(speed, speed);
 3039              		.loc 1 637 0 is_stmt 1
 3040 0050 554B     		ldr	r3, .L170
 3041 0052 D3E90001 		ldrd	r0, [r3]
 3042 0056 544B     		ldr	r3, .L170
 3043 0058 D3E90023 		ldrd	r2, [r3]
 3044 005c FFF7FEFF 		bl	setSpeed
 3045 0060 9DE0     		b	.L161
 3046              	.L164:
 638:.\main.c      ****     }
 639:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 3047              		.loc 1 639 0
 3048 0062 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 66


 3049 0064 002B     		cmp	r3, #0
 3050 0066 0BD0     		beq	.L165
 3051              		.loc 1 639 0 is_stmt 0 discriminator 1
 3052 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3053 006a 002B     		cmp	r3, #0
 3054 006c 08D0     		beq	.L165
 640:.\main.c      ****     {
 641:.\main.c      ****         setSpeed(speed, speed);
 3055              		.loc 1 641 0 is_stmt 1
 3056 006e 4E4B     		ldr	r3, .L170
 3057 0070 D3E90001 		ldrd	r0, [r3]
 3058 0074 4C4B     		ldr	r3, .L170
 3059 0076 D3E90023 		ldrd	r2, [r3]
 3060 007a FFF7FEFF 		bl	setSpeed
 3061 007e 8EE0     		b	.L161
 3062              	.L165:
 642:.\main.c      ****     }
 643:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 3063              		.loc 1 643 0
 3064 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3065 0082 002B     		cmp	r3, #0
 3066 0084 27D0     		beq	.L166
 3067              		.loc 1 643 0 is_stmt 0 discriminator 1
 3068 0086 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3069 0088 002B     		cmp	r3, #0
 3070 008a 24D1     		bne	.L166
 3071              		.loc 1 643 0 discriminator 2
 3072 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3073 008e 002B     		cmp	r3, #0
 3074 0090 21D1     		bne	.L166
 644:.\main.c      ****     {
 645:.\main.c      ****          setSpeed(speed / 1.5,-speed / 1.5);
 3075              		.loc 1 645 0 is_stmt 1
 3076 0092 454B     		ldr	r3, .L170
 3077 0094 D3E90023 		ldrd	r2, [r3]
 3078 0098 1046     		mov	r0, r2
 3079 009a 1946     		mov	r1, r3
 3080 009c 4FF00002 		mov	r2, #0
 3081 00a0 424B     		ldr	r3, .L170+4
 3082 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 3083 00a6 0246     		mov	r2, r0
 3084 00a8 0B46     		mov	r3, r1
 3085 00aa 1446     		mov	r4, r2
 3086 00ac 1D46     		mov	r5, r3
 3087 00ae 3E4B     		ldr	r3, .L170
 3088 00b0 D3E90023 		ldrd	r2, [r3]
 3089 00b4 9046     		mov	r8, r2
 3090 00b6 83F00049 		eor	r9, r3, #-2147483648
 3091 00ba 4046     		mov	r0, r8
 3092 00bc 4946     		mov	r1, r9
 3093 00be 4FF00002 		mov	r2, #0
 3094 00c2 3A4B     		ldr	r3, .L170+4
 3095 00c4 FFF7FEFF 		bl	__aeabi_ddiv
 3096 00c8 0246     		mov	r2, r0
 3097 00ca 0B46     		mov	r3, r1
 3098 00cc 2046     		mov	r0, r4
 3099 00ce 2946     		mov	r1, r5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 67


 3100 00d0 FFF7FEFF 		bl	setSpeed
 3101 00d4 63E0     		b	.L161
 3102              	.L166:
 646:.\main.c      ****     }
 647:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3103              		.loc 1 647 0
 3104 00d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3105 00d8 002B     		cmp	r3, #0
 3106 00da 11D0     		beq	.L167
 3107              		.loc 1 647 0 is_stmt 0 discriminator 1
 3108 00dc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3109 00de 002B     		cmp	r3, #0
 3110 00e0 0ED0     		beq	.L167
 3111              		.loc 1 647 0 discriminator 2
 3112 00e2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3113 00e4 002B     		cmp	r3, #0
 3114 00e6 0BD1     		bne	.L167
 648:.\main.c      ****     {
 649:.\main.c      ****         setSpeed(speed, 0);
 3115              		.loc 1 649 0 is_stmt 1
 3116 00e8 2F4B     		ldr	r3, .L170
 3117 00ea D3E90023 		ldrd	r2, [r3]
 3118 00ee 1046     		mov	r0, r2
 3119 00f0 1946     		mov	r1, r3
 3120 00f2 4FF00002 		mov	r2, #0
 3121 00f6 4FF00003 		mov	r3, #0
 3122 00fa FFF7FEFF 		bl	setSpeed
 3123 00fe 4EE0     		b	.L161
 3124              	.L167:
 650:.\main.c      ****     }
 651:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3125              		.loc 1 651 0
 3126 0100 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3127 0102 002B     		cmp	r3, #0
 3128 0104 0FD0     		beq	.L168
 3129              		.loc 1 651 0 is_stmt 0 discriminator 1
 3130 0106 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3131 0108 002B     		cmp	r3, #0
 3132 010a 0CD0     		beq	.L168
 3133              		.loc 1 651 0 discriminator 2
 3134 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3135 010e 002B     		cmp	r3, #0
 3136 0110 09D1     		bne	.L168
 652:.\main.c      ****     {
 653:.\main.c      ****         setSpeed(0, speed);
 3137              		.loc 1 653 0 is_stmt 1
 3138 0112 254B     		ldr	r3, .L170
 3139 0114 D3E90023 		ldrd	r2, [r3]
 3140 0118 4FF00000 		mov	r0, #0
 3141 011c 4FF00001 		mov	r1, #0
 3142 0120 FFF7FEFF 		bl	setSpeed
 3143 0124 3BE0     		b	.L161
 3144              	.L168:
 654:.\main.c      ****     }
 655:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3145              		.loc 1 655 0
 3146 0126 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 68


 3147 0128 002B     		cmp	r3, #0
 3148 012a 27D0     		beq	.L169
 3149              		.loc 1 655 0 is_stmt 0 discriminator 1
 3150 012c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3151 012e 002B     		cmp	r3, #0
 3152 0130 24D1     		bne	.L169
 3153              		.loc 1 655 0 discriminator 2
 3154 0132 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3155 0134 002B     		cmp	r3, #0
 3156 0136 21D1     		bne	.L169
 656:.\main.c      ****     {
 657:.\main.c      ****          setSpeed(-speed / 1.5,speed / 1.5);
 3157              		.loc 1 657 0 is_stmt 1
 3158 0138 1B4B     		ldr	r3, .L170
 3159 013a D3E90023 		ldrd	r2, [r3]
 3160 013e 1446     		mov	r4, r2
 3161 0140 83F00045 		eor	r5, r3, #-2147483648
 3162 0144 2046     		mov	r0, r4
 3163 0146 2946     		mov	r1, r5
 3164 0148 4FF00002 		mov	r2, #0
 3165 014c 174B     		ldr	r3, .L170+4
 3166 014e FFF7FEFF 		bl	__aeabi_ddiv
 3167 0152 0246     		mov	r2, r0
 3168 0154 0B46     		mov	r3, r1
 3169 0156 1446     		mov	r4, r2
 3170 0158 1D46     		mov	r5, r3
 3171 015a 134B     		ldr	r3, .L170
 3172 015c D3E90023 		ldrd	r2, [r3]
 3173 0160 1046     		mov	r0, r2
 3174 0162 1946     		mov	r1, r3
 3175 0164 4FF00002 		mov	r2, #0
 3176 0168 104B     		ldr	r3, .L170+4
 3177 016a FFF7FEFF 		bl	__aeabi_ddiv
 3178 016e 0246     		mov	r2, r0
 3179 0170 0B46     		mov	r3, r1
 3180 0172 2046     		mov	r0, r4
 3181 0174 2946     		mov	r1, r5
 3182 0176 FFF7FEFF 		bl	setSpeed
 3183 017a 10E0     		b	.L161
 3184              	.L169:
 658:.\main.c      ****     }
 659:.\main.c      ****     else if (mid && !nr && !nl)
 3185              		.loc 1 659 0
 3186 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3187 017e 002B     		cmp	r3, #0
 3188 0180 0DD0     		beq	.L161
 3189              		.loc 1 659 0 is_stmt 0 discriminator 1
 3190 0182 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3191 0184 002B     		cmp	r3, #0
 3192 0186 0AD1     		bne	.L161
 3193              		.loc 1 659 0 discriminator 2
 3194 0188 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3195 018a 002B     		cmp	r3, #0
 3196 018c 07D1     		bne	.L161
 660:.\main.c      ****     {
 661:.\main.c      ****         setSpeed(speed,speed);
 3197              		.loc 1 661 0 is_stmt 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 69


 3198 018e 064B     		ldr	r3, .L170
 3199 0190 D3E90001 		ldrd	r0, [r3]
 3200 0194 044B     		ldr	r3, .L170
 3201 0196 D3E90023 		ldrd	r2, [r3]
 3202 019a FFF7FEFF 		bl	setSpeed
 3203              	.L161:
 662:.\main.c      ****     }
 663:.\main.c      ****    // else if (!mid && !nr && !nl)
 664:.\main.c      ****     //{
 665:.\main.c      ****         //setSpeed(0,0);
 666:.\main.c      ****     //}
 667:.\main.c      ****    
 668:.\main.c      **** 
 669:.\main.c      **** }
 3204              		.loc 1 669 0
 3205 019e 0837     		adds	r7, r7, #8
 3206              		.cfi_def_cfa_offset 24
 3207 01a0 BD46     		mov	sp, r7
 3208              		.cfi_def_cfa_register 13
 3209              		@ sp needed
 3210 01a2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3211              	.L171:
 3212 01a6 00BF     		.align	2
 3213              	.L170:
 3214 01a8 00000000 		.word	speed
 3215 01ac 0000F83F 		.word	1073217536
 3216              		.cfi_endproc
 3217              	.LFE95:
 3218              		.size	trackLineU, .-trackLineU
 3219              		.global	__aeabi_fadd
 3220              		.section	.rodata
 3221 003e 0000     		.align	2
 3222              	.LC4:
 3223 0040 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 3223      65727920 
 3223      566F6C74 
 3223      6167653A 
 3223      2025646D 
 3224              		.section	.text.print_ADC,"ax",%progbits
 3225              		.align	2
 3226              		.global	print_ADC
 3227              		.thumb
 3228              		.thumb_func
 3229              		.type	print_ADC, %function
 3230              	print_ADC:
 3231              	.LFB96:
 670:.\main.c      **** 
 671:.\main.c      **** void print_ADC()
 672:.\main.c      **** {
 3232              		.loc 1 672 0
 3233              		.cfi_startproc
 3234              		@ args = 0, pretend = 0, frame = 24
 3235              		@ frame_needed = 1, uses_anonymous_args = 0
 3236 0000 80B5     		push	{r7, lr}
 3237              		.cfi_def_cfa_offset 8
 3238              		.cfi_offset 7, -8
 3239              		.cfi_offset 14, -4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 70


 3240 0002 86B0     		sub	sp, sp, #24
 3241              		.cfi_def_cfa_offset 32
 3242 0004 00AF     		add	r7, sp, #0
 3243              		.cfi_def_cfa_register 7
 673:.\main.c      ****    //usbPutString("HII\n");
 674:.\main.c      ****     if(flag_receive_ADC == 1)
 3244              		.loc 1 674 0
 3245 0006 274B     		ldr	r3, .L175
 3246 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3247 000a 012B     		cmp	r3, #1
 3248 000c 46D1     		bne	.L172
 3249              	.LBB6:
 675:.\main.c      ****     {
 676:.\main.c      ****         //usbPutString("AAA\r\n");
 677:.\main.c      ****         flag_receive_ADC = 0;
 3250              		.loc 1 677 0
 3251 000e 254B     		ldr	r3, .L175
 3252 0010 0022     		movs	r2, #0
 3253 0012 1A70     		strb	r2, [r3]
 678:.\main.c      ****         
 679:.\main.c      ****        // int8 channel = ADC_
 680:.\main.c      ****         float scalingFactor = 0.972;
 3254              		.loc 1 680 0
 3255 0014 244B     		ldr	r3, .L175+4
 3256 0016 7B61     		str	r3, [r7, #20]	@ float
 681:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3257              		.loc 1 681 0
 3258 0018 244B     		ldr	r3, .L175+8
 3259 001a 1B88     		ldrh	r3, [r3]
 3260 001c 1BB2     		sxth	r3, r3
 3261 001e 41F28832 		movw	r2, #5000
 3262 0022 02FB03F3 		mul	r3, r2, r3
 3263 0026 002B     		cmp	r3, #0
 3264 0028 01DA     		bge	.L174
 3265 002a 03F6FF73 		addw	r3, r3, #4095
 3266              	.L174:
 3267 002e 1B13     		asrs	r3, r3, #12
 3268 0030 1846     		mov	r0, r3
 3269 0032 FFF7FEFF 		bl	__aeabi_i2f
 3270 0036 0346     		mov	r3, r0
 3271 0038 1846     		mov	r0, r3
 3272 003a 7969     		ldr	r1, [r7, #20]	@ float
 3273 003c FFF7FEFF 		bl	__aeabi_fmul
 3274 0040 0346     		mov	r3, r0
 3275 0042 1846     		mov	r0, r3
 3276 0044 1946     		mov	r1, r3
 3277 0046 FFF7FEFF 		bl	__aeabi_fadd
 3278 004a 0346     		mov	r3, r0
 3279 004c 1846     		mov	r0, r3
 3280 004e FFF7FEFF 		bl	__aeabi_f2iz
 3281 0052 0346     		mov	r3, r0
 3282 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 682:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3283              		.loc 1 682 0
 3284 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3285 005a 154B     		ldr	r3, .L175+12
 3286 005c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 71


 3287 005e 1BB2     		sxth	r3, r3
 3288 0060 1A44     		add	r2, r2, r3
 3289 0062 144B     		ldr	r3, .L175+16
 3290 0064 1B88     		ldrh	r3, [r3]
 3291 0066 1BB2     		sxth	r3, r3
 3292 0068 1344     		add	r3, r3, r2
 3293 006a 134A     		ldr	r2, .L175+20
 3294 006c 82FB0312 		smull	r1, r2, r2, r3
 3295 0070 DB17     		asrs	r3, r3, #31
 3296 0072 D31A     		subs	r3, r2, r3
 3297 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 683:.\main.c      ****         prevVoltage2 = prevVoltage;
 3298              		.loc 1 683 0
 3299 0076 0E4B     		ldr	r3, .L175+12
 3300 0078 1A88     		ldrh	r2, [r3]
 3301 007a 0E4B     		ldr	r3, .L175+16
 3302 007c 1A80     		strh	r2, [r3]	@ movhi
 684:.\main.c      ****         prevVoltage = converted_val;
 3303              		.loc 1 684 0
 3304 007e 0C4A     		ldr	r2, .L175+12
 3305 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3306 0082 1380     		strh	r3, [r2]	@ movhi
 685:.\main.c      ****         
 686:.\main.c      ****         char result_str[16];
 687:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3307              		.loc 1 687 0
 3308 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3309 0088 3A46     		mov	r2, r7
 3310 008a 1046     		mov	r0, r2
 3311 008c 0B49     		ldr	r1, .L175+24
 3312 008e 1A46     		mov	r2, r3
 3313 0090 FFF7FEFF 		bl	sprintf
 688:.\main.c      ****         
 689:.\main.c      ****         usbPutString(result_str);
 3314              		.loc 1 689 0
 3315 0094 3B46     		mov	r3, r7
 3316 0096 1846     		mov	r0, r3
 3317 0098 FFF7FEFF 		bl	usbPutString
 3318              	.L172:
 3319              	.LBE6:
 690:.\main.c      ****     }
 691:.\main.c      **** }
 3320              		.loc 1 691 0
 3321 009c 1837     		adds	r7, r7, #24
 3322              		.cfi_def_cfa_offset 8
 3323 009e BD46     		mov	sp, r7
 3324              		.cfi_def_cfa_register 13
 3325              		@ sp needed
 3326 00a0 80BD     		pop	{r7, pc}
 3327              	.L176:
 3328 00a2 00BF     		.align	2
 3329              	.L175:
 3330 00a4 00000000 		.word	flag_receive_ADC
 3331 00a8 FED4783F 		.word	1064883454
 3332 00ac 00000000 		.word	adc_result
 3333 00b0 00000000 		.word	prevVoltage
 3334 00b4 00000000 		.word	prevVoltage2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 72


 3335 00b8 56555555 		.word	1431655766
 3336 00bc 40000000 		.word	.LC4
 3337              		.cfi_endproc
 3338              	.LFE96:
 3339              		.size	print_ADC, .-print_ADC
 3340              		.section	.rodata
 3341              		.align	2
 3342              	.LC5:
 3343 0058 52535349 		.ascii	"RSSI:\000"
 3343      3A00
 3344 005e 0000     		.align	2
 3345              	.LC6:
 3346 0060 25640D0A 		.ascii	"%d\015\012\000"
 3346      00
 3347 0065 000000   		.align	2
 3348              	.LC7:
 3349 0068 726F626F 		.ascii	"robot_x:\000"
 3349      745F783A 
 3349      00
 3350 0071 000000   		.align	2
 3351              	.LC8:
 3352 0074 726F626F 		.ascii	"robot_y:\000"
 3352      745F793A 
 3352      00
 3353 007d 000000   		.align	2
 3354              	.LC9:
 3355 0080 726F626F 		.ascii	"robot_dir:\000"
 3355      745F6469 
 3355      723A00
 3356              		.section	.text.print_RF,"ax",%progbits
 3357              		.align	2
 3358              		.global	print_RF
 3359              		.thumb
 3360              		.thumb_func
 3361              		.type	print_RF, %function
 3362              	print_RF:
 3363              	.LFB97:
 692:.\main.c      **** 
 693:.\main.c      **** void print_RF()
 694:.\main.c      **** {
 3364              		.loc 1 694 0
 3365              		.cfi_startproc
 3366              		@ args = 0, pretend = 0, frame = 16
 3367              		@ frame_needed = 1, uses_anonymous_args = 0
 3368 0000 80B5     		push	{r7, lr}
 3369              		.cfi_def_cfa_offset 8
 3370              		.cfi_offset 7, -8
 3371              		.cfi_offset 14, -4
 3372 0002 84B0     		sub	sp, sp, #16
 3373              		.cfi_def_cfa_offset 24
 3374 0004 00AF     		add	r7, sp, #0
 3375              		.cfi_def_cfa_register 7
 695:.\main.c      ****     if(flag_print_rf == 1)
 3376              		.loc 1 695 0
 3377 0006 254B     		ldr	r3, .L179
 3378 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3379 000a 012B     		cmp	r3, #1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 73


 3380 000c 42D1     		bne	.L177
 3381              	.LBB7:
 696:.\main.c      ****     {
 697:.\main.c      ****         char printString[16];
 698:.\main.c      ****         flag_print_rf = 0;
 3382              		.loc 1 698 0
 3383 000e 234B     		ldr	r3, .L179
 3384 0010 0022     		movs	r2, #0
 3385 0012 1A70     		strb	r2, [r3]
 699:.\main.c      ****         usbPutString("RSSI:");
 3386              		.loc 1 699 0
 3387 0014 2248     		ldr	r0, .L179+4
 3388 0016 FFF7FEFF 		bl	usbPutString
 700:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 3389              		.loc 1 700 0
 3390 001a 224B     		ldr	r3, .L179+8
 3391 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3392 001e 5BB2     		sxtb	r3, r3
 3393 0020 3A46     		mov	r2, r7
 3394 0022 1046     		mov	r0, r2
 3395 0024 2049     		ldr	r1, .L179+12
 3396 0026 1A46     		mov	r2, r3
 3397 0028 FFF7FEFF 		bl	sprintf
 701:.\main.c      ****         usbPutString(printString);
 3398              		.loc 1 701 0
 3399 002c 3B46     		mov	r3, r7
 3400 002e 1846     		mov	r0, r3
 3401 0030 FFF7FEFF 		bl	usbPutString
 702:.\main.c      ****         usbPutString("robot_x:");
 3402              		.loc 1 702 0
 3403 0034 1D48     		ldr	r0, .L179+16
 3404 0036 FFF7FEFF 		bl	usbPutString
 703:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 3405              		.loc 1 703 0
 3406 003a 1A4B     		ldr	r3, .L179+8
 3407 003c 5B88     		ldrh	r3, [r3, #2]
 3408 003e 1BB2     		sxth	r3, r3
 3409 0040 3A46     		mov	r2, r7
 3410 0042 1046     		mov	r0, r2
 3411 0044 1849     		ldr	r1, .L179+12
 3412 0046 1A46     		mov	r2, r3
 3413 0048 FFF7FEFF 		bl	sprintf
 704:.\main.c      ****         usbPutString(printString);
 3414              		.loc 1 704 0
 3415 004c 3B46     		mov	r3, r7
 3416 004e 1846     		mov	r0, r3
 3417 0050 FFF7FEFF 		bl	usbPutString
 705:.\main.c      ****         usbPutString("robot_y:");
 3418              		.loc 1 705 0
 3419 0054 1648     		ldr	r0, .L179+20
 3420 0056 FFF7FEFF 		bl	usbPutString
 706:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 3421              		.loc 1 706 0
 3422 005a 124B     		ldr	r3, .L179+8
 3423 005c 9B88     		ldrh	r3, [r3, #4]
 3424 005e 1BB2     		sxth	r3, r3
 3425 0060 3A46     		mov	r2, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 74


 3426 0062 1046     		mov	r0, r2
 3427 0064 1049     		ldr	r1, .L179+12
 3428 0066 1A46     		mov	r2, r3
 3429 0068 FFF7FEFF 		bl	sprintf
 707:.\main.c      ****         usbPutString(printString);
 3430              		.loc 1 707 0
 3431 006c 3B46     		mov	r3, r7
 3432 006e 1846     		mov	r0, r3
 3433 0070 FFF7FEFF 		bl	usbPutString
 708:.\main.c      ****         usbPutString("robot_dir:");
 3434              		.loc 1 708 0
 3435 0074 0F48     		ldr	r0, .L179+24
 3436 0076 FFF7FEFF 		bl	usbPutString
 709:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 3437              		.loc 1 709 0
 3438 007a 0A4B     		ldr	r3, .L179+8
 3439 007c DB88     		ldrh	r3, [r3, #6]
 3440 007e 1BB2     		sxth	r3, r3
 3441 0080 3A46     		mov	r2, r7
 3442 0082 1046     		mov	r0, r2
 3443 0084 0849     		ldr	r1, .L179+12
 3444 0086 1A46     		mov	r2, r3
 3445 0088 FFF7FEFF 		bl	sprintf
 710:.\main.c      ****         usbPutString(printString);
 3446              		.loc 1 710 0
 3447 008c 3B46     		mov	r3, r7
 3448 008e 1846     		mov	r0, r3
 3449 0090 FFF7FEFF 		bl	usbPutString
 3450              	.L177:
 3451              	.LBE7:
 711:.\main.c      ****     }
 712:.\main.c      **** }
 3452              		.loc 1 712 0
 3453 0094 1037     		adds	r7, r7, #16
 3454              		.cfi_def_cfa_offset 8
 3455 0096 BD46     		mov	sp, r7
 3456              		.cfi_def_cfa_register 13
 3457              		@ sp needed
 3458 0098 80BD     		pop	{r7, pc}
 3459              	.L180:
 3460 009a 00BF     		.align	2
 3461              	.L179:
 3462 009c 00000000 		.word	flag_print_rf
 3463 00a0 58000000 		.word	.LC5
 3464 00a4 00000000 		.word	system_state
 3465 00a8 60000000 		.word	.LC6
 3466 00ac 68000000 		.word	.LC7
 3467 00b0 74000000 		.word	.LC8
 3468 00b4 80000000 		.word	.LC9
 3469              		.cfi_endproc
 3470              	.LFE97:
 3471              		.size	print_RF, .-print_RF
 3472              		.section	.text.readFrontSensors,"ax",%progbits
 3473              		.align	2
 3474              		.global	readFrontSensors
 3475              		.thumb
 3476              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 75


 3477              		.type	readFrontSensors, %function
 3478              	readFrontSensors:
 3479              	.LFB98:
 713:.\main.c      **** 
 714:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 715:.\main.c      **** {
 3480              		.loc 1 715 0
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 8
 3483              		@ frame_needed = 1, uses_anonymous_args = 0
 3484 0000 90B5     		push	{r4, r7, lr}
 3485              		.cfi_def_cfa_offset 12
 3486              		.cfi_offset 4, -12
 3487              		.cfi_offset 7, -8
 3488              		.cfi_offset 14, -4
 3489 0002 83B0     		sub	sp, sp, #12
 3490              		.cfi_def_cfa_offset 24
 3491 0004 00AF     		add	r7, sp, #0
 3492              		.cfi_def_cfa_register 7
 3493 0006 7860     		str	r0, [r7, #4]
 716:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 3494              		.loc 1 716 0
 3495 0008 FFF7FEFF 		bl	FLSens_out_Read
 3496 000c 0346     		mov	r3, r0
 3497 000e 1A46     		mov	r2, r3
 3498 0010 7B68     		ldr	r3, [r7, #4]
 3499 0012 1A70     		strb	r2, [r3]
 717:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 3500              		.loc 1 717 0
 3501 0014 7B68     		ldr	r3, [r7, #4]
 3502 0016 5C1C     		adds	r4, r3, #1
 3503 0018 FFF7FEFF 		bl	NLSens_out_Read
 3504 001c 0346     		mov	r3, r0
 3505 001e 2370     		strb	r3, [r4]
 718:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 3506              		.loc 1 718 0
 3507 0020 7B68     		ldr	r3, [r7, #4]
 3508 0022 9C1C     		adds	r4, r3, #2
 3509 0024 FFF7FEFF 		bl	MSens_out_Read
 3510 0028 0346     		mov	r3, r0
 3511 002a 2370     		strb	r3, [r4]
 719:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 3512              		.loc 1 719 0
 3513 002c 7B68     		ldr	r3, [r7, #4]
 3514 002e DC1C     		adds	r4, r3, #3
 3515 0030 FFF7FEFF 		bl	NRSens_out_Read
 3516 0034 0346     		mov	r3, r0
 3517 0036 2370     		strb	r3, [r4]
 720:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 3518              		.loc 1 720 0
 3519 0038 7B68     		ldr	r3, [r7, #4]
 3520 003a 1C1D     		adds	r4, r3, #4
 3521 003c FFF7FEFF 		bl	FRSens_out_Read
 3522 0040 0346     		mov	r3, r0
 3523 0042 2370     		strb	r3, [r4]
 721:.\main.c      **** }
 3524              		.loc 1 721 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 76


 3525 0044 0C37     		adds	r7, r7, #12
 3526              		.cfi_def_cfa_offset 12
 3527 0046 BD46     		mov	sp, r7
 3528              		.cfi_def_cfa_register 13
 3529              		@ sp needed
 3530 0048 90BD     		pop	{r4, r7, pc}
 3531              		.cfi_endproc
 3532              	.LFE98:
 3533              		.size	readFrontSensors, .-readFrontSensors
 3534 004a 00BF     		.section	.rodata
 3535 008b 00       		.align	2
 3536              	.LC10:
 3537 008c 56616C69 		.ascii	"Valid RF detected!\000"
 3537      64205246 
 3537      20646574 
 3537      65637465 
 3537      642100
 3538 009f 00       		.section	.text.main,"ax",%progbits
 3539              		.align	2
 3540              		.global	main
 3541              		.thumb
 3542              		.thumb_func
 3543              		.type	main, %function
 3544              	main:
 3545              	.LFB99:
 722:.\main.c      **** 
 723:.\main.c      **** int main()
 724:.\main.c      **** {  
 3546              		.loc 1 724 0
 3547              		.cfi_startproc
 3548              		@ args = 0, pretend = 0, frame = 8
 3549              		@ frame_needed = 1, uses_anonymous_args = 0
 3550 0000 80B5     		push	{r7, lr}
 3551              		.cfi_def_cfa_offset 8
 3552              		.cfi_offset 7, -8
 3553              		.cfi_offset 14, -4
 3554 0002 82B0     		sub	sp, sp, #8
 3555              		.cfi_def_cfa_offset 16
 3556 0004 00AF     		add	r7, sp, #0
 3557              		.cfi_def_cfa_register 7
 725:.\main.c      **** 
 726:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 727:.\main.c      **** // ----- INITIALIZATIONS ----------
 728:.\main.c      ****     CYGlobalIntEnable;
 3558              		.loc 1 728 0
 3559              	@ 728 ".\main.c" 1
 3560 0006 62B6     		CPSIE   i
 3561              	@ 0 "" 2
 729:.\main.c      ****     if(ENABLE_PWM)
 730:.\main.c      ****     {
 731:.\main.c      ****         PWM_1_Start();// starting the pwm
 3562              		.loc 1 731 0
 3563              		.thumb
 3564 0008 FFF7FEFF 		bl	PWM_1_Start
 732:.\main.c      ****         PWM_2_Start();// starting the pwm
 3565              		.loc 1 732 0
 3566 000c FFF7FEFF 		bl	PWM_2_Start
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 77


 733:.\main.c      ****     }
 734:.\main.c      ****     
 735:.\main.c      ****     if(ENABLE_ADC)
 736:.\main.c      ****     {
 737:.\main.c      ****         ADC_Start();
 738:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 739:.\main.c      ****         //ADC_StartConvert();
 740:.\main.c      ****         
 741:.\main.c      ****         //start the ADC timer for software trigger mode
 742:.\main.c      ****         Timer_TS_Start();
 743:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 744:.\main.c      ****     }
 745:.\main.c      ****     
 746:.\main.c      ****     if (ENABLE_QUAD)
 747:.\main.c      ****     {
 748:.\main.c      ****         QuadDec_M1_Start();
 3567              		.loc 1 748 0
 3568 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 749:.\main.c      ****         QuadDec_M2_Start();
 3569              		.loc 1 749 0
 3570 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 750:.\main.c      ****         
 751:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 3571              		.loc 1 751 0
 3572 0018 4B48     		ldr	r0, .L209
 3573 001a FFF7FEFF 		bl	isr_quad1_StartEx
 752:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 3574              		.loc 1 752 0
 3575 001e 4B48     		ldr	r0, .L209+4
 3576 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 753:.\main.c      ****         
 754:.\main.c      ****         Timer_1_Start();
 3577              		.loc 1 754 0
 3578 0024 FFF7FEFF 		bl	Timer_1_Start
 755:.\main.c      ****     }
 756:.\main.c      ****     
 757:.\main.c      ****     if(ENABLE_STOP){
 758:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 759:.\main.c      ****         
 760:.\main.c      ****     }
 761:.\main.c      ****     isr_button_StartEx(button);
 3579              		.loc 1 761 0
 3580 0028 4948     		ldr	r0, .L209+8
 3581 002a FFF7FEFF 		bl	isr_button_StartEx
 762:.\main.c      ****     
 763:.\main.c      **** 
 764:.\main.c      ****     // ------USB SETUP ----------------    
 765:.\main.c      ****     if (USE_USB){    
 766:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 3582              		.loc 1 766 0
 3583 002e 0020     		movs	r0, #0
 3584 0030 0121     		movs	r1, #1
 3585 0032 FFF7FEFF 		bl	USBUART_Start
 767:.\main.c      ****         if (USBUART_GetConfiguration())
 3586              		.loc 1 767 0
 3587 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
 3588 003a 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 78


 3589 003c 002B     		cmp	r3, #0
 3590 003e 01D0     		beq	.L183
 768:.\main.c      ****             {
 769:.\main.c      ****                  USBUART_CDC_Init();
 3591              		.loc 1 769 0
 3592 0040 FFF7FEFF 		bl	USBUART_CDC_Init
 3593              	.L183:
 770:.\main.c      ****             }
 771:.\main.c      ****     }
 772:.\main.c      ****     
 773:.\main.c      ****     if(BIN_ENABLED){
 3594              		.loc 1 773 0
 3595 0044 434B     		ldr	r3, .L209+12
 3596 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3597 0048 002B     		cmp	r3, #0
 3598 004a 01D0     		beq	.L184
 774:.\main.c      ****         changeToRF();
 3599              		.loc 1 774 0
 3600 004c FFF7FEFF 		bl	changeToRF
 3601              	.L184:
 775:.\main.c      ****     }
 776:.\main.c      ****     
 777:.\main.c      ****     if(BT_ENABLED){
 3602              		.loc 1 777 0
 3603 0050 414B     		ldr	r3, .L209+16
 3604 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3605 0054 002B     		cmp	r3, #0
 3606 0056 01D0     		beq	.L185
 778:.\main.c      ****         changeToBT();
 3607              		.loc 1 778 0
 3608 0058 FFF7FEFF 		bl	changeToBT
 3609              	.L185:
 3610              	.LBB8:
 779:.\main.c      ****     }
 780:.\main.c      ****     
 781:.\main.c      ****     //usbPutString("Started");
 782:.\main.c      ****     for(;;)
 783:.\main.c      ****     {
 784:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 785:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 3611              		.loc 1 785 0
 3612 005c FFF7FEFF 		bl	Quad_Dec_response
 786:.\main.c      ****         if(BIN_ENABLED == 1)
 3613              		.loc 1 786 0
 3614 0060 3C4B     		ldr	r3, .L209+12
 3615 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3616 0064 012B     		cmp	r3, #1
 3617 0066 03D1     		bne	.L186
 787:.\main.c      ****         {
 788:.\main.c      ****             handle_rx_binary();
 3618              		.loc 1 788 0
 3619 0068 FFF7FEFF 		bl	handle_rx_binary
 789:.\main.c      ****             print_RF();
 3620              		.loc 1 789 0
 3621 006c FFF7FEFF 		bl	print_RF
 3622              	.L186:
 790:.\main.c      ****         }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 79


 791:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 792:.\main.c      ****         
 793:.\main.c      ****         uint8 frontSensors[5];
 794:.\main.c      ****         readFrontSensors(frontSensors);
 3623              		.loc 1 794 0
 3624 0070 3B46     		mov	r3, r7
 3625 0072 1846     		mov	r0, r3
 3626 0074 FFF7FEFF 		bl	readFrontSensors
 795:.\main.c      ****         
 796:.\main.c      ****         switch(track_mode)
 3627              		.loc 1 796 0
 3628 0078 384B     		ldr	r3, .L209+20
 3629 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3630 007c 052B     		cmp	r3, #5
 3631 007e 37D8     		bhi	.L187
 3632 0080 01A2     		adr	r2, .L189
 3633 0082 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3634 0086 00BF     		.p2align 2
 3635              	.L189:
 3636 0088 F1000000 		.word	.L187+1
 3637 008c F1000000 		.word	.L187+1
 3638 0090 F1000000 		.word	.L187+1
 3639 0094 A1000000 		.word	.L192+1
 3640 0098 F1000000 		.word	.L187+1
 3641 009c CD000000 		.word	.L194+1
 3642              		.p2align 1
 3643              	.L192:
 797:.\main.c      ****         {
 798:.\main.c      ****             case SQUARE_TRACK:
 799:.\main.c      ****                 if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 3644              		.loc 1 799 0
 3645 00a0 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3646 00a2 012B     		cmp	r3, #1
 3647 00a4 05D1     		bne	.L195
 3648              		.loc 1 799 0 is_stmt 0 discriminator 1
 3649 00a6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3650 00a8 012B     		cmp	r3, #1
 3651 00aa 02D1     		bne	.L195
 800:.\main.c      ****                     initTurnLeft();
 3652              		.loc 1 800 0 is_stmt 1
 3653 00ac FFF7FEFF 		bl	initTurnLeft
 3654 00b0 0BE0     		b	.L196
 3655              	.L195:
 801:.\main.c      ****                 }
 802:.\main.c      ****                 else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 3656              		.loc 1 802 0
 3657 00b2 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3658 00b4 012B     		cmp	r3, #1
 3659 00b6 05D1     		bne	.L197
 3660              		.loc 1 802 0 is_stmt 0 discriminator 1
 3661 00b8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3662 00ba 012B     		cmp	r3, #1
 3663 00bc 02D1     		bne	.L197
 803:.\main.c      ****                 {
 804:.\main.c      ****                     initTurnRight();
 3664              		.loc 1 804 0 is_stmt 1
 3665 00be FFF7FEFF 		bl	initTurnRight
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 80


 3666 00c2 02E0     		b	.L196
 3667              	.L197:
 805:.\main.c      ****                 }
 806:.\main.c      ****                 else inittrackLineZ();
 3668              		.loc 1 806 0
 3669 00c4 FFF7FEFF 		bl	inittrackLineZ
 807:.\main.c      ****             break;
 3670              		.loc 1 807 0
 3671 00c8 12E0     		b	.L187
 3672              	.L196:
 3673 00ca 11E0     		b	.L187
 3674              	.L194:
 808:.\main.c      ****             case NO_TRACK:
 809:.\main.c      ****             break;
 810:.\main.c      ****             case CURVE_TRACK:
 811:.\main.c      ****             break;
 812:.\main.c      ****             case U_TRACK:
 813:.\main.c      ****             break;
 814:.\main.c      ****             case QUAD_STOP:
 815:.\main.c      ****             break;
 816:.\main.c      ****             case RF_STOP:
 817:.\main.c      ****                 if(initial_pos_valid == 1)
 3675              		.loc 1 817 0
 3676 00cc 244B     		ldr	r3, .L209+24
 3677 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3678 00d0 012B     		cmp	r3, #1
 3679 00d2 0CD1     		bne	.L198
 818:.\main.c      ****                 {
 819:.\main.c      ****                     changeToBT();
 3680              		.loc 1 819 0
 3681 00d4 FFF7FEFF 		bl	changeToBT
 820:.\main.c      ****                     UART_PutString("Valid RF detected!");
 3682              		.loc 1 820 0
 3683 00d8 2248     		ldr	r0, .L209+28
 3684 00da FFF7FEFF 		bl	UART_PutString
 821:.\main.c      ****                     changeToRF();
 3685              		.loc 1 821 0
 3686 00de FFF7FEFF 		bl	changeToRF
 822:.\main.c      ****                     initial_pos_valid = 2;
 3687              		.loc 1 822 0
 3688 00e2 1F4B     		ldr	r3, .L209+24
 3689 00e4 0222     		movs	r2, #2
 3690 00e6 1A70     		strb	r2, [r3]
 823:.\main.c      ****                     initForward();
 3691              		.loc 1 823 0
 3692 00e8 FFF7FEFF 		bl	initForward
 824:.\main.c      ****                 }
 825:.\main.c      ****             break;
 3693              		.loc 1 825 0
 3694 00ec FFE7     		b	.L208
 3695              	.L198:
 3696              	.L208:
 3697 00ee 00BF     		nop
 3698              	.L187:
 826:.\main.c      ****         }
 827:.\main.c      ****         
 828:.\main.c      ****         switch(movement_state)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 81


 3699              		.loc 1 828 0
 3700 00f0 1D4B     		ldr	r3, .L209+32
 3701 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3702 00f4 062B     		cmp	r3, #6
 3703 00f6 B1D8     		bhi	.L185
 3704 00f8 01A2     		adr	r2, .L201
 3705 00fa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3706 00fe 00BF     		.p2align 2
 3707              	.L201:
 3708 0100 1D010000 		.word	.L200+1
 3709 0104 23010000 		.word	.L202+1
 3710 0108 29010000 		.word	.L203+1
 3711 010c 2F010000 		.word	.L204+1
 3712 0110 35010000 		.word	.L205+1
 3713 0114 3B010000 		.word	.L206+1
 3714 0118 41010000 		.word	.L207+1
 3715              		.p2align 1
 3716              	.L200:
 829:.\main.c      ****         {
 830:.\main.c      ****             case DRIVE:
 831:.\main.c      ****                 driveForwards();
 3717              		.loc 1 831 0
 3718 011c FFF7FEFF 		bl	driveForwards
 832:.\main.c      ****             break;
 3719              		.loc 1 832 0
 3720 0120 10E0     		b	.L199
 3721              	.L202:
 833:.\main.c      ****             case LTURN:
 834:.\main.c      ****                 turnLeft();
 3722              		.loc 1 834 0
 3723 0122 FFF7FEFF 		bl	turnLeft
 835:.\main.c      ****             break;
 3724              		.loc 1 835 0
 3725 0126 0DE0     		b	.L199
 3726              	.L203:
 836:.\main.c      ****             case RTURN:
 837:.\main.c      ****                 turnRight();
 3727              		.loc 1 837 0
 3728 0128 FFF7FEFF 		bl	turnRight
 838:.\main.c      ****             break;
 3729              		.loc 1 838 0
 3730 012c 0AE0     		b	.L199
 3731              	.L204:
 839:.\main.c      ****             case STOPPED:
 840:.\main.c      ****                 brakeMotor();
 3732              		.loc 1 840 0
 3733 012e FFF7FEFF 		bl	brakeMotor
 841:.\main.c      ****             break;
 3734              		.loc 1 841 0
 3735 0132 07E0     		b	.L199
 3736              	.L205:
 842:.\main.c      ****             case TRACKING:
 843:.\main.c      ****                 trackLine();
 3737              		.loc 1 843 0
 3738 0134 FFF7FEFF 		bl	trackLine
 844:.\main.c      ****             break;
 3739              		.loc 1 844 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 82


 3740 0138 04E0     		b	.L199
 3741              	.L206:
 845:.\main.c      ****             case TRACKING_U:
 846:.\main.c      ****                 trackLineU();
 3742              		.loc 1 846 0
 3743 013a FFF7FEFF 		bl	trackLineU
 847:.\main.c      ****             break;
 3744              		.loc 1 847 0
 3745 013e 01E0     		b	.L199
 3746              	.L207:
 848:.\main.c      ****             case TRACKING_SOFT:
 849:.\main.c      ****                 trackLineZ();
 3747              		.loc 1 849 0
 3748 0140 FFF7FEFF 		bl	trackLineZ
 3749              	.L199:
 3750              	.LBE8:
 850:.\main.c      ****         }
 851:.\main.c      ****         //handle_usb();        
 852:.\main.c      ****     }   
 3751              		.loc 1 852 0
 3752 0144 8AE7     		b	.L185
 3753              	.L210:
 3754 0146 00BF     		.align	2
 3755              	.L209:
 3756 0148 00000000 		.word	isr_quad1
 3757 014c 00000000 		.word	isr_turn_timer
 3758 0150 00000000 		.word	button
 3759 0154 00000000 		.word	BIN_ENABLED
 3760 0158 00000000 		.word	BT_ENABLED
 3761 015c 00000000 		.word	track_mode
 3762 0160 00000000 		.word	initial_pos_valid
 3763 0164 8C000000 		.word	.LC10
 3764 0168 00000000 		.word	movement_state
 3765              		.cfi_endproc
 3766              	.LFE99:
 3767              		.size	main, .-main
 3768              		.section	.text.usbPutString,"ax",%progbits
 3769              		.align	2
 3770              		.global	usbPutString
 3771              		.thumb
 3772              		.thumb_func
 3773              		.type	usbPutString, %function
 3774              	usbPutString:
 3775              	.LFB100:
 853:.\main.c      **** }
 854:.\main.c      **** //* ========================================
 855:.\main.c      **** void usbPutString(char *s)
 856:.\main.c      **** {
 3776              		.loc 1 856 0
 3777              		.cfi_startproc
 3778              		@ args = 0, pretend = 0, frame = 16
 3779              		@ frame_needed = 1, uses_anonymous_args = 0
 3780 0000 80B5     		push	{r7, lr}
 3781              		.cfi_def_cfa_offset 8
 3782              		.cfi_offset 7, -8
 3783              		.cfi_offset 14, -4
 3784 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 83


 3785              		.cfi_def_cfa_offset 24
 3786 0004 00AF     		add	r7, sp, #0
 3787              		.cfi_def_cfa_register 7
 3788 0006 7860     		str	r0, [r7, #4]
 857:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 858:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 859:.\main.c      **** //  length to 62 char (63rd char is a '!')
 860:.\main.c      ****     if (USE_USB && portOpen)    
 3789              		.loc 1 860 0
 3790 0008 154B     		ldr	r3, .L215
 3791 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3792 000c 002B     		cmp	r3, #0
 3793 000e 23D0     		beq	.L211
 3794              	.LBB9:
 861:.\main.c      ****     {
 862:.\main.c      ****             uint32 cnt = 0;
 3795              		.loc 1 862 0
 3796 0010 0023     		movs	r3, #0
 3797 0012 FB60     		str	r3, [r7, #12]
 863:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 3798              		.loc 1 863 0
 3799 0014 0AE0     		b	.L213
 3800              	.L214:
 864:.\main.c      ****             {
 865:.\main.c      ****                 cnt++;
 3801              		.loc 1 865 0
 3802 0016 FB68     		ldr	r3, [r7, #12]
 3803 0018 0133     		adds	r3, r3, #1
 3804 001a FB60     		str	r3, [r7, #12]
 866:.\main.c      ****                 if(cnt == 3000000){
 3805              		.loc 1 866 0
 3806 001c FB68     		ldr	r3, [r7, #12]
 3807 001e 114A     		ldr	r2, .L215+4
 3808 0020 9342     		cmp	r3, r2
 3809 0022 03D1     		bne	.L213
 867:.\main.c      ****                     portOpen = 0;
 3810              		.loc 1 867 0
 3811 0024 0E4B     		ldr	r3, .L215
 3812 0026 0022     		movs	r2, #0
 3813 0028 1A70     		strb	r2, [r3]
 868:.\main.c      ****                     return;
 3814              		.loc 1 868 0
 3815 002a 15E0     		b	.L211
 3816              	.L213:
 863:.\main.c      ****             {
 3817              		.loc 1 863 0
 3818 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 3819 0030 0346     		mov	r3, r0
 3820 0032 002B     		cmp	r3, #0
 3821 0034 EFD0     		beq	.L214
 869:.\main.c      ****                 }
 870:.\main.c      ****             }
 871:.\main.c      ****             s[63]='\0';
 3822              		.loc 1 871 0
 3823 0036 7B68     		ldr	r3, [r7, #4]
 3824 0038 3F33     		adds	r3, r3, #63
 3825 003a 0022     		movs	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 84


 3826 003c 1A70     		strb	r2, [r3]
 872:.\main.c      ****             s[62]='!';
 3827              		.loc 1 872 0
 3828 003e 7B68     		ldr	r3, [r7, #4]
 3829 0040 3E33     		adds	r3, r3, #62
 3830 0042 2122     		movs	r2, #33
 3831 0044 1A70     		strb	r2, [r3]
 873:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 3832              		.loc 1 873 0
 3833 0046 7868     		ldr	r0, [r7, #4]
 3834 0048 FFF7FEFF 		bl	strlen
 3835 004c 0346     		mov	r3, r0
 3836 004e 9BB2     		uxth	r3, r3
 3837 0050 7868     		ldr	r0, [r7, #4]
 3838 0052 1946     		mov	r1, r3
 3839 0054 FFF7FEFF 		bl	USBUART_PutData
 3840              	.L211:
 3841              	.LBE9:
 874:.\main.c      ****     }
 875:.\main.c      **** }
 3842              		.loc 1 875 0
 3843 0058 1037     		adds	r7, r7, #16
 3844              		.cfi_def_cfa_offset 8
 3845 005a BD46     		mov	sp, r7
 3846              		.cfi_def_cfa_register 13
 3847              		@ sp needed
 3848 005c 80BD     		pop	{r7, pc}
 3849              	.L216:
 3850 005e 00BF     		.align	2
 3851              	.L215:
 3852 0060 00000000 		.word	portOpen
 3853 0064 C0C62D00 		.word	3000000
 3854              		.cfi_endproc
 3855              	.LFE100:
 3856              		.size	usbPutString, .-usbPutString
 3857              		.section	.text.usbPutChar,"ax",%progbits
 3858              		.align	2
 3859              		.global	usbPutChar
 3860              		.thumb
 3861              		.thumb_func
 3862              		.type	usbPutChar, %function
 3863              	usbPutChar:
 3864              	.LFB101:
 876:.\main.c      **** //* ========================================
 877:.\main.c      **** void usbPutChar(char c)
 878:.\main.c      **** {
 3865              		.loc 1 878 0
 3866              		.cfi_startproc
 3867              		@ args = 0, pretend = 0, frame = 16
 3868              		@ frame_needed = 1, uses_anonymous_args = 0
 3869 0000 80B5     		push	{r7, lr}
 3870              		.cfi_def_cfa_offset 8
 3871              		.cfi_offset 7, -8
 3872              		.cfi_offset 14, -4
 3873 0002 84B0     		sub	sp, sp, #16
 3874              		.cfi_def_cfa_offset 24
 3875 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 85


 3876              		.cfi_def_cfa_register 7
 3877 0006 0346     		mov	r3, r0
 3878 0008 FB71     		strb	r3, [r7, #7]
 879:.\main.c      ****     if (USE_USB && portOpen)    
 3879              		.loc 1 879 0
 3880 000a 0F4B     		ldr	r3, .L221
 3881 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3882 000e 002B     		cmp	r3, #0
 3883 0010 16D0     		beq	.L217
 3884              	.LBB10:
 880:.\main.c      ****     {    
 881:.\main.c      ****         uint32 cnt = 0;
 3885              		.loc 1 881 0
 3886 0012 0023     		movs	r3, #0
 3887 0014 FB60     		str	r3, [r7, #12]
 882:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 3888              		.loc 1 882 0
 3889 0016 0AE0     		b	.L219
 3890              	.L220:
 883:.\main.c      ****             cnt++;
 3891              		.loc 1 883 0
 3892 0018 FB68     		ldr	r3, [r7, #12]
 3893 001a 0133     		adds	r3, r3, #1
 3894 001c FB60     		str	r3, [r7, #12]
 884:.\main.c      ****             if(cnt == 3000000){
 3895              		.loc 1 884 0
 3896 001e FB68     		ldr	r3, [r7, #12]
 3897 0020 0A4A     		ldr	r2, .L221+4
 3898 0022 9342     		cmp	r3, r2
 3899 0024 03D1     		bne	.L219
 885:.\main.c      ****                 portOpen = 0;
 3900              		.loc 1 885 0
 3901 0026 084B     		ldr	r3, .L221
 3902 0028 0022     		movs	r2, #0
 3903 002a 1A70     		strb	r2, [r3]
 886:.\main.c      ****                 return;
 3904              		.loc 1 886 0
 3905 002c 08E0     		b	.L217
 3906              	.L219:
 882:.\main.c      ****             cnt++;
 3907              		.loc 1 882 0
 3908 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 3909 0032 0346     		mov	r3, r0
 3910 0034 002B     		cmp	r3, #0
 3911 0036 EFD0     		beq	.L220
 887:.\main.c      ****             }
 888:.\main.c      ****         }
 889:.\main.c      ****         USBUART_PutChar(c);
 3912              		.loc 1 889 0
 3913 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3914 003a 1846     		mov	r0, r3
 3915 003c FFF7FEFF 		bl	USBUART_PutChar
 3916              	.L217:
 3917              	.LBE10:
 890:.\main.c      ****     }    
 891:.\main.c      **** }
 3918              		.loc 1 891 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 86


 3919 0040 1037     		adds	r7, r7, #16
 3920              		.cfi_def_cfa_offset 8
 3921 0042 BD46     		mov	sp, r7
 3922              		.cfi_def_cfa_register 13
 3923              		@ sp needed
 3924 0044 80BD     		pop	{r7, pc}
 3925              	.L222:
 3926 0046 00BF     		.align	2
 3927              	.L221:
 3928 0048 00000000 		.word	portOpen
 3929 004c C0C62D00 		.word	3000000
 3930              		.cfi_endproc
 3931              	.LFE101:
 3932              		.size	usbPutChar, .-usbPutChar
 3933              		.section	.text.uart_set_PWM,"ax",%progbits
 3934              		.align	2
 3935              		.global	uart_set_PWM
 3936              		.thumb
 3937              		.thumb_func
 3938              		.type	uart_set_PWM, %function
 3939              	uart_set_PWM:
 3940              	.LFB102:
 892:.\main.c      **** //* ========================================
 893:.\main.c      **** 
 894:.\main.c      **** void uart_set_PWM()
 895:.\main.c      **** {
 3941              		.loc 1 895 0
 3942              		.cfi_startproc
 3943              		@ args = 0, pretend = 0, frame = 8
 3944              		@ frame_needed = 1, uses_anonymous_args = 0
 3945 0000 80B5     		push	{r7, lr}
 3946              		.cfi_def_cfa_offset 8
 3947              		.cfi_offset 7, -8
 3948              		.cfi_offset 14, -4
 3949 0002 82B0     		sub	sp, sp, #8
 3950              		.cfi_def_cfa_offset 16
 3951 0004 00AF     		add	r7, sp, #0
 3952              		.cfi_def_cfa_register 7
 896:.\main.c      ****     uint8 c;
 897:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 3953              		.loc 1 897 0
 3954 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 3955 000a 0346     		mov	r3, r0
 3956 000c 002B     		cmp	r3, #0
 3957 000e 11D0     		beq	.L223
 898:.\main.c      ****        {  
 899:.\main.c      ****             c = USBUART_GetChar();
 3958              		.loc 1 899 0
 3959 0010 FFF7FEFF 		bl	USBUART_GetChar
 3960 0014 0346     		mov	r3, r0
 3961 0016 FB71     		strb	r3, [r7, #7]
 900:.\main.c      ****             
 901:.\main.c      ****             if(c <= 100 && c > 0){
 3962              		.loc 1 901 0
 3963 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3964 001a 642B     		cmp	r3, #100
 3965 001c 0AD8     		bhi	.L223
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 87


 3966              		.loc 1 901 0 is_stmt 0 discriminator 1
 3967 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3968 0020 002B     		cmp	r3, #0
 3969 0022 07D0     		beq	.L223
 902:.\main.c      ****                 PWM_1_WriteCompare(c);
 3970              		.loc 1 902 0 is_stmt 1
 3971 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3972 0026 1846     		mov	r0, r3
 3973 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 903:.\main.c      ****                 usbPutString(c);
 3974              		.loc 1 903 0
 3975 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3976 002e 1846     		mov	r0, r3
 3977 0030 FFF7FEFF 		bl	usbPutString
 3978              	.L223:
 904:.\main.c      ****             }
 905:.\main.c      ****        }
 906:.\main.c      **** }
 3979              		.loc 1 906 0
 3980 0034 0837     		adds	r7, r7, #8
 3981              		.cfi_def_cfa_offset 8
 3982 0036 BD46     		mov	sp, r7
 3983              		.cfi_def_cfa_register 13
 3984              		@ sp needed
 3985 0038 80BD     		pop	{r7, pc}
 3986              		.cfi_endproc
 3987              	.LFE102:
 3988              		.size	uart_set_PWM, .-uart_set_PWM
 3989 003a 00BF     		.text
 3990              	.Letext0:
 3991              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3992              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3993              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3994              		.file 5 ".\\vars.h"
 3995              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 3996              		.section	.debug_info,"",%progbits
 3997              	.Ldebug_info0:
 3998 0000 330C0000 		.4byte	0xc33
 3999 0004 0400     		.2byte	0x4
 4000 0006 00000000 		.4byte	.Ldebug_abbrev0
 4001 000a 04       		.byte	0x4
 4002 000b 01       		.uleb128 0x1
 4003 000c EB030000 		.4byte	.LASF169
 4004 0010 01       		.byte	0x1
 4005 0011 1D080000 		.4byte	.LASF170
 4006 0015 1A020000 		.4byte	.LASF171
 4007 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4008 001d 00000000 		.4byte	0
 4009 0021 00000000 		.4byte	.Ldebug_line0
 4010 0025 02       		.uleb128 0x2
 4011 0026 01       		.byte	0x1
 4012 0027 06       		.byte	0x6
 4013 0028 58070000 		.4byte	.LASF0
 4014 002c 02       		.uleb128 0x2
 4015 002d 01       		.byte	0x1
 4016 002e 08       		.byte	0x8
 4017 002f BB060000 		.4byte	.LASF1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 88


 4018 0033 02       		.uleb128 0x2
 4019 0034 02       		.byte	0x2
 4020 0035 05       		.byte	0x5
 4021 0036 70050000 		.4byte	.LASF2
 4022 003a 02       		.uleb128 0x2
 4023 003b 02       		.byte	0x2
 4024 003c 07       		.byte	0x7
 4025 003d 64070000 		.4byte	.LASF3
 4026 0041 03       		.uleb128 0x3
 4027 0042 6D000000 		.4byte	.LASF11
 4028 0046 02       		.byte	0x2
 4029 0047 3F       		.byte	0x3f
 4030 0048 4C000000 		.4byte	0x4c
 4031 004c 02       		.uleb128 0x2
 4032 004d 04       		.byte	0x4
 4033 004e 05       		.byte	0x5
 4034 004f 9A050000 		.4byte	.LASF4
 4035 0053 02       		.uleb128 0x2
 4036 0054 04       		.byte	0x4
 4037 0055 07       		.byte	0x7
 4038 0056 72060000 		.4byte	.LASF5
 4039 005a 02       		.uleb128 0x2
 4040 005b 08       		.byte	0x8
 4041 005c 05       		.byte	0x5
 4042 005d BE030000 		.4byte	.LASF6
 4043 0061 02       		.uleb128 0x2
 4044 0062 08       		.byte	0x8
 4045 0063 07       		.byte	0x7
 4046 0064 EA010000 		.4byte	.LASF7
 4047 0068 04       		.uleb128 0x4
 4048 0069 04       		.byte	0x4
 4049 006a 05       		.byte	0x5
 4050 006b 696E7400 		.ascii	"int\000"
 4051 006f 02       		.uleb128 0x2
 4052 0070 04       		.byte	0x4
 4053 0071 07       		.byte	0x7
 4054 0072 55000000 		.4byte	.LASF8
 4055 0076 02       		.uleb128 0x2
 4056 0077 04       		.byte	0x4
 4057 0078 07       		.byte	0x7
 4058 0079 69060000 		.4byte	.LASF9
 4059 007d 05       		.uleb128 0x5
 4060 007e 04       		.byte	0x4
 4061 007f 83000000 		.4byte	0x83
 4062 0083 02       		.uleb128 0x2
 4063 0084 01       		.byte	0x1
 4064 0085 08       		.byte	0x8
 4065 0086 2F030000 		.4byte	.LASF10
 4066 008a 03       		.uleb128 0x3
 4067 008b 90060000 		.4byte	.LASF12
 4068 008f 03       		.byte	0x3
 4069 0090 2C       		.byte	0x2c
 4070 0091 41000000 		.4byte	0x41
 4071 0095 06       		.uleb128 0x6
 4072 0096 B0070000 		.4byte	.LASF13
 4073 009a 04       		.byte	0x4
 4074 009b 9201     		.2byte	0x192
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 89


 4075 009d 2C000000 		.4byte	0x2c
 4076 00a1 06       		.uleb128 0x6
 4077 00a2 60030000 		.4byte	.LASF14
 4078 00a6 04       		.byte	0x4
 4079 00a7 9301     		.2byte	0x193
 4080 00a9 3A000000 		.4byte	0x3a
 4081 00ad 06       		.uleb128 0x6
 4082 00ae B2040000 		.4byte	.LASF15
 4083 00b2 04       		.byte	0x4
 4084 00b3 9401     		.2byte	0x194
 4085 00b5 53000000 		.4byte	0x53
 4086 00b9 06       		.uleb128 0x6
 4087 00ba 67030000 		.4byte	.LASF16
 4088 00be 04       		.byte	0x4
 4089 00bf 9501     		.2byte	0x195
 4090 00c1 25000000 		.4byte	0x25
 4091 00c5 06       		.uleb128 0x6
 4092 00c6 77000000 		.4byte	.LASF17
 4093 00ca 04       		.byte	0x4
 4094 00cb 9601     		.2byte	0x196
 4095 00cd 33000000 		.4byte	0x33
 4096 00d1 02       		.uleb128 0x2
 4097 00d2 04       		.byte	0x4
 4098 00d3 04       		.byte	0x4
 4099 00d4 8A010000 		.4byte	.LASF18
 4100 00d8 02       		.uleb128 0x2
 4101 00d9 08       		.byte	0x8
 4102 00da 04       		.byte	0x4
 4103 00db B6070000 		.4byte	.LASF19
 4104 00df 02       		.uleb128 0x2
 4105 00e0 08       		.byte	0x8
 4106 00e1 04       		.byte	0x4
 4107 00e2 1B050000 		.4byte	.LASF20
 4108 00e6 07       		.uleb128 0x7
 4109 00e7 FC060000 		.4byte	.LASF28
 4110 00eb 01       		.byte	0x1
 4111 00ec 05       		.byte	0x5
 4112 00ed 5A       		.byte	0x5a
 4113 00ee 1D010000 		.4byte	0x11d
 4114 00f2 08       		.uleb128 0x8
 4115 00f3 A9010000 		.4byte	.LASF21
 4116 00f7 00       		.sleb128 0
 4117 00f8 08       		.uleb128 0x8
 4118 00f9 8A000000 		.4byte	.LASF22
 4119 00fd 01       		.sleb128 1
 4120 00fe 08       		.uleb128 0x8
 4121 00ff 0A000000 		.4byte	.LASF23
 4122 0103 02       		.sleb128 2
 4123 0104 08       		.uleb128 0x8
 4124 0105 0A050000 		.4byte	.LASF24
 4125 0109 03       		.sleb128 3
 4126 010a 08       		.uleb128 0x8
 4127 010b B2000000 		.4byte	.LASF25
 4128 010f 04       		.sleb128 4
 4129 0110 08       		.uleb128 0x8
 4130 0111 5C010000 		.4byte	.LASF26
 4131 0115 05       		.sleb128 5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 90


 4132 0116 08       		.uleb128 0x8
 4133 0117 F4050000 		.4byte	.LASF27
 4134 011b 06       		.sleb128 6
 4135 011c 00       		.byte	0
 4136 011d 07       		.uleb128 0x7
 4137 011e DD000000 		.4byte	.LASF29
 4138 0122 01       		.byte	0x1
 4139 0123 05       		.byte	0x5
 4140 0124 5B       		.byte	0x5b
 4141 0125 4E010000 		.4byte	0x14e
 4142 0129 08       		.uleb128 0x8
 4143 012a DC050000 		.4byte	.LASF30
 4144 012e 00       		.sleb128 0
 4145 012f 08       		.uleb128 0x8
 4146 0130 85030000 		.4byte	.LASF31
 4147 0134 01       		.sleb128 1
 4148 0135 08       		.uleb128 0x8
 4149 0136 B1050000 		.4byte	.LASF32
 4150 013a 02       		.sleb128 2
 4151 013b 08       		.uleb128 0x8
 4152 013c 16010000 		.4byte	.LASF33
 4153 0140 03       		.sleb128 3
 4154 0141 08       		.uleb128 0x8
 4155 0142 89070000 		.4byte	.LASF34
 4156 0146 04       		.sleb128 4
 4157 0147 08       		.uleb128 0x8
 4158 0148 CE070000 		.4byte	.LASF35
 4159 014c 05       		.sleb128 5
 4160 014d 00       		.byte	0
 4161 014e 09       		.uleb128 0x9
 4162 014f C5040000 		.4byte	.LASF172
 4163 0153 20       		.byte	0x20
 4164 0154 05       		.byte	0x5
 4165 0155 61       		.byte	0x61
 4166 0156 27020000 		.4byte	0x227
 4167 015a 0A       		.uleb128 0xa
 4168 015b DD040000 		.4byte	.LASF36
 4169 015f 05       		.byte	0x5
 4170 0160 62       		.byte	0x62
 4171 0161 B9000000 		.4byte	0xb9
 4172 0165 00       		.byte	0
 4173 0166 0A       		.uleb128 0xa
 4174 0167 A3010000 		.4byte	.LASF37
 4175 016b 05       		.byte	0x5
 4176 016c 63       		.byte	0x63
 4177 016d 95000000 		.4byte	0x95
 4178 0171 01       		.byte	0x1
 4179 0172 0A       		.uleb128 0xa
 4180 0173 9F060000 		.4byte	.LASF38
 4181 0177 05       		.byte	0x5
 4182 0178 64       		.byte	0x64
 4183 0179 C5000000 		.4byte	0xc5
 4184 017d 02       		.byte	0x2
 4185 017e 0A       		.uleb128 0xa
 4186 017f 03030000 		.4byte	.LASF39
 4187 0183 05       		.byte	0x5
 4188 0184 65       		.byte	0x65
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 91


 4189 0185 C5000000 		.4byte	0xc5
 4190 0189 04       		.byte	0x4
 4191 018a 0A       		.uleb128 0xa
 4192 018b 77070000 		.4byte	.LASF40
 4193 018f 05       		.byte	0x5
 4194 0190 66       		.byte	0x66
 4195 0191 C5000000 		.4byte	0xc5
 4196 0195 06       		.byte	0x6
 4197 0196 0A       		.uleb128 0xa
 4198 0197 F0070000 		.4byte	.LASF41
 4199 019b 05       		.byte	0x5
 4200 019c 67       		.byte	0x67
 4201 019d C5000000 		.4byte	0xc5
 4202 01a1 08       		.byte	0x8
 4203 01a2 0A       		.uleb128 0xa
 4204 01a3 82040000 		.4byte	.LASF42
 4205 01a7 05       		.byte	0x5
 4206 01a8 68       		.byte	0x68
 4207 01a9 C5000000 		.4byte	0xc5
 4208 01ad 0A       		.byte	0xa
 4209 01ae 0A       		.uleb128 0xa
 4210 01af 34030000 		.4byte	.LASF43
 4211 01b3 05       		.byte	0x5
 4212 01b4 69       		.byte	0x69
 4213 01b5 C5000000 		.4byte	0xc5
 4214 01b9 0C       		.byte	0xc
 4215 01ba 0A       		.uleb128 0xa
 4216 01bb EC040000 		.4byte	.LASF44
 4217 01bf 05       		.byte	0x5
 4218 01c0 6A       		.byte	0x6a
 4219 01c1 C5000000 		.4byte	0xc5
 4220 01c5 0E       		.byte	0xe
 4221 01c6 0A       		.uleb128 0xa
 4222 01c7 D9030000 		.4byte	.LASF45
 4223 01cb 05       		.byte	0x5
 4224 01cc 6B       		.byte	0x6b
 4225 01cd C5000000 		.4byte	0xc5
 4226 01d1 10       		.byte	0x10
 4227 01d2 0A       		.uleb128 0xa
 4228 01d3 29060000 		.4byte	.LASF46
 4229 01d7 05       		.byte	0x5
 4230 01d8 6C       		.byte	0x6c
 4231 01d9 C5000000 		.4byte	0xc5
 4232 01dd 12       		.byte	0x12
 4233 01de 0A       		.uleb128 0xa
 4234 01df 14080000 		.4byte	.LASF47
 4235 01e3 05       		.byte	0x5
 4236 01e4 6D       		.byte	0x6d
 4237 01e5 C5000000 		.4byte	0xc5
 4238 01e9 14       		.byte	0x14
 4239 01ea 0A       		.uleb128 0xa
 4240 01eb 6C030000 		.4byte	.LASF48
 4241 01ef 05       		.byte	0x5
 4242 01f0 6E       		.byte	0x6e
 4243 01f1 C5000000 		.4byte	0xc5
 4244 01f5 16       		.byte	0x16
 4245 01f6 0A       		.uleb128 0xa
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 92


 4246 01f7 D5000000 		.4byte	.LASF49
 4247 01fb 05       		.byte	0x5
 4248 01fc 6F       		.byte	0x6f
 4249 01fd C5000000 		.4byte	0xc5
 4250 0201 18       		.byte	0x18
 4251 0202 0A       		.uleb128 0xa
 4252 0203 58030000 		.4byte	.LASF50
 4253 0207 05       		.byte	0x5
 4254 0208 70       		.byte	0x70
 4255 0209 C5000000 		.4byte	0xc5
 4256 020d 1A       		.byte	0x1a
 4257 020e 0A       		.uleb128 0xa
 4258 020f 79040000 		.4byte	.LASF51
 4259 0213 05       		.byte	0x5
 4260 0214 71       		.byte	0x71
 4261 0215 C5000000 		.4byte	0xc5
 4262 0219 1C       		.byte	0x1c
 4263 021a 0A       		.uleb128 0xa
 4264 021b 73010000 		.4byte	.LASF52
 4265 021f 05       		.byte	0x5
 4266 0220 72       		.byte	0x72
 4267 0221 C5000000 		.4byte	0xc5
 4268 0225 1E       		.byte	0x1e
 4269 0226 00       		.byte	0
 4270 0227 0B       		.uleb128 0xb
 4271 0228 D6070000 		.4byte	.LASF58
 4272 022c 01       		.byte	0x1
 4273 022d 2C       		.byte	0x2c
 4274 022e 00000000 		.4byte	.LFB63
 4275 0232 60010000 		.4byte	.LFE63-.LFB63
 4276 0236 01       		.uleb128 0x1
 4277 0237 9C       		.byte	0x9c
 4278 0238 71020000 		.4byte	0x271
 4279 023c 0C       		.uleb128 0xc
 4280 023d 10000000 		.4byte	.LBB2
 4281 0241 34010000 		.4byte	.LBE2-.LBB2
 4282 0245 0D       		.uleb128 0xd
 4283 0246 C8000000 		.4byte	.LASF53
 4284 024a 01       		.byte	0x1
 4285 024b 32       		.byte	0x32
 4286 024c A1000000 		.4byte	0xa1
 4287 0250 02       		.uleb128 0x2
 4288 0251 91       		.byte	0x91
 4289 0252 76       		.sleb128 -10
 4290 0253 0D       		.uleb128 0xd
 4291 0254 84060000 		.4byte	.LASF54
 4292 0258 01       		.byte	0x1
 4293 0259 34       		.byte	0x34
 4294 025a 71020000 		.4byte	0x271
 4295 025e 02       		.uleb128 0x2
 4296 025f 91       		.byte	0x91
 4297 0260 68       		.sleb128 -24
 4298 0261 0D       		.uleb128 0xd
 4299 0262 AF010000 		.4byte	.LASF55
 4300 0266 01       		.byte	0x1
 4301 0267 35       		.byte	0x35
 4302 0268 71020000 		.4byte	0x271
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 93


 4303 026c 02       		.uleb128 0x2
 4304 026d 91       		.byte	0x91
 4305 026e 5C       		.sleb128 -36
 4306 026f 00       		.byte	0
 4307 0270 00       		.byte	0
 4308 0271 0E       		.uleb128 0xe
 4309 0272 83000000 		.4byte	0x83
 4310 0276 81020000 		.4byte	0x281
 4311 027a 0F       		.uleb128 0xf
 4312 027b 76000000 		.4byte	0x76
 4313 027f 0B       		.byte	0xb
 4314 0280 00       		.byte	0
 4315 0281 10       		.uleb128 0x10
 4316 0282 4D030000 		.4byte	.LASF56
 4317 0286 01       		.byte	0x1
 4318 0287 A7       		.byte	0xa7
 4319 0288 00000000 		.4byte	.LFB64
 4320 028c 18000000 		.4byte	.LFE64-.LFB64
 4321 0290 01       		.uleb128 0x1
 4322 0291 9C       		.byte	0x9c
 4323 0292 A5020000 		.4byte	0x2a5
 4324 0296 11       		.uleb128 0x11
 4325 0297 64697200 		.ascii	"dir\000"
 4326 029b 01       		.byte	0x1
 4327 029c A7       		.byte	0xa7
 4328 029d 95000000 		.4byte	0x95
 4329 02a1 02       		.uleb128 0x2
 4330 02a2 91       		.byte	0x91
 4331 02a3 77       		.sleb128 -9
 4332 02a4 00       		.byte	0
 4333 02a5 10       		.uleb128 0x10
 4334 02a6 79030000 		.4byte	.LASF57
 4335 02aa 01       		.byte	0x1
 4336 02ab AC       		.byte	0xac
 4337 02ac 00000000 		.4byte	.LFB65
 4338 02b0 18000000 		.4byte	.LFE65-.LFB65
 4339 02b4 01       		.uleb128 0x1
 4340 02b5 9C       		.byte	0x9c
 4341 02b6 C9020000 		.4byte	0x2c9
 4342 02ba 11       		.uleb128 0x11
 4343 02bb 64697200 		.ascii	"dir\000"
 4344 02bf 01       		.byte	0x1
 4345 02c0 AC       		.byte	0xac
 4346 02c1 95000000 		.4byte	0x95
 4347 02c5 02       		.uleb128 0x2
 4348 02c6 91       		.byte	0x91
 4349 02c7 77       		.sleb128 -9
 4350 02c8 00       		.byte	0
 4351 02c9 12       		.uleb128 0x12
 4352 02ca 02070000 		.4byte	.LASF59
 4353 02ce 01       		.byte	0x1
 4354 02cf B1       		.byte	0xb1
 4355 02d0 00000000 		.4byte	.LFB66
 4356 02d4 54000000 		.4byte	.LFE66-.LFB66
 4357 02d8 01       		.uleb128 0x1
 4358 02d9 9C       		.byte	0x9c
 4359 02da ED020000 		.4byte	0x2ed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 94


 4360 02de 13       		.uleb128 0x13
 4361 02df 6D657300 		.ascii	"mes\000"
 4362 02e3 01       		.byte	0x1
 4363 02e4 B6       		.byte	0xb6
 4364 02e5 ED020000 		.4byte	0x2ed
 4365 02e9 02       		.uleb128 0x2
 4366 02ea 91       		.byte	0x91
 4367 02eb 68       		.sleb128 -24
 4368 02ec 00       		.byte	0
 4369 02ed 0E       		.uleb128 0xe
 4370 02ee 83000000 		.4byte	0x83
 4371 02f2 FD020000 		.4byte	0x2fd
 4372 02f6 0F       		.uleb128 0xf
 4373 02f7 76000000 		.4byte	0x76
 4374 02fb 0F       		.byte	0xf
 4375 02fc 00       		.byte	0
 4376 02fd 10       		.uleb128 0x10
 4377 02fe 90010000 		.4byte	.LASF60
 4378 0302 01       		.byte	0x1
 4379 0303 BB       		.byte	0xbb
 4380 0304 00000000 		.4byte	.LFB67
 4381 0308 F4000000 		.4byte	.LFE67-.LFB67
 4382 030c 01       		.uleb128 0x1
 4383 030d 9C       		.byte	0x9c
 4384 030e 4B030000 		.4byte	0x34b
 4385 0312 14       		.uleb128 0x14
 4386 0313 02060000 		.4byte	.LASF61
 4387 0317 01       		.byte	0x1
 4388 0318 BB       		.byte	0xbb
 4389 0319 D8000000 		.4byte	0xd8
 4390 031d 02       		.uleb128 0x2
 4391 031e 91       		.byte	0x91
 4392 031f 68       		.sleb128 -24
 4393 0320 14       		.uleb128 0x14
 4394 0321 A6030000 		.4byte	.LASF62
 4395 0325 01       		.byte	0x1
 4396 0326 BB       		.byte	0xbb
 4397 0327 D8000000 		.4byte	0xd8
 4398 032b 02       		.uleb128 0x2
 4399 032c 91       		.byte	0x91
 4400 032d 60       		.sleb128 -32
 4401 032e 0D       		.uleb128 0xd
 4402 032f C8010000 		.4byte	.LASF63
 4403 0333 01       		.byte	0x1
 4404 0334 D0       		.byte	0xd0
 4405 0335 C5000000 		.4byte	0xc5
 4406 0339 02       		.uleb128 0x2
 4407 033a 91       		.byte	0x91
 4408 033b 76       		.sleb128 -10
 4409 033c 0D       		.uleb128 0xd
 4410 033d B9040000 		.4byte	.LASF64
 4411 0341 01       		.byte	0x1
 4412 0342 D1       		.byte	0xd1
 4413 0343 C5000000 		.4byte	0xc5
 4414 0347 02       		.uleb128 0x2
 4415 0348 91       		.byte	0x91
 4416 0349 74       		.sleb128 -12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 95


 4417 034a 00       		.byte	0
 4418 034b 15       		.uleb128 0x15
 4419 034c 13070000 		.4byte	.LASF65
 4420 0350 01       		.byte	0x1
 4421 0351 D7       		.byte	0xd7
 4422 0352 00000000 		.4byte	.LFB68
 4423 0356 18000000 		.4byte	.LFE68-.LFB68
 4424 035a 01       		.uleb128 0x1
 4425 035b 9C       		.byte	0x9c
 4426 035c 15       		.uleb128 0x15
 4427 035d 34080000 		.4byte	.LASF66
 4428 0361 01       		.byte	0x1
 4429 0362 DD       		.byte	0xdd
 4430 0363 00000000 		.4byte	.LFB69
 4431 0367 18000000 		.4byte	.LFE69-.LFB69
 4432 036b 01       		.uleb128 0x1
 4433 036c 9C       		.byte	0x9c
 4434 036d 15       		.uleb128 0x15
 4435 036e AA060000 		.4byte	.LASF67
 4436 0372 01       		.byte	0x1
 4437 0373 E3       		.byte	0xe3
 4438 0374 00000000 		.4byte	.LFB70
 4439 0378 22000000 		.4byte	.LFE70-.LFB70
 4440 037c 01       		.uleb128 0x1
 4441 037d 9C       		.byte	0x9c
 4442 037e 15       		.uleb128 0x15
 4443 037f D3010000 		.4byte	.LASF68
 4444 0383 01       		.byte	0x1
 4445 0384 E9       		.byte	0xe9
 4446 0385 00000000 		.4byte	.LFB71
 4447 0389 1C000000 		.4byte	.LFE71-.LFB71
 4448 038d 01       		.uleb128 0x1
 4449 038e 9C       		.byte	0x9c
 4450 038f 15       		.uleb128 0x15
 4451 0390 1F060000 		.4byte	.LASF69
 4452 0394 01       		.byte	0x1
 4453 0395 EE       		.byte	0xee
 4454 0396 00000000 		.4byte	.LFB72
 4455 039a 28000000 		.4byte	.LFE72-.LFB72
 4456 039e 01       		.uleb128 0x1
 4457 039f 9C       		.byte	0x9c
 4458 03a0 15       		.uleb128 0x15
 4459 03a1 E1010000 		.4byte	.LASF70
 4460 03a5 01       		.byte	0x1
 4461 03a6 F3       		.byte	0xf3
 4462 03a7 00000000 		.4byte	.LFB73
 4463 03ab 2C000000 		.4byte	.LFE73-.LFB73
 4464 03af 01       		.uleb128 0x1
 4465 03b0 9C       		.byte	0x9c
 4466 03b1 15       		.uleb128 0x15
 4467 03b2 59020000 		.4byte	.LASF71
 4468 03b6 01       		.byte	0x1
 4469 03b7 F8       		.byte	0xf8
 4470 03b8 00000000 		.4byte	.LFB74
 4471 03bc 38000000 		.4byte	.LFE74-.LFB74
 4472 03c0 01       		.uleb128 0x1
 4473 03c1 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 96


 4474 03c2 16       		.uleb128 0x16
 4475 03c3 A3050000 		.4byte	.LASF72
 4476 03c7 01       		.byte	0x1
 4477 03c8 0101     		.2byte	0x101
 4478 03ca 00000000 		.4byte	.LFB75
 4479 03ce 38000000 		.4byte	.LFE75-.LFB75
 4480 03d2 01       		.uleb128 0x1
 4481 03d3 9C       		.byte	0x9c
 4482 03d4 16       		.uleb128 0x16
 4483 03d5 67010000 		.4byte	.LASF73
 4484 03d9 01       		.byte	0x1
 4485 03da 0A01     		.2byte	0x10a
 4486 03dc 00000000 		.4byte	.LFB76
 4487 03e0 14000000 		.4byte	.LFE76-.LFB76
 4488 03e4 01       		.uleb128 0x1
 4489 03e5 9C       		.byte	0x9c
 4490 03e6 17       		.uleb128 0x17
 4491 03e7 6F020000 		.4byte	.LASF74
 4492 03eb 01       		.byte	0x1
 4493 03ec 0F01     		.2byte	0x10f
 4494 03ee 00000000 		.4byte	.LFB77
 4495 03f2 18000000 		.4byte	.LFE77-.LFB77
 4496 03f6 01       		.uleb128 0x1
 4497 03f7 9C       		.byte	0x9c
 4498 03f8 17       		.uleb128 0x17
 4499 03f9 E1030000 		.4byte	.LASF75
 4500 03fd 01       		.byte	0x1
 4501 03fe 1301     		.2byte	0x113
 4502 0400 00000000 		.4byte	.LFB78
 4503 0404 18000000 		.4byte	.LFE78-.LFB78
 4504 0408 01       		.uleb128 0x1
 4505 0409 9C       		.byte	0x9c
 4506 040a 17       		.uleb128 0x17
 4507 040b 3F080000 		.4byte	.LASF76
 4508 040f 01       		.byte	0x1
 4509 0410 1801     		.2byte	0x118
 4510 0412 00000000 		.4byte	.LFB79
 4511 0416 18000000 		.4byte	.LFE79-.LFB79
 4512 041a 01       		.uleb128 0x1
 4513 041b 9C       		.byte	0x9c
 4514 041c 17       		.uleb128 0x17
 4515 041d F4020000 		.4byte	.LASF77
 4516 0421 01       		.byte	0x1
 4517 0422 1C01     		.2byte	0x11c
 4518 0424 00000000 		.4byte	.LFB80
 4519 0428 18000000 		.4byte	.LFE80-.LFB80
 4520 042c 01       		.uleb128 0x1
 4521 042d 9C       		.byte	0x9c
 4522 042e 18       		.uleb128 0x18
 4523 042f 27050000 		.4byte	.LASF78
 4524 0433 01       		.byte	0x1
 4525 0434 2301     		.2byte	0x123
 4526 0436 00000000 		.4byte	.LFB81
 4527 043a B8000000 		.4byte	.LFE81-.LFB81
 4528 043e 01       		.uleb128 0x1
 4529 043f 9C       		.byte	0x9c
 4530 0440 54040000 		.4byte	0x454
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 97


 4531 0444 19       		.uleb128 0x19
 4532 0445 8A040000 		.4byte	.LASF79
 4533 0449 01       		.byte	0x1
 4534 044a 2401     		.2byte	0x124
 4535 044c 83000000 		.4byte	0x83
 4536 0450 02       		.uleb128 0x2
 4537 0451 91       		.byte	0x91
 4538 0452 6F       		.sleb128 -17
 4539 0453 00       		.byte	0
 4540 0454 18       		.uleb128 0x18
 4541 0455 12050000 		.4byte	.LASF80
 4542 0459 01       		.byte	0x1
 4543 045a 4001     		.2byte	0x140
 4544 045c 00000000 		.4byte	.LFB82
 4545 0460 78010000 		.4byte	.LFE82-.LFB82
 4546 0464 01       		.uleb128 0x1
 4547 0465 9C       		.byte	0x9c
 4548 0466 93040000 		.4byte	0x493
 4549 046a 19       		.uleb128 0x19
 4550 046b 8A040000 		.4byte	.LASF79
 4551 046f 01       		.byte	0x1
 4552 0470 4201     		.2byte	0x142
 4553 0472 83000000 		.4byte	0x83
 4554 0476 02       		.uleb128 0x2
 4555 0477 91       		.byte	0x91
 4556 0478 77       		.sleb128 -9
 4557 0479 0C       		.uleb128 0xc
 4558 047a 88000000 		.4byte	.LBB3
 4559 047e CC000000 		.4byte	.LBE3-.LBB3
 4560 0482 1A       		.uleb128 0x1a
 4561 0483 6D657300 		.ascii	"mes\000"
 4562 0487 01       		.byte	0x1
 4563 0488 6801     		.2byte	0x168
 4564 048a ED020000 		.4byte	0x2ed
 4565 048e 02       		.uleb128 0x2
 4566 048f 91       		.byte	0x91
 4567 0490 64       		.sleb128 -28
 4568 0491 00       		.byte	0
 4569 0492 00       		.byte	0
 4570 0493 1B       		.uleb128 0x1b
 4571 0494 98070000 		.4byte	.LASF81
 4572 0498 01       		.byte	0x1
 4573 0499 7801     		.2byte	0x178
 4574 049b 00000000 		.4byte	.LFB83
 4575 049f 0C000000 		.4byte	.LFE83-.LFB83
 4576 04a3 01       		.uleb128 0x1
 4577 04a4 9C       		.byte	0x9c
 4578 04a5 1C       		.uleb128 0x1c
 4579 04a6 31060000 		.4byte	.LASF82
 4580 04aa 01       		.byte	0x1
 4581 04ab 7E01     		.2byte	0x17e
 4582 04ad 00000000 		.4byte	.LFB84
 4583 04b1 2C000000 		.4byte	.LFE84-.LFB84
 4584 04b5 01       		.uleb128 0x1
 4585 04b6 9C       		.byte	0x9c
 4586 04b7 18       		.uleb128 0x18
 4587 04b8 80010000 		.4byte	.LASF83
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 98


 4588 04bc 01       		.byte	0x1
 4589 04bd 8701     		.2byte	0x187
 4590 04bf 00000000 		.4byte	.LFB85
 4591 04c3 F0010000 		.4byte	.LFE85-.LFB85
 4592 04c7 01       		.uleb128 0x1
 4593 04c8 9C       		.byte	0x9c
 4594 04c9 04050000 		.4byte	0x504
 4595 04cd 1D       		.uleb128 0x1d
 4596 04ce AC000000 		.4byte	.LBB4
 4597 04d2 52000000 		.4byte	.LBE4-.LBB4
 4598 04d6 EA040000 		.4byte	0x4ea
 4599 04da 1A       		.uleb128 0x1a
 4600 04db 6D657300 		.ascii	"mes\000"
 4601 04df 01       		.byte	0x1
 4602 04e0 9E01     		.2byte	0x19e
 4603 04e2 ED020000 		.4byte	0x2ed
 4604 04e6 02       		.uleb128 0x2
 4605 04e7 91       		.byte	0x91
 4606 04e8 58       		.sleb128 -40
 4607 04e9 00       		.byte	0
 4608 04ea 0C       		.uleb128 0xc
 4609 04eb 0A010000 		.4byte	.LBB5
 4610 04ef 90000000 		.4byte	.LBE5-.LBB5
 4611 04f3 19       		.uleb128 0x19
 4612 04f4 AB070000 		.4byte	.LASF84
 4613 04f8 01       		.byte	0x1
 4614 04f9 A901     		.2byte	0x1a9
 4615 04fb D8000000 		.4byte	0xd8
 4616 04ff 02       		.uleb128 0x2
 4617 0500 91       		.byte	0x91
 4618 0501 68       		.sleb128 -24
 4619 0502 00       		.byte	0
 4620 0503 00       		.byte	0
 4621 0504 1C       		.uleb128 0x1c
 4622 0505 3F020000 		.4byte	.LASF85
 4623 0509 01       		.byte	0x1
 4624 050a B301     		.2byte	0x1b3
 4625 050c 00000000 		.4byte	.LFB86
 4626 0510 78000000 		.4byte	.LFE86-.LFB86
 4627 0514 01       		.uleb128 0x1
 4628 0515 9C       		.byte	0x9c
 4629 0516 1B       		.uleb128 0x1b
 4630 0517 CE060000 		.4byte	.LASF86
 4631 051b 01       		.byte	0x1
 4632 051c CC01     		.2byte	0x1cc
 4633 051e 00000000 		.4byte	.LFB87
 4634 0522 20000000 		.4byte	.LFE87-.LFB87
 4635 0526 01       		.uleb128 0x1
 4636 0527 9C       		.byte	0x9c
 4637 0528 1C       		.uleb128 0x1c
 4638 0529 B6020000 		.4byte	.LASF87
 4639 052d 01       		.byte	0x1
 4640 052e D301     		.2byte	0x1d3
 4641 0530 00000000 		.4byte	.LFB88
 4642 0534 28000000 		.4byte	.LFE88-.LFB88
 4643 0538 01       		.uleb128 0x1
 4644 0539 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 99


 4645 053a 1C       		.uleb128 0x1c
 4646 053b 90000000 		.4byte	.LASF88
 4647 053f 01       		.byte	0x1
 4648 0540 DC01     		.2byte	0x1dc
 4649 0542 00000000 		.4byte	.LFB89
 4650 0546 0A000000 		.4byte	.LFE89-.LFB89
 4651 054a 01       		.uleb128 0x1
 4652 054b 9C       		.byte	0x9c
 4653 054c 16       		.uleb128 0x16
 4654 054d 4E020000 		.4byte	.LASF89
 4655 0551 01       		.byte	0x1
 4656 0552 E201     		.2byte	0x1e2
 4657 0554 00000000 		.4byte	.LFB90
 4658 0558 40000000 		.4byte	.LFE90-.LFB90
 4659 055c 01       		.uleb128 0x1
 4660 055d 9C       		.byte	0x9c
 4661 055e 16       		.uleb128 0x16
 4662 055f BD010000 		.4byte	.LASF90
 4663 0563 01       		.byte	0x1
 4664 0564 F101     		.2byte	0x1f1
 4665 0566 00000000 		.4byte	.LFB91
 4666 056a 40000000 		.4byte	.LFE91-.LFB91
 4667 056e 01       		.uleb128 0x1
 4668 056f 9C       		.byte	0x9c
 4669 0570 1E       		.uleb128 0x1e
 4670 0571 26000000 		.4byte	.LASF91
 4671 0575 01       		.byte	0x1
 4672 0576 0102     		.2byte	0x201
 4673 0578 00000000 		.4byte	.LFB92
 4674 057c 30020000 		.4byte	.LFE92-.LFB92
 4675 0580 01       		.uleb128 0x1
 4676 0581 9C       		.byte	0x9c
 4677 0582 E1050000 		.4byte	0x5e1
 4678 0586 19       		.uleb128 0x19
 4679 0587 96020000 		.4byte	.LASF92
 4680 058b 01       		.byte	0x1
 4681 058c 0F02     		.2byte	0x20f
 4682 058e C5000000 		.4byte	0xc5
 4683 0592 02       		.uleb128 0x2
 4684 0593 91       		.byte	0x91
 4685 0594 5E       		.sleb128 -34
 4686 0595 19       		.uleb128 0x19
 4687 0596 9E040000 		.4byte	.LASF93
 4688 059a 01       		.byte	0x1
 4689 059b 1002     		.2byte	0x210
 4690 059d C5000000 		.4byte	0xc5
 4691 05a1 02       		.uleb128 0x2
 4692 05a2 91       		.byte	0x91
 4693 05a3 5C       		.sleb128 -36
 4694 05a4 19       		.uleb128 0x19
 4695 05a5 23030000 		.4byte	.LASF94
 4696 05a9 01       		.byte	0x1
 4697 05aa 1102     		.2byte	0x211
 4698 05ac D8000000 		.4byte	0xd8
 4699 05b0 02       		.uleb128 0x2
 4700 05b1 91       		.byte	0x91
 4701 05b2 68       		.sleb128 -24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 100


 4702 05b3 19       		.uleb128 0x19
 4703 05b4 F8070000 		.4byte	.LASF95
 4704 05b8 01       		.byte	0x1
 4705 05b9 1202     		.2byte	0x212
 4706 05bb D8000000 		.4byte	0xd8
 4707 05bf 02       		.uleb128 0x2
 4708 05c0 91       		.byte	0x91
 4709 05c1 60       		.sleb128 -32
 4710 05c2 19       		.uleb128 0x19
 4711 05c3 91030000 		.4byte	.LASF96
 4712 05c7 01       		.byte	0x1
 4713 05c8 1B02     		.2byte	0x21b
 4714 05ca 68000000 		.4byte	0x68
 4715 05ce 02       		.uleb128 0x2
 4716 05cf 91       		.byte	0x91
 4717 05d0 58       		.sleb128 -40
 4718 05d1 19       		.uleb128 0x19
 4719 05d2 A1070000 		.4byte	.LASF97
 4720 05d6 01       		.byte	0x1
 4721 05d7 1C02     		.2byte	0x21c
 4722 05d9 68000000 		.4byte	0x68
 4723 05dd 02       		.uleb128 0x2
 4724 05de 91       		.byte	0x91
 4725 05df 54       		.sleb128 -44
 4726 05e0 00       		.byte	0
 4727 05e1 1E       		.uleb128 0x1e
 4728 05e2 E2040000 		.4byte	.LASF98
 4729 05e6 01       		.byte	0x1
 4730 05e7 2A02     		.2byte	0x22a
 4731 05e9 00000000 		.4byte	.LFB93
 4732 05ed 50010000 		.4byte	.LFE93-.LFB93
 4733 05f1 01       		.uleb128 0x1
 4734 05f2 9C       		.byte	0x9c
 4735 05f3 23060000 		.4byte	0x623
 4736 05f7 1A       		.uleb128 0x1a
 4737 05f8 6E6C00   		.ascii	"nl\000"
 4738 05fb 01       		.byte	0x1
 4739 05fc 2E02     		.2byte	0x22e
 4740 05fe 95000000 		.4byte	0x95
 4741 0602 02       		.uleb128 0x2
 4742 0603 91       		.byte	0x91
 4743 0604 67       		.sleb128 -25
 4744 0605 1A       		.uleb128 0x1a
 4745 0606 6E7200   		.ascii	"nr\000"
 4746 0609 01       		.byte	0x1
 4747 060a 2F02     		.2byte	0x22f
 4748 060c 95000000 		.4byte	0x95
 4749 0610 02       		.uleb128 0x2
 4750 0611 91       		.byte	0x91
 4751 0612 66       		.sleb128 -26
 4752 0613 1A       		.uleb128 0x1a
 4753 0614 6D696400 		.ascii	"mid\000"
 4754 0618 01       		.byte	0x1
 4755 0619 3002     		.2byte	0x230
 4756 061b 95000000 		.4byte	0x95
 4757 061f 02       		.uleb128 0x2
 4758 0620 91       		.byte	0x91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 101


 4759 0621 65       		.sleb128 -27
 4760 0622 00       		.byte	0
 4761 0623 1E       		.uleb128 0x1e
 4762 0624 05010000 		.4byte	.LASF99
 4763 0628 01       		.byte	0x1
 4764 0629 4C02     		.2byte	0x24c
 4765 062b 00000000 		.4byte	.LFB94
 4766 062f 50010000 		.4byte	.LFE94-.LFB94
 4767 0633 01       		.uleb128 0x1
 4768 0634 9C       		.byte	0x9c
 4769 0635 65060000 		.4byte	0x665
 4770 0639 1A       		.uleb128 0x1a
 4771 063a 6E6C00   		.ascii	"nl\000"
 4772 063d 01       		.byte	0x1
 4773 063e 5002     		.2byte	0x250
 4774 0640 95000000 		.4byte	0x95
 4775 0644 02       		.uleb128 0x2
 4776 0645 91       		.byte	0x91
 4777 0646 67       		.sleb128 -25
 4778 0647 1A       		.uleb128 0x1a
 4779 0648 6E7200   		.ascii	"nr\000"
 4780 064b 01       		.byte	0x1
 4781 064c 5102     		.2byte	0x251
 4782 064e 95000000 		.4byte	0x95
 4783 0652 02       		.uleb128 0x2
 4784 0653 91       		.byte	0x91
 4785 0654 66       		.sleb128 -26
 4786 0655 1A       		.uleb128 0x1a
 4787 0656 6D696400 		.ascii	"mid\000"
 4788 065a 01       		.byte	0x1
 4789 065b 5202     		.2byte	0x252
 4790 065d 95000000 		.4byte	0x95
 4791 0661 02       		.uleb128 0x2
 4792 0662 91       		.byte	0x91
 4793 0663 65       		.sleb128 -27
 4794 0664 00       		.byte	0
 4795 0665 1E       		.uleb128 0x1e
 4796 0666 FA000000 		.4byte	.LASF100
 4797 066a 01       		.byte	0x1
 4798 066b 6E02     		.2byte	0x26e
 4799 066d 00000000 		.4byte	.LFB95
 4800 0671 B0010000 		.4byte	.LFE95-.LFB95
 4801 0675 01       		.uleb128 0x1
 4802 0676 9C       		.byte	0x9c
 4803 0677 C3060000 		.4byte	0x6c3
 4804 067b 1A       		.uleb128 0x1a
 4805 067c 6E6C00   		.ascii	"nl\000"
 4806 067f 01       		.byte	0x1
 4807 0680 7202     		.2byte	0x272
 4808 0682 95000000 		.4byte	0x95
 4809 0686 02       		.uleb128 0x2
 4810 0687 91       		.byte	0x91
 4811 0688 67       		.sleb128 -25
 4812 0689 1A       		.uleb128 0x1a
 4813 068a 666C00   		.ascii	"fl\000"
 4814 068d 01       		.byte	0x1
 4815 068e 7302     		.2byte	0x273
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 102


 4816 0690 95000000 		.4byte	0x95
 4817 0694 02       		.uleb128 0x2
 4818 0695 91       		.byte	0x91
 4819 0696 66       		.sleb128 -26
 4820 0697 1A       		.uleb128 0x1a
 4821 0698 6E7200   		.ascii	"nr\000"
 4822 069b 01       		.byte	0x1
 4823 069c 7402     		.2byte	0x274
 4824 069e 95000000 		.4byte	0x95
 4825 06a2 02       		.uleb128 0x2
 4826 06a3 91       		.byte	0x91
 4827 06a4 65       		.sleb128 -27
 4828 06a5 1A       		.uleb128 0x1a
 4829 06a6 667200   		.ascii	"fr\000"
 4830 06a9 01       		.byte	0x1
 4831 06aa 7502     		.2byte	0x275
 4832 06ac 95000000 		.4byte	0x95
 4833 06b0 02       		.uleb128 0x2
 4834 06b1 91       		.byte	0x91
 4835 06b2 64       		.sleb128 -28
 4836 06b3 1A       		.uleb128 0x1a
 4837 06b4 6D696400 		.ascii	"mid\000"
 4838 06b8 01       		.byte	0x1
 4839 06b9 7602     		.2byte	0x276
 4840 06bb 95000000 		.4byte	0x95
 4841 06bf 02       		.uleb128 0x2
 4842 06c0 91       		.byte	0x91
 4843 06c1 63       		.sleb128 -29
 4844 06c2 00       		.byte	0
 4845 06c3 1E       		.uleb128 0x1e
 4846 06c4 19030000 		.4byte	.LASF101
 4847 06c8 01       		.byte	0x1
 4848 06c9 9F02     		.2byte	0x29f
 4849 06cb 00000000 		.4byte	.LFB96
 4850 06cf C0000000 		.4byte	.LFE96-.LFB96
 4851 06d3 01       		.uleb128 0x1
 4852 06d4 9C       		.byte	0x9c
 4853 06d5 11070000 		.4byte	0x711
 4854 06d9 0C       		.uleb128 0xc
 4855 06da 0E000000 		.4byte	.LBB6
 4856 06de 8E000000 		.4byte	.LBE6-.LBB6
 4857 06e2 19       		.uleb128 0x19
 4858 06e3 88020000 		.4byte	.LASF102
 4859 06e7 01       		.byte	0x1
 4860 06e8 A802     		.2byte	0x2a8
 4861 06ea D1000000 		.4byte	0xd1
 4862 06ee 02       		.uleb128 0x2
 4863 06ef 91       		.byte	0x91
 4864 06f0 74       		.sleb128 -12
 4865 06f1 19       		.uleb128 0x19
 4866 06f2 CF040000 		.4byte	.LASF103
 4867 06f6 01       		.byte	0x1
 4868 06f7 A902     		.2byte	0x2a9
 4869 06f9 C5000000 		.4byte	0xc5
 4870 06fd 02       		.uleb128 0x2
 4871 06fe 91       		.byte	0x91
 4872 06ff 72       		.sleb128 -14
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 103


 4873 0700 19       		.uleb128 0x19
 4874 0701 DC020000 		.4byte	.LASF104
 4875 0705 01       		.byte	0x1
 4876 0706 AE02     		.2byte	0x2ae
 4877 0708 ED020000 		.4byte	0x2ed
 4878 070c 02       		.uleb128 0x2
 4879 070d 91       		.byte	0x91
 4880 070e 60       		.sleb128 -32
 4881 070f 00       		.byte	0
 4882 0710 00       		.byte	0
 4883 0711 1E       		.uleb128 0x1e
 4884 0712 E7070000 		.4byte	.LASF105
 4885 0716 01       		.byte	0x1
 4886 0717 B502     		.2byte	0x2b5
 4887 0719 00000000 		.4byte	.LFB97
 4888 071d B8000000 		.4byte	.LFE97-.LFB97
 4889 0721 01       		.uleb128 0x1
 4890 0722 9C       		.byte	0x9c
 4891 0723 41070000 		.4byte	0x741
 4892 0727 0C       		.uleb128 0xc
 4893 0728 0E000000 		.4byte	.LBB7
 4894 072c 86000000 		.4byte	.LBE7-.LBB7
 4895 0730 19       		.uleb128 0x19
 4896 0731 C6050000 		.4byte	.LASF106
 4897 0735 01       		.byte	0x1
 4898 0736 B902     		.2byte	0x2b9
 4899 0738 ED020000 		.4byte	0x2ed
 4900 073c 02       		.uleb128 0x2
 4901 073d 91       		.byte	0x91
 4902 073e 68       		.sleb128 -24
 4903 073f 00       		.byte	0
 4904 0740 00       		.byte	0
 4905 0741 18       		.uleb128 0x18
 4906 0742 39060000 		.4byte	.LASF107
 4907 0746 01       		.byte	0x1
 4908 0747 CA02     		.2byte	0x2ca
 4909 0749 00000000 		.4byte	.LFB98
 4910 074d 4A000000 		.4byte	.LFE98-.LFB98
 4911 0751 01       		.uleb128 0x1
 4912 0752 9C       		.byte	0x9c
 4913 0753 67070000 		.4byte	0x767
 4914 0757 1F       		.uleb128 0x1f
 4915 0758 D1020000 		.4byte	.LASF108
 4916 075c 01       		.byte	0x1
 4917 075d CA02     		.2byte	0x2ca
 4918 075f 67070000 		.4byte	0x767
 4919 0763 02       		.uleb128 0x2
 4920 0764 91       		.byte	0x91
 4921 0765 6C       		.sleb128 -20
 4922 0766 00       		.byte	0
 4923 0767 05       		.uleb128 0x5
 4924 0768 04       		.byte	0x4
 4925 0769 95000000 		.4byte	0x95
 4926 076d 20       		.uleb128 0x20
 4927 076e 93070000 		.4byte	.LASF109
 4928 0772 01       		.byte	0x1
 4929 0773 D302     		.2byte	0x2d3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 104


 4930 0775 68000000 		.4byte	0x68
 4931 0779 00000000 		.4byte	.LFB99
 4932 077d 6C010000 		.4byte	.LFE99-.LFB99
 4933 0781 01       		.uleb128 0x1
 4934 0782 9C       		.byte	0x9c
 4935 0783 A1070000 		.4byte	0x7a1
 4936 0787 0C       		.uleb128 0xc
 4937 0788 5C000000 		.4byte	.LBB8
 4938 078c E8000000 		.4byte	.LBE8-.LBB8
 4939 0790 19       		.uleb128 0x19
 4940 0791 0D020000 		.4byte	.LASF110
 4941 0795 01       		.byte	0x1
 4942 0796 1903     		.2byte	0x319
 4943 0798 A1070000 		.4byte	0x7a1
 4944 079c 02       		.uleb128 0x2
 4945 079d 91       		.byte	0x91
 4946 079e 70       		.sleb128 -16
 4947 079f 00       		.byte	0
 4948 07a0 00       		.byte	0
 4949 07a1 0E       		.uleb128 0xe
 4950 07a2 95000000 		.4byte	0x95
 4951 07a6 B1070000 		.4byte	0x7b1
 4952 07aa 0F       		.uleb128 0xf
 4953 07ab 76000000 		.4byte	0x76
 4954 07af 04       		.byte	0x4
 4955 07b0 00       		.byte	0
 4956 07b1 18       		.uleb128 0x18
 4957 07b2 12060000 		.4byte	.LASF111
 4958 07b6 01       		.byte	0x1
 4959 07b7 5703     		.2byte	0x357
 4960 07b9 00000000 		.4byte	.LFB100
 4961 07bd 68000000 		.4byte	.LFE100-.LFB100
 4962 07c1 01       		.uleb128 0x1
 4963 07c2 9C       		.byte	0x9c
 4964 07c3 EE070000 		.4byte	0x7ee
 4965 07c7 21       		.uleb128 0x21
 4966 07c8 7300     		.ascii	"s\000"
 4967 07ca 01       		.byte	0x1
 4968 07cb 5703     		.2byte	0x357
 4969 07cd 7D000000 		.4byte	0x7d
 4970 07d1 02       		.uleb128 0x2
 4971 07d2 91       		.byte	0x91
 4972 07d3 6C       		.sleb128 -20
 4973 07d4 0C       		.uleb128 0xc
 4974 07d5 10000000 		.4byte	.LBB9
 4975 07d9 48000000 		.4byte	.LBE9-.LBB9
 4976 07dd 1A       		.uleb128 0x1a
 4977 07de 636E7400 		.ascii	"cnt\000"
 4978 07e2 01       		.byte	0x1
 4979 07e3 5E03     		.2byte	0x35e
 4980 07e5 AD000000 		.4byte	0xad
 4981 07e9 02       		.uleb128 0x2
 4982 07ea 91       		.byte	0x91
 4983 07eb 74       		.sleb128 -12
 4984 07ec 00       		.byte	0
 4985 07ed 00       		.byte	0
 4986 07ee 18       		.uleb128 0x18
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 105


 4987 07ef 4D070000 		.4byte	.LASF112
 4988 07f3 01       		.byte	0x1
 4989 07f4 6D03     		.2byte	0x36d
 4990 07f6 00000000 		.4byte	.LFB101
 4991 07fa 50000000 		.4byte	.LFE101-.LFB101
 4992 07fe 01       		.uleb128 0x1
 4993 07ff 9C       		.byte	0x9c
 4994 0800 2B080000 		.4byte	0x82b
 4995 0804 21       		.uleb128 0x21
 4996 0805 6300     		.ascii	"c\000"
 4997 0807 01       		.byte	0x1
 4998 0808 6D03     		.2byte	0x36d
 4999 080a 83000000 		.4byte	0x83
 5000 080e 02       		.uleb128 0x2
 5001 080f 91       		.byte	0x91
 5002 0810 6F       		.sleb128 -17
 5003 0811 0C       		.uleb128 0xc
 5004 0812 12000000 		.4byte	.LBB10
 5005 0816 2E000000 		.4byte	.LBE10-.LBB10
 5006 081a 1A       		.uleb128 0x1a
 5007 081b 636E7400 		.ascii	"cnt\000"
 5008 081f 01       		.byte	0x1
 5009 0820 7103     		.2byte	0x371
 5010 0822 AD000000 		.4byte	0xad
 5011 0826 02       		.uleb128 0x2
 5012 0827 91       		.byte	0x91
 5013 0828 74       		.sleb128 -12
 5014 0829 00       		.byte	0
 5015 082a 00       		.byte	0
 5016 082b 1E       		.uleb128 0x1e
 5017 082c E7020000 		.4byte	.LASF113
 5018 0830 01       		.byte	0x1
 5019 0831 7E03     		.2byte	0x37e
 5020 0833 00000000 		.4byte	.LFB102
 5021 0837 3A000000 		.4byte	.LFE102-.LFB102
 5022 083b 01       		.uleb128 0x1
 5023 083c 9C       		.byte	0x9c
 5024 083d 4F080000 		.4byte	0x84f
 5025 0841 1A       		.uleb128 0x1a
 5026 0842 6300     		.ascii	"c\000"
 5027 0844 01       		.byte	0x1
 5028 0845 8003     		.2byte	0x380
 5029 0847 95000000 		.4byte	0x95
 5030 084b 02       		.uleb128 0x2
 5031 084c 91       		.byte	0x91
 5032 084d 77       		.sleb128 -9
 5033 084e 00       		.byte	0
 5034 084f 22       		.uleb128 0x22
 5035 0850 B9050000 		.4byte	.LASF114
 5036 0854 06       		.byte	0x6
 5037 0855 9606     		.2byte	0x696
 5038 0857 5B080000 		.4byte	0x85b
 5039 085b 23       		.uleb128 0x23
 5040 085c 8A000000 		.4byte	0x8a
 5041 0860 24       		.uleb128 0x24
 5042 0861 747300   		.ascii	"ts\000"
 5043 0864 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 106


 5044 0865 10       		.byte	0x10
 5045 0866 95000000 		.4byte	0x95
 5046 086a 05       		.uleb128 0x5
 5047 086b 03       		.byte	0x3
 5048 086c 00000000 		.4byte	ts
 5049 0870 25       		.uleb128 0x25
 5050 0871 DB060000 		.4byte	.LASF115
 5051 0875 05       		.byte	0x5
 5052 0876 11       		.byte	0x11
 5053 0877 A1000000 		.4byte	0xa1
 5054 087b 05       		.uleb128 0x5
 5055 087c 03       		.byte	0x3
 5056 087d 00000000 		.4byte	ts_enc
 5057 0881 25       		.uleb128 0x25
 5058 0882 D2050000 		.4byte	.LASF116
 5059 0886 05       		.byte	0x5
 5060 0887 12       		.byte	0x12
 5061 0888 A1000000 		.4byte	0xa1
 5062 088c 05       		.uleb128 0x5
 5063 088d 03       		.byte	0x3
 5064 088e 00000000 		.4byte	ts_update
 5065 0892 25       		.uleb128 0x25
 5066 0893 A9040000 		.4byte	.LASF117
 5067 0897 05       		.byte	0x5
 5068 0898 13       		.byte	0x13
 5069 0899 A1000000 		.4byte	0xa1
 5070 089d 05       		.uleb128 0x5
 5071 089e 03       		.byte	0x3
 5072 089f 00000000 		.4byte	ts_speed
 5073 08a3 25       		.uleb128 0x25
 5074 08a4 0E030000 		.4byte	.LASF118
 5075 08a8 05       		.byte	0x5
 5076 08a9 14       		.byte	0x14
 5077 08aa A1000000 		.4byte	0xa1
 5078 08ae 05       		.uleb128 0x5
 5079 08af 03       		.byte	0x3
 5080 08b0 00000000 		.4byte	ts_display
 5081 08b4 25       		.uleb128 0x25
 5082 08b5 A0020000 		.4byte	.LASF119
 5083 08b9 05       		.byte	0x5
 5084 08ba 16       		.byte	0x16
 5085 08bb 95000000 		.4byte	0x95
 5086 08bf 05       		.uleb128 0x5
 5087 08c0 03       		.byte	0x3
 5088 08c1 00000000 		.4byte	flag_ts_enc
 5089 08c5 25       		.uleb128 0x25
 5090 08c6 79020000 		.4byte	.LASF120
 5091 08ca 05       		.byte	0x5
 5092 08cb 17       		.byte	0x17
 5093 08cc 95000000 		.4byte	0x95
 5094 08d0 05       		.uleb128 0x5
 5095 08d1 03       		.byte	0x3
 5096 08d2 00000000 		.4byte	flag_ts_update
 5097 08d6 25       		.uleb128 0x25
 5098 08d7 3D050000 		.4byte	.LASF121
 5099 08db 05       		.byte	0x5
 5100 08dc 18       		.byte	0x18
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 107


 5101 08dd 95000000 		.4byte	0x95
 5102 08e1 05       		.uleb128 0x5
 5103 08e2 03       		.byte	0x3
 5104 08e3 00000000 		.4byte	flag_ts_speed
 5105 08e7 25       		.uleb128 0x25
 5106 08e8 EC060000 		.4byte	.LASF122
 5107 08ec 05       		.byte	0x5
 5108 08ed 19       		.byte	0x19
 5109 08ee 95000000 		.4byte	0x95
 5110 08f2 05       		.uleb128 0x5
 5111 08f3 03       		.byte	0x3
 5112 08f4 00000000 		.4byte	flag_ts_display
 5113 08f8 25       		.uleb128 0x25
 5114 08f9 68050000 		.4byte	.LASF123
 5115 08fd 05       		.byte	0x5
 5116 08fe 1C       		.byte	0x1c
 5117 08ff 95000000 		.4byte	0x95
 5118 0903 05       		.uleb128 0x5
 5119 0904 03       		.byte	0x3
 5120 0905 00000000 		.4byte	flag_rx
 5121 0909 25       		.uleb128 0x25
 5122 090a 01020000 		.4byte	.LASF124
 5123 090e 05       		.byte	0x5
 5124 090f 1D       		.byte	0x1d
 5125 0910 95000000 		.4byte	0x95
 5126 0914 05       		.uleb128 0x5
 5127 0915 03       		.byte	0x3
 5128 0916 00000000 		.4byte	flag_packet
 5129 091a 25       		.uleb128 0x25
 5130 091b 05080000 		.4byte	.LASF125
 5131 091f 05       		.byte	0x5
 5132 0920 1E       		.byte	0x1e
 5133 0921 95000000 		.4byte	0x95
 5134 0925 05       		.uleb128 0x5
 5135 0926 03       		.byte	0x3
 5136 0927 00000000 		.4byte	flag_KB_string
 5137 092b 25       		.uleb128 0x25
 5138 092c 4B050000 		.4byte	.LASF126
 5139 0930 05       		.byte	0x5
 5140 0931 20       		.byte	0x20
 5141 0932 95000000 		.4byte	0x95
 5142 0936 05       		.uleb128 0x5
 5143 0937 03       		.byte	0x3
 5144 0938 00000000 		.4byte	dataready_flag
 5145 093c 25       		.uleb128 0x25
 5146 093d 23010000 		.4byte	.LASF127
 5147 0941 05       		.byte	0x5
 5148 0942 22       		.byte	0x22
 5149 0943 95000000 		.4byte	0x95
 5150 0947 05       		.uleb128 0x5
 5151 0948 03       		.byte	0x3
 5152 0949 00000000 		.4byte	flag_rf_transmission_active
 5153 094d 25       		.uleb128 0x25
 5154 094e 3F010000 		.4byte	.LASF128
 5155 0952 05       		.byte	0x5
 5156 0953 23       		.byte	0x23
 5157 0954 95000000 		.4byte	0x95
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 108


 5158 0958 05       		.uleb128 0x5
 5159 0959 03       		.byte	0x3
 5160 095a 00000000 		.4byte	flag_print_rf
 5161 095e 25       		.uleb128 0x25
 5162 095f F9040000 		.4byte	.LASF129
 5163 0963 05       		.byte	0x5
 5164 0964 25       		.byte	0x25
 5165 0965 95000000 		.4byte	0x95
 5166 0969 05       		.uleb128 0x5
 5167 096a 03       		.byte	0x3
 5168 096b 00000000 		.4byte	flag_receive_ADC
 5169 096f 25       		.uleb128 0x25
 5170 0970 7A050000 		.4byte	.LASF130
 5171 0974 05       		.byte	0x5
 5172 0975 26       		.byte	0x26
 5173 0976 C5000000 		.4byte	0xc5
 5174 097a 05       		.uleb128 0x5
 5175 097b 03       		.byte	0x3
 5176 097c 00000000 		.4byte	adc_result
 5177 0980 25       		.uleb128 0x25
 5178 0981 00000000 		.4byte	.LASF131
 5179 0985 05       		.byte	0x5
 5180 0986 28       		.byte	0x28
 5181 0987 95000000 		.4byte	0x95
 5182 098b 05       		.uleb128 0x5
 5183 098c 03       		.byte	0x3
 5184 098d 00000000 		.4byte	direction
 5185 0991 25       		.uleb128 0x25
 5186 0992 92040000 		.4byte	.LASF132
 5187 0996 05       		.byte	0x5
 5188 0997 2B       		.byte	0x2b
 5189 0998 95000000 		.4byte	0x95
 5190 099c 05       		.uleb128 0x5
 5191 099d 03       		.byte	0x3
 5192 099e 00000000 		.4byte	BIN_ENABLED
 5193 09a2 25       		.uleb128 0x25
 5194 09a3 9B030000 		.4byte	.LASF133
 5195 09a7 05       		.byte	0x5
 5196 09a8 2D       		.byte	0x2d
 5197 09a9 95000000 		.4byte	0x95
 5198 09ad 05       		.uleb128 0x5
 5199 09ae 03       		.byte	0x3
 5200 09af 00000000 		.4byte	BT_ENABLED
 5201 09b3 25       		.uleb128 0x25
 5202 09b4 85050000 		.4byte	.LASF134
 5203 09b8 05       		.byte	0x5
 5204 09b9 32       		.byte	0x32
 5205 09ba 95000000 		.4byte	0x95
 5206 09be 05       		.uleb128 0x5
 5207 09bf 03       		.byte	0x3
 5208 09c0 00000000 		.4byte	flag_calc_wheelspeed
 5209 09c4 25       		.uleb128 0x25
 5210 09c5 E2000000 		.4byte	.LASF135
 5211 09c9 05       		.byte	0x5
 5212 09ca 33       		.byte	0x33
 5213 09cb C5000000 		.4byte	0xc5
 5214 09cf 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 109


 5215 09d0 03       		.byte	0x3
 5216 09d1 00000000 		.4byte	quad_count1
 5217 09d5 25       		.uleb128 0x25
 5218 09d6 EE000000 		.4byte	.LASF136
 5219 09da 05       		.byte	0x5
 5220 09db 34       		.byte	0x34
 5221 09dc C5000000 		.4byte	0xc5
 5222 09e0 05       		.uleb128 0x5
 5223 09e1 03       		.byte	0x3
 5224 09e2 00000000 		.4byte	quad_count2
 5225 09e6 25       		.uleb128 0x25
 5226 09e7 2B070000 		.4byte	.LASF137
 5227 09eb 05       		.byte	0x5
 5228 09ec 35       		.byte	0x35
 5229 09ed C5000000 		.4byte	0xc5
 5230 09f1 05       		.uleb128 0x5
 5231 09f2 03       		.byte	0x3
 5232 09f3 00000000 		.4byte	last_quad_count1
 5233 09f7 25       		.uleb128 0x25
 5234 09f8 3C070000 		.4byte	.LASF138
 5235 09fc 05       		.byte	0x5
 5236 09fd 36       		.byte	0x36
 5237 09fe C5000000 		.4byte	0xc5
 5238 0a02 05       		.uleb128 0x5
 5239 0a03 03       		.byte	0x3
 5240 0a04 00000000 		.4byte	last_quad_count2
 5241 0a08 25       		.uleb128 0x25
 5242 0a09 10000000 		.4byte	.LASF139
 5243 0a0d 05       		.byte	0x5
 5244 0a0e 37       		.byte	0x37
 5245 0a0f C5000000 		.4byte	0xc5
 5246 0a13 05       		.uleb128 0x5
 5247 0a14 03       		.byte	0x3
 5248 0a15 00000000 		.4byte	quad_diff1
 5249 0a19 25       		.uleb128 0x25
 5250 0a1a 1B000000 		.4byte	.LASF140
 5251 0a1e 05       		.byte	0x5
 5252 0a1f 38       		.byte	0x38
 5253 0a20 C5000000 		.4byte	0xc5
 5254 0a24 05       		.uleb128 0x5
 5255 0a25 03       		.byte	0x3
 5256 0a26 00000000 		.4byte	quad_diff2
 5257 0a2a 25       		.uleb128 0x25
 5258 0a2b 44000000 		.4byte	.LASF141
 5259 0a2f 05       		.byte	0x5
 5260 0a30 3B       		.byte	0x3b
 5261 0a31 C5000000 		.4byte	0xc5
 5262 0a35 05       		.uleb128 0x5
 5263 0a36 03       		.byte	0x3
 5264 0a37 00000000 		.4byte	start_turn_count
 5265 0a3b 25       		.uleb128 0x25
 5266 0a3c 2D050000 		.4byte	.LASF142
 5267 0a40 05       		.byte	0x5
 5268 0a41 3E       		.byte	0x3e
 5269 0a42 C5000000 		.4byte	0xc5
 5270 0a46 05       		.uleb128 0x5
 5271 0a47 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 110


 5272 0a48 00000000 		.4byte	left_duty_cycle
 5273 0a4c 25       		.uleb128 0x25
 5274 0a4d BD070000 		.4byte	.LASF143
 5275 0a51 05       		.byte	0x5
 5276 0a52 3F       		.byte	0x3f
 5277 0a53 C5000000 		.4byte	0xc5
 5278 0a57 05       		.uleb128 0x5
 5279 0a58 03       		.byte	0x3
 5280 0a59 00000000 		.4byte	right_duty_cycle
 5281 0a5d 25       		.uleb128 0x25
 5282 0a5e E5050000 		.4byte	.LASF144
 5283 0a62 05       		.byte	0x5
 5284 0a63 42       		.byte	0x42
 5285 0a64 C5000000 		.4byte	0xc5
 5286 0a68 05       		.uleb128 0x5
 5287 0a69 03       		.byte	0x3
 5288 0a6a 00000000 		.4byte	leftSpeedLimit
 5289 0a6e 25       		.uleb128 0x25
 5290 0a6f 3D030000 		.4byte	.LASF145
 5291 0a73 05       		.byte	0x5
 5292 0a74 43       		.byte	0x43
 5293 0a75 C5000000 		.4byte	0xc5
 5294 0a79 05       		.uleb128 0x5
 5295 0a7a 03       		.byte	0x3
 5296 0a7b 00000000 		.4byte	rightSpeedLimit
 5297 0a7f 25       		.uleb128 0x25
 5298 0a80 56060000 		.4byte	.LASF146
 5299 0a84 05       		.byte	0x5
 5300 0a85 46       		.byte	0x46
 5301 0a86 C5000000 		.4byte	0xc5
 5302 0a8a 05       		.uleb128 0x5
 5303 0a8b 03       		.byte	0x3
 5304 0a8c 00000000 		.4byte	target_distance_cm
 5305 0a90 25       		.uleb128 0x25
 5306 0a91 07060000 		.4byte	.LASF147
 5307 0a95 05       		.byte	0x5
 5308 0a96 48       		.byte	0x48
 5309 0a97 C5000000 		.4byte	0xc5
 5310 0a9b 05       		.uleb128 0x5
 5311 0a9c 03       		.byte	0x3
 5312 0a9d 00000000 		.4byte	accum_dist
 5313 0aa1 25       		.uleb128 0x25
 5314 0aa2 9D000000 		.4byte	.LASF148
 5315 0aa6 05       		.byte	0x5
 5316 0aa7 49       		.byte	0x49
 5317 0aa8 C5000000 		.4byte	0xc5
 5318 0aac 05       		.uleb128 0x5
 5319 0aad 03       		.byte	0x3
 5320 0aae 00000000 		.4byte	target_distance_quad
 5321 0ab2 25       		.uleb128 0x25
 5322 0ab3 4A060000 		.4byte	.LASF149
 5323 0ab7 05       		.byte	0x5
 5324 0ab8 4A       		.byte	0x4a
 5325 0ab9 D1000000 		.4byte	0xd1
 5326 0abd 05       		.uleb128 0x5
 5327 0abe 03       		.byte	0x3
 5328 0abf 00000000 		.4byte	quad_per_cm
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 111


 5329 0ac3 25       		.uleb128 0x25
 5330 0ac4 AC030000 		.4byte	.LASF150
 5331 0ac8 05       		.byte	0x5
 5332 0ac9 4D       		.byte	0x4d
 5333 0aca 95000000 		.4byte	0x95
 5334 0ace 05       		.uleb128 0x5
 5335 0acf 03       		.byte	0x3
 5336 0ad0 00000000 		.4byte	initial_pos_valid
 5337 0ad4 25       		.uleb128 0x25
 5338 0ad5 26080000 		.4byte	.LASF151
 5339 0ad9 05       		.byte	0x5
 5340 0ada 4E       		.byte	0x4e
 5341 0adb C5000000 		.4byte	0xc5
 5342 0adf 05       		.uleb128 0x5
 5343 0ae0 03       		.byte	0x3
 5344 0ae1 00000000 		.4byte	initial_x_pos
 5345 0ae5 25       		.uleb128 0x25
 5346 0ae6 5A050000 		.4byte	.LASF152
 5347 0aea 05       		.byte	0x5
 5348 0aeb 4F       		.byte	0x4f
 5349 0aec C5000000 		.4byte	0xc5
 5350 0af0 05       		.uleb128 0x5
 5351 0af1 03       		.byte	0x3
 5352 0af2 00000000 		.4byte	initial_y_pos
 5353 0af6 25       		.uleb128 0x25
 5354 0af7 E2060000 		.4byte	.LASF153
 5355 0afb 05       		.byte	0x5
 5356 0afc 52       		.byte	0x52
 5357 0afd 95000000 		.4byte	0x95
 5358 0b01 05       		.uleb128 0x5
 5359 0b02 03       		.byte	0x3
 5360 0b03 00000000 		.4byte	brakeFlag
 5361 0b07 25       		.uleb128 0x25
 5362 0b08 66020000 		.4byte	.LASF154
 5363 0b0c 05       		.byte	0x5
 5364 0b0d 53       		.byte	0x53
 5365 0b0e 95000000 		.4byte	0x95
 5366 0b12 05       		.uleb128 0x5
 5367 0b13 03       		.byte	0x3
 5368 0b14 00000000 		.4byte	portOpen
 5369 0b18 25       		.uleb128 0x25
 5370 0b19 38000000 		.4byte	.LASF155
 5371 0b1d 05       		.byte	0x5
 5372 0b1e 56       		.byte	0x56
 5373 0b1f C5000000 		.4byte	0xc5
 5374 0b23 05       		.uleb128 0x5
 5375 0b24 03       		.byte	0x3
 5376 0b25 00000000 		.4byte	prevVoltage
 5377 0b29 25       		.uleb128 0x25
 5378 0b2a BB000000 		.4byte	.LASF156
 5379 0b2e 05       		.byte	0x5
 5380 0b2f 57       		.byte	0x57
 5381 0b30 C5000000 		.4byte	0xc5
 5382 0b34 05       		.uleb128 0x5
 5383 0b35 03       		.byte	0x3
 5384 0b36 00000000 		.4byte	prevVoltage2
 5385 0b3a 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 112


 5386 0b3b 83000000 		.4byte	0x83
 5387 0b3f 4A0B0000 		.4byte	0xb4a
 5388 0b43 0F       		.uleb128 0xf
 5389 0b44 76000000 		.4byte	0x76
 5390 0b48 3F       		.byte	0x3f
 5391 0b49 00       		.byte	0
 5392 0b4a 25       		.uleb128 0x25
 5393 0b4b 1D070000 		.4byte	.LASF157
 5394 0b4f 05       		.byte	0x5
 5395 0b50 5D       		.byte	0x5d
 5396 0b51 3A0B0000 		.4byte	0xb3a
 5397 0b55 05       		.uleb128 0x5
 5398 0b56 03       		.byte	0x3
 5399 0b57 00000000 		.4byte	displaystring
 5400 0b5b 25       		.uleb128 0x25
 5401 0b5c C9060000 		.4byte	.LASF158
 5402 0b60 05       		.byte	0x5
 5403 0b61 5E       		.byte	0x5e
 5404 0b62 3A0B0000 		.4byte	0xb3a
 5405 0b66 05       		.uleb128 0x5
 5406 0b67 03       		.byte	0x3
 5407 0b68 00000000 		.4byte	line
 5408 0b6c 25       		.uleb128 0x25
 5409 0b6d B5060000 		.4byte	.LASF159
 5410 0b71 05       		.byte	0x5
 5411 0b72 5E       		.byte	0x5e
 5412 0b73 3A0B0000 		.4byte	0xb3a
 5413 0b77 05       		.uleb128 0x5
 5414 0b78 03       		.byte	0x3
 5415 0b79 00000000 		.4byte	entry
 5416 0b7d 0E       		.uleb128 0xe
 5417 0b7e 95000000 		.4byte	0x95
 5418 0b82 8D0B0000 		.4byte	0xb8d
 5419 0b86 0F       		.uleb128 0xf
 5420 0b87 76000000 		.4byte	0x76
 5421 0b8b 3F       		.byte	0x3f
 5422 0b8c 00       		.byte	0
 5423 0b8d 25       		.uleb128 0x25
 5424 0b8e 99010000 		.4byte	.LASF160
 5425 0b92 05       		.byte	0x5
 5426 0b93 5F       		.byte	0x5f
 5427 0b94 7D0B0000 		.4byte	0xb7d
 5428 0b98 05       		.uleb128 0x5
 5429 0b99 03       		.byte	0x3
 5430 0b9a 00000000 		.4byte	usbBuffer
 5431 0b9e 25       		.uleb128 0x25
 5432 0b9f CC030000 		.4byte	.LASF161
 5433 0ba3 05       		.byte	0x5
 5434 0ba4 74       		.byte	0x74
 5435 0ba5 4E010000 		.4byte	0x14e
 5436 0ba9 05       		.uleb128 0x5
 5437 0baa 03       		.byte	0x3
 5438 0bab 00000000 		.4byte	buffer_state
 5439 0baf 25       		.uleb128 0x25
 5440 0bb0 7D000000 		.4byte	.LASF162
 5441 0bb4 05       		.byte	0x5
 5442 0bb5 75       		.byte	0x75
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 113


 5443 0bb6 4E010000 		.4byte	0x14e
 5444 0bba 05       		.uleb128 0x5
 5445 0bbb 03       		.byte	0x3
 5446 0bbc 00000000 		.4byte	system_state
 5447 0bc0 25       		.uleb128 0x25
 5448 0bc1 BD020000 		.4byte	.LASF163
 5449 0bc5 05       		.byte	0x5
 5450 0bc6 77       		.byte	0x77
 5451 0bc7 E6000000 		.4byte	0xe6
 5452 0bcb 05       		.uleb128 0x5
 5453 0bcc 03       		.byte	0x3
 5454 0bcd 00000000 		.4byte	prev_movement_state
 5455 0bd1 25       		.uleb128 0x25
 5456 0bd2 4D010000 		.4byte	.LASF164
 5457 0bd6 05       		.byte	0x5
 5458 0bd7 78       		.byte	0x78
 5459 0bd8 E6000000 		.4byte	0xe6
 5460 0bdc 05       		.uleb128 0x5
 5461 0bdd 03       		.byte	0x3
 5462 0bde 00000000 		.4byte	movement_state
 5463 0be2 25       		.uleb128 0x25
 5464 0be3 62000000 		.4byte	.LASF165
 5465 0be7 05       		.byte	0x5
 5466 0be8 79       		.byte	0x79
 5467 0be9 1D010000 		.4byte	0x11d
 5468 0bed 05       		.uleb128 0x5
 5469 0bee 03       		.byte	0x3
 5470 0bef 00000000 		.4byte	track_mode
 5471 0bf3 25       		.uleb128 0x25
 5472 0bf4 AC020000 		.4byte	.LASF166
 5473 0bf8 05       		.byte	0x5
 5474 0bf9 7B       		.byte	0x7b
 5475 0bfa 95000000 		.4byte	0x95
 5476 0bfe 05       		.uleb128 0x5
 5477 0bff 03       		.byte	0x3
 5478 0c00 00000000 		.4byte	byteCount
 5479 0c04 0E       		.uleb128 0xe
 5480 0c05 83000000 		.4byte	0x83
 5481 0c09 140C0000 		.4byte	0xc14
 5482 0c0d 0F       		.uleb128 0xf
 5483 0c0e 76000000 		.4byte	0x76
 5484 0c12 01       		.byte	0x1
 5485 0c13 00       		.byte	0
 5486 0c14 25       		.uleb128 0x25
 5487 0c15 98060000 		.4byte	.LASF167
 5488 0c19 05       		.byte	0x5
 5489 0c1a 7C       		.byte	0x7c
 5490 0c1b 040C0000 		.4byte	0xc04
 5491 0c1f 05       		.uleb128 0x5
 5492 0c20 03       		.byte	0x3
 5493 0c21 00000000 		.4byte	packet
 5494 0c25 25       		.uleb128 0x25
 5495 0c26 10010000 		.4byte	.LASF168
 5496 0c2a 05       		.byte	0x5
 5497 0c2b 7F       		.byte	0x7f
 5498 0c2c D8000000 		.4byte	0xd8
 5499 0c30 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 114


 5500 0c31 03       		.byte	0x3
 5501 0c32 00000000 		.4byte	speed
 5502 0c36 00       		.byte	0
 5503              		.section	.debug_abbrev,"",%progbits
 5504              	.Ldebug_abbrev0:
 5505 0000 01       		.uleb128 0x1
 5506 0001 11       		.uleb128 0x11
 5507 0002 01       		.byte	0x1
 5508 0003 25       		.uleb128 0x25
 5509 0004 0E       		.uleb128 0xe
 5510 0005 13       		.uleb128 0x13
 5511 0006 0B       		.uleb128 0xb
 5512 0007 03       		.uleb128 0x3
 5513 0008 0E       		.uleb128 0xe
 5514 0009 1B       		.uleb128 0x1b
 5515 000a 0E       		.uleb128 0xe
 5516 000b 55       		.uleb128 0x55
 5517 000c 17       		.uleb128 0x17
 5518 000d 11       		.uleb128 0x11
 5519 000e 01       		.uleb128 0x1
 5520 000f 10       		.uleb128 0x10
 5521 0010 17       		.uleb128 0x17
 5522 0011 00       		.byte	0
 5523 0012 00       		.byte	0
 5524 0013 02       		.uleb128 0x2
 5525 0014 24       		.uleb128 0x24
 5526 0015 00       		.byte	0
 5527 0016 0B       		.uleb128 0xb
 5528 0017 0B       		.uleb128 0xb
 5529 0018 3E       		.uleb128 0x3e
 5530 0019 0B       		.uleb128 0xb
 5531 001a 03       		.uleb128 0x3
 5532 001b 0E       		.uleb128 0xe
 5533 001c 00       		.byte	0
 5534 001d 00       		.byte	0
 5535 001e 03       		.uleb128 0x3
 5536 001f 16       		.uleb128 0x16
 5537 0020 00       		.byte	0
 5538 0021 03       		.uleb128 0x3
 5539 0022 0E       		.uleb128 0xe
 5540 0023 3A       		.uleb128 0x3a
 5541 0024 0B       		.uleb128 0xb
 5542 0025 3B       		.uleb128 0x3b
 5543 0026 0B       		.uleb128 0xb
 5544 0027 49       		.uleb128 0x49
 5545 0028 13       		.uleb128 0x13
 5546 0029 00       		.byte	0
 5547 002a 00       		.byte	0
 5548 002b 04       		.uleb128 0x4
 5549 002c 24       		.uleb128 0x24
 5550 002d 00       		.byte	0
 5551 002e 0B       		.uleb128 0xb
 5552 002f 0B       		.uleb128 0xb
 5553 0030 3E       		.uleb128 0x3e
 5554 0031 0B       		.uleb128 0xb
 5555 0032 03       		.uleb128 0x3
 5556 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 115


 5557 0034 00       		.byte	0
 5558 0035 00       		.byte	0
 5559 0036 05       		.uleb128 0x5
 5560 0037 0F       		.uleb128 0xf
 5561 0038 00       		.byte	0
 5562 0039 0B       		.uleb128 0xb
 5563 003a 0B       		.uleb128 0xb
 5564 003b 49       		.uleb128 0x49
 5565 003c 13       		.uleb128 0x13
 5566 003d 00       		.byte	0
 5567 003e 00       		.byte	0
 5568 003f 06       		.uleb128 0x6
 5569 0040 16       		.uleb128 0x16
 5570 0041 00       		.byte	0
 5571 0042 03       		.uleb128 0x3
 5572 0043 0E       		.uleb128 0xe
 5573 0044 3A       		.uleb128 0x3a
 5574 0045 0B       		.uleb128 0xb
 5575 0046 3B       		.uleb128 0x3b
 5576 0047 05       		.uleb128 0x5
 5577 0048 49       		.uleb128 0x49
 5578 0049 13       		.uleb128 0x13
 5579 004a 00       		.byte	0
 5580 004b 00       		.byte	0
 5581 004c 07       		.uleb128 0x7
 5582 004d 04       		.uleb128 0x4
 5583 004e 01       		.byte	0x1
 5584 004f 03       		.uleb128 0x3
 5585 0050 0E       		.uleb128 0xe
 5586 0051 0B       		.uleb128 0xb
 5587 0052 0B       		.uleb128 0xb
 5588 0053 3A       		.uleb128 0x3a
 5589 0054 0B       		.uleb128 0xb
 5590 0055 3B       		.uleb128 0x3b
 5591 0056 0B       		.uleb128 0xb
 5592 0057 01       		.uleb128 0x1
 5593 0058 13       		.uleb128 0x13
 5594 0059 00       		.byte	0
 5595 005a 00       		.byte	0
 5596 005b 08       		.uleb128 0x8
 5597 005c 28       		.uleb128 0x28
 5598 005d 00       		.byte	0
 5599 005e 03       		.uleb128 0x3
 5600 005f 0E       		.uleb128 0xe
 5601 0060 1C       		.uleb128 0x1c
 5602 0061 0D       		.uleb128 0xd
 5603 0062 00       		.byte	0
 5604 0063 00       		.byte	0
 5605 0064 09       		.uleb128 0x9
 5606 0065 13       		.uleb128 0x13
 5607 0066 01       		.byte	0x1
 5608 0067 03       		.uleb128 0x3
 5609 0068 0E       		.uleb128 0xe
 5610 0069 0B       		.uleb128 0xb
 5611 006a 0B       		.uleb128 0xb
 5612 006b 3A       		.uleb128 0x3a
 5613 006c 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 116


 5614 006d 3B       		.uleb128 0x3b
 5615 006e 0B       		.uleb128 0xb
 5616 006f 01       		.uleb128 0x1
 5617 0070 13       		.uleb128 0x13
 5618 0071 00       		.byte	0
 5619 0072 00       		.byte	0
 5620 0073 0A       		.uleb128 0xa
 5621 0074 0D       		.uleb128 0xd
 5622 0075 00       		.byte	0
 5623 0076 03       		.uleb128 0x3
 5624 0077 0E       		.uleb128 0xe
 5625 0078 3A       		.uleb128 0x3a
 5626 0079 0B       		.uleb128 0xb
 5627 007a 3B       		.uleb128 0x3b
 5628 007b 0B       		.uleb128 0xb
 5629 007c 49       		.uleb128 0x49
 5630 007d 13       		.uleb128 0x13
 5631 007e 38       		.uleb128 0x38
 5632 007f 0B       		.uleb128 0xb
 5633 0080 00       		.byte	0
 5634 0081 00       		.byte	0
 5635 0082 0B       		.uleb128 0xb
 5636 0083 2E       		.uleb128 0x2e
 5637 0084 01       		.byte	0x1
 5638 0085 3F       		.uleb128 0x3f
 5639 0086 19       		.uleb128 0x19
 5640 0087 03       		.uleb128 0x3
 5641 0088 0E       		.uleb128 0xe
 5642 0089 3A       		.uleb128 0x3a
 5643 008a 0B       		.uleb128 0xb
 5644 008b 3B       		.uleb128 0x3b
 5645 008c 0B       		.uleb128 0xb
 5646 008d 11       		.uleb128 0x11
 5647 008e 01       		.uleb128 0x1
 5648 008f 12       		.uleb128 0x12
 5649 0090 06       		.uleb128 0x6
 5650 0091 40       		.uleb128 0x40
 5651 0092 18       		.uleb128 0x18
 5652 0093 9742     		.uleb128 0x2117
 5653 0095 19       		.uleb128 0x19
 5654 0096 01       		.uleb128 0x1
 5655 0097 13       		.uleb128 0x13
 5656 0098 00       		.byte	0
 5657 0099 00       		.byte	0
 5658 009a 0C       		.uleb128 0xc
 5659 009b 0B       		.uleb128 0xb
 5660 009c 01       		.byte	0x1
 5661 009d 11       		.uleb128 0x11
 5662 009e 01       		.uleb128 0x1
 5663 009f 12       		.uleb128 0x12
 5664 00a0 06       		.uleb128 0x6
 5665 00a1 00       		.byte	0
 5666 00a2 00       		.byte	0
 5667 00a3 0D       		.uleb128 0xd
 5668 00a4 34       		.uleb128 0x34
 5669 00a5 00       		.byte	0
 5670 00a6 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 117


 5671 00a7 0E       		.uleb128 0xe
 5672 00a8 3A       		.uleb128 0x3a
 5673 00a9 0B       		.uleb128 0xb
 5674 00aa 3B       		.uleb128 0x3b
 5675 00ab 0B       		.uleb128 0xb
 5676 00ac 49       		.uleb128 0x49
 5677 00ad 13       		.uleb128 0x13
 5678 00ae 02       		.uleb128 0x2
 5679 00af 18       		.uleb128 0x18
 5680 00b0 00       		.byte	0
 5681 00b1 00       		.byte	0
 5682 00b2 0E       		.uleb128 0xe
 5683 00b3 01       		.uleb128 0x1
 5684 00b4 01       		.byte	0x1
 5685 00b5 49       		.uleb128 0x49
 5686 00b6 13       		.uleb128 0x13
 5687 00b7 01       		.uleb128 0x1
 5688 00b8 13       		.uleb128 0x13
 5689 00b9 00       		.byte	0
 5690 00ba 00       		.byte	0
 5691 00bb 0F       		.uleb128 0xf
 5692 00bc 21       		.uleb128 0x21
 5693 00bd 00       		.byte	0
 5694 00be 49       		.uleb128 0x49
 5695 00bf 13       		.uleb128 0x13
 5696 00c0 2F       		.uleb128 0x2f
 5697 00c1 0B       		.uleb128 0xb
 5698 00c2 00       		.byte	0
 5699 00c3 00       		.byte	0
 5700 00c4 10       		.uleb128 0x10
 5701 00c5 2E       		.uleb128 0x2e
 5702 00c6 01       		.byte	0x1
 5703 00c7 3F       		.uleb128 0x3f
 5704 00c8 19       		.uleb128 0x19
 5705 00c9 03       		.uleb128 0x3
 5706 00ca 0E       		.uleb128 0xe
 5707 00cb 3A       		.uleb128 0x3a
 5708 00cc 0B       		.uleb128 0xb
 5709 00cd 3B       		.uleb128 0x3b
 5710 00ce 0B       		.uleb128 0xb
 5711 00cf 27       		.uleb128 0x27
 5712 00d0 19       		.uleb128 0x19
 5713 00d1 11       		.uleb128 0x11
 5714 00d2 01       		.uleb128 0x1
 5715 00d3 12       		.uleb128 0x12
 5716 00d4 06       		.uleb128 0x6
 5717 00d5 40       		.uleb128 0x40
 5718 00d6 18       		.uleb128 0x18
 5719 00d7 9642     		.uleb128 0x2116
 5720 00d9 19       		.uleb128 0x19
 5721 00da 01       		.uleb128 0x1
 5722 00db 13       		.uleb128 0x13
 5723 00dc 00       		.byte	0
 5724 00dd 00       		.byte	0
 5725 00de 11       		.uleb128 0x11
 5726 00df 05       		.uleb128 0x5
 5727 00e0 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 118


 5728 00e1 03       		.uleb128 0x3
 5729 00e2 08       		.uleb128 0x8
 5730 00e3 3A       		.uleb128 0x3a
 5731 00e4 0B       		.uleb128 0xb
 5732 00e5 3B       		.uleb128 0x3b
 5733 00e6 0B       		.uleb128 0xb
 5734 00e7 49       		.uleb128 0x49
 5735 00e8 13       		.uleb128 0x13
 5736 00e9 02       		.uleb128 0x2
 5737 00ea 18       		.uleb128 0x18
 5738 00eb 00       		.byte	0
 5739 00ec 00       		.byte	0
 5740 00ed 12       		.uleb128 0x12
 5741 00ee 2E       		.uleb128 0x2e
 5742 00ef 01       		.byte	0x1
 5743 00f0 3F       		.uleb128 0x3f
 5744 00f1 19       		.uleb128 0x19
 5745 00f2 03       		.uleb128 0x3
 5746 00f3 0E       		.uleb128 0xe
 5747 00f4 3A       		.uleb128 0x3a
 5748 00f5 0B       		.uleb128 0xb
 5749 00f6 3B       		.uleb128 0x3b
 5750 00f7 0B       		.uleb128 0xb
 5751 00f8 11       		.uleb128 0x11
 5752 00f9 01       		.uleb128 0x1
 5753 00fa 12       		.uleb128 0x12
 5754 00fb 06       		.uleb128 0x6
 5755 00fc 40       		.uleb128 0x40
 5756 00fd 18       		.uleb128 0x18
 5757 00fe 9642     		.uleb128 0x2116
 5758 0100 19       		.uleb128 0x19
 5759 0101 01       		.uleb128 0x1
 5760 0102 13       		.uleb128 0x13
 5761 0103 00       		.byte	0
 5762 0104 00       		.byte	0
 5763 0105 13       		.uleb128 0x13
 5764 0106 34       		.uleb128 0x34
 5765 0107 00       		.byte	0
 5766 0108 03       		.uleb128 0x3
 5767 0109 08       		.uleb128 0x8
 5768 010a 3A       		.uleb128 0x3a
 5769 010b 0B       		.uleb128 0xb
 5770 010c 3B       		.uleb128 0x3b
 5771 010d 0B       		.uleb128 0xb
 5772 010e 49       		.uleb128 0x49
 5773 010f 13       		.uleb128 0x13
 5774 0110 02       		.uleb128 0x2
 5775 0111 18       		.uleb128 0x18
 5776 0112 00       		.byte	0
 5777 0113 00       		.byte	0
 5778 0114 14       		.uleb128 0x14
 5779 0115 05       		.uleb128 0x5
 5780 0116 00       		.byte	0
 5781 0117 03       		.uleb128 0x3
 5782 0118 0E       		.uleb128 0xe
 5783 0119 3A       		.uleb128 0x3a
 5784 011a 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 119


 5785 011b 3B       		.uleb128 0x3b
 5786 011c 0B       		.uleb128 0xb
 5787 011d 49       		.uleb128 0x49
 5788 011e 13       		.uleb128 0x13
 5789 011f 02       		.uleb128 0x2
 5790 0120 18       		.uleb128 0x18
 5791 0121 00       		.byte	0
 5792 0122 00       		.byte	0
 5793 0123 15       		.uleb128 0x15
 5794 0124 2E       		.uleb128 0x2e
 5795 0125 00       		.byte	0
 5796 0126 3F       		.uleb128 0x3f
 5797 0127 19       		.uleb128 0x19
 5798 0128 03       		.uleb128 0x3
 5799 0129 0E       		.uleb128 0xe
 5800 012a 3A       		.uleb128 0x3a
 5801 012b 0B       		.uleb128 0xb
 5802 012c 3B       		.uleb128 0x3b
 5803 012d 0B       		.uleb128 0xb
 5804 012e 11       		.uleb128 0x11
 5805 012f 01       		.uleb128 0x1
 5806 0130 12       		.uleb128 0x12
 5807 0131 06       		.uleb128 0x6
 5808 0132 40       		.uleb128 0x40
 5809 0133 18       		.uleb128 0x18
 5810 0134 9642     		.uleb128 0x2116
 5811 0136 19       		.uleb128 0x19
 5812 0137 00       		.byte	0
 5813 0138 00       		.byte	0
 5814 0139 16       		.uleb128 0x16
 5815 013a 2E       		.uleb128 0x2e
 5816 013b 00       		.byte	0
 5817 013c 3F       		.uleb128 0x3f
 5818 013d 19       		.uleb128 0x19
 5819 013e 03       		.uleb128 0x3
 5820 013f 0E       		.uleb128 0xe
 5821 0140 3A       		.uleb128 0x3a
 5822 0141 0B       		.uleb128 0xb
 5823 0142 3B       		.uleb128 0x3b
 5824 0143 05       		.uleb128 0x5
 5825 0144 11       		.uleb128 0x11
 5826 0145 01       		.uleb128 0x1
 5827 0146 12       		.uleb128 0x12
 5828 0147 06       		.uleb128 0x6
 5829 0148 40       		.uleb128 0x40
 5830 0149 18       		.uleb128 0x18
 5831 014a 9642     		.uleb128 0x2116
 5832 014c 19       		.uleb128 0x19
 5833 014d 00       		.byte	0
 5834 014e 00       		.byte	0
 5835 014f 17       		.uleb128 0x17
 5836 0150 2E       		.uleb128 0x2e
 5837 0151 00       		.byte	0
 5838 0152 3F       		.uleb128 0x3f
 5839 0153 19       		.uleb128 0x19
 5840 0154 03       		.uleb128 0x3
 5841 0155 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 120


 5842 0156 3A       		.uleb128 0x3a
 5843 0157 0B       		.uleb128 0xb
 5844 0158 3B       		.uleb128 0x3b
 5845 0159 05       		.uleb128 0x5
 5846 015a 11       		.uleb128 0x11
 5847 015b 01       		.uleb128 0x1
 5848 015c 12       		.uleb128 0x12
 5849 015d 06       		.uleb128 0x6
 5850 015e 40       		.uleb128 0x40
 5851 015f 18       		.uleb128 0x18
 5852 0160 9742     		.uleb128 0x2117
 5853 0162 19       		.uleb128 0x19
 5854 0163 00       		.byte	0
 5855 0164 00       		.byte	0
 5856 0165 18       		.uleb128 0x18
 5857 0166 2E       		.uleb128 0x2e
 5858 0167 01       		.byte	0x1
 5859 0168 3F       		.uleb128 0x3f
 5860 0169 19       		.uleb128 0x19
 5861 016a 03       		.uleb128 0x3
 5862 016b 0E       		.uleb128 0xe
 5863 016c 3A       		.uleb128 0x3a
 5864 016d 0B       		.uleb128 0xb
 5865 016e 3B       		.uleb128 0x3b
 5866 016f 05       		.uleb128 0x5
 5867 0170 27       		.uleb128 0x27
 5868 0171 19       		.uleb128 0x19
 5869 0172 11       		.uleb128 0x11
 5870 0173 01       		.uleb128 0x1
 5871 0174 12       		.uleb128 0x12
 5872 0175 06       		.uleb128 0x6
 5873 0176 40       		.uleb128 0x40
 5874 0177 18       		.uleb128 0x18
 5875 0178 9642     		.uleb128 0x2116
 5876 017a 19       		.uleb128 0x19
 5877 017b 01       		.uleb128 0x1
 5878 017c 13       		.uleb128 0x13
 5879 017d 00       		.byte	0
 5880 017e 00       		.byte	0
 5881 017f 19       		.uleb128 0x19
 5882 0180 34       		.uleb128 0x34
 5883 0181 00       		.byte	0
 5884 0182 03       		.uleb128 0x3
 5885 0183 0E       		.uleb128 0xe
 5886 0184 3A       		.uleb128 0x3a
 5887 0185 0B       		.uleb128 0xb
 5888 0186 3B       		.uleb128 0x3b
 5889 0187 05       		.uleb128 0x5
 5890 0188 49       		.uleb128 0x49
 5891 0189 13       		.uleb128 0x13
 5892 018a 02       		.uleb128 0x2
 5893 018b 18       		.uleb128 0x18
 5894 018c 00       		.byte	0
 5895 018d 00       		.byte	0
 5896 018e 1A       		.uleb128 0x1a
 5897 018f 34       		.uleb128 0x34
 5898 0190 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 121


 5899 0191 03       		.uleb128 0x3
 5900 0192 08       		.uleb128 0x8
 5901 0193 3A       		.uleb128 0x3a
 5902 0194 0B       		.uleb128 0xb
 5903 0195 3B       		.uleb128 0x3b
 5904 0196 05       		.uleb128 0x5
 5905 0197 49       		.uleb128 0x49
 5906 0198 13       		.uleb128 0x13
 5907 0199 02       		.uleb128 0x2
 5908 019a 18       		.uleb128 0x18
 5909 019b 00       		.byte	0
 5910 019c 00       		.byte	0
 5911 019d 1B       		.uleb128 0x1b
 5912 019e 2E       		.uleb128 0x2e
 5913 019f 00       		.byte	0
 5914 01a0 3F       		.uleb128 0x3f
 5915 01a1 19       		.uleb128 0x19
 5916 01a2 03       		.uleb128 0x3
 5917 01a3 0E       		.uleb128 0xe
 5918 01a4 3A       		.uleb128 0x3a
 5919 01a5 0B       		.uleb128 0xb
 5920 01a6 3B       		.uleb128 0x3b
 5921 01a7 05       		.uleb128 0x5
 5922 01a8 27       		.uleb128 0x27
 5923 01a9 19       		.uleb128 0x19
 5924 01aa 11       		.uleb128 0x11
 5925 01ab 01       		.uleb128 0x1
 5926 01ac 12       		.uleb128 0x12
 5927 01ad 06       		.uleb128 0x6
 5928 01ae 40       		.uleb128 0x40
 5929 01af 18       		.uleb128 0x18
 5930 01b0 9742     		.uleb128 0x2117
 5931 01b2 19       		.uleb128 0x19
 5932 01b3 00       		.byte	0
 5933 01b4 00       		.byte	0
 5934 01b5 1C       		.uleb128 0x1c
 5935 01b6 2E       		.uleb128 0x2e
 5936 01b7 00       		.byte	0
 5937 01b8 3F       		.uleb128 0x3f
 5938 01b9 19       		.uleb128 0x19
 5939 01ba 03       		.uleb128 0x3
 5940 01bb 0E       		.uleb128 0xe
 5941 01bc 3A       		.uleb128 0x3a
 5942 01bd 0B       		.uleb128 0xb
 5943 01be 3B       		.uleb128 0x3b
 5944 01bf 05       		.uleb128 0x5
 5945 01c0 27       		.uleb128 0x27
 5946 01c1 19       		.uleb128 0x19
 5947 01c2 11       		.uleb128 0x11
 5948 01c3 01       		.uleb128 0x1
 5949 01c4 12       		.uleb128 0x12
 5950 01c5 06       		.uleb128 0x6
 5951 01c6 40       		.uleb128 0x40
 5952 01c7 18       		.uleb128 0x18
 5953 01c8 9642     		.uleb128 0x2116
 5954 01ca 19       		.uleb128 0x19
 5955 01cb 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 122


 5956 01cc 00       		.byte	0
 5957 01cd 1D       		.uleb128 0x1d
 5958 01ce 0B       		.uleb128 0xb
 5959 01cf 01       		.byte	0x1
 5960 01d0 11       		.uleb128 0x11
 5961 01d1 01       		.uleb128 0x1
 5962 01d2 12       		.uleb128 0x12
 5963 01d3 06       		.uleb128 0x6
 5964 01d4 01       		.uleb128 0x1
 5965 01d5 13       		.uleb128 0x13
 5966 01d6 00       		.byte	0
 5967 01d7 00       		.byte	0
 5968 01d8 1E       		.uleb128 0x1e
 5969 01d9 2E       		.uleb128 0x2e
 5970 01da 01       		.byte	0x1
 5971 01db 3F       		.uleb128 0x3f
 5972 01dc 19       		.uleb128 0x19
 5973 01dd 03       		.uleb128 0x3
 5974 01de 0E       		.uleb128 0xe
 5975 01df 3A       		.uleb128 0x3a
 5976 01e0 0B       		.uleb128 0xb
 5977 01e1 3B       		.uleb128 0x3b
 5978 01e2 05       		.uleb128 0x5
 5979 01e3 11       		.uleb128 0x11
 5980 01e4 01       		.uleb128 0x1
 5981 01e5 12       		.uleb128 0x12
 5982 01e6 06       		.uleb128 0x6
 5983 01e7 40       		.uleb128 0x40
 5984 01e8 18       		.uleb128 0x18
 5985 01e9 9642     		.uleb128 0x2116
 5986 01eb 19       		.uleb128 0x19
 5987 01ec 01       		.uleb128 0x1
 5988 01ed 13       		.uleb128 0x13
 5989 01ee 00       		.byte	0
 5990 01ef 00       		.byte	0
 5991 01f0 1F       		.uleb128 0x1f
 5992 01f1 05       		.uleb128 0x5
 5993 01f2 00       		.byte	0
 5994 01f3 03       		.uleb128 0x3
 5995 01f4 0E       		.uleb128 0xe
 5996 01f5 3A       		.uleb128 0x3a
 5997 01f6 0B       		.uleb128 0xb
 5998 01f7 3B       		.uleb128 0x3b
 5999 01f8 05       		.uleb128 0x5
 6000 01f9 49       		.uleb128 0x49
 6001 01fa 13       		.uleb128 0x13
 6002 01fb 02       		.uleb128 0x2
 6003 01fc 18       		.uleb128 0x18
 6004 01fd 00       		.byte	0
 6005 01fe 00       		.byte	0
 6006 01ff 20       		.uleb128 0x20
 6007 0200 2E       		.uleb128 0x2e
 6008 0201 01       		.byte	0x1
 6009 0202 3F       		.uleb128 0x3f
 6010 0203 19       		.uleb128 0x19
 6011 0204 03       		.uleb128 0x3
 6012 0205 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 123


 6013 0206 3A       		.uleb128 0x3a
 6014 0207 0B       		.uleb128 0xb
 6015 0208 3B       		.uleb128 0x3b
 6016 0209 05       		.uleb128 0x5
 6017 020a 49       		.uleb128 0x49
 6018 020b 13       		.uleb128 0x13
 6019 020c 11       		.uleb128 0x11
 6020 020d 01       		.uleb128 0x1
 6021 020e 12       		.uleb128 0x12
 6022 020f 06       		.uleb128 0x6
 6023 0210 40       		.uleb128 0x40
 6024 0211 18       		.uleb128 0x18
 6025 0212 9642     		.uleb128 0x2116
 6026 0214 19       		.uleb128 0x19
 6027 0215 01       		.uleb128 0x1
 6028 0216 13       		.uleb128 0x13
 6029 0217 00       		.byte	0
 6030 0218 00       		.byte	0
 6031 0219 21       		.uleb128 0x21
 6032 021a 05       		.uleb128 0x5
 6033 021b 00       		.byte	0
 6034 021c 03       		.uleb128 0x3
 6035 021d 08       		.uleb128 0x8
 6036 021e 3A       		.uleb128 0x3a
 6037 021f 0B       		.uleb128 0xb
 6038 0220 3B       		.uleb128 0x3b
 6039 0221 05       		.uleb128 0x5
 6040 0222 49       		.uleb128 0x49
 6041 0223 13       		.uleb128 0x13
 6042 0224 02       		.uleb128 0x2
 6043 0225 18       		.uleb128 0x18
 6044 0226 00       		.byte	0
 6045 0227 00       		.byte	0
 6046 0228 22       		.uleb128 0x22
 6047 0229 34       		.uleb128 0x34
 6048 022a 00       		.byte	0
 6049 022b 03       		.uleb128 0x3
 6050 022c 0E       		.uleb128 0xe
 6051 022d 3A       		.uleb128 0x3a
 6052 022e 0B       		.uleb128 0xb
 6053 022f 3B       		.uleb128 0x3b
 6054 0230 05       		.uleb128 0x5
 6055 0231 49       		.uleb128 0x49
 6056 0232 13       		.uleb128 0x13
 6057 0233 3F       		.uleb128 0x3f
 6058 0234 19       		.uleb128 0x19
 6059 0235 3C       		.uleb128 0x3c
 6060 0236 19       		.uleb128 0x19
 6061 0237 00       		.byte	0
 6062 0238 00       		.byte	0
 6063 0239 23       		.uleb128 0x23
 6064 023a 35       		.uleb128 0x35
 6065 023b 00       		.byte	0
 6066 023c 49       		.uleb128 0x49
 6067 023d 13       		.uleb128 0x13
 6068 023e 00       		.byte	0
 6069 023f 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 124


 6070 0240 24       		.uleb128 0x24
 6071 0241 34       		.uleb128 0x34
 6072 0242 00       		.byte	0
 6073 0243 03       		.uleb128 0x3
 6074 0244 08       		.uleb128 0x8
 6075 0245 3A       		.uleb128 0x3a
 6076 0246 0B       		.uleb128 0xb
 6077 0247 3B       		.uleb128 0x3b
 6078 0248 0B       		.uleb128 0xb
 6079 0249 49       		.uleb128 0x49
 6080 024a 13       		.uleb128 0x13
 6081 024b 3F       		.uleb128 0x3f
 6082 024c 19       		.uleb128 0x19
 6083 024d 02       		.uleb128 0x2
 6084 024e 18       		.uleb128 0x18
 6085 024f 00       		.byte	0
 6086 0250 00       		.byte	0
 6087 0251 25       		.uleb128 0x25
 6088 0252 34       		.uleb128 0x34
 6089 0253 00       		.byte	0
 6090 0254 03       		.uleb128 0x3
 6091 0255 0E       		.uleb128 0xe
 6092 0256 3A       		.uleb128 0x3a
 6093 0257 0B       		.uleb128 0xb
 6094 0258 3B       		.uleb128 0x3b
 6095 0259 0B       		.uleb128 0xb
 6096 025a 49       		.uleb128 0x49
 6097 025b 13       		.uleb128 0x13
 6098 025c 3F       		.uleb128 0x3f
 6099 025d 19       		.uleb128 0x19
 6100 025e 02       		.uleb128 0x2
 6101 025f 18       		.uleb128 0x18
 6102 0260 00       		.byte	0
 6103 0261 00       		.byte	0
 6104 0262 00       		.byte	0
 6105              		.section	.debug_aranges,"",%progbits
 6106 0000 54010000 		.4byte	0x154
 6107 0004 0200     		.2byte	0x2
 6108 0006 00000000 		.4byte	.Ldebug_info0
 6109 000a 04       		.byte	0x4
 6110 000b 00       		.byte	0
 6111 000c 0000     		.2byte	0
 6112 000e 0000     		.2byte	0
 6113 0010 00000000 		.4byte	.LFB63
 6114 0014 60010000 		.4byte	.LFE63-.LFB63
 6115 0018 00000000 		.4byte	.LFB64
 6116 001c 18000000 		.4byte	.LFE64-.LFB64
 6117 0020 00000000 		.4byte	.LFB65
 6118 0024 18000000 		.4byte	.LFE65-.LFB65
 6119 0028 00000000 		.4byte	.LFB66
 6120 002c 54000000 		.4byte	.LFE66-.LFB66
 6121 0030 00000000 		.4byte	.LFB67
 6122 0034 F4000000 		.4byte	.LFE67-.LFB67
 6123 0038 00000000 		.4byte	.LFB68
 6124 003c 18000000 		.4byte	.LFE68-.LFB68
 6125 0040 00000000 		.4byte	.LFB69
 6126 0044 18000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 125


 6127 0048 00000000 		.4byte	.LFB70
 6128 004c 22000000 		.4byte	.LFE70-.LFB70
 6129 0050 00000000 		.4byte	.LFB71
 6130 0054 1C000000 		.4byte	.LFE71-.LFB71
 6131 0058 00000000 		.4byte	.LFB72
 6132 005c 28000000 		.4byte	.LFE72-.LFB72
 6133 0060 00000000 		.4byte	.LFB73
 6134 0064 2C000000 		.4byte	.LFE73-.LFB73
 6135 0068 00000000 		.4byte	.LFB74
 6136 006c 38000000 		.4byte	.LFE74-.LFB74
 6137 0070 00000000 		.4byte	.LFB75
 6138 0074 38000000 		.4byte	.LFE75-.LFB75
 6139 0078 00000000 		.4byte	.LFB76
 6140 007c 14000000 		.4byte	.LFE76-.LFB76
 6141 0080 00000000 		.4byte	.LFB77
 6142 0084 18000000 		.4byte	.LFE77-.LFB77
 6143 0088 00000000 		.4byte	.LFB78
 6144 008c 18000000 		.4byte	.LFE78-.LFB78
 6145 0090 00000000 		.4byte	.LFB79
 6146 0094 18000000 		.4byte	.LFE79-.LFB79
 6147 0098 00000000 		.4byte	.LFB80
 6148 009c 18000000 		.4byte	.LFE80-.LFB80
 6149 00a0 00000000 		.4byte	.LFB81
 6150 00a4 B8000000 		.4byte	.LFE81-.LFB81
 6151 00a8 00000000 		.4byte	.LFB82
 6152 00ac 78010000 		.4byte	.LFE82-.LFB82
 6153 00b0 00000000 		.4byte	.LFB83
 6154 00b4 0C000000 		.4byte	.LFE83-.LFB83
 6155 00b8 00000000 		.4byte	.LFB84
 6156 00bc 2C000000 		.4byte	.LFE84-.LFB84
 6157 00c0 00000000 		.4byte	.LFB85
 6158 00c4 F0010000 		.4byte	.LFE85-.LFB85
 6159 00c8 00000000 		.4byte	.LFB86
 6160 00cc 78000000 		.4byte	.LFE86-.LFB86
 6161 00d0 00000000 		.4byte	.LFB87
 6162 00d4 20000000 		.4byte	.LFE87-.LFB87
 6163 00d8 00000000 		.4byte	.LFB88
 6164 00dc 28000000 		.4byte	.LFE88-.LFB88
 6165 00e0 00000000 		.4byte	.LFB89
 6166 00e4 0A000000 		.4byte	.LFE89-.LFB89
 6167 00e8 00000000 		.4byte	.LFB90
 6168 00ec 40000000 		.4byte	.LFE90-.LFB90
 6169 00f0 00000000 		.4byte	.LFB91
 6170 00f4 40000000 		.4byte	.LFE91-.LFB91
 6171 00f8 00000000 		.4byte	.LFB92
 6172 00fc 30020000 		.4byte	.LFE92-.LFB92
 6173 0100 00000000 		.4byte	.LFB93
 6174 0104 50010000 		.4byte	.LFE93-.LFB93
 6175 0108 00000000 		.4byte	.LFB94
 6176 010c 50010000 		.4byte	.LFE94-.LFB94
 6177 0110 00000000 		.4byte	.LFB95
 6178 0114 B0010000 		.4byte	.LFE95-.LFB95
 6179 0118 00000000 		.4byte	.LFB96
 6180 011c C0000000 		.4byte	.LFE96-.LFB96
 6181 0120 00000000 		.4byte	.LFB97
 6182 0124 B8000000 		.4byte	.LFE97-.LFB97
 6183 0128 00000000 		.4byte	.LFB98
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 126


 6184 012c 4A000000 		.4byte	.LFE98-.LFB98
 6185 0130 00000000 		.4byte	.LFB99
 6186 0134 6C010000 		.4byte	.LFE99-.LFB99
 6187 0138 00000000 		.4byte	.LFB100
 6188 013c 68000000 		.4byte	.LFE100-.LFB100
 6189 0140 00000000 		.4byte	.LFB101
 6190 0144 50000000 		.4byte	.LFE101-.LFB101
 6191 0148 00000000 		.4byte	.LFB102
 6192 014c 3A000000 		.4byte	.LFE102-.LFB102
 6193 0150 00000000 		.4byte	0
 6194 0154 00000000 		.4byte	0
 6195              		.section	.debug_ranges,"",%progbits
 6196              	.Ldebug_ranges0:
 6197 0000 00000000 		.4byte	.LFB63
 6198 0004 60010000 		.4byte	.LFE63
 6199 0008 00000000 		.4byte	.LFB64
 6200 000c 18000000 		.4byte	.LFE64
 6201 0010 00000000 		.4byte	.LFB65
 6202 0014 18000000 		.4byte	.LFE65
 6203 0018 00000000 		.4byte	.LFB66
 6204 001c 54000000 		.4byte	.LFE66
 6205 0020 00000000 		.4byte	.LFB67
 6206 0024 F4000000 		.4byte	.LFE67
 6207 0028 00000000 		.4byte	.LFB68
 6208 002c 18000000 		.4byte	.LFE68
 6209 0030 00000000 		.4byte	.LFB69
 6210 0034 18000000 		.4byte	.LFE69
 6211 0038 00000000 		.4byte	.LFB70
 6212 003c 22000000 		.4byte	.LFE70
 6213 0040 00000000 		.4byte	.LFB71
 6214 0044 1C000000 		.4byte	.LFE71
 6215 0048 00000000 		.4byte	.LFB72
 6216 004c 28000000 		.4byte	.LFE72
 6217 0050 00000000 		.4byte	.LFB73
 6218 0054 2C000000 		.4byte	.LFE73
 6219 0058 00000000 		.4byte	.LFB74
 6220 005c 38000000 		.4byte	.LFE74
 6221 0060 00000000 		.4byte	.LFB75
 6222 0064 38000000 		.4byte	.LFE75
 6223 0068 00000000 		.4byte	.LFB76
 6224 006c 14000000 		.4byte	.LFE76
 6225 0070 00000000 		.4byte	.LFB77
 6226 0074 18000000 		.4byte	.LFE77
 6227 0078 00000000 		.4byte	.LFB78
 6228 007c 18000000 		.4byte	.LFE78
 6229 0080 00000000 		.4byte	.LFB79
 6230 0084 18000000 		.4byte	.LFE79
 6231 0088 00000000 		.4byte	.LFB80
 6232 008c 18000000 		.4byte	.LFE80
 6233 0090 00000000 		.4byte	.LFB81
 6234 0094 B8000000 		.4byte	.LFE81
 6235 0098 00000000 		.4byte	.LFB82
 6236 009c 78010000 		.4byte	.LFE82
 6237 00a0 00000000 		.4byte	.LFB83
 6238 00a4 0C000000 		.4byte	.LFE83
 6239 00a8 00000000 		.4byte	.LFB84
 6240 00ac 2C000000 		.4byte	.LFE84
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 127


 6241 00b0 00000000 		.4byte	.LFB85
 6242 00b4 F0010000 		.4byte	.LFE85
 6243 00b8 00000000 		.4byte	.LFB86
 6244 00bc 78000000 		.4byte	.LFE86
 6245 00c0 00000000 		.4byte	.LFB87
 6246 00c4 20000000 		.4byte	.LFE87
 6247 00c8 00000000 		.4byte	.LFB88
 6248 00cc 28000000 		.4byte	.LFE88
 6249 00d0 00000000 		.4byte	.LFB89
 6250 00d4 0A000000 		.4byte	.LFE89
 6251 00d8 00000000 		.4byte	.LFB90
 6252 00dc 40000000 		.4byte	.LFE90
 6253 00e0 00000000 		.4byte	.LFB91
 6254 00e4 40000000 		.4byte	.LFE91
 6255 00e8 00000000 		.4byte	.LFB92
 6256 00ec 30020000 		.4byte	.LFE92
 6257 00f0 00000000 		.4byte	.LFB93
 6258 00f4 50010000 		.4byte	.LFE93
 6259 00f8 00000000 		.4byte	.LFB94
 6260 00fc 50010000 		.4byte	.LFE94
 6261 0100 00000000 		.4byte	.LFB95
 6262 0104 B0010000 		.4byte	.LFE95
 6263 0108 00000000 		.4byte	.LFB96
 6264 010c C0000000 		.4byte	.LFE96
 6265 0110 00000000 		.4byte	.LFB97
 6266 0114 B8000000 		.4byte	.LFE97
 6267 0118 00000000 		.4byte	.LFB98
 6268 011c 4A000000 		.4byte	.LFE98
 6269 0120 00000000 		.4byte	.LFB99
 6270 0124 6C010000 		.4byte	.LFE99
 6271 0128 00000000 		.4byte	.LFB100
 6272 012c 68000000 		.4byte	.LFE100
 6273 0130 00000000 		.4byte	.LFB101
 6274 0134 50000000 		.4byte	.LFE101
 6275 0138 00000000 		.4byte	.LFB102
 6276 013c 3A000000 		.4byte	.LFE102
 6277 0140 00000000 		.4byte	0
 6278 0144 00000000 		.4byte	0
 6279              		.section	.debug_line,"",%progbits
 6280              	.Ldebug_line0:
 6281 0000 AE060000 		.section	.debug_str,"MS",%progbits,1
 6281      02005501 
 6281      00000201 
 6281      FB0E0D00 
 6281      01010101 
 6282              	.LASF131:
 6283 0000 64697265 		.ascii	"direction\000"
 6283      6374696F 
 6283      6E00
 6284              	.LASF23:
 6285 000a 52545552 		.ascii	"RTURN\000"
 6285      4E00
 6286              	.LASF139:
 6287 0010 71756164 		.ascii	"quad_diff1\000"
 6287      5F646966 
 6287      663100
 6288              	.LASF140:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 128


 6289 001b 71756164 		.ascii	"quad_diff2\000"
 6289      5F646966 
 6289      663200
 6290              	.LASF91:
 6291 0026 51756164 		.ascii	"Quad_Dec_response\000"
 6291      5F446563 
 6291      5F726573 
 6291      706F6E73 
 6291      6500
 6292              	.LASF155:
 6293 0038 70726576 		.ascii	"prevVoltage\000"
 6293      566F6C74 
 6293      61676500 
 6294              	.LASF141:
 6295 0044 73746172 		.ascii	"start_turn_count\000"
 6295      745F7475 
 6295      726E5F63 
 6295      6F756E74 
 6295      00
 6296              	.LASF8:
 6297 0055 756E7369 		.ascii	"unsigned int\000"
 6297      676E6564 
 6297      20696E74 
 6297      00
 6298              	.LASF165:
 6299 0062 74726163 		.ascii	"track_mode\000"
 6299      6B5F6D6F 
 6299      646500
 6300              	.LASF11:
 6301 006d 5F5F696E 		.ascii	"__int32_t\000"
 6301      7433325F 
 6301      7400
 6302              	.LASF17:
 6303 0077 696E7431 		.ascii	"int16\000"
 6303      3600
 6304              	.LASF162:
 6305 007d 73797374 		.ascii	"system_state\000"
 6305      656D5F73 
 6305      74617465 
 6305      00
 6306              	.LASF22:
 6307 008a 4C545552 		.ascii	"LTURN\000"
 6307      4E00
 6308              	.LASF88:
 6309 0090 6973725F 		.ascii	"isr_adcTimer\000"
 6309      61646354 
 6309      696D6572 
 6309      00
 6310              	.LASF148:
 6311 009d 74617267 		.ascii	"target_distance_quad\000"
 6311      65745F64 
 6311      69737461 
 6311      6E63655F 
 6311      71756164 
 6312              	.LASF25:
 6313 00b2 54524143 		.ascii	"TRACKING\000"
 6313      4B494E47 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 129


 6313      00
 6314              	.LASF156:
 6315 00bb 70726576 		.ascii	"prevVoltage2\000"
 6315      566F6C74 
 6315      61676532 
 6315      00
 6316              	.LASF53:
 6317 00c8 7061636B 		.ascii	"packet_bytes\000"
 6317      65745F62 
 6317      79746573 
 6317      00
 6318              	.LASF49:
 6319 00d5 67325F78 		.ascii	"g2_xpos\000"
 6319      706F7300 
 6320              	.LASF29:
 6321 00dd 6D6F6465 		.ascii	"mode\000"
 6321      00
 6322              	.LASF135:
 6323 00e2 71756164 		.ascii	"quad_count1\000"
 6323      5F636F75 
 6323      6E743100 
 6324              	.LASF136:
 6325 00ee 71756164 		.ascii	"quad_count2\000"
 6325      5F636F75 
 6325      6E743200 
 6326              	.LASF100:
 6327 00fa 74726163 		.ascii	"trackLineU\000"
 6327      6B4C696E 
 6327      655500
 6328              	.LASF99:
 6329 0105 74726163 		.ascii	"trackLineZ\000"
 6329      6B4C696E 
 6329      655A00
 6330              	.LASF168:
 6331 0110 73706565 		.ascii	"speed\000"
 6331      6400
 6332              	.LASF33:
 6333 0116 53515541 		.ascii	"SQUARE_TRACK\000"
 6333      52455F54 
 6333      5241434B 
 6333      00
 6334              	.LASF127:
 6335 0123 666C6167 		.ascii	"flag_rf_transmission_active\000"
 6335      5F72665F 
 6335      7472616E 
 6335      736D6973 
 6335      73696F6E 
 6336              	.LASF128:
 6337 013f 666C6167 		.ascii	"flag_print_rf\000"
 6337      5F707269 
 6337      6E745F72 
 6337      6600
 6338              	.LASF164:
 6339 014d 6D6F7665 		.ascii	"movement_state\000"
 6339      6D656E74 
 6339      5F737461 
 6339      746500
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 130


 6340              	.LASF26:
 6341 015c 54524143 		.ascii	"TRACKING_U\000"
 6341      4B494E47 
 6341      5F5500
 6342              	.LASF73:
 6343 0167 696E6974 		.ascii	"initForward\000"
 6343      466F7277 
 6343      61726400 
 6344              	.LASF52:
 6345 0173 67325F64 		.ascii	"g2_direction\000"
 6345      69726563 
 6345      74696F6E 
 6345      00
 6346              	.LASF83:
 6347 0180 6973725F 		.ascii	"isr_quad1\000"
 6347      71756164 
 6347      3100
 6348              	.LASF18:
 6349 018a 666C6F61 		.ascii	"float\000"
 6349      7400
 6350              	.LASF60:
 6351 0190 73657453 		.ascii	"setSpeed\000"
 6351      70656564 
 6351      00
 6352              	.LASF160:
 6353 0199 75736242 		.ascii	"usbBuffer\000"
 6353      75666665 
 6353      7200
 6354              	.LASF37:
 6355 01a3 696E6465 		.ascii	"index\000"
 6355      7800
 6356              	.LASF21:
 6357 01a9 44524956 		.ascii	"DRIVE\000"
 6357      4500
 6358              	.LASF55:
 6359 01af 73747269 		.ascii	"string_packet\000"
 6359      6E675F70 
 6359      61636B65 
 6359      7400
 6360              	.LASF90:
 6361 01bd 6368616E 		.ascii	"changeToBT\000"
 6361      6765546F 
 6361      425400
 6362              	.LASF63:
 6363 01c8 636F756E 		.ascii	"countsLeft\000"
 6363      74734C65 
 6363      667400
 6364              	.LASF68:
 6365 01d3 64726976 		.ascii	"driveForwards\000"
 6365      65466F72 
 6365      77617264 
 6365      7300
 6366              	.LASF70:
 6367 01e1 7475726E 		.ascii	"turnLeft\000"
 6367      4C656674 
 6367      00
 6368              	.LASF7:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 131


 6369 01ea 6C6F6E67 		.ascii	"long long unsigned int\000"
 6369      206C6F6E 
 6369      6720756E 
 6369      7369676E 
 6369      65642069 
 6370              	.LASF124:
 6371 0201 666C6167 		.ascii	"flag_packet\000"
 6371      5F706163 
 6371      6B657400 
 6372              	.LASF110:
 6373 020d 66726F6E 		.ascii	"frontSensors\000"
 6373      7453656E 
 6373      736F7273 
 6373      00
 6374              	.LASF171:
 6375 021a 443A5C43 		.ascii	"D:\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 6375      53333031 
 6375      2D546561 
 6375      6D2D5265 
 6375      706F5C43 
 6376              	.LASF85:
 6377 023f 6973725F 		.ascii	"isr_turn_timer\000"
 6377      7475726E 
 6377      5F74696D 
 6377      657200
 6378              	.LASF89:
 6379 024e 6368616E 		.ascii	"changeToRF\000"
 6379      6765546F 
 6379      524600
 6380              	.LASF71:
 6381 0259 696E6974 		.ascii	"initTurnLeft\000"
 6381      5475726E 
 6381      4C656674 
 6381      00
 6382              	.LASF154:
 6383 0266 706F7274 		.ascii	"portOpen\000"
 6383      4F70656E 
 6383      00
 6384              	.LASF74:
 6385 026f 696E6974 		.ascii	"initBrake\000"
 6385      4272616B 
 6385      6500
 6386              	.LASF120:
 6387 0279 666C6167 		.ascii	"flag_ts_update\000"
 6387      5F74735F 
 6387      75706461 
 6387      746500
 6388              	.LASF102:
 6389 0288 7363616C 		.ascii	"scalingFactor\000"
 6389      696E6746 
 6389      6163746F 
 6389      7200
 6390              	.LASF92:
 6391 0296 6C656674 		.ascii	"leftSpeed\000"
 6391      53706565 
 6391      6400
 6392              	.LASF119:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 132


 6393 02a0 666C6167 		.ascii	"flag_ts_enc\000"
 6393      5F74735F 
 6393      656E6300 
 6394              	.LASF166:
 6395 02ac 62797465 		.ascii	"byteCount\000"
 6395      436F756E 
 6395      7400
 6396              	.LASF87:
 6397 02b6 62757474 		.ascii	"button\000"
 6397      6F6E00
 6398              	.LASF163:
 6399 02bd 70726576 		.ascii	"prev_movement_state\000"
 6399      5F6D6F76 
 6399      656D656E 
 6399      745F7374 
 6399      61746500 
 6400              	.LASF108:
 6401 02d1 73656E73 		.ascii	"sensorVals\000"
 6401      6F725661 
 6401      6C7300
 6402              	.LASF104:
 6403 02dc 72657375 		.ascii	"result_str\000"
 6403      6C745F73 
 6403      747200
 6404              	.LASF113:
 6405 02e7 75617274 		.ascii	"uart_set_PWM\000"
 6405      5F736574 
 6405      5F50574D 
 6405      00
 6406              	.LASF77:
 6407 02f4 696E6974 		.ascii	"inittrackLineZ\000"
 6407      74726163 
 6407      6B4C696E 
 6407      655A00
 6408              	.LASF39:
 6409 0303 726F626F 		.ascii	"robot_ypos\000"
 6409      745F7970 
 6409      6F7300
 6410              	.LASF118:
 6411 030e 74735F64 		.ascii	"ts_display\000"
 6411      6973706C 
 6411      617900
 6412              	.LASF101:
 6413 0319 7072696E 		.ascii	"print_ADC\000"
 6413      745F4144 
 6413      4300
 6414              	.LASF94:
 6415 0323 7363616C 		.ascii	"scalingLeft\000"
 6415      696E674C 
 6415      65667400 
 6416              	.LASF10:
 6417 032f 63686172 		.ascii	"char\000"
 6417      00
 6418              	.LASF43:
 6419 0334 67305F73 		.ascii	"g0_speed\000"
 6419      70656564 
 6419      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 133


 6420              	.LASF145:
 6421 033d 72696768 		.ascii	"rightSpeedLimit\000"
 6421      74537065 
 6421      65644C69 
 6421      6D697400 
 6422              	.LASF56:
 6423 034d 7365744C 		.ascii	"setLeftDir\000"
 6423      65667444 
 6423      697200
 6424              	.LASF50:
 6425 0358 67325F79 		.ascii	"g2_ypos\000"
 6425      706F7300 
 6426              	.LASF14:
 6427 0360 75696E74 		.ascii	"uint16\000"
 6427      313600
 6428              	.LASF16:
 6429 0367 696E7438 		.ascii	"int8\000"
 6429      00
 6430              	.LASF48:
 6431 036c 67315F64 		.ascii	"g1_direction\000"
 6431      69726563 
 6431      74696F6E 
 6431      00
 6432              	.LASF57:
 6433 0379 73657452 		.ascii	"setRightDir\000"
 6433      69676874 
 6433      44697200 
 6434              	.LASF31:
 6435 0385 43555256 		.ascii	"CURVE_TRACK\000"
 6435      455F5452 
 6435      41434B00 
 6436              	.LASF96:
 6437 0391 696E7465 		.ascii	"interCalc\000"
 6437      7243616C 
 6437      6300
 6438              	.LASF133:
 6439 039b 42545F45 		.ascii	"BT_ENABLED\000"
 6439      4E41424C 
 6439      454400
 6440              	.LASF62:
 6441 03a6 72696768 		.ascii	"right\000"
 6441      7400
 6442              	.LASF150:
 6443 03ac 696E6974 		.ascii	"initial_pos_valid\000"
 6443      69616C5F 
 6443      706F735F 
 6443      76616C69 
 6443      6400
 6444              	.LASF6:
 6445 03be 6C6F6E67 		.ascii	"long long int\000"
 6445      206C6F6E 
 6445      6720696E 
 6445      7400
 6446              	.LASF161:
 6447 03cc 62756666 		.ascii	"buffer_state\000"
 6447      65725F73 
 6447      74617465 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 134


 6447      00
 6448              	.LASF45:
 6449 03d9 67315F78 		.ascii	"g1_xpos\000"
 6449      706F7300 
 6450              	.LASF75:
 6451 03e1 696E6974 		.ascii	"initTrack\000"
 6451      54726163 
 6451      6B00
 6452              	.LASF169:
 6453 03eb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6453      4320342E 
 6453      392E3320 
 6453      32303135 
 6453      30333033 
 6454 041e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 6454      20726576 
 6454      6973696F 
 6454      6E203232 
 6454      31323230 
 6455 0451 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6455      66756E63 
 6455      74696F6E 
 6455      2D736563 
 6455      74696F6E 
 6456              	.LASF51:
 6457 0479 67325F73 		.ascii	"g2_speed\000"
 6457      70656564 
 6457      00
 6458              	.LASF42:
 6459 0482 67305F79 		.ascii	"g0_ypos\000"
 6459      706F7300 
 6460              	.LASF79:
 6461 048a 72665F63 		.ascii	"rf_char\000"
 6461      68617200 
 6462              	.LASF132:
 6463 0492 42494E5F 		.ascii	"BIN_ENABLED\000"
 6463      454E4142 
 6463      4C454400 
 6464              	.LASF93:
 6465 049e 72696768 		.ascii	"rightSpeed\000"
 6465      74537065 
 6465      656400
 6466              	.LASF117:
 6467 04a9 74735F73 		.ascii	"ts_speed\000"
 6467      70656564 
 6467      00
 6468              	.LASF15:
 6469 04b2 75696E74 		.ascii	"uint32\000"
 6469      333200
 6470              	.LASF64:
 6471 04b9 636F756E 		.ascii	"countsRight\000"
 6471      74735269 
 6471      67687400 
 6472              	.LASF172:
 6473 04c5 64617461 		.ascii	"data_main\000"
 6473      5F6D6169 
 6473      6E00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 135


 6474              	.LASF103:
 6475 04cf 636F6E76 		.ascii	"converted_val\000"
 6475      65727465 
 6475      645F7661 
 6475      6C00
 6476              	.LASF36:
 6477 04dd 72737369 		.ascii	"rssi\000"
 6477      00
 6478              	.LASF98:
 6479 04e2 74726163 		.ascii	"trackLine\000"
 6479      6B4C696E 
 6479      6500
 6480              	.LASF44:
 6481 04ec 67305F64 		.ascii	"g0_direction\000"
 6481      69726563 
 6481      74696F6E 
 6481      00
 6482              	.LASF129:
 6483 04f9 666C6167 		.ascii	"flag_receive_ADC\000"
 6483      5F726563 
 6483      65697665 
 6483      5F414443 
 6483      00
 6484              	.LASF24:
 6485 050a 53544F50 		.ascii	"STOPPED\000"
 6485      50454400 
 6486              	.LASF80:
 6487 0512 42545F72 		.ascii	"BT_rxInt\000"
 6487      78496E74 
 6487      00
 6488              	.LASF20:
 6489 051b 6C6F6E67 		.ascii	"long double\000"
 6489      20646F75 
 6489      626C6500 
 6490              	.LASF78:
 6491 0527 7278496E 		.ascii	"rxInt\000"
 6491      7400
 6492              	.LASF142:
 6493 052d 6C656674 		.ascii	"left_duty_cycle\000"
 6493      5F647574 
 6493      795F6379 
 6493      636C6500 
 6494              	.LASF121:
 6495 053d 666C6167 		.ascii	"flag_ts_speed\000"
 6495      5F74735F 
 6495      73706565 
 6495      6400
 6496              	.LASF126:
 6497 054b 64617461 		.ascii	"dataready_flag\000"
 6497      72656164 
 6497      795F666C 
 6497      616700
 6498              	.LASF152:
 6499 055a 696E6974 		.ascii	"initial_y_pos\000"
 6499      69616C5F 
 6499      795F706F 
 6499      7300
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 136


 6500              	.LASF123:
 6501 0568 666C6167 		.ascii	"flag_rx\000"
 6501      5F727800 
 6502              	.LASF2:
 6503 0570 73686F72 		.ascii	"short int\000"
 6503      7420696E 
 6503      7400
 6504              	.LASF130:
 6505 057a 6164635F 		.ascii	"adc_result\000"
 6505      72657375 
 6505      6C7400
 6506              	.LASF134:
 6507 0585 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 6507      5F63616C 
 6507      635F7768 
 6507      65656C73 
 6507      70656564 
 6508              	.LASF4:
 6509 059a 6C6F6E67 		.ascii	"long int\000"
 6509      20696E74 
 6509      00
 6510              	.LASF72:
 6511 05a3 696E6974 		.ascii	"initTurnRight\000"
 6511      5475726E 
 6511      52696768 
 6511      7400
 6512              	.LASF32:
 6513 05b1 555F5452 		.ascii	"U_TRACK\000"
 6513      41434B00 
 6514              	.LASF114:
 6515 05b9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6515      52784275 
 6515      66666572 
 6515      00
 6516              	.LASF106:
 6517 05c6 7072696E 		.ascii	"printString\000"
 6517      74537472 
 6517      696E6700 
 6518              	.LASF116:
 6519 05d2 74735F75 		.ascii	"ts_update\000"
 6519      70646174 
 6519      6500
 6520              	.LASF30:
 6521 05dc 4E4F5F54 		.ascii	"NO_TRACK\000"
 6521      5241434B 
 6521      00
 6522              	.LASF144:
 6523 05e5 6C656674 		.ascii	"leftSpeedLimit\000"
 6523      53706565 
 6523      644C696D 
 6523      697400
 6524              	.LASF27:
 6525 05f4 54524143 		.ascii	"TRACKING_SOFT\000"
 6525      4B494E47 
 6525      5F534F46 
 6525      5400
 6526              	.LASF61:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 137


 6527 0602 6C656674 		.ascii	"left\000"
 6527      00
 6528              	.LASF147:
 6529 0607 61636375 		.ascii	"accum_dist\000"
 6529      6D5F6469 
 6529      737400
 6530              	.LASF111:
 6531 0612 75736250 		.ascii	"usbPutString\000"
 6531      75745374 
 6531      72696E67 
 6531      00
 6532              	.LASF69:
 6533 061f 7475726E 		.ascii	"turnRight\000"
 6533      52696768 
 6533      7400
 6534              	.LASF46:
 6535 0629 67315F79 		.ascii	"g1_ypos\000"
 6535      706F7300 
 6536              	.LASF82:
 6537 0631 6164635F 		.ascii	"adc_isr\000"
 6537      69737200 
 6538              	.LASF107:
 6539 0639 72656164 		.ascii	"readFrontSensors\000"
 6539      46726F6E 
 6539      7453656E 
 6539      736F7273 
 6539      00
 6540              	.LASF149:
 6541 064a 71756164 		.ascii	"quad_per_cm\000"
 6541      5F706572 
 6541      5F636D00 
 6542              	.LASF146:
 6543 0656 74617267 		.ascii	"target_distance_cm\000"
 6543      65745F64 
 6543      69737461 
 6543      6E63655F 
 6543      636D00
 6544              	.LASF9:
 6545 0669 73697A65 		.ascii	"sizetype\000"
 6545      74797065 
 6545      00
 6546              	.LASF5:
 6547 0672 6C6F6E67 		.ascii	"long unsigned int\000"
 6547      20756E73 
 6547      69676E65 
 6547      6420696E 
 6547      7400
 6548              	.LASF54:
 6549 0684 62797465 		.ascii	"byte_packet\000"
 6549      5F706163 
 6549      6B657400 
 6550              	.LASF12:
 6551 0690 696E7433 		.ascii	"int32_t\000"
 6551      325F7400 
 6552              	.LASF167:
 6553 0698 7061636B 		.ascii	"packet\000"
 6553      657400
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 138


 6554              	.LASF38:
 6555 069f 726F626F 		.ascii	"robot_xpos\000"
 6555      745F7870 
 6555      6F7300
 6556              	.LASF67:
 6557 06aa 6272616B 		.ascii	"brakeMotor\000"
 6557      654D6F74 
 6557      6F7200
 6558              	.LASF159:
 6559 06b5 656E7472 		.ascii	"entry\000"
 6559      7900
 6560              	.LASF1:
 6561 06bb 756E7369 		.ascii	"unsigned char\000"
 6561      676E6564 
 6561      20636861 
 6561      7200
 6562              	.LASF158:
 6563 06c9 6C696E65 		.ascii	"line\000"
 6563      00
 6564              	.LASF86:
 6565 06ce 53746F70 		.ascii	"Stop_on_line\000"
 6565      5F6F6E5F 
 6565      6C696E65 
 6565      00
 6566              	.LASF115:
 6567 06db 74735F65 		.ascii	"ts_enc\000"
 6567      6E6300
 6568              	.LASF153:
 6569 06e2 6272616B 		.ascii	"brakeFlag\000"
 6569      65466C61 
 6569      6700
 6570              	.LASF122:
 6571 06ec 666C6167 		.ascii	"flag_ts_display\000"
 6571      5F74735F 
 6571      64697370 
 6571      6C617900 
 6572              	.LASF28:
 6573 06fc 73746174 		.ascii	"state\000"
 6573      6500
 6574              	.LASF59:
 6575 0702 72657665 		.ascii	"reverseDirection\000"
 6575      72736544 
 6575      69726563 
 6575      74696F6E 
 6575      00
 6576              	.LASF65:
 6577 0713 6272616B 		.ascii	"brakeLeft\000"
 6577      654C6566 
 6577      7400
 6578              	.LASF157:
 6579 071d 64697370 		.ascii	"displaystring\000"
 6579      6C617973 
 6579      7472696E 
 6579      6700
 6580              	.LASF137:
 6581 072b 6C617374 		.ascii	"last_quad_count1\000"
 6581      5F717561 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 139


 6581      645F636F 
 6581      756E7431 
 6581      00
 6582              	.LASF138:
 6583 073c 6C617374 		.ascii	"last_quad_count2\000"
 6583      5F717561 
 6583      645F636F 
 6583      756E7432 
 6583      00
 6584              	.LASF112:
 6585 074d 75736250 		.ascii	"usbPutChar\000"
 6585      75744368 
 6585      617200
 6586              	.LASF0:
 6587 0758 7369676E 		.ascii	"signed char\000"
 6587      65642063 
 6587      68617200 
 6588              	.LASF3:
 6589 0764 73686F72 		.ascii	"short unsigned int\000"
 6589      7420756E 
 6589      7369676E 
 6589      65642069 
 6589      6E7400
 6590              	.LASF40:
 6591 0777 726F626F 		.ascii	"robot_orientation\000"
 6591      745F6F72 
 6591      69656E74 
 6591      6174696F 
 6591      6E00
 6592              	.LASF34:
 6593 0789 51554144 		.ascii	"QUAD_STOP\000"
 6593      5F53544F 
 6593      5000
 6594              	.LASF109:
 6595 0793 6D61696E 		.ascii	"main\000"
 6595      00
 6596              	.LASF81:
 6597 0798 42545F74 		.ascii	"BT_txInt\000"
 6597      78496E74 
 6597      00
 6598              	.LASF97:
 6599 07a1 6E657874 		.ascii	"nextSpeed\000"
 6599      53706565 
 6599      6400
 6600              	.LASF84:
 6601 07ab 64697374 		.ascii	"dist\000"
 6601      00
 6602              	.LASF13:
 6603 07b0 75696E74 		.ascii	"uint8\000"
 6603      3800
 6604              	.LASF19:
 6605 07b6 646F7562 		.ascii	"double\000"
 6605      6C6500
 6606              	.LASF143:
 6607 07bd 72696768 		.ascii	"right_duty_cycle\000"
 6607      745F6475 
 6607      74795F63 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdHJUUq.s 			page 140


 6607      79636C65 
 6607      00
 6608              	.LASF35:
 6609 07ce 52465F53 		.ascii	"RF_STOP\000"
 6609      544F5000 
 6610              	.LASF58:
 6611 07d6 68616E64 		.ascii	"handle_rx_binary\000"
 6611      6C655F72 
 6611      785F6269 
 6611      6E617279 
 6611      00
 6612              	.LASF105:
 6613 07e7 7072696E 		.ascii	"print_RF\000"
 6613      745F5246 
 6613      00
 6614              	.LASF41:
 6615 07f0 67305F78 		.ascii	"g0_xpos\000"
 6615      706F7300 
 6616              	.LASF95:
 6617 07f8 7363616C 		.ascii	"scalingRight\000"
 6617      696E6752 
 6617      69676874 
 6617      00
 6618              	.LASF125:
 6619 0805 666C6167 		.ascii	"flag_KB_string\000"
 6619      5F4B425F 
 6619      73747269 
 6619      6E6700
 6620              	.LASF47:
 6621 0814 67315F73 		.ascii	"g1_speed\000"
 6621      70656564 
 6621      00
 6622              	.LASF170:
 6623 081d 2E5C6D61 		.ascii	".\\main.c\000"
 6623      696E2E63 
 6623      00
 6624              	.LASF151:
 6625 0826 696E6974 		.ascii	"initial_x_pos\000"
 6625      69616C5F 
 6625      785F706F 
 6625      7300
 6626              	.LASF66:
 6627 0834 6272616B 		.ascii	"brakeRight\000"
 6627      65526967 
 6627      687400
 6628              	.LASF76:
 6629 083f 696E6974 		.ascii	"initTrackU\000"
 6629      54726163 
 6629      6B5500
 6630              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
