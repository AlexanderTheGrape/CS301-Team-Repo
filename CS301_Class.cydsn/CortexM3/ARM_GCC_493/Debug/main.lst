ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	prev_movement_state
 204              		.type	prev_movement_state, %object
 205              		.size	prev_movement_state, 1
 206              	prev_movement_state:
 207 0044 03       		.byte	3
 208              		.global	movement_state
 209              		.type	movement_state, %object
 210              		.size	movement_state, 1
 211              	movement_state:
 212 0045 03       		.byte	3
 213              		.global	track_mode
 214 0046 0000     		.bss
 215              		.type	track_mode, %object
 216              		.size	track_mode, 1
 217              	track_mode:
 218 002c 00       		.space	1
 219              		.global	byteCount
 220              		.type	byteCount, %object
 221              		.size	byteCount, 1
 222              	byteCount:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 5


 223 002d 00       		.space	1
 224              		.comm	packet,2,4
 225              		.section	.text.handle_rx_binary,"ax",%progbits
 226              		.align	2
 227              		.global	handle_rx_binary
 228              		.thumb
 229              		.thumb_func
 230              		.type	handle_rx_binary, %function
 231              	handle_rx_binary:
 232              	.LFB63:
 233              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** #define QUAD_RATIO 0.99556
  40:.\main.c      **** 
  41:.\main.c      **** void handle_rx_binary()
  42:.\main.c      **** {
 234              		.loc 1 42 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 32
 237              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 6


 238              		@ link register save eliminated.
 239 0000 80B4     		push	{r7}
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 89B0     		sub	sp, sp, #36
 243              		.cfi_def_cfa_offset 40
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_def_cfa_register 7
  43:.\main.c      ****     if(flag_rx == 1)
 246              		.loc 1 43 0
 247 0006 524B     		ldr	r3, .L21
 248 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 249 000a 012B     		cmp	r3, #1
 250 000c 40F09A80 		bne	.L1
 251              	.LBB2:
  44:.\main.c      ****     {    
  45:.\main.c      ****         flag_rx = 0;
 252              		.loc 1 45 0
 253 0010 4F4B     		ldr	r3, .L21
 254 0012 0022     		movs	r2, #0
 255 0014 1A70     		strb	r2, [r3]
  46:.\main.c      ****         
  47:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 256              		.loc 1 47 0
 257 0016 4F4B     		ldr	r3, .L21+4
 258 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 259 001a 1B02     		lsls	r3, r3, #8
 260 001c 9AB2     		uxth	r2, r3
 261 001e 4D4B     		ldr	r3, .L21+4
 262 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 263 0022 9BB2     		uxth	r3, r3
 264 0024 1343     		orrs	r3, r3, r2
 265 0026 9BB2     		uxth	r3, r3
 266 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  48:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  49:.\main.c      ****         char byte_packet[12];
  50:.\main.c      ****         char string_packet[12];
  51:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  52:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  53:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  54:.\main.c      ****         //usbPutString(string_packet);
  55:.\main.c      ****        // usbPutString(string_packet);
  56:.\main.c      ****        // usbPutChar(' ');
  57:.\main.c      ****         
  58:.\main.c      ****         switch(byteCount)
 267              		.loc 1 58 0
 268 002a 4B4B     		ldr	r3, .L21+8
 269 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 002e 043B     		subs	r3, r3, #4
 271 0030 1E2B     		cmp	r3, #30
 272 0032 00F28780 		bhi	.L1
 273 0036 01A2     		adr	r2, .L5
 274 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 275              		.p2align 2
 276              	.L5:
 277 003c B9000000 		.word	.L4+1
 278 0040 45010000 		.word	.L1+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 7


 279 0044 CD000000 		.word	.L6+1
 280 0048 45010000 		.word	.L1+1
 281 004c D5000000 		.word	.L7+1
 282 0050 45010000 		.word	.L1+1
 283 0054 DD000000 		.word	.L8+1
 284 0058 45010000 		.word	.L1+1
 285 005c E5000000 		.word	.L9+1
 286 0060 45010000 		.word	.L1+1
 287 0064 ED000000 		.word	.L10+1
 288 0068 45010000 		.word	.L1+1
 289 006c F5000000 		.word	.L11+1
 290 0070 45010000 		.word	.L1+1
 291 0074 FD000000 		.word	.L12+1
 292 0078 45010000 		.word	.L1+1
 293 007c 05010000 		.word	.L13+1
 294 0080 45010000 		.word	.L1+1
 295 0084 0D010000 		.word	.L14+1
 296 0088 45010000 		.word	.L1+1
 297 008c 15010000 		.word	.L15+1
 298 0090 45010000 		.word	.L1+1
 299 0094 1D010000 		.word	.L16+1
 300 0098 45010000 		.word	.L1+1
 301 009c 25010000 		.word	.L17+1
 302 00a0 45010000 		.word	.L1+1
 303 00a4 2D010000 		.word	.L18+1
 304 00a8 45010000 		.word	.L1+1
 305 00ac 35010000 		.word	.L19+1
 306 00b0 45010000 		.word	.L1+1
 307 00b4 3D010000 		.word	.L20+1
 308              		.p2align 1
 309              	.L4:
  59:.\main.c      ****         {
  60:.\main.c      ****             case 4:
  61:.\main.c      ****                 //usbPutString("RSSI:");
  62:.\main.c      ****                 //usbPutString(byte_packet);
  63:.\main.c      ****                 //usbPutString("\r\n");
  64:.\main.c      ****                 buffer_state.rssi = packet[0];
 310              		.loc 1 64 0
 311 00b8 264B     		ldr	r3, .L21+4
 312 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 00bc DAB2     		uxtb	r2, r3
 314 00be 274B     		ldr	r3, .L21+12
 315 00c0 1A70     		strb	r2, [r3]
  65:.\main.c      ****                 buffer_state.index = packet[1];
 316              		.loc 1 65 0
 317 00c2 244B     		ldr	r3, .L21+4
 318 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 319 00c6 254B     		ldr	r3, .L21+12
 320 00c8 5A70     		strb	r2, [r3, #1]
  66:.\main.c      ****             break;
 321              		.loc 1 66 0
 322 00ca 3BE0     		b	.L1
 323              	.L6:
  67:.\main.c      ****             case 6:
  68:.\main.c      ****                 //usbPutString("robot_x:");
  69:.\main.c      ****                 //usbPutString(string_packet);
  70:.\main.c      ****                 //usbPutString("\r\n");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 8


  71:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 324              		.loc 1 71 0
 325 00cc FA8B     		ldrh	r2, [r7, #30]
 326 00ce 234B     		ldr	r3, .L21+12
 327 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  72:.\main.c      ****             break;
 328              		.loc 1 72 0
 329 00d2 37E0     		b	.L1
 330              	.L7:
  73:.\main.c      ****             case 8:
  74:.\main.c      ****                 //usbPutString("robot_y:");
  75:.\main.c      ****                 //usbPutString(string_packet);
  76:.\main.c      ****                 //usbPutString("\r\n");
  77:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 331              		.loc 1 77 0
 332 00d4 FA8B     		ldrh	r2, [r7, #30]
 333 00d6 214B     		ldr	r3, .L21+12
 334 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  78:.\main.c      ****             break;
 335              		.loc 1 78 0
 336 00da 33E0     		b	.L1
 337              	.L8:
  79:.\main.c      ****             case 10:
  80:.\main.c      ****                 //usbPutString("robot_dir:");
  81:.\main.c      ****                 //usbPutString(string_packet);
  82:.\main.c      ****                 //usbPutString("\r\n");
  83:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 338              		.loc 1 83 0
 339 00dc FA8B     		ldrh	r2, [r7, #30]
 340 00de 1F4B     		ldr	r3, .L21+12
 341 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  84:.\main.c      ****             break;
 342              		.loc 1 84 0
 343 00e2 2FE0     		b	.L1
 344              	.L9:
  85:.\main.c      ****             case 12:
  86:.\main.c      ****                 //usbPutString("g0_x:");
  87:.\main.c      ****                 //usbPutString(string_packet);
  88:.\main.c      ****                 //usbPutString("\r\n");
  89:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 345              		.loc 1 89 0
 346 00e4 FA8B     		ldrh	r2, [r7, #30]
 347 00e6 1D4B     		ldr	r3, .L21+12
 348 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  90:.\main.c      ****             break;
 349              		.loc 1 90 0
 350 00ea 2BE0     		b	.L1
 351              	.L10:
  91:.\main.c      ****             case 14:
  92:.\main.c      ****                 //usbPutString("g0_y:");
  93:.\main.c      ****                 //usbPutString(string_packet);
  94:.\main.c      ****                 //usbPutString("\r\n");
  95:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 352              		.loc 1 95 0
 353 00ec FA8B     		ldrh	r2, [r7, #30]
 354 00ee 1B4B     		ldr	r3, .L21+12
 355 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 9


  96:.\main.c      ****             break;
 356              		.loc 1 96 0
 357 00f2 27E0     		b	.L1
 358              	.L11:
  97:.\main.c      ****             case 16:
  98:.\main.c      ****                 //usbPutString("g0_speed:");
  99:.\main.c      ****                 //usbPutString(string_packet);
 100:.\main.c      ****                 //usbPutString("\r\n");
 101:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 359              		.loc 1 101 0
 360 00f4 FA8B     		ldrh	r2, [r7, #30]
 361 00f6 194B     		ldr	r3, .L21+12
 362 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 102:.\main.c      ****             break;
 363              		.loc 1 102 0
 364 00fa 23E0     		b	.L1
 365              	.L12:
 103:.\main.c      ****             case 18:
 104:.\main.c      ****                 //usbPutString("g1_dir:");
 105:.\main.c      ****                 //usbPutString(string_packet);
 106:.\main.c      ****                 //usbPutString("\r\n");
 107:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 366              		.loc 1 107 0
 367 00fc FA8B     		ldrh	r2, [r7, #30]
 368 00fe 174B     		ldr	r3, .L21+12
 369 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 108:.\main.c      ****             break;
 370              		.loc 1 108 0
 371 0102 1FE0     		b	.L1
 372              	.L13:
 109:.\main.c      ****             case 20:
 110:.\main.c      ****                 //usbPutString("g1_x:");
 111:.\main.c      ****                 //usbPutString(string_packet);
 112:.\main.c      ****                 //usbPutString("\r\n");
 113:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 373              		.loc 1 113 0
 374 0104 FA8B     		ldrh	r2, [r7, #30]
 375 0106 154B     		ldr	r3, .L21+12
 376 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 114:.\main.c      ****             break;
 377              		.loc 1 114 0
 378 010a 1BE0     		b	.L1
 379              	.L14:
 115:.\main.c      ****             case 22:
 116:.\main.c      ****                 //usbPutString("g1_y:");
 117:.\main.c      ****                 //usbPutString(string_packet);
 118:.\main.c      ****                 //usbPutString("\r\n");
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 380              		.loc 1 119 0
 381 010c FA8B     		ldrh	r2, [r7, #30]
 382 010e 134B     		ldr	r3, .L21+12
 383 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 384              		.loc 1 120 0
 385 0112 17E0     		b	.L1
 386              	.L15:
 121:.\main.c      ****             case 24:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 10


 122:.\main.c      ****                 //usbPutString("g1_speed:");
 123:.\main.c      ****                 //usbPutString(string_packet);
 124:.\main.c      ****                 //usbPutString("\r\n");
 125:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 387              		.loc 1 125 0
 388 0114 FA8B     		ldrh	r2, [r7, #30]
 389 0116 114B     		ldr	r3, .L21+12
 390 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 126:.\main.c      ****             break;
 391              		.loc 1 126 0
 392 011a 13E0     		b	.L1
 393              	.L16:
 127:.\main.c      ****             case 26:
 128:.\main.c      ****                 //usbPutString("g1_dir:");
 129:.\main.c      ****                 //usbPutString(string_packet);
 130:.\main.c      ****                 //usbPutString("\r\n");
 131:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 394              		.loc 1 131 0
 395 011c FA8B     		ldrh	r2, [r7, #30]
 396 011e 0F4B     		ldr	r3, .L21+12
 397 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 132:.\main.c      ****             break;
 398              		.loc 1 132 0
 399 0122 0FE0     		b	.L1
 400              	.L17:
 133:.\main.c      ****             case 28:
 134:.\main.c      ****                 //usbPutString("g2_x:");
 135:.\main.c      ****                 //usbPutString(string_packet);
 136:.\main.c      ****                 //usbPutString("\r\n");
 137:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 401              		.loc 1 137 0
 402 0124 FA8B     		ldrh	r2, [r7, #30]
 403 0126 0D4B     		ldr	r3, .L21+12
 404 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 138:.\main.c      ****             break;
 405              		.loc 1 138 0
 406 012a 0BE0     		b	.L1
 407              	.L18:
 139:.\main.c      ****             case 30:
 140:.\main.c      ****                 //usbPutString("g2_y:");
 141:.\main.c      ****                 //usbPutString(string_packet);
 142:.\main.c      ****                 //usbPutString("\r\n");
 143:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 408              		.loc 1 143 0
 409 012c FA8B     		ldrh	r2, [r7, #30]
 410 012e 0B4B     		ldr	r3, .L21+12
 411 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 144:.\main.c      ****             break;
 412              		.loc 1 144 0
 413 0132 07E0     		b	.L1
 414              	.L19:
 145:.\main.c      ****             case 32:
 146:.\main.c      ****                 //usbPutString("g1_speed:");
 147:.\main.c      ****                 //usbPutString(string_packet);
 148:.\main.c      ****                 //usbPutString("\r\n");
 149:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 415              		.loc 1 149 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 11


 416 0134 FA8B     		ldrh	r2, [r7, #30]
 417 0136 094B     		ldr	r3, .L21+12
 418 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 150:.\main.c      ****             break;
 419              		.loc 1 150 0
 420 013a 03E0     		b	.L1
 421              	.L20:
 151:.\main.c      ****             case 34:
 152:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 422              		.loc 1 152 0
 423 013c FA8B     		ldrh	r2, [r7, #30]
 424 013e 074B     		ldr	r3, .L21+12
 425 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 153:.\main.c      ****                 //usbPutString("g2_dir:");
 154:.\main.c      ****                 //usbPutString(string_packet);
 155:.\main.c      ****                 //usbPutString("\r\n");
 156:.\main.c      ****                 
 157:.\main.c      ****             break;
 426              		.loc 1 157 0
 427 0142 00BF     		nop
 428              	.L1:
 429              	.LBE2:
 158:.\main.c      ****         }
 159:.\main.c      ****     }
 160:.\main.c      **** }
 430              		.loc 1 160 0
 431 0144 2437     		adds	r7, r7, #36
 432              		.cfi_def_cfa_offset 4
 433 0146 BD46     		mov	sp, r7
 434              		.cfi_def_cfa_register 13
 435              		@ sp needed
 436 0148 5DF8047B 		ldr	r7, [sp], #4
 437              		.cfi_restore 7
 438              		.cfi_def_cfa_offset 0
 439 014c 7047     		bx	lr
 440              	.L22:
 441 014e 00BF     		.align	2
 442              	.L21:
 443 0150 00000000 		.word	flag_rx
 444 0154 00000000 		.word	packet
 445 0158 00000000 		.word	byteCount
 446 015c 00000000 		.word	buffer_state
 447              		.cfi_endproc
 448              	.LFE63:
 449              		.size	handle_rx_binary, .-handle_rx_binary
 450              		.section	.text.setLeftDir,"ax",%progbits
 451              		.align	2
 452              		.global	setLeftDir
 453              		.thumb
 454              		.thumb_func
 455              		.type	setLeftDir, %function
 456              	setLeftDir:
 457              	.LFB64:
 161:.\main.c      **** 
 162:.\main.c      **** 
 163:.\main.c      **** 
 164:.\main.c      **** void setLeftDir(uint8 dir)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 12


 165:.\main.c      **** {
 458              		.loc 1 165 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 80B5     		push	{r7, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 82B0     		sub	sp, sp, #8
 467              		.cfi_def_cfa_offset 16
 468 0004 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 470 0006 0346     		mov	r3, r0
 471 0008 FB71     		strb	r3, [r7, #7]
 166:.\main.c      ****     M2_IN2_Write(dir);
 472              		.loc 1 166 0
 473 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 474 000c 1846     		mov	r0, r3
 475 000e FFF7FEFF 		bl	M2_IN2_Write
 167:.\main.c      **** }
 476              		.loc 1 167 0
 477 0012 0837     		adds	r7, r7, #8
 478              		.cfi_def_cfa_offset 8
 479 0014 BD46     		mov	sp, r7
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 0016 80BD     		pop	{r7, pc}
 483              		.cfi_endproc
 484              	.LFE64:
 485              		.size	setLeftDir, .-setLeftDir
 486              		.section	.text.setRightDir,"ax",%progbits
 487              		.align	2
 488              		.global	setRightDir
 489              		.thumb
 490              		.thumb_func
 491              		.type	setRightDir, %function
 492              	setRightDir:
 493              	.LFB65:
 168:.\main.c      **** 
 169:.\main.c      **** void setRightDir(uint8 dir)
 170:.\main.c      **** {
 494              		.loc 1 170 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 80B5     		push	{r7, lr}
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 82B0     		sub	sp, sp, #8
 503              		.cfi_def_cfa_offset 16
 504 0004 00AF     		add	r7, sp, #0
 505              		.cfi_def_cfa_register 7
 506 0006 0346     		mov	r3, r0
 507 0008 FB71     		strb	r3, [r7, #7]
 171:.\main.c      ****     M1_IN2_Write(dir);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 13


 508              		.loc 1 171 0
 509 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 510 000c 1846     		mov	r0, r3
 511 000e FFF7FEFF 		bl	M1_IN2_Write
 172:.\main.c      **** }
 512              		.loc 1 172 0
 513 0012 0837     		adds	r7, r7, #8
 514              		.cfi_def_cfa_offset 8
 515 0014 BD46     		mov	sp, r7
 516              		.cfi_def_cfa_register 13
 517              		@ sp needed
 518 0016 80BD     		pop	{r7, pc}
 519              		.cfi_endproc
 520              	.LFE65:
 521              		.size	setRightDir, .-setRightDir
 522              		.section	.rodata
 523              		.align	2
 524              	.LC0:
 525 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 525      2025640D 
 525      0A00
 526              		.section	.text.reverseDirection,"ax",%progbits
 527              		.align	2
 528              		.global	reverseDirection
 529              		.thumb
 530              		.thumb_func
 531              		.type	reverseDirection, %function
 532              	reverseDirection:
 533              	.LFB66:
 173:.\main.c      **** 
 174:.\main.c      **** void reverseDirection()
 175:.\main.c      **** {
 534              		.loc 1 175 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538 0000 80B5     		push	{r7, lr}
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 84B0     		sub	sp, sp, #16
 543              		.cfi_def_cfa_offset 24
 544 0004 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 176:.\main.c      ****     direction = !direction;
 546              		.loc 1 176 0
 547 0006 114B     		ldr	r3, .L26
 548 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 549 000a 002B     		cmp	r3, #0
 550 000c 0CBF     		ite	eq
 551 000e 0123     		moveq	r3, #1
 552 0010 0023     		movne	r3, #0
 553 0012 DBB2     		uxtb	r3, r3
 554 0014 1A46     		mov	r2, r3
 555 0016 0D4B     		ldr	r3, .L26
 556 0018 1A70     		strb	r2, [r3]
 177:.\main.c      ****     setLeftDir(direction);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 14


 557              		.loc 1 177 0
 558 001a 0C4B     		ldr	r3, .L26
 559 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 560 001e 1846     		mov	r0, r3
 561 0020 FFF7FEFF 		bl	setLeftDir
 178:.\main.c      ****     setRightDir(direction);
 562              		.loc 1 178 0
 563 0024 094B     		ldr	r3, .L26
 564 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 565 0028 1846     		mov	r0, r3
 566 002a FFF7FEFF 		bl	setRightDir
 179:.\main.c      ****     char mes[16];
 180:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 567              		.loc 1 180 0
 568 002e 074B     		ldr	r3, .L26
 569 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 570 0032 1A46     		mov	r2, r3
 571 0034 3B46     		mov	r3, r7
 572 0036 1846     		mov	r0, r3
 573 0038 0549     		ldr	r1, .L26+4
 574 003a FFF7FEFF 		bl	sprintf
 181:.\main.c      ****     UART_PutString(mes);
 575              		.loc 1 181 0
 576 003e 3B46     		mov	r3, r7
 577 0040 1846     		mov	r0, r3
 578 0042 FFF7FEFF 		bl	UART_PutString
 182:.\main.c      **** }
 579              		.loc 1 182 0
 580 0046 1037     		adds	r7, r7, #16
 581              		.cfi_def_cfa_offset 8
 582 0048 BD46     		mov	sp, r7
 583              		.cfi_def_cfa_register 13
 584              		@ sp needed
 585 004a 80BD     		pop	{r7, pc}
 586              	.L27:
 587              		.align	2
 588              	.L26:
 589 004c 00000000 		.word	direction
 590 0050 00000000 		.word	.LC0
 591              		.cfi_endproc
 592              	.LFE66:
 593              		.size	reverseDirection, .-reverseDirection
 594              		.global	__aeabi_dcmplt
 595              		.section	.rodata
 596 000a 0000     		.align	2
 597              	.LC1:
 598 000c 72696768 		.ascii	"right dir: %d\015\012\000"
 598      74206469 
 598      723A2025 
 598      640D0A00 
 599              		.align	2
 600              	.LC2:
 601 001c 6C656674 		.ascii	"left dir: %d\015\012\000"
 601      20646972 
 601      3A202564 
 601      0D0A00
 602              		.global	__aeabi_dmul
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 15


 603              		.global	__aeabi_d2uiz
 604              		.section	.text.setSpeed,"ax",%progbits
 605              		.align	2
 606              		.global	setSpeed
 607              		.thumb
 608              		.thumb_func
 609              		.type	setSpeed, %function
 610              	setSpeed:
 611              	.LFB67:
 183:.\main.c      **** 
 184:.\main.c      **** void setSpeed(double right, double left){
 612              		.loc 1 184 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 56
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 8EB0     		sub	sp, sp, #56
 621              		.cfi_def_cfa_offset 64
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0006 C7E90201 		strd	r0, [r7, #8]
 625 000a C7E90023 		strd	r2, [r7]
 185:.\main.c      ****     if(right < 0)
 626              		.loc 1 185 0
 627 000e D7E90201 		ldrd	r0, [r7, #8]
 628 0012 4FF00002 		mov	r2, #0
 629 0016 4FF00003 		mov	r3, #0
 630 001a FFF7FEFF 		bl	__aeabi_dcmplt
 631 001e 0346     		mov	r3, r0
 632 0020 002B     		cmp	r3, #0
 633 0022 23D0     		beq	.L37
 634              	.LBB3:
 186:.\main.c      ****     {
 187:.\main.c      ****         char mes[16];
 188:.\main.c      ****         sprintf(mes, "right dir: %d\r\n", !direction);
 635              		.loc 1 188 0
 636 0024 464B     		ldr	r3, .L39+8
 637 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 0028 002B     		cmp	r3, #0
 639 002a 0CBF     		ite	eq
 640 002c 0123     		moveq	r3, #1
 641 002e 0023     		movne	r3, #0
 642 0030 DBB2     		uxtb	r3, r3
 643 0032 1A46     		mov	r2, r3
 644 0034 07F12403 		add	r3, r7, #36
 645 0038 1846     		mov	r0, r3
 646 003a 4249     		ldr	r1, .L39+12
 647 003c FFF7FEFF 		bl	sprintf
 189:.\main.c      ****         UART_PutString(mes);
 648              		.loc 1 189 0
 649 0040 07F12403 		add	r3, r7, #36
 650 0044 1846     		mov	r0, r3
 651 0046 FFF7FEFF 		bl	UART_PutString
 190:.\main.c      ****         setRightDir(!direction);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 16


 652              		.loc 1 190 0
 653 004a 3D4B     		ldr	r3, .L39+8
 654 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655 004e 002B     		cmp	r3, #0
 656 0050 0CBF     		ite	eq
 657 0052 0123     		moveq	r3, #1
 658 0054 0023     		movne	r3, #0
 659 0056 DBB2     		uxtb	r3, r3
 660 0058 1846     		mov	r0, r3
 661 005a FFF7FEFF 		bl	setRightDir
 191:.\main.c      ****         right = -right;
 662              		.loc 1 191 0
 663 005e BB68     		ldr	r3, [r7, #8]
 664 0060 BB60     		str	r3, [r7, #8]
 665 0062 FB68     		ldr	r3, [r7, #12]
 666 0064 83F00043 		eor	r3, r3, #-2147483648
 667 0068 FB60     		str	r3, [r7, #12]
 668              	.LBE3:
 669 006a 04E0     		b	.L31
 670              	.L37:
 192:.\main.c      ****     }
 193:.\main.c      ****     else setRightDir(direction);
 671              		.loc 1 193 0
 672 006c 344B     		ldr	r3, .L39+8
 673 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 674 0070 1846     		mov	r0, r3
 675 0072 FFF7FEFF 		bl	setRightDir
 676              	.L31:
 194:.\main.c      ****     
 195:.\main.c      ****     if(left < 0)
 677              		.loc 1 195 0
 678 0076 D7E90001 		ldrd	r0, [r7]
 679 007a 4FF00002 		mov	r2, #0
 680 007e 4FF00003 		mov	r3, #0
 681 0082 FFF7FEFF 		bl	__aeabi_dcmplt
 682 0086 0346     		mov	r3, r0
 683 0088 002B     		cmp	r3, #0
 684 008a 23D0     		beq	.L38
 685              	.LBB4:
 196:.\main.c      ****     {
 197:.\main.c      ****         char mes[16];
 198:.\main.c      ****         sprintf(mes, "left dir: %d\r\n", !direction);
 686              		.loc 1 198 0
 687 008c 2C4B     		ldr	r3, .L39+8
 688 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 689 0090 002B     		cmp	r3, #0
 690 0092 0CBF     		ite	eq
 691 0094 0123     		moveq	r3, #1
 692 0096 0023     		movne	r3, #0
 693 0098 DBB2     		uxtb	r3, r3
 694 009a 1A46     		mov	r2, r3
 695 009c 07F11403 		add	r3, r7, #20
 696 00a0 1846     		mov	r0, r3
 697 00a2 2949     		ldr	r1, .L39+16
 698 00a4 FFF7FEFF 		bl	sprintf
 199:.\main.c      ****         UART_PutString(mes);
 699              		.loc 1 199 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 17


 700 00a8 07F11403 		add	r3, r7, #20
 701 00ac 1846     		mov	r0, r3
 702 00ae FFF7FEFF 		bl	UART_PutString
 200:.\main.c      ****         setLeftDir(!direction);
 703              		.loc 1 200 0
 704 00b2 234B     		ldr	r3, .L39+8
 705 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 706 00b6 002B     		cmp	r3, #0
 707 00b8 0CBF     		ite	eq
 708 00ba 0123     		moveq	r3, #1
 709 00bc 0023     		movne	r3, #0
 710 00be DBB2     		uxtb	r3, r3
 711 00c0 1846     		mov	r0, r3
 712 00c2 FFF7FEFF 		bl	setLeftDir
 201:.\main.c      ****         left = -left;
 713              		.loc 1 201 0
 714 00c6 3B68     		ldr	r3, [r7]
 715 00c8 3B60     		str	r3, [r7]
 716 00ca 7B68     		ldr	r3, [r7, #4]
 717 00cc 83F00043 		eor	r3, r3, #-2147483648
 718 00d0 7B60     		str	r3, [r7, #4]
 719              	.LBE4:
 720 00d2 04E0     		b	.L34
 721              	.L38:
 202:.\main.c      ****     }
 203:.\main.c      ****     else setLeftDir(direction);
 722              		.loc 1 203 0
 723 00d4 1A4B     		ldr	r3, .L39+8
 724 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 725 00d8 1846     		mov	r0, r3
 726 00da FFF7FEFF 		bl	setLeftDir
 727              	.L34:
 204:.\main.c      ****     
 205:.\main.c      ****     uint8 countsLeft = left*QUAD_RATIO;
 728              		.loc 1 205 0
 729 00de D7E90001 		ldrd	r0, [r7]
 730 00e2 15A3     		adr	r3, .L39
 731 00e4 D3E90023 		ldrd	r2, [r3]
 732 00e8 FFF7FEFF 		bl	__aeabi_dmul
 733 00ec 0246     		mov	r2, r0
 734 00ee 0B46     		mov	r3, r1
 735 00f0 1046     		mov	r0, r2
 736 00f2 1946     		mov	r1, r3
 737 00f4 FFF7FEFF 		bl	__aeabi_d2uiz
 738 00f8 0346     		mov	r3, r0
 739 00fa 87F83730 		strb	r3, [r7, #55]
 206:.\main.c      ****     uint8 countsRight = right*QUAD_RATIO;
 740              		.loc 1 206 0
 741 00fe D7E90201 		ldrd	r0, [r7, #8]
 742 0102 0DA3     		adr	r3, .L39
 743 0104 D3E90023 		ldrd	r2, [r3]
 744 0108 FFF7FEFF 		bl	__aeabi_dmul
 745 010c 0246     		mov	r2, r0
 746 010e 0B46     		mov	r3, r1
 747 0110 1046     		mov	r0, r2
 748 0112 1946     		mov	r1, r3
 749 0114 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 18


 750 0118 0346     		mov	r3, r0
 751 011a 87F83630 		strb	r3, [r7, #54]
 207:.\main.c      ****     
 208:.\main.c      ****     leftSpeedLimit = countsRight;
 752              		.loc 1 208 0
 753 011e 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 754 0122 9AB2     		uxth	r2, r3
 755 0124 094B     		ldr	r3, .L39+20
 756 0126 1A80     		strh	r2, [r3]	@ movhi
 209:.\main.c      ****     rightSpeedLimit = countsLeft;
 757              		.loc 1 209 0
 758 0128 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 759 012c 9AB2     		uxth	r2, r3
 760 012e 084B     		ldr	r3, .L39+24
 761 0130 1A80     		strh	r2, [r3]	@ movhi
 210:.\main.c      **** }
 762              		.loc 1 210 0
 763 0132 3837     		adds	r7, r7, #56
 764              		.cfi_def_cfa_offset 8
 765 0134 BD46     		mov	sp, r7
 766              		.cfi_def_cfa_register 13
 767              		@ sp needed
 768 0136 80BD     		pop	{r7, pc}
 769              	.L40:
 770              		.align	3
 771              	.L39:
 772 0138 969526A5 		.word	-1524197994
 773 013c A0DBEF3F 		.word	1072683936
 774 0140 00000000 		.word	direction
 775 0144 0C000000 		.word	.LC1
 776 0148 1C000000 		.word	.LC2
 777 014c 00000000 		.word	leftSpeedLimit
 778 0150 00000000 		.word	rightSpeedLimit
 779              		.cfi_endproc
 780              	.LFE67:
 781              		.size	setSpeed, .-setSpeed
 782 0154 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 783              		.align	2
 784              		.global	brakeLeft
 785              		.thumb
 786              		.thumb_func
 787              		.type	brakeLeft, %function
 788              	brakeLeft:
 789              	.LFB68:
 211:.\main.c      **** 
 212:.\main.c      **** void brakeLeft()
 213:.\main.c      **** {
 790              		.loc 1 213 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794 0000 80B5     		push	{r7, lr}
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 00AF     		add	r7, sp, #0
 799              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 19


 214:.\main.c      ****     PWM_1_WriteCompare(0);
 800              		.loc 1 214 0
 801 0004 0020     		movs	r0, #0
 802 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 215:.\main.c      ****     left_duty_cycle = 0;
 803              		.loc 1 215 0
 804 000a 024B     		ldr	r3, .L42
 805 000c 0022     		movs	r2, #0
 806 000e 1A80     		strh	r2, [r3]	@ movhi
 216:.\main.c      **** }
 807              		.loc 1 216 0
 808 0010 80BD     		pop	{r7, pc}
 809              	.L43:
 810 0012 00BF     		.align	2
 811              	.L42:
 812 0014 00000000 		.word	left_duty_cycle
 813              		.cfi_endproc
 814              	.LFE68:
 815              		.size	brakeLeft, .-brakeLeft
 816              		.section	.text.brakeRight,"ax",%progbits
 817              		.align	2
 818              		.global	brakeRight
 819              		.thumb
 820              		.thumb_func
 821              		.type	brakeRight, %function
 822              	brakeRight:
 823              	.LFB69:
 217:.\main.c      **** 
 218:.\main.c      **** void brakeRight()
 219:.\main.c      **** {
 824              		.loc 1 219 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828 0000 80B5     		push	{r7, lr}
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 7, -8
 831              		.cfi_offset 14, -4
 832 0002 00AF     		add	r7, sp, #0
 833              		.cfi_def_cfa_register 7
 220:.\main.c      ****      PWM_2_WriteCompare(0);
 834              		.loc 1 220 0
 835 0004 0020     		movs	r0, #0
 836 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 221:.\main.c      ****      right_duty_cycle = 0;
 837              		.loc 1 221 0
 838 000a 024B     		ldr	r3, .L45
 839 000c 0022     		movs	r2, #0
 840 000e 1A80     		strh	r2, [r3]	@ movhi
 222:.\main.c      **** }
 841              		.loc 1 222 0
 842 0010 80BD     		pop	{r7, pc}
 843              	.L46:
 844 0012 00BF     		.align	2
 845              	.L45:
 846 0014 00000000 		.word	right_duty_cycle
 847              		.cfi_endproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 20


 848              	.LFE69:
 849              		.size	brakeRight, .-brakeRight
 850              		.section	.text.brakeMotor,"ax",%progbits
 851              		.align	2
 852              		.global	brakeMotor
 853              		.thumb
 854              		.thumb_func
 855              		.type	brakeMotor, %function
 856              	brakeMotor:
 857              	.LFB70:
 223:.\main.c      **** 
 224:.\main.c      **** void brakeMotor(){
 858              		.loc 1 224 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 7, -8
 865              		.cfi_offset 14, -4
 866 0002 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 225:.\main.c      ****     setSpeed(0, 0);
 868              		.loc 1 225 0
 869 0004 4FF00000 		mov	r0, #0
 870 0008 4FF00001 		mov	r1, #0
 871 000c 4FF00002 		mov	r2, #0
 872 0010 4FF00003 		mov	r3, #0
 873 0014 FFF7FEFF 		bl	setSpeed
 226:.\main.c      ****     brakeLeft();
 874              		.loc 1 226 0
 875 0018 FFF7FEFF 		bl	brakeLeft
 227:.\main.c      ****     brakeRight();
 876              		.loc 1 227 0
 877 001c FFF7FEFF 		bl	brakeRight
 228:.\main.c      **** }
 878              		.loc 1 228 0
 879 0020 80BD     		pop	{r7, pc}
 880              		.cfi_endproc
 881              	.LFE70:
 882              		.size	brakeMotor, .-brakeMotor
 883 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 884              		.align	2
 885              		.global	driveForwards
 886              		.thumb
 887              		.thumb_func
 888              		.type	driveForwards, %function
 889              	driveForwards:
 890              	.LFB71:
 229:.\main.c      **** 
 230:.\main.c      **** 
 231:.\main.c      **** void driveForwards()
 232:.\main.c      **** {
 891              		.loc 1 232 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 21


 895 0000 80B5     		push	{r7, lr}
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
 233:.\main.c      ****     setSpeed(20, 20);
 901              		.loc 1 233 0
 902 0004 4FF00000 		mov	r0, #0
 903 0008 0349     		ldr	r1, .L49
 904 000a 4FF00002 		mov	r2, #0
 905 000e 024B     		ldr	r3, .L49
 906 0010 FFF7FEFF 		bl	setSpeed
 234:.\main.c      **** }
 907              		.loc 1 234 0
 908 0014 80BD     		pop	{r7, pc}
 909              	.L50:
 910 0016 00BF     		.align	2
 911              	.L49:
 912 0018 00003440 		.word	1077149696
 913              		.cfi_endproc
 914              	.LFE71:
 915              		.size	driveForwards, .-driveForwards
 916              		.section	.text.turnLeft,"ax",%progbits
 917              		.align	2
 918              		.global	turnLeft
 919              		.thumb
 920              		.thumb_func
 921              		.type	turnLeft, %function
 922              	turnLeft:
 923              	.LFB72:
 235:.\main.c      **** 
 236:.\main.c      **** void turnLeft()
 237:.\main.c      **** {
 924              		.loc 1 237 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 238:.\main.c      ****     setSpeed(0,20);
 934              		.loc 1 238 0
 935 0004 4FF00000 		mov	r0, #0
 936 0008 4FF00001 		mov	r1, #0
 937 000c 4FF00002 		mov	r2, #0
 938 0010 014B     		ldr	r3, .L52
 939 0012 FFF7FEFF 		bl	setSpeed
 239:.\main.c      **** }
 940              		.loc 1 239 0
 941 0016 80BD     		pop	{r7, pc}
 942              	.L53:
 943              		.align	2
 944              	.L52:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 22


 945 0018 00003440 		.word	1077149696
 946              		.cfi_endproc
 947              	.LFE72:
 948              		.size	turnLeft, .-turnLeft
 949              		.section	.text.turnRight,"ax",%progbits
 950              		.align	2
 951              		.global	turnRight
 952              		.thumb
 953              		.thumb_func
 954              		.type	turnRight, %function
 955              	turnRight:
 956              	.LFB73:
 240:.\main.c      **** 
 241:.\main.c      **** void turnRight()
 242:.\main.c      **** {
 957              		.loc 1 242 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 1, uses_anonymous_args = 0
 961 0000 80B5     		push	{r7, lr}
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 00AF     		add	r7, sp, #0
 966              		.cfi_def_cfa_register 7
 243:.\main.c      ****     setSpeed(20,0);
 967              		.loc 1 243 0
 968 0004 4FF00000 		mov	r0, #0
 969 0008 0349     		ldr	r1, .L55
 970 000a 4FF00002 		mov	r2, #0
 971 000e 4FF00003 		mov	r3, #0
 972 0012 FFF7FEFF 		bl	setSpeed
 244:.\main.c      **** }
 973              		.loc 1 244 0
 974 0016 80BD     		pop	{r7, pc}
 975              	.L56:
 976              		.align	2
 977              	.L55:
 978 0018 00003440 		.word	1077149696
 979              		.cfi_endproc
 980              	.LFE73:
 981              		.size	turnRight, .-turnRight
 982              		.section	.text.initTurnLeft,"ax",%progbits
 983              		.align	2
 984              		.global	initTurnLeft
 985              		.thumb
 986              		.thumb_func
 987              		.type	initTurnLeft, %function
 988              	initTurnLeft:
 989              	.LFB74:
 245:.\main.c      **** 
 246:.\main.c      **** void initTurnLeft(){
 990              		.loc 1 246 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 23


 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
 247:.\main.c      ****     Timer_2_Stop();
 1000              		.loc 1 247 0
 1001 0004 FFF7FEFF 		bl	Timer_2_Stop
 248:.\main.c      ****     prev_movement_state = movement_state;
 1002              		.loc 1 248 0
 1003 0008 084B     		ldr	r3, .L58
 1004 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1005 000c 084B     		ldr	r3, .L58+4
 1006 000e 1A70     		strb	r2, [r3]
 249:.\main.c      ****     movement_state = LTURN;
 1007              		.loc 1 249 0
 1008 0010 064B     		ldr	r3, .L58
 1009 0012 0122     		movs	r2, #1
 1010 0014 1A70     		strb	r2, [r3]
 250:.\main.c      ****     brakeLeft();
 1011              		.loc 1 250 0
 1012 0016 FFF7FEFF 		bl	brakeLeft
 251:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1013              		.loc 1 251 0
 1014 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1015 001e 0346     		mov	r3, r0
 1016 0020 1A46     		mov	r2, r3
 1017 0022 044B     		ldr	r3, .L58+8
 1018 0024 1A80     		strh	r2, [r3]	@ movhi
 252:.\main.c      ****     Timer_2_Start();
 1019              		.loc 1 252 0
 1020 0026 FFF7FEFF 		bl	Timer_2_Start
 253:.\main.c      **** }
 1021              		.loc 1 253 0
 1022 002a 80BD     		pop	{r7, pc}
 1023              	.L59:
 1024              		.align	2
 1025              	.L58:
 1026 002c 00000000 		.word	movement_state
 1027 0030 00000000 		.word	prev_movement_state
 1028 0034 00000000 		.word	start_turn_count
 1029              		.cfi_endproc
 1030              	.LFE74:
 1031              		.size	initTurnLeft, .-initTurnLeft
 1032              		.section	.text.initTurnRight,"ax",%progbits
 1033              		.align	2
 1034              		.global	initTurnRight
 1035              		.thumb
 1036              		.thumb_func
 1037              		.type	initTurnRight, %function
 1038              	initTurnRight:
 1039              	.LFB75:
 254:.\main.c      **** 
 255:.\main.c      **** void initTurnRight(){
 1040              		.loc 1 255 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 24


 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044 0000 80B5     		push	{r7, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 00AF     		add	r7, sp, #0
 1049              		.cfi_def_cfa_register 7
 256:.\main.c      ****     Timer_2_Stop();
 1050              		.loc 1 256 0
 1051 0004 FFF7FEFF 		bl	Timer_2_Stop
 257:.\main.c      ****     prev_movement_state = movement_state;
 1052              		.loc 1 257 0
 1053 0008 084B     		ldr	r3, .L61
 1054 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1055 000c 084B     		ldr	r3, .L61+4
 1056 000e 1A70     		strb	r2, [r3]
 258:.\main.c      ****     movement_state = RTURN;
 1057              		.loc 1 258 0
 1058 0010 064B     		ldr	r3, .L61
 1059 0012 0222     		movs	r2, #2
 1060 0014 1A70     		strb	r2, [r3]
 259:.\main.c      ****     brakeRight();
 1061              		.loc 1 259 0
 1062 0016 FFF7FEFF 		bl	brakeRight
 260:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1063              		.loc 1 260 0
 1064 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1065 001e 0346     		mov	r3, r0
 1066 0020 1A46     		mov	r2, r3
 1067 0022 044B     		ldr	r3, .L61+8
 1068 0024 1A80     		strh	r2, [r3]	@ movhi
 261:.\main.c      ****     Timer_2_Start();
 1069              		.loc 1 261 0
 1070 0026 FFF7FEFF 		bl	Timer_2_Start
 262:.\main.c      **** }
 1071              		.loc 1 262 0
 1072 002a 80BD     		pop	{r7, pc}
 1073              	.L62:
 1074              		.align	2
 1075              	.L61:
 1076 002c 00000000 		.word	movement_state
 1077 0030 00000000 		.word	prev_movement_state
 1078 0034 00000000 		.word	start_turn_count
 1079              		.cfi_endproc
 1080              	.LFE75:
 1081              		.size	initTurnRight, .-initTurnRight
 1082              		.section	.text.initForward,"ax",%progbits
 1083              		.align	2
 1084              		.global	initForward
 1085              		.thumb
 1086              		.thumb_func
 1087              		.type	initForward, %function
 1088              	initForward:
 1089              	.LFB76:
 263:.\main.c      **** 
 264:.\main.c      **** void initForward(){
 1090              		.loc 1 264 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 25


 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094 0000 80B5     		push	{r7, lr}
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
 265:.\main.c      ****     brakeMotor();
 1100              		.loc 1 265 0
 1101 0004 FFF7FEFF 		bl	brakeMotor
 266:.\main.c      ****     movement_state = DRIVE;
 1102              		.loc 1 266 0
 1103 0008 014B     		ldr	r3, .L64
 1104 000a 0022     		movs	r2, #0
 1105 000c 1A70     		strb	r2, [r3]
 267:.\main.c      **** }
 1106              		.loc 1 267 0
 1107 000e 80BD     		pop	{r7, pc}
 1108              	.L65:
 1109              		.align	2
 1110              	.L64:
 1111 0010 00000000 		.word	movement_state
 1112              		.cfi_endproc
 1113              	.LFE76:
 1114              		.size	initForward, .-initForward
 1115              		.section	.text.initBrake,"ax",%progbits
 1116              		.align	2
 1117              		.global	initBrake
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	initBrake, %function
 1121              	initBrake:
 1122              	.LFB77:
 268:.\main.c      **** 
 269:.\main.c      **** void initBrake(){
 1123              		.loc 1 269 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128 0000 80B4     		push	{r7}
 1129              		.cfi_def_cfa_offset 4
 1130              		.cfi_offset 7, -4
 1131 0002 00AF     		add	r7, sp, #0
 1132              		.cfi_def_cfa_register 7
 270:.\main.c      ****     movement_state = STOPPED;
 1133              		.loc 1 270 0
 1134 0004 034B     		ldr	r3, .L67
 1135 0006 0322     		movs	r2, #3
 1136 0008 1A70     		strb	r2, [r3]
 271:.\main.c      **** }
 1137              		.loc 1 271 0
 1138 000a BD46     		mov	sp, r7
 1139              		.cfi_def_cfa_register 13
 1140              		@ sp needed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 26


 1141 000c 5DF8047B 		ldr	r7, [sp], #4
 1142              		.cfi_restore 7
 1143              		.cfi_def_cfa_offset 0
 1144 0010 7047     		bx	lr
 1145              	.L68:
 1146 0012 00BF     		.align	2
 1147              	.L67:
 1148 0014 00000000 		.word	movement_state
 1149              		.cfi_endproc
 1150              	.LFE77:
 1151              		.size	initBrake, .-initBrake
 1152              		.section	.text.initTrack,"ax",%progbits
 1153              		.align	2
 1154              		.global	initTrack
 1155              		.thumb
 1156              		.thumb_func
 1157              		.type	initTrack, %function
 1158              	initTrack:
 1159              	.LFB78:
 272:.\main.c      **** 
 273:.\main.c      **** void initTrack()
 274:.\main.c      **** {
 1160              		.loc 1 274 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164              		@ link register save eliminated.
 1165 0000 80B4     		push	{r7}
 1166              		.cfi_def_cfa_offset 4
 1167              		.cfi_offset 7, -4
 1168 0002 00AF     		add	r7, sp, #0
 1169              		.cfi_def_cfa_register 7
 275:.\main.c      ****     movement_state = TRACKING;
 1170              		.loc 1 275 0
 1171 0004 034B     		ldr	r3, .L70
 1172 0006 0422     		movs	r2, #4
 1173 0008 1A70     		strb	r2, [r3]
 276:.\main.c      **** }
 1174              		.loc 1 276 0
 1175 000a BD46     		mov	sp, r7
 1176              		.cfi_def_cfa_register 13
 1177              		@ sp needed
 1178 000c 5DF8047B 		ldr	r7, [sp], #4
 1179              		.cfi_restore 7
 1180              		.cfi_def_cfa_offset 0
 1181 0010 7047     		bx	lr
 1182              	.L71:
 1183 0012 00BF     		.align	2
 1184              	.L70:
 1185 0014 00000000 		.word	movement_state
 1186              		.cfi_endproc
 1187              	.LFE78:
 1188              		.size	initTrack, .-initTrack
 1189              		.section	.text.initTrackU,"ax",%progbits
 1190              		.align	2
 1191              		.global	initTrackU
 1192              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 27


 1193              		.thumb_func
 1194              		.type	initTrackU, %function
 1195              	initTrackU:
 1196              	.LFB79:
 277:.\main.c      **** 
 278:.\main.c      **** void initTrackU(){
 1197              		.loc 1 278 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 1202 0000 80B4     		push	{r7}
 1203              		.cfi_def_cfa_offset 4
 1204              		.cfi_offset 7, -4
 1205 0002 00AF     		add	r7, sp, #0
 1206              		.cfi_def_cfa_register 7
 279:.\main.c      ****     movement_state = TRACKING_U;
 1207              		.loc 1 279 0
 1208 0004 034B     		ldr	r3, .L73
 1209 0006 0522     		movs	r2, #5
 1210 0008 1A70     		strb	r2, [r3]
 280:.\main.c      **** }
 1211              		.loc 1 280 0
 1212 000a BD46     		mov	sp, r7
 1213              		.cfi_def_cfa_register 13
 1214              		@ sp needed
 1215 000c 5DF8047B 		ldr	r7, [sp], #4
 1216              		.cfi_restore 7
 1217              		.cfi_def_cfa_offset 0
 1218 0010 7047     		bx	lr
 1219              	.L74:
 1220 0012 00BF     		.align	2
 1221              	.L73:
 1222 0014 00000000 		.word	movement_state
 1223              		.cfi_endproc
 1224              	.LFE79:
 1225              		.size	initTrackU, .-initTrackU
 1226              		.section	.text.rxInt,"ax",%progbits
 1227              		.align	2
 1228              		.global	rxInt
 1229              		.thumb
 1230              		.thumb_func
 1231              		.type	rxInt, %function
 1232              	rxInt:
 1233              	.LFB80:
 281:.\main.c      **** 
 282:.\main.c      **** //Binary RF Data
 283:.\main.c      **** CY_ISR(rxInt){
 1234              		.loc 1 283 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 8
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 B0B5     		push	{r4, r5, r7, lr}
 1239              		.cfi_def_cfa_offset 16
 1240              		.cfi_offset 4, -16
 1241              		.cfi_offset 5, -12
 1242              		.cfi_offset 7, -8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 28


 1243              		.cfi_offset 14, -4
 1244 0002 82B0     		sub	sp, sp, #8
 1245              		.cfi_def_cfa_offset 24
 1246 0004 00AF     		add	r7, sp, #0
 1247              		.cfi_def_cfa_register 7
 284:.\main.c      ****     char rf_char = UART_GetChar();
 1248              		.loc 1 284 0
 1249 0006 FFF7FEFF 		bl	UART_GetChar
 1250 000a 0346     		mov	r3, r0
 1251 000c FB71     		strb	r3, [r7, #7]
 285:.\main.c      ****     if(rf_char == SOP){
 1252              		.loc 1 285 0
 1253 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1254 0010 AA2B     		cmp	r3, #170
 1255 0012 1CD1     		bne	.L76
 286:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 287:.\main.c      ****             if(byteCount == 34)
 1256              		.loc 1 287 0
 1257 0014 1B4B     		ldr	r3, .L80
 1258 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1259 0018 222B     		cmp	r3, #34
 1260 001a 11D1     		bne	.L77
 288:.\main.c      ****             {
 289:.\main.c      ****                 system_state = buffer_state;
 1261              		.loc 1 289 0
 1262 001c 1A4B     		ldr	r3, .L80+4
 1263 001e 1B4A     		ldr	r2, .L80+8
 1264 0020 1568     		ldr	r5, [r2]	@ unaligned
 1265 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1266 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1267 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1268 0028 1D60     		str	r5, [r3]	@ unaligned
 1269 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1270 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1271 002e D960     		str	r1, [r3, #12]	@ unaligned
 1272 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1273 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1274 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1275 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1276 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1277 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1278 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1279 003e D961     		str	r1, [r3, #28]	@ unaligned
 1280              	.L77:
 290:.\main.c      ****             }
 291:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1281              		.loc 1 291 0
 1282 0040 104B     		ldr	r3, .L80
 1283 0042 0222     		movs	r2, #2
 1284 0044 1A70     		strb	r2, [r3]
 292:.\main.c      ****             flag_rx = 0;
 1285              		.loc 1 292 0
 1286 0046 124B     		ldr	r3, .L80+12
 1287 0048 0022     		movs	r2, #0
 1288 004a 1A70     		strb	r2, [r3]
 1289 004c 16E0     		b	.L75
 1290              	.L76:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 29


 293:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 294:.\main.c      ****         }
 295:.\main.c      ****         else
 296:.\main.c      ****         {
 297:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1291              		.loc 1 297 0
 1292 004e 0D4B     		ldr	r3, .L80
 1293 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1294 0052 03F00103 		and	r3, r3, #1
 1295 0056 0F49     		ldr	r1, .L80+16
 1296 0058 FA79     		ldrb	r2, [r7, #7]
 1297 005a CA54     		strb	r2, [r1, r3]
 298:.\main.c      ****            
 299:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1298              		.loc 1 299 0
 1299 005c 094B     		ldr	r3, .L80
 1300 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1301 0060 03F00103 		and	r3, r3, #1
 1302 0064 DBB2     		uxtb	r3, r3
 1303 0066 002B     		cmp	r3, #0
 1304 0068 02D0     		beq	.L79
 300:.\main.c      ****             {
 301:.\main.c      ****                 flag_rx = 1;
 1305              		.loc 1 301 0
 1306 006a 094B     		ldr	r3, .L80+12
 1307 006c 0122     		movs	r2, #1
 1308 006e 1A70     		strb	r2, [r3]
 1309              	.L79:
 302:.\main.c      ****             }
 303:.\main.c      ****             byteCount = (byteCount + 1);
 1310              		.loc 1 303 0
 1311 0070 044B     		ldr	r3, .L80
 1312 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1313 0074 0133     		adds	r3, r3, #1
 1314 0076 DAB2     		uxtb	r2, r3
 1315 0078 024B     		ldr	r3, .L80
 1316 007a 1A70     		strb	r2, [r3]
 1317              	.L75:
 304:.\main.c      ****         }
 305:.\main.c      **** }
 1318              		.loc 1 305 0
 1319 007c 0837     		adds	r7, r7, #8
 1320              		.cfi_def_cfa_offset 16
 1321 007e BD46     		mov	sp, r7
 1322              		.cfi_def_cfa_register 13
 1323              		@ sp needed
 1324 0080 B0BD     		pop	{r4, r5, r7, pc}
 1325              	.L81:
 1326 0082 00BF     		.align	2
 1327              	.L80:
 1328 0084 00000000 		.word	byteCount
 1329 0088 00000000 		.word	system_state
 1330 008c 00000000 		.word	buffer_state
 1331 0090 00000000 		.word	flag_rx
 1332 0094 00000000 		.word	packet
 1333              		.cfi_endproc
 1334              	.LFE80:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 30


 1335              		.size	rxInt, .-rxInt
 1336              		.section	.text.BT_rxInt,"ax",%progbits
 1337              		.align	2
 1338              		.global	BT_rxInt
 1339              		.thumb
 1340              		.thumb_func
 1341              		.type	BT_rxInt, %function
 1342              	BT_rxInt:
 1343              	.LFB81:
 306:.\main.c      **** 
 307:.\main.c      **** CY_ISR(BT_rxInt)
 308:.\main.c      **** {
 1344              		.loc 1 308 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 8
 1347              		@ frame_needed = 1, uses_anonymous_args = 0
 1348 0000 80B5     		push	{r7, lr}
 1349              		.cfi_def_cfa_offset 8
 1350              		.cfi_offset 7, -8
 1351              		.cfi_offset 14, -4
 1352 0002 82B0     		sub	sp, sp, #8
 1353              		.cfi_def_cfa_offset 16
 1354 0004 00AF     		add	r7, sp, #0
 1355              		.cfi_def_cfa_register 7
 309:.\main.c      ****     char rf_char = UART_GetChar();
 1356              		.loc 1 309 0
 1357 0006 FFF7FEFF 		bl	UART_GetChar
 1358 000a 0346     		mov	r3, r0
 1359 000c FB71     		strb	r3, [r7, #7]
 310:.\main.c      ****     switch(rf_char){
 1360              		.loc 1 310 0
 1361 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1362 0010 613B     		subs	r3, r3, #97
 1363 0012 192B     		cmp	r3, #25
 1364 0014 66D8     		bhi	.L82
 1365 0016 01A2     		adr	r2, .L85
 1366 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1367              		.p2align 2
 1368              	.L85:
 1369 001c 85000000 		.word	.L84+1
 1370 0020 E5000000 		.word	.L82+1
 1371 0024 E5000000 		.word	.L82+1
 1372 0028 A9000000 		.word	.L86+1
 1373 002c E5000000 		.word	.L82+1
 1374 0030 B5000000 		.word	.L87+1
 1375 0034 E5000000 		.word	.L82+1
 1376 0038 E5000000 		.word	.L82+1
 1377 003c E5000000 		.word	.L82+1
 1378 0040 E5000000 		.word	.L82+1
 1379 0044 E5000000 		.word	.L82+1
 1380 0048 E5000000 		.word	.L82+1
 1381 004c E5000000 		.word	.L82+1
 1382 0050 E5000000 		.word	.L82+1
 1383 0054 E5000000 		.word	.L82+1
 1384 0058 E5000000 		.word	.L82+1
 1385 005c E5000000 		.word	.L82+1
 1386 0060 E5000000 		.word	.L82+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 31


 1387 0064 9D000000 		.word	.L88+1
 1388 0068 C1000000 		.word	.L89+1
 1389 006c CD000000 		.word	.L90+1
 1390 0070 E5000000 		.word	.L82+1
 1391 0074 91000000 		.word	.L91+1
 1392 0078 E5000000 		.word	.L82+1
 1393 007c E5000000 		.word	.L82+1
 1394 0080 D9000000 		.word	.L92+1
 1395              		.p2align 1
 1396              	.L84:
 311:.\main.c      ****     case 'a':
 312:.\main.c      ****         initTurnLeft();
 1397              		.loc 1 312 0
 1398 0084 FFF7FEFF 		bl	initTurnLeft
 313:.\main.c      ****         track_mode = NO_TRACK;
 1399              		.loc 1 313 0
 1400 0088 184B     		ldr	r3, .L93
 1401 008a 0022     		movs	r2, #0
 1402 008c 1A70     		strb	r2, [r3]
 314:.\main.c      ****         break;
 1403              		.loc 1 314 0
 1404 008e 29E0     		b	.L82
 1405              	.L91:
 315:.\main.c      ****     case 'w':
 316:.\main.c      ****         initForward();
 1406              		.loc 1 316 0
 1407 0090 FFF7FEFF 		bl	initForward
 317:.\main.c      ****         track_mode = NO_TRACK;
 1408              		.loc 1 317 0
 1409 0094 154B     		ldr	r3, .L93
 1410 0096 0022     		movs	r2, #0
 1411 0098 1A70     		strb	r2, [r3]
 318:.\main.c      ****         break;
 1412              		.loc 1 318 0
 1413 009a 23E0     		b	.L82
 1414              	.L88:
 319:.\main.c      ****     case 's': 
 320:.\main.c      ****         reverseDirection();
 1415              		.loc 1 320 0
 1416 009c FFF7FEFF 		bl	reverseDirection
 321:.\main.c      ****         track_mode = NO_TRACK;
 1417              		.loc 1 321 0
 1418 00a0 124B     		ldr	r3, .L93
 1419 00a2 0022     		movs	r2, #0
 1420 00a4 1A70     		strb	r2, [r3]
 322:.\main.c      ****         break;
 1421              		.loc 1 322 0
 1422 00a6 1DE0     		b	.L82
 1423              	.L86:
 323:.\main.c      ****     case 'd':
 324:.\main.c      ****         initTurnRight();
 1424              		.loc 1 324 0
 1425 00a8 FFF7FEFF 		bl	initTurnRight
 325:.\main.c      ****         track_mode = NO_TRACK;
 1426              		.loc 1 325 0
 1427 00ac 0F4B     		ldr	r3, .L93
 1428 00ae 0022     		movs	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 32


 1429 00b0 1A70     		strb	r2, [r3]
 326:.\main.c      ****         break;
 1430              		.loc 1 326 0
 1431 00b2 17E0     		b	.L82
 1432              	.L87:
 327:.\main.c      ****     case 'f':
 328:.\main.c      ****         initBrake();
 1433              		.loc 1 328 0
 1434 00b4 FFF7FEFF 		bl	initBrake
 329:.\main.c      ****         track_mode = NO_TRACK;
 1435              		.loc 1 329 0
 1436 00b8 0C4B     		ldr	r3, .L93
 1437 00ba 0022     		movs	r2, #0
 1438 00bc 1A70     		strb	r2, [r3]
 330:.\main.c      ****         break;
 1439              		.loc 1 330 0
 1440 00be 11E0     		b	.L82
 1441              	.L89:
 331:.\main.c      ****     case('t'):
 332:.\main.c      ****         track_mode = CURVE_TRACK;
 1442              		.loc 1 332 0
 1443 00c0 0A4B     		ldr	r3, .L93
 1444 00c2 0122     		movs	r2, #1
 1445 00c4 1A70     		strb	r2, [r3]
 333:.\main.c      ****         initTrack();
 1446              		.loc 1 333 0
 1447 00c6 FFF7FEFF 		bl	initTrack
 334:.\main.c      ****         break;
 1448              		.loc 1 334 0
 1449 00ca 0BE0     		b	.L82
 1450              	.L90:
 335:.\main.c      ****     case('u'):
 336:.\main.c      ****         initTrackU();
 1451              		.loc 1 336 0
 1452 00cc FFF7FEFF 		bl	initTrackU
 337:.\main.c      ****         track_mode = U_TRACK;
 1453              		.loc 1 337 0
 1454 00d0 064B     		ldr	r3, .L93
 1455 00d2 0222     		movs	r2, #2
 1456 00d4 1A70     		strb	r2, [r3]
 338:.\main.c      ****         break;
 1457              		.loc 1 338 0
 1458 00d6 05E0     		b	.L82
 1459              	.L92:
 339:.\main.c      ****     case('z'):
 340:.\main.c      ****         track_mode = SQUARE_TRACK;
 1460              		.loc 1 340 0
 1461 00d8 044B     		ldr	r3, .L93
 1462 00da 0322     		movs	r2, #3
 1463 00dc 1A70     		strb	r2, [r3]
 341:.\main.c      ****         initTrack();
 1464              		.loc 1 341 0
 1465 00de FFF7FEFF 		bl	initTrack
 342:.\main.c      ****         break;
 1466              		.loc 1 342 0
 1467 00e2 00BF     		nop
 1468              	.L82:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 33


 343:.\main.c      ****     }
 344:.\main.c      **** }
 1469              		.loc 1 344 0
 1470 00e4 0837     		adds	r7, r7, #8
 1471              		.cfi_def_cfa_offset 8
 1472 00e6 BD46     		mov	sp, r7
 1473              		.cfi_def_cfa_register 13
 1474              		@ sp needed
 1475 00e8 80BD     		pop	{r7, pc}
 1476              	.L94:
 1477 00ea 00BF     		.align	2
 1478              	.L93:
 1479 00ec 00000000 		.word	track_mode
 1480              		.cfi_endproc
 1481              	.LFE81:
 1482              		.size	BT_rxInt, .-BT_rxInt
 1483              		.section	.text.BT_txInt,"ax",%progbits
 1484              		.align	2
 1485              		.global	BT_txInt
 1486              		.thumb
 1487              		.thumb_func
 1488              		.type	BT_txInt, %function
 1489              	BT_txInt:
 1490              	.LFB82:
 345:.\main.c      **** 
 346:.\main.c      **** //BT
 347:.\main.c      **** CY_ISR(BT_txInt)
 348:.\main.c      **** {
 1491              		.loc 1 348 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 0
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495              		@ link register save eliminated.
 1496 0000 80B4     		push	{r7}
 1497              		.cfi_def_cfa_offset 4
 1498              		.cfi_offset 7, -4
 1499 0002 00AF     		add	r7, sp, #0
 1500              		.cfi_def_cfa_register 7
 349:.\main.c      ****     
 350:.\main.c      **** }
 1501              		.loc 1 350 0
 1502 0004 BD46     		mov	sp, r7
 1503              		.cfi_def_cfa_register 13
 1504              		@ sp needed
 1505 0006 5DF8047B 		ldr	r7, [sp], #4
 1506              		.cfi_restore 7
 1507              		.cfi_def_cfa_offset 0
 1508 000a 7047     		bx	lr
 1509              		.cfi_endproc
 1510              	.LFE82:
 1511              		.size	BT_txInt, .-BT_txInt
 1512              		.section	.text.adc_isr,"ax",%progbits
 1513              		.align	2
 1514              		.global	adc_isr
 1515              		.thumb
 1516              		.thumb_func
 1517              		.type	adc_isr, %function
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 34


 1518              	adc_isr:
 1519              	.LFB83:
 351:.\main.c      **** 
 352:.\main.c      **** //ADC:
 353:.\main.c      **** CY_ISR (adc_isr)
 354:.\main.c      **** {
 1520              		.loc 1 354 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 1, uses_anonymous_args = 0
 1524 0000 80B5     		push	{r7, lr}
 1525              		.cfi_def_cfa_offset 8
 1526              		.cfi_offset 7, -8
 1527              		.cfi_offset 14, -4
 1528 0002 00AF     		add	r7, sp, #0
 1529              		.cfi_def_cfa_register 7
 355:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 356:.\main.c      ****     adc_result = ADC_GetResult16();
 1530              		.loc 1 356 0
 1531 0004 FFF7FEFF 		bl	ADC_GetResult16
 1532 0008 0346     		mov	r3, r0
 1533 000a 1A46     		mov	r2, r3
 1534 000c 044B     		ldr	r3, .L97
 1535 000e 1A80     		strh	r2, [r3]	@ movhi
 357:.\main.c      ****     flag_receive_ADC = 1;
 1536              		.loc 1 357 0
 1537 0010 044B     		ldr	r3, .L97+4
 1538 0012 0122     		movs	r2, #1
 1539 0014 1A70     		strb	r2, [r3]
 358:.\main.c      ****     flag_print_rf = 1;
 1540              		.loc 1 358 0
 1541 0016 044B     		ldr	r3, .L97+8
 1542 0018 0122     		movs	r2, #1
 1543 001a 1A70     		strb	r2, [r3]
 359:.\main.c      ****     //LED_Write(~LED_Read());
 360:.\main.c      **** }
 1544              		.loc 1 360 0
 1545 001c 80BD     		pop	{r7, pc}
 1546              	.L98:
 1547 001e 00BF     		.align	2
 1548              	.L97:
 1549 0020 00000000 		.word	adc_result
 1550 0024 00000000 		.word	flag_receive_ADC
 1551 0028 00000000 		.word	flag_print_rf
 1552              		.cfi_endproc
 1553              	.LFE83:
 1554              		.size	adc_isr, .-adc_isr
 1555              		.section	.text.isr_quad1,"ax",%progbits
 1556              		.align	2
 1557              		.global	isr_quad1
 1558              		.thumb
 1559              		.thumb_func
 1560              		.type	isr_quad1, %function
 1561              	isr_quad1:
 1562              	.LFB84:
 361:.\main.c      **** 
 362:.\main.c      **** CY_ISR (isr_quad1)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 35


 363:.\main.c      **** {
 1563              		.loc 1 363 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567 0000 80B5     		push	{r7, lr}
 1568              		.cfi_def_cfa_offset 8
 1569              		.cfi_offset 7, -8
 1570              		.cfi_offset 14, -4
 1571 0002 00AF     		add	r7, sp, #0
 1572              		.cfi_def_cfa_register 7
 364:.\main.c      ****     //LED_Write(~LED_Read());
 365:.\main.c      ****     last_quad_count1 = quad_count1;
 1573              		.loc 1 365 0
 1574 0004 244B     		ldr	r3, .L101
 1575 0006 1A88     		ldrh	r2, [r3]
 1576 0008 244B     		ldr	r3, .L101+4
 1577 000a 1A80     		strh	r2, [r3]	@ movhi
 366:.\main.c      ****     last_quad_count2 = quad_count2;
 1578              		.loc 1 366 0
 1579 000c 244B     		ldr	r3, .L101+8
 1580 000e 1A88     		ldrh	r2, [r3]
 1581 0010 244B     		ldr	r3, .L101+12
 1582 0012 1A80     		strh	r2, [r3]	@ movhi
 367:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1583              		.loc 1 367 0
 1584 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1585 0018 0346     		mov	r3, r0
 1586 001a 1A46     		mov	r2, r3
 1587 001c 1E4B     		ldr	r3, .L101
 1588 001e 1A80     		strh	r2, [r3]	@ movhi
 368:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1589              		.loc 1 368 0
 1590 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1591 0024 0346     		mov	r3, r0
 1592 0026 1A46     		mov	r2, r3
 1593 0028 1D4B     		ldr	r3, .L101+8
 1594 002a 1A80     		strh	r2, [r3]	@ movhi
 369:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1595              		.loc 1 369 0
 1596 002c 1A4B     		ldr	r3, .L101
 1597 002e 1B88     		ldrh	r3, [r3]
 1598 0030 9AB2     		uxth	r2, r3
 1599 0032 1A4B     		ldr	r3, .L101+4
 1600 0034 1B88     		ldrh	r3, [r3]
 1601 0036 9BB2     		uxth	r3, r3
 1602 0038 D31A     		subs	r3, r2, r3
 1603 003a 9BB2     		uxth	r3, r3
 1604 003c 9AB2     		uxth	r2, r3
 1605 003e 1A4B     		ldr	r3, .L101+16
 1606 0040 1A80     		strh	r2, [r3]	@ movhi
 370:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1607              		.loc 1 370 0
 1608 0042 174B     		ldr	r3, .L101+8
 1609 0044 1B88     		ldrh	r3, [r3]
 1610 0046 9AB2     		uxth	r2, r3
 1611 0048 164B     		ldr	r3, .L101+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 36


 1612 004a 1B88     		ldrh	r3, [r3]
 1613 004c 9BB2     		uxth	r3, r3
 1614 004e D31A     		subs	r3, r2, r3
 1615 0050 9BB2     		uxth	r3, r3
 1616 0052 9AB2     		uxth	r2, r3
 1617 0054 154B     		ldr	r3, .L101+20
 1618 0056 1A80     		strh	r2, [r3]	@ movhi
 371:.\main.c      ****     
 372:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 1619              		.loc 1 372 0
 1620 0058 0F4B     		ldr	r3, .L101
 1621 005a 1B88     		ldrh	r3, [r3]
 1622 005c 1BB2     		sxth	r3, r3
 1623 005e 40F6B832 		movw	r2, #3000
 1624 0062 9342     		cmp	r3, r2
 1625 0064 13DD     		ble	.L100
 1626              		.loc 1 372 0 is_stmt 0 discriminator 1
 1627 0066 124B     		ldr	r3, .L101+24
 1628 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1629 006a 012B     		cmp	r3, #1
 1630 006c 0FD0     		beq	.L100
 1631              		.loc 1 372 0 discriminator 2
 1632 006e 104B     		ldr	r3, .L101+24
 1633 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 0072 022B     		cmp	r3, #2
 1635 0074 0BD0     		beq	.L100
 373:.\main.c      ****     {
 374:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1636              		.loc 1 374 0 is_stmt 1
 1637 0076 0020     		movs	r0, #0
 1638 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 375:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1639              		.loc 1 375 0
 1640 007c 0020     		movs	r0, #0
 1641 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 376:.\main.c      ****         quad_count1 = 0;
 1642              		.loc 1 376 0
 1643 0082 054B     		ldr	r3, .L101
 1644 0084 0022     		movs	r2, #0
 1645 0086 1A80     		strh	r2, [r3]	@ movhi
 377:.\main.c      ****         quad_count2 = 0;
 1646              		.loc 1 377 0
 1647 0088 054B     		ldr	r3, .L101+8
 1648 008a 0022     		movs	r2, #0
 1649 008c 1A80     		strh	r2, [r3]	@ movhi
 1650              	.L100:
 378:.\main.c      ****     }
 379:.\main.c      **** 
 380:.\main.c      ****     flag_calc_wheelspeed = 1;
 1651              		.loc 1 380 0
 1652 008e 094B     		ldr	r3, .L101+28
 1653 0090 0122     		movs	r2, #1
 1654 0092 1A70     		strb	r2, [r3]
 381:.\main.c      **** }
 1655              		.loc 1 381 0
 1656 0094 80BD     		pop	{r7, pc}
 1657              	.L102:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 37


 1658 0096 00BF     		.align	2
 1659              	.L101:
 1660 0098 00000000 		.word	quad_count1
 1661 009c 00000000 		.word	last_quad_count1
 1662 00a0 00000000 		.word	quad_count2
 1663 00a4 00000000 		.word	last_quad_count2
 1664 00a8 00000000 		.word	quad_diff1
 1665 00ac 00000000 		.word	quad_diff2
 1666 00b0 00000000 		.word	movement_state
 1667 00b4 00000000 		.word	flag_calc_wheelspeed
 1668              		.cfi_endproc
 1669              	.LFE84:
 1670              		.size	isr_quad1, .-isr_quad1
 1671              		.section	.text.isr_turn_timer,"ax",%progbits
 1672              		.align	2
 1673              		.global	isr_turn_timer
 1674              		.thumb
 1675              		.thumb_func
 1676              		.type	isr_turn_timer, %function
 1677              	isr_turn_timer:
 1678              	.LFB85:
 382:.\main.c      **** 
 383:.\main.c      **** CY_ISR(isr_turn_timer)
 384:.\main.c      **** {
 1679              		.loc 1 384 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 0
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683 0000 80B5     		push	{r7, lr}
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0002 00AF     		add	r7, sp, #0
 1688              		.cfi_def_cfa_register 7
 385:.\main.c      ****     if(movement_state == LTURN)
 1689              		.loc 1 385 0
 1690 0004 194B     		ldr	r3, .L107
 1691 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1692 0008 012B     		cmp	r3, #1
 1693 000a 15D1     		bne	.L104
 386:.\main.c      ****     {
 387:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1694              		.loc 1 387 0
 1695 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1696 0010 0346     		mov	r3, r0
 1697 0012 1A46     		mov	r2, r3
 1698 0014 164B     		ldr	r3, .L107+4
 1699 0016 1B88     		ldrh	r3, [r3]
 1700 0018 1BB2     		sxth	r3, r3
 1701 001a D31A     		subs	r3, r2, r3
 1702 001c 002B     		cmp	r3, #0
 1703 001e B8BF     		it	lt
 1704 0020 5B42     		rsblt	r3, r3, #0
 1705 0022 CF2B     		cmp	r3, #207
 1706 0024 21DD     		ble	.L103
 388:.\main.c      ****         {
 389:.\main.c      ****             //movement_state = STOPPED;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 38


 390:.\main.c      ****             brakeMotor();
 1707              		.loc 1 390 0
 1708 0026 FFF7FEFF 		bl	brakeMotor
 391:.\main.c      ****             movement_state = prev_movement_state;
 1709              		.loc 1 391 0
 1710 002a 124B     		ldr	r3, .L107+8
 1711 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1712 002e 0F4B     		ldr	r3, .L107
 1713 0030 1A70     		strb	r2, [r3]
 392:.\main.c      ****             Timer_2_Stop();
 1714              		.loc 1 392 0
 1715 0032 FFF7FEFF 		bl	Timer_2_Stop
 1716 0036 18E0     		b	.L103
 1717              	.L104:
 393:.\main.c      ****         }
 394:.\main.c      ****     }
 395:.\main.c      ****     else if (movement_state == RTURN)
 1718              		.loc 1 395 0
 1719 0038 0C4B     		ldr	r3, .L107
 1720 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1721 003c 022B     		cmp	r3, #2
 1722 003e 14D1     		bne	.L103
 396:.\main.c      ****     {
 397:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1723              		.loc 1 397 0
 1724 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1725 0044 0346     		mov	r3, r0
 1726 0046 1A46     		mov	r2, r3
 1727 0048 094B     		ldr	r3, .L107+4
 1728 004a 1B88     		ldrh	r3, [r3]
 1729 004c 1BB2     		sxth	r3, r3
 1730 004e D31A     		subs	r3, r2, r3
 1731 0050 002B     		cmp	r3, #0
 1732 0052 B8BF     		it	lt
 1733 0054 5B42     		rsblt	r3, r3, #0
 1734 0056 CF2B     		cmp	r3, #207
 1735 0058 07DD     		ble	.L103
 398:.\main.c      ****         {
 399:.\main.c      ****             //movement_state = STOPPED;
 400:.\main.c      ****             brakeMotor();
 1736              		.loc 1 400 0
 1737 005a FFF7FEFF 		bl	brakeMotor
 401:.\main.c      ****             movement_state = prev_movement_state;
 1738              		.loc 1 401 0
 1739 005e 054B     		ldr	r3, .L107+8
 1740 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1741 0062 024B     		ldr	r3, .L107
 1742 0064 1A70     		strb	r2, [r3]
 402:.\main.c      ****             Timer_2_Stop();
 1743              		.loc 1 402 0
 1744 0066 FFF7FEFF 		bl	Timer_2_Stop
 1745              	.L103:
 403:.\main.c      ****         }
 404:.\main.c      ****     }
 405:.\main.c      **** }
 1746              		.loc 1 405 0
 1747 006a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 39


 1748              	.L108:
 1749              		.align	2
 1750              	.L107:
 1751 006c 00000000 		.word	movement_state
 1752 0070 00000000 		.word	start_turn_count
 1753 0074 00000000 		.word	prev_movement_state
 1754              		.cfi_endproc
 1755              	.LFE85:
 1756              		.size	isr_turn_timer, .-isr_turn_timer
 1757              		.section	.text.Stop_on_line,"ax",%progbits
 1758              		.align	2
 1759              		.global	Stop_on_line
 1760              		.thumb
 1761              		.thumb_func
 1762              		.type	Stop_on_line, %function
 1763              	Stop_on_line:
 1764              	.LFB86:
 406:.\main.c      **** 
 407:.\main.c      **** 
 408:.\main.c      **** CY_ISR (Stop_on_line)
 409:.\main.c      **** {
 1765              		.loc 1 409 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 0
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769              		@ link register save eliminated.
 1770 0000 80B4     		push	{r7}
 1771              		.cfi_def_cfa_offset 4
 1772              		.cfi_offset 7, -4
 1773 0002 00AF     		add	r7, sp, #0
 1774              		.cfi_def_cfa_register 7
 410:.\main.c      ****     movement_state = STOPPED;
 1775              		.loc 1 410 0
 1776 0004 054B     		ldr	r3, .L111
 1777 0006 0322     		movs	r2, #3
 1778 0008 1A70     		strb	r2, [r3]
 411:.\main.c      ****     if(movement_state != DRIVE) return;
 1779              		.loc 1 411 0
 1780 000a 044B     		ldr	r3, .L111
 1781 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1782 000e 002B     		cmp	r3, #0
 1783 0010 00D0     		beq	.L109
 1784 0012 00BF     		nop
 1785              	.L109:
 412:.\main.c      ****     //initTurnLeft();
 413:.\main.c      **** }
 1786              		.loc 1 413 0
 1787 0014 BD46     		mov	sp, r7
 1788              		.cfi_def_cfa_register 13
 1789              		@ sp needed
 1790 0016 5DF8047B 		ldr	r7, [sp], #4
 1791              		.cfi_restore 7
 1792              		.cfi_def_cfa_offset 0
 1793 001a 7047     		bx	lr
 1794              	.L112:
 1795              		.align	2
 1796              	.L111:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 40


 1797 001c 00000000 		.word	movement_state
 1798              		.cfi_endproc
 1799              	.LFE86:
 1800              		.size	Stop_on_line, .-Stop_on_line
 1801              		.section	.rodata
 1802 002b 00       		.align	2
 1803              	.LC3:
 1804 002c 53746172 		.ascii	"Starting robot!\015\012\000"
 1804      74696E67 
 1804      20726F62 
 1804      6F74210D 
 1804      0A00
 1805              		.section	.text.button,"ax",%progbits
 1806              		.align	2
 1807              		.global	button
 1808              		.thumb
 1809              		.thumb_func
 1810              		.type	button, %function
 1811              	button:
 1812              	.LFB87:
 414:.\main.c      **** 
 415:.\main.c      **** CY_ISR (button)
 416:.\main.c      **** {
 1813              		.loc 1 416 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 1, uses_anonymous_args = 0
 1817 0000 80B5     		push	{r7, lr}
 1818              		.cfi_def_cfa_offset 8
 1819              		.cfi_offset 7, -8
 1820              		.cfi_offset 14, -4
 1821 0002 00AF     		add	r7, sp, #0
 1822              		.cfi_def_cfa_register 7
 417:.\main.c      ****     if(BT_ENABLED)
 418:.\main.c      ****     {
 419:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1823              		.loc 1 419 0
 1824 0004 0348     		ldr	r0, .L114
 1825 0006 FFF7FEFF 		bl	UART_PutString
 420:.\main.c      ****     }
 421:.\main.c      ****     movement_state = DRIVE;
 1826              		.loc 1 421 0
 1827 000a 034B     		ldr	r3, .L114+4
 1828 000c 0022     		movs	r2, #0
 1829 000e 1A70     		strb	r2, [r3]
 422:.\main.c      **** }
 1830              		.loc 1 422 0
 1831 0010 80BD     		pop	{r7, pc}
 1832              	.L115:
 1833 0012 00BF     		.align	2
 1834              	.L114:
 1835 0014 2C000000 		.word	.LC3
 1836 0018 00000000 		.word	movement_state
 1837              		.cfi_endproc
 1838              	.LFE87:
 1839              		.size	button, .-button
 1840              		.section	.text.isr_adcTimer,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 41


 1841              		.align	2
 1842              		.global	isr_adcTimer
 1843              		.thumb
 1844              		.thumb_func
 1845              		.type	isr_adcTimer, %function
 1846              	isr_adcTimer:
 1847              	.LFB88:
 423:.\main.c      **** 
 424:.\main.c      **** CY_ISR(isr_adcTimer)
 425:.\main.c      **** {
 1848              		.loc 1 425 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 0
 1851              		@ frame_needed = 1, uses_anonymous_args = 0
 1852 0000 80B5     		push	{r7, lr}
 1853              		.cfi_def_cfa_offset 8
 1854              		.cfi_offset 7, -8
 1855              		.cfi_offset 14, -4
 1856 0002 00AF     		add	r7, sp, #0
 1857              		.cfi_def_cfa_register 7
 426:.\main.c      ****     ADC_StartConvert();
 1858              		.loc 1 426 0
 1859 0004 FFF7FEFF 		bl	ADC_StartConvert
 427:.\main.c      **** }
 1860              		.loc 1 427 0
 1861 0008 80BD     		pop	{r7, pc}
 1862              		.cfi_endproc
 1863              	.LFE88:
 1864              		.size	isr_adcTimer, .-isr_adcTimer
 1865              		.global	__aeabi_i2d
 1866              		.global	__aeabi_d2iz
 1867              		.global	__aeabi_dadd
 1868 000a 00BF     		.section	.text.Quad_Dec_response,"ax",%progbits
 1869              		.align	2
 1870              		.global	Quad_Dec_response
 1871              		.thumb
 1872              		.thumb_func
 1873              		.type	Quad_Dec_response, %function
 1874              	Quad_Dec_response:
 1875              	.LFB89:
 428:.\main.c      **** 
 429:.\main.c      **** void Quad_Dec_response()
 430:.\main.c      **** {
 1876              		.loc 1 430 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 32
 1879              		@ frame_needed = 1, uses_anonymous_args = 0
 1880 0000 B0B5     		push	{r4, r5, r7, lr}
 1881              		.cfi_def_cfa_offset 16
 1882              		.cfi_offset 4, -16
 1883              		.cfi_offset 5, -12
 1884              		.cfi_offset 7, -8
 1885              		.cfi_offset 14, -4
 1886 0002 88B0     		sub	sp, sp, #32
 1887              		.cfi_def_cfa_offset 48
 1888 0004 00AF     		add	r7, sp, #0
 1889              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 42


 431:.\main.c      ****     //Check if the flag has been set
 432:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1890              		.loc 1 432 0
 1891 0006 814B     		ldr	r3, .L125
 1892 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1893 000a 002B     		cmp	r3, #0
 1894 000c 00D1     		bne	.L118
 1895 000e FAE0     		b	.L117
 1896              	.L118:
 433:.\main.c      ****     flag_calc_wheelspeed = 0;
 1897              		.loc 1 433 0
 1898 0010 7E4B     		ldr	r3, .L125
 1899 0012 0022     		movs	r2, #0
 1900 0014 1A70     		strb	r2, [r3]
 434:.\main.c      ****     
 435:.\main.c      ****     //char wheel_1_str [64];
 436:.\main.c      ****     //char wheel_2_str [64];
 437:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 438:.\main.c      ****     //usbPutString(wheel_1_str);
 439:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 440:.\main.c      ****     
 441:.\main.c      ****     //usbPutString(wheel_2_str);
 442:.\main.c      ****     
 443:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1901              		.loc 1 443 0
 1902 0016 7E4B     		ldr	r3, .L125+4
 1903 0018 1B88     		ldrh	r3, [r3]	@ movhi
 1904 001a FB81     		strh	r3, [r7, #14]	@ movhi
 444:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1905              		.loc 1 444 0
 1906 001c 7D4B     		ldr	r3, .L125+8
 1907 001e 1B88     		ldrh	r3, [r3]	@ movhi
 1908 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 445:.\main.c      ****     double scalingLeft = 1;
 1909              		.loc 1 445 0
 1910 0022 4FF00002 		mov	r2, #0
 1911 0026 7C4B     		ldr	r3, .L125+12
 1912 0028 C7E90623 		strd	r2, [r7, #24]
 446:.\main.c      ****     double scalingRight = 1;
 1913              		.loc 1 446 0
 1914 002c 4FF00002 		mov	r2, #0
 1915 0030 794B     		ldr	r3, .L125+12
 1916 0032 C7E90423 		strd	r2, [r7, #16]
 447:.\main.c      ****     
 448:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 449:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 1917              		.loc 1 449 0
 1918 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 1919 003a 002B     		cmp	r3, #0
 1920 003c 0DD1     		bne	.L120
 1921              		.loc 1 449 0 is_stmt 0 discriminator 1
 1922 003e B7F90C30 		ldrsh	r3, [r7, #12]
 1923 0042 002B     		cmp	r3, #0
 1924 0044 09D1     		bne	.L120
 450:.\main.c      ****        //leftSpeed = 3;
 451:.\main.c      ****         scalingLeft = 8;
 1925              		.loc 1 451 0 is_stmt 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 43


 1926 0046 4FF00002 		mov	r2, #0
 1927 004a 744B     		ldr	r3, .L125+16
 1928 004c C7E90623 		strd	r2, [r7, #24]
 452:.\main.c      ****         scalingRight = 8;
 1929              		.loc 1 452 0
 1930 0050 4FF00002 		mov	r2, #0
 1931 0054 714B     		ldr	r3, .L125+16
 1932 0056 C7E90423 		strd	r2, [r7, #16]
 1933              	.L120:
 453:.\main.c      ****     }
 454:.\main.c      **** 
 455:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1934              		.loc 1 455 0
 1935 005a 714B     		ldr	r3, .L125+20
 1936 005c 1B88     		ldrh	r3, [r3]
 1937 005e 1AB2     		sxth	r2, r3
 1938 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 1939 0064 002B     		cmp	r3, #0
 1940 0066 B8BF     		it	lt
 1941 0068 5B42     		rsblt	r3, r3, #0
 1942 006a D31A     		subs	r3, r2, r3
 1943 006c BB60     		str	r3, [r7, #8]
 456:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 1944              		.loc 1 456 0
 1945 006e BB68     		ldr	r3, [r7, #8]
 1946 0070 83EAE372 		eor	r2, r3, r3, asr #31
 1947 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 1948 0078 BB68     		ldr	r3, [r7, #8]
 1949 007a 92FBF3F3 		sdiv	r3, r2, r3
 1950 007e 1846     		mov	r0, r3
 1951 0080 FFF7FEFF 		bl	__aeabi_i2d
 1952 0084 0446     		mov	r4, r0
 1953 0086 0D46     		mov	r5, r1
 1954 0088 BB68     		ldr	r3, [r7, #8]
 1955 008a 002B     		cmp	r3, #0
 1956 008c B8BF     		it	lt
 1957 008e 5B42     		rsblt	r3, r3, #0
 1958 0090 1846     		mov	r0, r3
 1959 0092 FFF7FEFF 		bl	__aeabi_i2d
 1960 0096 0246     		mov	r2, r0
 1961 0098 0B46     		mov	r3, r1
 1962 009a 1046     		mov	r0, r2
 1963 009c 1946     		mov	r1, r3
 1964 009e FFF7FEFF 		bl	sqrt
 1965 00a2 0246     		mov	r2, r0
 1966 00a4 0B46     		mov	r3, r1
 1967 00a6 2046     		mov	r0, r4
 1968 00a8 2946     		mov	r1, r5
 1969 00aa FFF7FEFF 		bl	__aeabi_dmul
 1970 00ae 0246     		mov	r2, r0
 1971 00b0 0B46     		mov	r3, r1
 1972 00b2 1046     		mov	r0, r2
 1973 00b4 1946     		mov	r1, r3
 1974 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 1975 00ba 0346     		mov	r3, r0
 1976 00bc 7B60     		str	r3, [r7, #4]
 457:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 44


 1977              		.loc 1 457 0
 1978 00be 594B     		ldr	r3, .L125+24
 1979 00c0 1B88     		ldrh	r3, [r3]
 1980 00c2 1BB2     		sxth	r3, r3
 1981 00c4 1846     		mov	r0, r3
 1982 00c6 FFF7FEFF 		bl	__aeabi_i2d
 1983 00ca 0446     		mov	r4, r0
 1984 00cc 0D46     		mov	r5, r1
 1985 00ce 7868     		ldr	r0, [r7, #4]
 1986 00d0 FFF7FEFF 		bl	__aeabi_i2d
 1987 00d4 0246     		mov	r2, r0
 1988 00d6 0B46     		mov	r3, r1
 1989 00d8 1046     		mov	r0, r2
 1990 00da 1946     		mov	r1, r3
 1991 00dc D7E90623 		ldrd	r2, [r7, #24]
 1992 00e0 FFF7FEFF 		bl	__aeabi_dmul
 1993 00e4 0246     		mov	r2, r0
 1994 00e6 0B46     		mov	r3, r1
 1995 00e8 2046     		mov	r0, r4
 1996 00ea 2946     		mov	r1, r5
 1997 00ec FFF7FEFF 		bl	__aeabi_dadd
 1998 00f0 0246     		mov	r2, r0
 1999 00f2 0B46     		mov	r3, r1
 2000 00f4 1046     		mov	r0, r2
 2001 00f6 1946     		mov	r1, r3
 2002 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 2003 00fc 0346     		mov	r3, r0
 2004 00fe 9AB2     		uxth	r2, r3
 2005 0100 484B     		ldr	r3, .L125+24
 2006 0102 1A80     		strh	r2, [r3]	@ movhi
 458:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 2007              		.loc 1 458 0
 2008 0104 484B     		ldr	r3, .L125+28
 2009 0106 1B88     		ldrh	r3, [r3]
 2010 0108 1AB2     		sxth	r2, r3
 2011 010a B7F90C30 		ldrsh	r3, [r7, #12]
 2012 010e 002B     		cmp	r3, #0
 2013 0110 B8BF     		it	lt
 2014 0112 5B42     		rsblt	r3, r3, #0
 2015 0114 D31A     		subs	r3, r2, r3
 2016 0116 BB60     		str	r3, [r7, #8]
 459:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 2017              		.loc 1 459 0
 2018 0118 BB68     		ldr	r3, [r7, #8]
 2019 011a 83EAE372 		eor	r2, r3, r3, asr #31
 2020 011e A2EBE372 		sub	r2, r2, r3, asr #31
 2021 0122 BB68     		ldr	r3, [r7, #8]
 2022 0124 92FBF3F3 		sdiv	r3, r2, r3
 2023 0128 1846     		mov	r0, r3
 2024 012a FFF7FEFF 		bl	__aeabi_i2d
 2025 012e 0446     		mov	r4, r0
 2026 0130 0D46     		mov	r5, r1
 2027 0132 BB68     		ldr	r3, [r7, #8]
 2028 0134 002B     		cmp	r3, #0
 2029 0136 B8BF     		it	lt
 2030 0138 5B42     		rsblt	r3, r3, #0
 2031 013a 1846     		mov	r0, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 45


 2032 013c FFF7FEFF 		bl	__aeabi_i2d
 2033 0140 0246     		mov	r2, r0
 2034 0142 0B46     		mov	r3, r1
 2035 0144 1046     		mov	r0, r2
 2036 0146 1946     		mov	r1, r3
 2037 0148 FFF7FEFF 		bl	sqrt
 2038 014c 0246     		mov	r2, r0
 2039 014e 0B46     		mov	r3, r1
 2040 0150 2046     		mov	r0, r4
 2041 0152 2946     		mov	r1, r5
 2042 0154 FFF7FEFF 		bl	__aeabi_dmul
 2043 0158 0246     		mov	r2, r0
 2044 015a 0B46     		mov	r3, r1
 2045 015c 1046     		mov	r0, r2
 2046 015e 1946     		mov	r1, r3
 2047 0160 FFF7FEFF 		bl	__aeabi_d2iz
 2048 0164 0346     		mov	r3, r0
 2049 0166 7B60     		str	r3, [r7, #4]
 460:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 2050              		.loc 1 460 0
 2051 0168 304B     		ldr	r3, .L125+32
 2052 016a 1B88     		ldrh	r3, [r3]
 2053 016c 1BB2     		sxth	r3, r3
 2054 016e 1846     		mov	r0, r3
 2055 0170 FFF7FEFF 		bl	__aeabi_i2d
 2056 0174 0446     		mov	r4, r0
 2057 0176 0D46     		mov	r5, r1
 2058 0178 7868     		ldr	r0, [r7, #4]
 2059 017a FFF7FEFF 		bl	__aeabi_i2d
 2060 017e 0246     		mov	r2, r0
 2061 0180 0B46     		mov	r3, r1
 2062 0182 1046     		mov	r0, r2
 2063 0184 1946     		mov	r1, r3
 2064 0186 D7E90423 		ldrd	r2, [r7, #16]
 2065 018a FFF7FEFF 		bl	__aeabi_dmul
 2066 018e 0246     		mov	r2, r0
 2067 0190 0B46     		mov	r3, r1
 2068 0192 2046     		mov	r0, r4
 2069 0194 2946     		mov	r1, r5
 2070 0196 FFF7FEFF 		bl	__aeabi_dadd
 2071 019a 0246     		mov	r2, r0
 2072 019c 0B46     		mov	r3, r1
 2073 019e 1046     		mov	r0, r2
 2074 01a0 1946     		mov	r1, r3
 2075 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 2076 01a6 0346     		mov	r3, r0
 2077 01a8 9AB2     		uxth	r2, r3
 2078 01aa 204B     		ldr	r3, .L125+32
 2079 01ac 1A80     		strh	r2, [r3]	@ movhi
 461:.\main.c      ****     
 462:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 2080              		.loc 1 462 0
 2081 01ae 1F4B     		ldr	r3, .L125+32
 2082 01b0 1B88     		ldrh	r3, [r3]
 2083 01b2 1BB2     		sxth	r3, r3
 2084 01b4 002B     		cmp	r3, #0
 2085 01b6 02DA     		bge	.L121
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 46


 2086              		.loc 1 462 0 is_stmt 0 discriminator 1
 2087 01b8 1C4B     		ldr	r3, .L125+32
 2088 01ba 0022     		movs	r2, #0
 2089 01bc 1A80     		strh	r2, [r3]	@ movhi
 2090              	.L121:
 463:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 2091              		.loc 1 463 0 is_stmt 1
 2092 01be 194B     		ldr	r3, .L125+24
 2093 01c0 1B88     		ldrh	r3, [r3]
 2094 01c2 1BB2     		sxth	r3, r3
 2095 01c4 002B     		cmp	r3, #0
 2096 01c6 02DA     		bge	.L122
 2097              		.loc 1 463 0 is_stmt 0 discriminator 1
 2098 01c8 164B     		ldr	r3, .L125+24
 2099 01ca 0022     		movs	r2, #0
 2100 01cc 1A80     		strh	r2, [r3]	@ movhi
 2101              	.L122:
 464:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 2102              		.loc 1 464 0 is_stmt 1
 2103 01ce 174B     		ldr	r3, .L125+32
 2104 01d0 1B88     		ldrh	r3, [r3]
 2105 01d2 1BB2     		sxth	r3, r3
 2106 01d4 642B     		cmp	r3, #100
 2107 01d6 02DD     		ble	.L123
 2108              		.loc 1 464 0 is_stmt 0 discriminator 1
 2109 01d8 144B     		ldr	r3, .L125+32
 2110 01da 6422     		movs	r2, #100
 2111 01dc 1A80     		strh	r2, [r3]	@ movhi
 2112              	.L123:
 465:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 2113              		.loc 1 465 0 is_stmt 1
 2114 01de 114B     		ldr	r3, .L125+24
 2115 01e0 1B88     		ldrh	r3, [r3]
 2116 01e2 1BB2     		sxth	r3, r3
 2117 01e4 642B     		cmp	r3, #100
 2118 01e6 02DD     		ble	.L124
 2119              		.loc 1 465 0 is_stmt 0 discriminator 1
 2120 01e8 0E4B     		ldr	r3, .L125+24
 2121 01ea 6422     		movs	r2, #100
 2122 01ec 1A80     		strh	r2, [r3]	@ movhi
 2123              	.L124:
 466:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 2124              		.loc 1 466 0 is_stmt 1
 2125 01ee 0D4B     		ldr	r3, .L125+24
 2126 01f0 1B88     		ldrh	r3, [r3]
 2127 01f2 DBB2     		uxtb	r3, r3
 2128 01f4 1846     		mov	r0, r3
 2129 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 467:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 2130              		.loc 1 467 0
 2131 01fa 0C4B     		ldr	r3, .L125+32
 2132 01fc 1B88     		ldrh	r3, [r3]
 2133 01fe DBB2     		uxtb	r3, r3
 2134 0200 1846     		mov	r0, r3
 2135 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 2136              	.L117:
 468:.\main.c      **** }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 47


 2137              		.loc 1 468 0
 2138 0206 2037     		adds	r7, r7, #32
 2139              		.cfi_def_cfa_offset 16
 2140 0208 BD46     		mov	sp, r7
 2141              		.cfi_def_cfa_register 13
 2142              		@ sp needed
 2143 020a B0BD     		pop	{r4, r5, r7, pc}
 2144              	.L126:
 2145              		.align	2
 2146              	.L125:
 2147 020c 00000000 		.word	flag_calc_wheelspeed
 2148 0210 00000000 		.word	quad_diff1
 2149 0214 00000000 		.word	quad_diff2
 2150 0218 0000F03F 		.word	1072693248
 2151 021c 00002040 		.word	1075838976
 2152 0220 00000000 		.word	leftSpeedLimit
 2153 0224 00000000 		.word	left_duty_cycle
 2154 0228 00000000 		.word	rightSpeedLimit
 2155 022c 00000000 		.word	right_duty_cycle
 2156              		.cfi_endproc
 2157              	.LFE89:
 2158              		.size	Quad_Dec_response, .-Quad_Dec_response
 2159              		.section	.text.trackLine,"ax",%progbits
 2160              		.align	2
 2161              		.global	trackLine
 2162              		.thumb
 2163              		.thumb_func
 2164              		.type	trackLine, %function
 2165              	trackLine:
 2166              	.LFB90:
 469:.\main.c      **** 
 470:.\main.c      **** void trackLine()
 471:.\main.c      **** {
 2167              		.loc 1 471 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 8
 2170              		@ frame_needed = 1, uses_anonymous_args = 0
 2171 0000 80B5     		push	{r7, lr}
 2172              		.cfi_def_cfa_offset 8
 2173              		.cfi_offset 7, -8
 2174              		.cfi_offset 14, -4
 2175 0002 82B0     		sub	sp, sp, #8
 2176              		.cfi_def_cfa_offset 16
 2177 0004 00AF     		add	r7, sp, #0
 2178              		.cfi_def_cfa_register 7
 472:.\main.c      ****     //read the value of the three central-front sensors
 473:.\main.c      ****     
 474:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2179              		.loc 1 474 0
 2180 0006 FFF7FEFF 		bl	NLSens_out_Read
 2181 000a 0346     		mov	r3, r0
 2182 000c FB71     		strb	r3, [r7, #7]
 475:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2183              		.loc 1 475 0
 2184 000e FFF7FEFF 		bl	NRSens_out_Read
 2185 0012 0346     		mov	r3, r0
 2186 0014 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 48


 476:.\main.c      ****     uint8 mid = MSens_out_Read();
 2187              		.loc 1 476 0
 2188 0016 FFF7FEFF 		bl	MSens_out_Read
 2189 001a 0346     		mov	r3, r0
 2190 001c 7B71     		strb	r3, [r7, #5]
 477:.\main.c      ****     //if only the left one, hard left
 478:.\main.c      ****     if(nl && !nr && !mid)
 2191              		.loc 1 478 0
 2192 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2193 0020 002B     		cmp	r3, #0
 2194 0022 0ED0     		beq	.L128
 2195              		.loc 1 478 0 is_stmt 0 discriminator 1
 2196 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2197 0026 002B     		cmp	r3, #0
 2198 0028 0BD1     		bne	.L128
 2199              		.loc 1 478 0 discriminator 2
 2200 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2201 002c 002B     		cmp	r3, #0
 2202 002e 08D1     		bne	.L128
 479:.\main.c      ****     {
 480:.\main.c      ****         setSpeed(-10,15);
 2203              		.loc 1 480 0 is_stmt 1
 2204 0030 4FF00000 		mov	r0, #0
 2205 0034 2949     		ldr	r1, .L133
 2206 0036 4FF00002 		mov	r2, #0
 2207 003a 294B     		ldr	r3, .L133+4
 2208 003c FFF7FEFF 		bl	setSpeed
 2209 0040 48E0     		b	.L127
 2210              	.L128:
 481:.\main.c      ****     }
 482:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2211              		.loc 1 482 0
 2212 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2213 0044 002B     		cmp	r3, #0
 2214 0046 0FD0     		beq	.L130
 2215              		.loc 1 482 0 is_stmt 0 discriminator 1
 2216 0048 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2217 004a 002B     		cmp	r3, #0
 2218 004c 0CD0     		beq	.L130
 2219              		.loc 1 482 0 discriminator 2
 2220 004e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2221 0050 002B     		cmp	r3, #0
 2222 0052 09D1     		bne	.L130
 483:.\main.c      ****     {
 484:.\main.c      ****         setSpeed(0,15);
 2223              		.loc 1 484 0 is_stmt 1
 2224 0054 4FF00000 		mov	r0, #0
 2225 0058 4FF00001 		mov	r1, #0
 2226 005c 4FF00002 		mov	r2, #0
 2227 0060 1F4B     		ldr	r3, .L133+4
 2228 0062 FFF7FEFF 		bl	setSpeed
 2229 0066 35E0     		b	.L127
 2230              	.L130:
 485:.\main.c      ****     }
 486:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2231              		.loc 1 486 0
 2232 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 49


 2233 006a 002B     		cmp	r3, #0
 2234 006c 0FD0     		beq	.L131
 2235              		.loc 1 486 0 is_stmt 0 discriminator 1
 2236 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2237 0070 002B     		cmp	r3, #0
 2238 0072 0CD0     		beq	.L131
 2239              		.loc 1 486 0 discriminator 2
 2240 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2241 0076 002B     		cmp	r3, #0
 2242 0078 09D1     		bne	.L131
 487:.\main.c      ****     {
 488:.\main.c      ****         setSpeed(15,0);
 2243              		.loc 1 488 0 is_stmt 1
 2244 007a 4FF00000 		mov	r0, #0
 2245 007e 1849     		ldr	r1, .L133+4
 2246 0080 4FF00002 		mov	r2, #0
 2247 0084 4FF00003 		mov	r3, #0
 2248 0088 FFF7FEFF 		bl	setSpeed
 2249 008c 22E0     		b	.L127
 2250              	.L131:
 489:.\main.c      ****     }
 490:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2251              		.loc 1 490 0
 2252 008e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2253 0090 002B     		cmp	r3, #0
 2254 0092 0ED0     		beq	.L132
 2255              		.loc 1 490 0 is_stmt 0 discriminator 1
 2256 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2257 0096 002B     		cmp	r3, #0
 2258 0098 0BD1     		bne	.L132
 2259              		.loc 1 490 0 discriminator 2
 2260 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2261 009c 002B     		cmp	r3, #0
 2262 009e 08D1     		bne	.L132
 491:.\main.c      ****     {
 492:.\main.c      ****         setSpeed(15,-10);
 2263              		.loc 1 492 0 is_stmt 1
 2264 00a0 4FF00000 		mov	r0, #0
 2265 00a4 0E49     		ldr	r1, .L133+4
 2266 00a6 4FF00002 		mov	r2, #0
 2267 00aa 0C4B     		ldr	r3, .L133
 2268 00ac FFF7FEFF 		bl	setSpeed
 2269 00b0 10E0     		b	.L127
 2270              	.L132:
 493:.\main.c      ****     }
 494:.\main.c      ****     else if (mid && !nr && !nl)
 2271              		.loc 1 494 0
 2272 00b2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2273 00b4 002B     		cmp	r3, #0
 2274 00b6 0DD0     		beq	.L127
 2275              		.loc 1 494 0 is_stmt 0 discriminator 1
 2276 00b8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2277 00ba 002B     		cmp	r3, #0
 2278 00bc 0AD1     		bne	.L127
 2279              		.loc 1 494 0 discriminator 2
 2280 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2281 00c0 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 50


 2282 00c2 07D1     		bne	.L127
 495:.\main.c      ****     {
 496:.\main.c      ****         setSpeed(10,10);
 2283              		.loc 1 496 0 is_stmt 1
 2284 00c4 4FF00000 		mov	r0, #0
 2285 00c8 0649     		ldr	r1, .L133+8
 2286 00ca 4FF00002 		mov	r2, #0
 2287 00ce 054B     		ldr	r3, .L133+8
 2288 00d0 FFF7FEFF 		bl	setSpeed
 2289              	.L127:
 497:.\main.c      ****     }
 498:.\main.c      ****    // else if (!mid && !nr && !nl)
 499:.\main.c      ****     //{
 500:.\main.c      ****         //setSpeed(0,0);
 501:.\main.c      ****     //}
 502:.\main.c      ****    
 503:.\main.c      **** 
 504:.\main.c      **** }
 2290              		.loc 1 504 0
 2291 00d4 0837     		adds	r7, r7, #8
 2292              		.cfi_def_cfa_offset 8
 2293 00d6 BD46     		mov	sp, r7
 2294              		.cfi_def_cfa_register 13
 2295              		@ sp needed
 2296 00d8 80BD     		pop	{r7, pc}
 2297              	.L134:
 2298 00da 00BF     		.align	2
 2299              	.L133:
 2300 00dc 000024C0 		.word	-1071382528
 2301 00e0 00002E40 		.word	1076756480
 2302 00e4 00002440 		.word	1076101120
 2303              		.cfi_endproc
 2304              	.LFE90:
 2305              		.size	trackLine, .-trackLine
 2306              		.section	.text.trackLineU,"ax",%progbits
 2307              		.align	2
 2308              		.global	trackLineU
 2309              		.thumb
 2310              		.thumb_func
 2311              		.type	trackLineU, %function
 2312              	trackLineU:
 2313              	.LFB91:
 505:.\main.c      **** 
 506:.\main.c      **** void trackLineU()
 507:.\main.c      **** {
 2314              		.loc 1 507 0
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 8
 2317              		@ frame_needed = 1, uses_anonymous_args = 0
 2318 0000 80B5     		push	{r7, lr}
 2319              		.cfi_def_cfa_offset 8
 2320              		.cfi_offset 7, -8
 2321              		.cfi_offset 14, -4
 2322 0002 82B0     		sub	sp, sp, #8
 2323              		.cfi_def_cfa_offset 16
 2324 0004 00AF     		add	r7, sp, #0
 2325              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 51


 508:.\main.c      ****     //read the value of the three central-front sensors
 509:.\main.c      ****     
 510:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2326              		.loc 1 510 0
 2327 0006 FFF7FEFF 		bl	NLSens_out_Read
 2328 000a 0346     		mov	r3, r0
 2329 000c FB71     		strb	r3, [r7, #7]
 511:.\main.c      ****     uint8 fl = FLSens_out_Read();
 2330              		.loc 1 511 0
 2331 000e FFF7FEFF 		bl	FLSens_out_Read
 2332 0012 0346     		mov	r3, r0
 2333 0014 BB71     		strb	r3, [r7, #6]
 512:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2334              		.loc 1 512 0
 2335 0016 FFF7FEFF 		bl	NRSens_out_Read
 2336 001a 0346     		mov	r3, r0
 2337 001c 7B71     		strb	r3, [r7, #5]
 513:.\main.c      ****     uint8 fr = FRSens_out_Read();
 2338              		.loc 1 513 0
 2339 001e FFF7FEFF 		bl	FRSens_out_Read
 2340 0022 0346     		mov	r3, r0
 2341 0024 3B71     		strb	r3, [r7, #4]
 514:.\main.c      ****     uint8 mid = MSens_out_Read();
 2342              		.loc 1 514 0
 2343 0026 FFF7FEFF 		bl	MSens_out_Read
 2344 002a 0346     		mov	r3, r0
 2345 002c FB70     		strb	r3, [r7, #3]
 515:.\main.c      ****     if (fl && mid && fr) // T intersection
 2346              		.loc 1 515 0
 2347 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2348 0030 002B     		cmp	r3, #0
 2349 0032 06D0     		beq	.L136
 2350              		.loc 1 515 0 is_stmt 0 discriminator 1
 2351 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2352 0036 002B     		cmp	r3, #0
 2353 0038 03D0     		beq	.L136
 2354              		.loc 1 515 0 discriminator 2
 2355 003a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2356 003c 002B     		cmp	r3, #0
 2357 003e 00D0     		beq	.L136
 2358              		.loc 1 515 0
 2359 0040 78E0     		b	.L135
 2360              	.L136:
 516:.\main.c      ****     {
 517:.\main.c      ****         // not implemented
 518:.\main.c      ****     }
 519:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 2361              		.loc 1 519 0 is_stmt 1
 2362 0042 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2363 0044 002B     		cmp	r3, #0
 2364 0046 0BD0     		beq	.L138
 2365              		.loc 1 519 0 is_stmt 0 discriminator 1
 2366 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2367 004a 002B     		cmp	r3, #0
 2368 004c 08D0     		beq	.L138
 520:.\main.c      ****     {
 521:.\main.c      ****         setSpeed(15, 15);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 52


 2369              		.loc 1 521 0 is_stmt 1
 2370 004e 4FF00000 		mov	r0, #0
 2371 0052 3A49     		ldr	r1, .L144
 2372 0054 4FF00002 		mov	r2, #0
 2373 0058 384B     		ldr	r3, .L144
 2374 005a FFF7FEFF 		bl	setSpeed
 2375 005e 69E0     		b	.L135
 2376              	.L138:
 522:.\main.c      ****     }
 523:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 2377              		.loc 1 523 0
 2378 0060 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2379 0062 002B     		cmp	r3, #0
 2380 0064 0BD0     		beq	.L139
 2381              		.loc 1 523 0 is_stmt 0 discriminator 1
 2382 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2383 0068 002B     		cmp	r3, #0
 2384 006a 08D0     		beq	.L139
 524:.\main.c      ****     {
 525:.\main.c      ****         setSpeed(15, 15);
 2385              		.loc 1 525 0 is_stmt 1
 2386 006c 4FF00000 		mov	r0, #0
 2387 0070 3249     		ldr	r1, .L144
 2388 0072 4FF00002 		mov	r2, #0
 2389 0076 314B     		ldr	r3, .L144
 2390 0078 FFF7FEFF 		bl	setSpeed
 2391 007c 5AE0     		b	.L135
 2392              	.L139:
 526:.\main.c      ****     }
 527:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 2393              		.loc 1 527 0
 2394 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2395 0080 002B     		cmp	r3, #0
 2396 0082 0ED0     		beq	.L140
 2397              		.loc 1 527 0 is_stmt 0 discriminator 1
 2398 0084 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2399 0086 002B     		cmp	r3, #0
 2400 0088 0BD1     		bne	.L140
 2401              		.loc 1 527 0 discriminator 2
 2402 008a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2403 008c 002B     		cmp	r3, #0
 2404 008e 08D1     		bne	.L140
 528:.\main.c      ****     {
 529:.\main.c      ****         setSpeed(-10,15);
 2405              		.loc 1 529 0 is_stmt 1
 2406 0090 4FF00000 		mov	r0, #0
 2407 0094 2A49     		ldr	r1, .L144+4
 2408 0096 4FF00002 		mov	r2, #0
 2409 009a 284B     		ldr	r3, .L144
 2410 009c FFF7FEFF 		bl	setSpeed
 2411 00a0 48E0     		b	.L135
 2412              	.L140:
 530:.\main.c      ****     }
 531:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2413              		.loc 1 531 0
 2414 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2415 00a4 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 53


 2416 00a6 0FD0     		beq	.L141
 2417              		.loc 1 531 0 is_stmt 0 discriminator 1
 2418 00a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2419 00aa 002B     		cmp	r3, #0
 2420 00ac 0CD0     		beq	.L141
 2421              		.loc 1 531 0 discriminator 2
 2422 00ae 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2423 00b0 002B     		cmp	r3, #0
 2424 00b2 09D1     		bne	.L141
 532:.\main.c      ****     {
 533:.\main.c      ****         setSpeed(0,15);
 2425              		.loc 1 533 0 is_stmt 1
 2426 00b4 4FF00000 		mov	r0, #0
 2427 00b8 4FF00001 		mov	r1, #0
 2428 00bc 4FF00002 		mov	r2, #0
 2429 00c0 1E4B     		ldr	r3, .L144
 2430 00c2 FFF7FEFF 		bl	setSpeed
 2431 00c6 35E0     		b	.L135
 2432              	.L141:
 534:.\main.c      ****     }
 535:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2433              		.loc 1 535 0
 2434 00c8 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2435 00ca 002B     		cmp	r3, #0
 2436 00cc 0FD0     		beq	.L142
 2437              		.loc 1 535 0 is_stmt 0 discriminator 1
 2438 00ce FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2439 00d0 002B     		cmp	r3, #0
 2440 00d2 0CD0     		beq	.L142
 2441              		.loc 1 535 0 discriminator 2
 2442 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2443 00d6 002B     		cmp	r3, #0
 2444 00d8 09D1     		bne	.L142
 536:.\main.c      ****     {
 537:.\main.c      ****         setSpeed(15,0);
 2445              		.loc 1 537 0 is_stmt 1
 2446 00da 4FF00000 		mov	r0, #0
 2447 00de 1749     		ldr	r1, .L144
 2448 00e0 4FF00002 		mov	r2, #0
 2449 00e4 4FF00003 		mov	r3, #0
 2450 00e8 FFF7FEFF 		bl	setSpeed
 2451 00ec 22E0     		b	.L135
 2452              	.L142:
 538:.\main.c      ****     }
 539:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2453              		.loc 1 539 0
 2454 00ee 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2455 00f0 002B     		cmp	r3, #0
 2456 00f2 0ED0     		beq	.L143
 2457              		.loc 1 539 0 is_stmt 0 discriminator 1
 2458 00f4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2459 00f6 002B     		cmp	r3, #0
 2460 00f8 0BD1     		bne	.L143
 2461              		.loc 1 539 0 discriminator 2
 2462 00fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2463 00fc 002B     		cmp	r3, #0
 2464 00fe 08D1     		bne	.L143
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 54


 540:.\main.c      ****     {
 541:.\main.c      ****         setSpeed(15,-10);
 2465              		.loc 1 541 0 is_stmt 1
 2466 0100 4FF00000 		mov	r0, #0
 2467 0104 0D49     		ldr	r1, .L144
 2468 0106 4FF00002 		mov	r2, #0
 2469 010a 0D4B     		ldr	r3, .L144+4
 2470 010c FFF7FEFF 		bl	setSpeed
 2471 0110 10E0     		b	.L135
 2472              	.L143:
 542:.\main.c      ****     }
 543:.\main.c      ****     else if (mid && !nr && !nl)
 2473              		.loc 1 543 0
 2474 0112 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2475 0114 002B     		cmp	r3, #0
 2476 0116 0DD0     		beq	.L135
 2477              		.loc 1 543 0 is_stmt 0 discriminator 1
 2478 0118 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2479 011a 002B     		cmp	r3, #0
 2480 011c 0AD1     		bne	.L135
 2481              		.loc 1 543 0 discriminator 2
 2482 011e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2483 0120 002B     		cmp	r3, #0
 2484 0122 07D1     		bne	.L135
 544:.\main.c      ****     {
 545:.\main.c      ****         setSpeed(10,10);
 2485              		.loc 1 545 0 is_stmt 1
 2486 0124 4FF00000 		mov	r0, #0
 2487 0128 0649     		ldr	r1, .L144+8
 2488 012a 4FF00002 		mov	r2, #0
 2489 012e 054B     		ldr	r3, .L144+8
 2490 0130 FFF7FEFF 		bl	setSpeed
 2491              	.L135:
 546:.\main.c      ****     }
 547:.\main.c      ****    // else if (!mid && !nr && !nl)
 548:.\main.c      ****     //{
 549:.\main.c      ****         //setSpeed(0,0);
 550:.\main.c      ****     //}
 551:.\main.c      ****    
 552:.\main.c      **** 
 553:.\main.c      **** }
 2492              		.loc 1 553 0
 2493 0134 0837     		adds	r7, r7, #8
 2494              		.cfi_def_cfa_offset 8
 2495 0136 BD46     		mov	sp, r7
 2496              		.cfi_def_cfa_register 13
 2497              		@ sp needed
 2498 0138 80BD     		pop	{r7, pc}
 2499              	.L145:
 2500 013a 00BF     		.align	2
 2501              	.L144:
 2502 013c 00002E40 		.word	1076756480
 2503 0140 000024C0 		.word	-1071382528
 2504 0144 00002440 		.word	1076101120
 2505              		.cfi_endproc
 2506              	.LFE91:
 2507              		.size	trackLineU, .-trackLineU
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 55


 2508              		.global	__aeabi_i2f
 2509              		.global	__aeabi_fmul
 2510              		.global	__aeabi_fadd
 2511              		.global	__aeabi_f2iz
 2512              		.section	.rodata
 2513 003e 0000     		.align	2
 2514              	.LC4:
 2515 0040 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 2515      65727920 
 2515      566F6C74 
 2515      6167653A 
 2515      2025646D 
 2516              		.section	.text.print_ADC,"ax",%progbits
 2517              		.align	2
 2518              		.global	print_ADC
 2519              		.thumb
 2520              		.thumb_func
 2521              		.type	print_ADC, %function
 2522              	print_ADC:
 2523              	.LFB92:
 554:.\main.c      **** 
 555:.\main.c      **** void print_ADC()
 556:.\main.c      **** {
 2524              		.loc 1 556 0
 2525              		.cfi_startproc
 2526              		@ args = 0, pretend = 0, frame = 24
 2527              		@ frame_needed = 1, uses_anonymous_args = 0
 2528 0000 80B5     		push	{r7, lr}
 2529              		.cfi_def_cfa_offset 8
 2530              		.cfi_offset 7, -8
 2531              		.cfi_offset 14, -4
 2532 0002 86B0     		sub	sp, sp, #24
 2533              		.cfi_def_cfa_offset 32
 2534 0004 00AF     		add	r7, sp, #0
 2535              		.cfi_def_cfa_register 7
 557:.\main.c      ****    //usbPutString("HII\n");
 558:.\main.c      ****     if(flag_receive_ADC == 1)
 2536              		.loc 1 558 0
 2537 0006 274B     		ldr	r3, .L149
 2538 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2539 000a 012B     		cmp	r3, #1
 2540 000c 46D1     		bne	.L146
 2541              	.LBB5:
 559:.\main.c      ****     {
 560:.\main.c      ****         //usbPutString("AAA\r\n");
 561:.\main.c      ****         flag_receive_ADC = 0;
 2542              		.loc 1 561 0
 2543 000e 254B     		ldr	r3, .L149
 2544 0010 0022     		movs	r2, #0
 2545 0012 1A70     		strb	r2, [r3]
 562:.\main.c      ****         
 563:.\main.c      ****        // int8 channel = ADC_
 564:.\main.c      ****         float scalingFactor = 0.972;
 2546              		.loc 1 564 0
 2547 0014 244B     		ldr	r3, .L149+4
 2548 0016 7B61     		str	r3, [r7, #20]	@ float
 565:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 56


 2549              		.loc 1 565 0
 2550 0018 244B     		ldr	r3, .L149+8
 2551 001a 1B88     		ldrh	r3, [r3]
 2552 001c 1BB2     		sxth	r3, r3
 2553 001e 41F28832 		movw	r2, #5000
 2554 0022 02FB03F3 		mul	r3, r2, r3
 2555 0026 002B     		cmp	r3, #0
 2556 0028 01DA     		bge	.L148
 2557 002a 03F6FF73 		addw	r3, r3, #4095
 2558              	.L148:
 2559 002e 1B13     		asrs	r3, r3, #12
 2560 0030 1846     		mov	r0, r3
 2561 0032 FFF7FEFF 		bl	__aeabi_i2f
 2562 0036 0346     		mov	r3, r0
 2563 0038 1846     		mov	r0, r3
 2564 003a 7969     		ldr	r1, [r7, #20]	@ float
 2565 003c FFF7FEFF 		bl	__aeabi_fmul
 2566 0040 0346     		mov	r3, r0
 2567 0042 1846     		mov	r0, r3
 2568 0044 1946     		mov	r1, r3
 2569 0046 FFF7FEFF 		bl	__aeabi_fadd
 2570 004a 0346     		mov	r3, r0
 2571 004c 1846     		mov	r0, r3
 2572 004e FFF7FEFF 		bl	__aeabi_f2iz
 2573 0052 0346     		mov	r3, r0
 2574 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 566:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 2575              		.loc 1 566 0
 2576 0056 B7F91220 		ldrsh	r2, [r7, #18]
 2577 005a 154B     		ldr	r3, .L149+12
 2578 005c 1B88     		ldrh	r3, [r3]
 2579 005e 1BB2     		sxth	r3, r3
 2580 0060 1A44     		add	r2, r2, r3
 2581 0062 144B     		ldr	r3, .L149+16
 2582 0064 1B88     		ldrh	r3, [r3]
 2583 0066 1BB2     		sxth	r3, r3
 2584 0068 1344     		add	r3, r3, r2
 2585 006a 134A     		ldr	r2, .L149+20
 2586 006c 82FB0312 		smull	r1, r2, r2, r3
 2587 0070 DB17     		asrs	r3, r3, #31
 2588 0072 D31A     		subs	r3, r2, r3
 2589 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 567:.\main.c      ****         prevVoltage2 = prevVoltage;
 2590              		.loc 1 567 0
 2591 0076 0E4B     		ldr	r3, .L149+12
 2592 0078 1A88     		ldrh	r2, [r3]
 2593 007a 0E4B     		ldr	r3, .L149+16
 2594 007c 1A80     		strh	r2, [r3]	@ movhi
 568:.\main.c      ****         prevVoltage = converted_val;
 2595              		.loc 1 568 0
 2596 007e 0C4A     		ldr	r2, .L149+12
 2597 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 2598 0082 1380     		strh	r3, [r2]	@ movhi
 569:.\main.c      ****         
 570:.\main.c      ****         char result_str[16];
 571:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 2599              		.loc 1 571 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 57


 2600 0084 B7F91230 		ldrsh	r3, [r7, #18]
 2601 0088 3A46     		mov	r2, r7
 2602 008a 1046     		mov	r0, r2
 2603 008c 0B49     		ldr	r1, .L149+24
 2604 008e 1A46     		mov	r2, r3
 2605 0090 FFF7FEFF 		bl	sprintf
 572:.\main.c      ****         
 573:.\main.c      ****         usbPutString(result_str);
 2606              		.loc 1 573 0
 2607 0094 3B46     		mov	r3, r7
 2608 0096 1846     		mov	r0, r3
 2609 0098 FFF7FEFF 		bl	usbPutString
 2610              	.L146:
 2611              	.LBE5:
 574:.\main.c      ****     }
 575:.\main.c      **** }
 2612              		.loc 1 575 0
 2613 009c 1837     		adds	r7, r7, #24
 2614              		.cfi_def_cfa_offset 8
 2615 009e BD46     		mov	sp, r7
 2616              		.cfi_def_cfa_register 13
 2617              		@ sp needed
 2618 00a0 80BD     		pop	{r7, pc}
 2619              	.L150:
 2620 00a2 00BF     		.align	2
 2621              	.L149:
 2622 00a4 00000000 		.word	flag_receive_ADC
 2623 00a8 FED4783F 		.word	1064883454
 2624 00ac 00000000 		.word	adc_result
 2625 00b0 00000000 		.word	prevVoltage
 2626 00b4 00000000 		.word	prevVoltage2
 2627 00b8 56555555 		.word	1431655766
 2628 00bc 40000000 		.word	.LC4
 2629              		.cfi_endproc
 2630              	.LFE92:
 2631              		.size	print_ADC, .-print_ADC
 2632              		.section	.rodata
 2633              		.align	2
 2634              	.LC5:
 2635 0058 52535349 		.ascii	"RSSI:\000"
 2635      3A00
 2636 005e 0000     		.align	2
 2637              	.LC6:
 2638 0060 25640D0A 		.ascii	"%d\015\012\000"
 2638      00
 2639 0065 000000   		.align	2
 2640              	.LC7:
 2641 0068 726F626F 		.ascii	"robot_x:\000"
 2641      745F783A 
 2641      00
 2642 0071 000000   		.align	2
 2643              	.LC8:
 2644 0074 726F626F 		.ascii	"robot_y:\000"
 2644      745F793A 
 2644      00
 2645 007d 000000   		.align	2
 2646              	.LC9:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 58


 2647 0080 726F626F 		.ascii	"robot_dir:\000"
 2647      745F6469 
 2647      723A00
 2648 008b 00       		.section	.text.print_RF,"ax",%progbits
 2649              		.align	2
 2650              		.global	print_RF
 2651              		.thumb
 2652              		.thumb_func
 2653              		.type	print_RF, %function
 2654              	print_RF:
 2655              	.LFB93:
 576:.\main.c      **** 
 577:.\main.c      **** void print_RF()
 578:.\main.c      **** {
 2656              		.loc 1 578 0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 16
 2659              		@ frame_needed = 1, uses_anonymous_args = 0
 2660 0000 80B5     		push	{r7, lr}
 2661              		.cfi_def_cfa_offset 8
 2662              		.cfi_offset 7, -8
 2663              		.cfi_offset 14, -4
 2664 0002 84B0     		sub	sp, sp, #16
 2665              		.cfi_def_cfa_offset 24
 2666 0004 00AF     		add	r7, sp, #0
 2667              		.cfi_def_cfa_register 7
 579:.\main.c      ****     if(flag_print_rf == 1)
 2668              		.loc 1 579 0
 2669 0006 254B     		ldr	r3, .L153
 2670 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2671 000a 012B     		cmp	r3, #1
 2672 000c 42D1     		bne	.L151
 2673              	.LBB6:
 580:.\main.c      ****     {
 581:.\main.c      ****         char printString[16];
 582:.\main.c      ****         flag_print_rf = 0;
 2674              		.loc 1 582 0
 2675 000e 234B     		ldr	r3, .L153
 2676 0010 0022     		movs	r2, #0
 2677 0012 1A70     		strb	r2, [r3]
 583:.\main.c      ****         usbPutString("RSSI:");
 2678              		.loc 1 583 0
 2679 0014 2248     		ldr	r0, .L153+4
 2680 0016 FFF7FEFF 		bl	usbPutString
 584:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 2681              		.loc 1 584 0
 2682 001a 224B     		ldr	r3, .L153+8
 2683 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2684 001e 5BB2     		sxtb	r3, r3
 2685 0020 3A46     		mov	r2, r7
 2686 0022 1046     		mov	r0, r2
 2687 0024 2049     		ldr	r1, .L153+12
 2688 0026 1A46     		mov	r2, r3
 2689 0028 FFF7FEFF 		bl	sprintf
 585:.\main.c      ****         usbPutString(printString);
 2690              		.loc 1 585 0
 2691 002c 3B46     		mov	r3, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 59


 2692 002e 1846     		mov	r0, r3
 2693 0030 FFF7FEFF 		bl	usbPutString
 586:.\main.c      ****         usbPutString("robot_x:");
 2694              		.loc 1 586 0
 2695 0034 1D48     		ldr	r0, .L153+16
 2696 0036 FFF7FEFF 		bl	usbPutString
 587:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 2697              		.loc 1 587 0
 2698 003a 1A4B     		ldr	r3, .L153+8
 2699 003c 5B88     		ldrh	r3, [r3, #2]
 2700 003e 1BB2     		sxth	r3, r3
 2701 0040 3A46     		mov	r2, r7
 2702 0042 1046     		mov	r0, r2
 2703 0044 1849     		ldr	r1, .L153+12
 2704 0046 1A46     		mov	r2, r3
 2705 0048 FFF7FEFF 		bl	sprintf
 588:.\main.c      ****         usbPutString(printString);
 2706              		.loc 1 588 0
 2707 004c 3B46     		mov	r3, r7
 2708 004e 1846     		mov	r0, r3
 2709 0050 FFF7FEFF 		bl	usbPutString
 589:.\main.c      ****         usbPutString("robot_y:");
 2710              		.loc 1 589 0
 2711 0054 1648     		ldr	r0, .L153+20
 2712 0056 FFF7FEFF 		bl	usbPutString
 590:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 2713              		.loc 1 590 0
 2714 005a 124B     		ldr	r3, .L153+8
 2715 005c 9B88     		ldrh	r3, [r3, #4]
 2716 005e 1BB2     		sxth	r3, r3
 2717 0060 3A46     		mov	r2, r7
 2718 0062 1046     		mov	r0, r2
 2719 0064 1049     		ldr	r1, .L153+12
 2720 0066 1A46     		mov	r2, r3
 2721 0068 FFF7FEFF 		bl	sprintf
 591:.\main.c      ****         usbPutString(printString);
 2722              		.loc 1 591 0
 2723 006c 3B46     		mov	r3, r7
 2724 006e 1846     		mov	r0, r3
 2725 0070 FFF7FEFF 		bl	usbPutString
 592:.\main.c      ****         usbPutString("robot_dir:");
 2726              		.loc 1 592 0
 2727 0074 0F48     		ldr	r0, .L153+24
 2728 0076 FFF7FEFF 		bl	usbPutString
 593:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 2729              		.loc 1 593 0
 2730 007a 0A4B     		ldr	r3, .L153+8
 2731 007c DB88     		ldrh	r3, [r3, #6]
 2732 007e 1BB2     		sxth	r3, r3
 2733 0080 3A46     		mov	r2, r7
 2734 0082 1046     		mov	r0, r2
 2735 0084 0849     		ldr	r1, .L153+12
 2736 0086 1A46     		mov	r2, r3
 2737 0088 FFF7FEFF 		bl	sprintf
 594:.\main.c      ****         usbPutString(printString);
 2738              		.loc 1 594 0
 2739 008c 3B46     		mov	r3, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 60


 2740 008e 1846     		mov	r0, r3
 2741 0090 FFF7FEFF 		bl	usbPutString
 2742              	.L151:
 2743              	.LBE6:
 595:.\main.c      ****     }
 596:.\main.c      **** }
 2744              		.loc 1 596 0
 2745 0094 1037     		adds	r7, r7, #16
 2746              		.cfi_def_cfa_offset 8
 2747 0096 BD46     		mov	sp, r7
 2748              		.cfi_def_cfa_register 13
 2749              		@ sp needed
 2750 0098 80BD     		pop	{r7, pc}
 2751              	.L154:
 2752 009a 00BF     		.align	2
 2753              	.L153:
 2754 009c 00000000 		.word	flag_print_rf
 2755 00a0 58000000 		.word	.LC5
 2756 00a4 00000000 		.word	system_state
 2757 00a8 60000000 		.word	.LC6
 2758 00ac 68000000 		.word	.LC7
 2759 00b0 74000000 		.word	.LC8
 2760 00b4 80000000 		.word	.LC9
 2761              		.cfi_endproc
 2762              	.LFE93:
 2763              		.size	print_RF, .-print_RF
 2764              		.section	.text.readFrontSensors,"ax",%progbits
 2765              		.align	2
 2766              		.global	readFrontSensors
 2767              		.thumb
 2768              		.thumb_func
 2769              		.type	readFrontSensors, %function
 2770              	readFrontSensors:
 2771              	.LFB94:
 597:.\main.c      **** 
 598:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 599:.\main.c      **** {
 2772              		.loc 1 599 0
 2773              		.cfi_startproc
 2774              		@ args = 0, pretend = 0, frame = 8
 2775              		@ frame_needed = 1, uses_anonymous_args = 0
 2776 0000 90B5     		push	{r4, r7, lr}
 2777              		.cfi_def_cfa_offset 12
 2778              		.cfi_offset 4, -12
 2779              		.cfi_offset 7, -8
 2780              		.cfi_offset 14, -4
 2781 0002 83B0     		sub	sp, sp, #12
 2782              		.cfi_def_cfa_offset 24
 2783 0004 00AF     		add	r7, sp, #0
 2784              		.cfi_def_cfa_register 7
 2785 0006 7860     		str	r0, [r7, #4]
 600:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 2786              		.loc 1 600 0
 2787 0008 FFF7FEFF 		bl	FLSens_out_Read
 2788 000c 0346     		mov	r3, r0
 2789 000e 1A46     		mov	r2, r3
 2790 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 61


 2791 0012 1A70     		strb	r2, [r3]
 601:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 2792              		.loc 1 601 0
 2793 0014 7B68     		ldr	r3, [r7, #4]
 2794 0016 5C1C     		adds	r4, r3, #1
 2795 0018 FFF7FEFF 		bl	NLSens_out_Read
 2796 001c 0346     		mov	r3, r0
 2797 001e 2370     		strb	r3, [r4]
 602:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 2798              		.loc 1 602 0
 2799 0020 7B68     		ldr	r3, [r7, #4]
 2800 0022 9C1C     		adds	r4, r3, #2
 2801 0024 FFF7FEFF 		bl	MSens_out_Read
 2802 0028 0346     		mov	r3, r0
 2803 002a 2370     		strb	r3, [r4]
 603:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 2804              		.loc 1 603 0
 2805 002c 7B68     		ldr	r3, [r7, #4]
 2806 002e DC1C     		adds	r4, r3, #3
 2807 0030 FFF7FEFF 		bl	NRSens_out_Read
 2808 0034 0346     		mov	r3, r0
 2809 0036 2370     		strb	r3, [r4]
 604:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 2810              		.loc 1 604 0
 2811 0038 7B68     		ldr	r3, [r7, #4]
 2812 003a 1C1D     		adds	r4, r3, #4
 2813 003c FFF7FEFF 		bl	FRSens_out_Read
 2814 0040 0346     		mov	r3, r0
 2815 0042 2370     		strb	r3, [r4]
 605:.\main.c      **** }
 2816              		.loc 1 605 0
 2817 0044 0C37     		adds	r7, r7, #12
 2818              		.cfi_def_cfa_offset 12
 2819 0046 BD46     		mov	sp, r7
 2820              		.cfi_def_cfa_register 13
 2821              		@ sp needed
 2822 0048 90BD     		pop	{r4, r7, pc}
 2823              		.cfi_endproc
 2824              	.LFE94:
 2825              		.size	readFrontSensors, .-readFrontSensors
 2826 004a 00BF     		.section	.text.main,"ax",%progbits
 2827              		.align	2
 2828              		.global	main
 2829              		.thumb
 2830              		.thumb_func
 2831              		.type	main, %function
 2832              	main:
 2833              	.LFB95:
 606:.\main.c      **** 
 607:.\main.c      **** int main()
 608:.\main.c      **** {  
 2834              		.loc 1 608 0
 2835              		.cfi_startproc
 2836              		@ args = 0, pretend = 0, frame = 8
 2837              		@ frame_needed = 1, uses_anonymous_args = 0
 2838 0000 80B5     		push	{r7, lr}
 2839              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 62


 2840              		.cfi_offset 7, -8
 2841              		.cfi_offset 14, -4
 2842 0002 82B0     		sub	sp, sp, #8
 2843              		.cfi_def_cfa_offset 16
 2844 0004 00AF     		add	r7, sp, #0
 2845              		.cfi_def_cfa_register 7
 609:.\main.c      **** 
 610:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 611:.\main.c      **** // ----- INITIALIZATIONS ----------
 612:.\main.c      ****     CYGlobalIntEnable;
 2846              		.loc 1 612 0
 2847              	@ 612 ".\main.c" 1
 2848 0006 62B6     		CPSIE   i
 2849              	@ 0 "" 2
 613:.\main.c      ****     if(ENABLE_PWM)
 614:.\main.c      ****     {
 615:.\main.c      ****         PWM_1_Start();// starting the pwm
 2850              		.loc 1 615 0
 2851              		.thumb
 2852 0008 FFF7FEFF 		bl	PWM_1_Start
 616:.\main.c      ****         PWM_2_Start();// starting the pwm
 2853              		.loc 1 616 0
 2854 000c FFF7FEFF 		bl	PWM_2_Start
 617:.\main.c      ****     }
 618:.\main.c      ****     
 619:.\main.c      ****     if(ENABLE_ADC)
 620:.\main.c      ****     {
 621:.\main.c      ****         ADC_Start();
 622:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 623:.\main.c      ****         //ADC_StartConvert();
 624:.\main.c      ****         
 625:.\main.c      ****         //start the ADC timer for software trigger mode
 626:.\main.c      ****         Timer_TS_Start();
 627:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 628:.\main.c      ****     }
 629:.\main.c      ****     
 630:.\main.c      ****     if (ENABLE_QUAD)
 631:.\main.c      ****     {
 632:.\main.c      ****         QuadDec_M1_Start();
 2855              		.loc 1 632 0
 2856 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 633:.\main.c      ****         QuadDec_M2_Start();
 2857              		.loc 1 633 0
 2858 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 634:.\main.c      ****         
 635:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 2859              		.loc 1 635 0
 2860 0018 3A48     		ldr	r0, .L178
 2861 001a FFF7FEFF 		bl	isr_quad1_StartEx
 636:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 2862              		.loc 1 636 0
 2863 001e 3A48     		ldr	r0, .L178+4
 2864 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 637:.\main.c      ****         
 638:.\main.c      ****         Timer_1_Start();
 2865              		.loc 1 638 0
 2866 0024 FFF7FEFF 		bl	Timer_1_Start
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 63


 639:.\main.c      ****     }
 640:.\main.c      ****     
 641:.\main.c      ****     if(ENABLE_STOP){
 642:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 643:.\main.c      ****         
 644:.\main.c      ****     }
 645:.\main.c      ****     isr_button_StartEx(button);
 2867              		.loc 1 645 0
 2868 0028 3848     		ldr	r0, .L178+8
 2869 002a FFF7FEFF 		bl	isr_button_StartEx
 646:.\main.c      ****     
 647:.\main.c      **** 
 648:.\main.c      ****     // ------USB SETUP ----------------    
 649:.\main.c      ****     if (USE_USB){    
 650:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 2870              		.loc 1 650 0
 2871 002e 0020     		movs	r0, #0
 2872 0030 0121     		movs	r1, #1
 2873 0032 FFF7FEFF 		bl	USBUART_Start
 651:.\main.c      ****         if (USBUART_GetConfiguration())
 2874              		.loc 1 651 0
 2875 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
 2876 003a 0346     		mov	r3, r0
 2877 003c 002B     		cmp	r3, #0
 2878 003e 01D0     		beq	.L176
 652:.\main.c      ****             {
 653:.\main.c      ****                  USBUART_CDC_Init();
 2879              		.loc 1 653 0
 2880 0040 FFF7FEFF 		bl	USBUART_CDC_Init
 2881              	.L176:
 654:.\main.c      ****             }
 655:.\main.c      ****     }
 656:.\main.c      ****     
 657:.\main.c      ****     if(BIN_ENABLED){
 658:.\main.c      ****         UART_clk_SetDividerValue(130);
 659:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 660:.\main.c      ****         UART_Start();
 661:.\main.c      ****         RF_BT_SELECT_Write(0);
 662:.\main.c      ****     }
 663:.\main.c      ****     
 664:.\main.c      ****     if(BT_ENABLED){
 665:.\main.c      ****         UART_clk_SetDividerValue(781);
 2882              		.loc 1 665 0
 2883 0044 4FF44370 		mov	r0, #780
 2884 0048 0121     		movs	r1, #1
 2885 004a FFF7FEFF 		bl	UART_clk_SetDividerRegister
 666:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2886              		.loc 1 666 0
 2887 004e 3048     		ldr	r0, .L178+12
 2888 0050 FFF7FEFF 		bl	isrRF_RX_StartEx
 667:.\main.c      ****         UART_Start();
 2889              		.loc 1 667 0
 2890 0054 FFF7FEFF 		bl	UART_Start
 668:.\main.c      ****         RF_BT_SELECT_Write(1);
 2891              		.loc 1 668 0
 2892 0058 0120     		movs	r0, #1
 2893 005a FFF7FEFF 		bl	RF_BT_SELECT_Write
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 64


 2894              	.L175:
 2895              	.LBB7:
 669:.\main.c      ****     }
 670:.\main.c      ****     
 671:.\main.c      ****     //usbPutString("Started");
 672:.\main.c      ****     for(;;)
 673:.\main.c      ****     {
 674:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 675:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 2896              		.loc 1 675 0
 2897 005e FFF7FEFF 		bl	Quad_Dec_response
 676:.\main.c      ****         if(BIN_ENABLED == 1)
 677:.\main.c      ****         {
 678:.\main.c      ****             handle_rx_binary();
 679:.\main.c      ****             print_RF();
 680:.\main.c      ****         }
 681:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 682:.\main.c      ****         
 683:.\main.c      ****         uint8 frontSensors[5];
 684:.\main.c      ****         readFrontSensors(frontSensors);
 2898              		.loc 1 684 0
 2899 0062 3B46     		mov	r3, r7
 2900 0064 1846     		mov	r0, r3
 2901 0066 FFF7FEFF 		bl	readFrontSensors
 685:.\main.c      ****         
 686:.\main.c      ****         switch(track_mode)
 2902              		.loc 1 686 0
 2903 006a 2A4B     		ldr	r3, .L178+16
 2904 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2905 006e 032B     		cmp	r3, #3
 2906 0070 20D8     		bhi	.L158
 2907 0072 01A2     		adr	r2, .L160
 2908 0074 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2909              		.p2align 2
 2910              	.L160:
 2911 0078 B5000000 		.word	.L158+1
 2912 007c B5000000 		.word	.L158+1
 2913 0080 B5000000 		.word	.L158+1
 2914 0084 89000000 		.word	.L163+1
 2915              		.p2align 1
 2916              	.L163:
 687:.\main.c      ****         {
 688:.\main.c      ****             case SQUARE_TRACK:
 689:.\main.c      ****                 if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 2917              		.loc 1 689 0
 2918 0088 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2919 008a 012B     		cmp	r3, #1
 2920 008c 05D1     		bne	.L164
 2921              		.loc 1 689 0 is_stmt 0 discriminator 1
 2922 008e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2923 0090 012B     		cmp	r3, #1
 2924 0092 02D1     		bne	.L164
 690:.\main.c      ****                     initTurnLeft();
 2925              		.loc 1 690 0 is_stmt 1
 2926 0094 FFF7FEFF 		bl	initTurnLeft
 2927 0098 0BE0     		b	.L165
 2928              	.L164:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 65


 691:.\main.c      ****                 }
 692:.\main.c      ****                 else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 2929              		.loc 1 692 0
 2930 009a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2931 009c 012B     		cmp	r3, #1
 2932 009e 05D1     		bne	.L166
 2933              		.loc 1 692 0 is_stmt 0 discriminator 1
 2934 00a0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2935 00a2 012B     		cmp	r3, #1
 2936 00a4 02D1     		bne	.L166
 693:.\main.c      ****                 {
 694:.\main.c      ****                     initTurnRight();
 2937              		.loc 1 694 0 is_stmt 1
 2938 00a6 FFF7FEFF 		bl	initTurnRight
 2939 00aa 02E0     		b	.L165
 2940              	.L166:
 695:.\main.c      ****                 }
 696:.\main.c      ****                 else initTrack();
 2941              		.loc 1 696 0
 2942 00ac FFF7FEFF 		bl	initTrack
 697:.\main.c      ****             break;
 2943              		.loc 1 697 0
 2944 00b0 FFE7     		b	.L177
 2945              	.L165:
 2946              	.L177:
 2947 00b2 00BF     		nop
 2948              	.L158:
 698:.\main.c      ****             case NO_TRACK:
 699:.\main.c      ****             break;
 700:.\main.c      ****             case CURVE_TRACK:
 701:.\main.c      ****             break;
 702:.\main.c      ****             case U_TRACK:
 703:.\main.c      ****             break;
 704:.\main.c      ****         }
 705:.\main.c      ****         
 706:.\main.c      ****         switch(movement_state)
 2949              		.loc 1 706 0
 2950 00b4 184B     		ldr	r3, .L178+20
 2951 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2952 00b8 052B     		cmp	r3, #5
 2953 00ba D0D8     		bhi	.L175
 2954 00bc 01A2     		adr	r2, .L169
 2955 00be 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2956 00c2 00BF     		.p2align 2
 2957              	.L169:
 2958 00c4 DD000000 		.word	.L168+1
 2959 00c8 E3000000 		.word	.L170+1
 2960 00cc E9000000 		.word	.L171+1
 2961 00d0 EF000000 		.word	.L172+1
 2962 00d4 F5000000 		.word	.L173+1
 2963 00d8 FB000000 		.word	.L174+1
 2964              		.p2align 1
 2965              	.L168:
 707:.\main.c      ****         {
 708:.\main.c      ****             case DRIVE:
 709:.\main.c      ****                 driveForwards();
 2966              		.loc 1 709 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 66


 2967 00dc FFF7FEFF 		bl	driveForwards
 710:.\main.c      ****             break;
 2968              		.loc 1 710 0
 2969 00e0 0EE0     		b	.L167
 2970              	.L170:
 711:.\main.c      ****             case LTURN:
 712:.\main.c      ****                 turnLeft();
 2971              		.loc 1 712 0
 2972 00e2 FFF7FEFF 		bl	turnLeft
 713:.\main.c      ****             break;
 2973              		.loc 1 713 0
 2974 00e6 0BE0     		b	.L167
 2975              	.L171:
 714:.\main.c      ****             case RTURN:
 715:.\main.c      ****                 turnRight();
 2976              		.loc 1 715 0
 2977 00e8 FFF7FEFF 		bl	turnRight
 716:.\main.c      ****             break;
 2978              		.loc 1 716 0
 2979 00ec 08E0     		b	.L167
 2980              	.L172:
 717:.\main.c      ****             case STOPPED:
 718:.\main.c      ****                 brakeMotor();
 2981              		.loc 1 718 0
 2982 00ee FFF7FEFF 		bl	brakeMotor
 719:.\main.c      ****             break;
 2983              		.loc 1 719 0
 2984 00f2 05E0     		b	.L167
 2985              	.L173:
 720:.\main.c      ****             case TRACKING:
 721:.\main.c      ****                 trackLine();
 2986              		.loc 1 721 0
 2987 00f4 FFF7FEFF 		bl	trackLine
 722:.\main.c      ****             break;
 2988              		.loc 1 722 0
 2989 00f8 02E0     		b	.L167
 2990              	.L174:
 723:.\main.c      ****             case TRACKING_U:
 724:.\main.c      ****                 trackLineU();
 2991              		.loc 1 724 0
 2992 00fa FFF7FEFF 		bl	trackLineU
 725:.\main.c      ****             break;
 2993              		.loc 1 725 0
 2994 00fe 00BF     		nop
 2995              	.L167:
 2996              	.LBE7:
 726:.\main.c      ****         }
 727:.\main.c      ****         //handle_usb();        
 728:.\main.c      ****     }   
 2997              		.loc 1 728 0
 2998 0100 ADE7     		b	.L175
 2999              	.L179:
 3000 0102 00BF     		.align	2
 3001              	.L178:
 3002 0104 00000000 		.word	isr_quad1
 3003 0108 00000000 		.word	isr_turn_timer
 3004 010c 00000000 		.word	button
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 67


 3005 0110 00000000 		.word	BT_rxInt
 3006 0114 00000000 		.word	track_mode
 3007 0118 00000000 		.word	movement_state
 3008              		.cfi_endproc
 3009              	.LFE95:
 3010              		.size	main, .-main
 3011              		.section	.text.usbPutString,"ax",%progbits
 3012              		.align	2
 3013              		.global	usbPutString
 3014              		.thumb
 3015              		.thumb_func
 3016              		.type	usbPutString, %function
 3017              	usbPutString:
 3018              	.LFB96:
 729:.\main.c      **** }
 730:.\main.c      **** //* ========================================
 731:.\main.c      **** void usbPutString(char *s)
 732:.\main.c      **** {
 3019              		.loc 1 732 0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 16
 3022              		@ frame_needed = 1, uses_anonymous_args = 0
 3023 0000 80B5     		push	{r7, lr}
 3024              		.cfi_def_cfa_offset 8
 3025              		.cfi_offset 7, -8
 3026              		.cfi_offset 14, -4
 3027 0002 84B0     		sub	sp, sp, #16
 3028              		.cfi_def_cfa_offset 24
 3029 0004 00AF     		add	r7, sp, #0
 3030              		.cfi_def_cfa_register 7
 3031 0006 7860     		str	r0, [r7, #4]
 733:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 734:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 735:.\main.c      **** //  length to 62 char (63rd char is a '!')
 736:.\main.c      ****     if (USE_USB && portOpen)    
 3032              		.loc 1 736 0
 3033 0008 154B     		ldr	r3, .L184
 3034 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3035 000c 002B     		cmp	r3, #0
 3036 000e 23D0     		beq	.L180
 3037              	.LBB8:
 737:.\main.c      ****     {
 738:.\main.c      ****             uint32 cnt = 0;
 3038              		.loc 1 738 0
 3039 0010 0023     		movs	r3, #0
 3040 0012 FB60     		str	r3, [r7, #12]
 739:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 3041              		.loc 1 739 0
 3042 0014 0AE0     		b	.L182
 3043              	.L183:
 740:.\main.c      ****             {
 741:.\main.c      ****                 cnt++;
 3044              		.loc 1 741 0
 3045 0016 FB68     		ldr	r3, [r7, #12]
 3046 0018 0133     		adds	r3, r3, #1
 3047 001a FB60     		str	r3, [r7, #12]
 742:.\main.c      ****                 if(cnt == 3000000){
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 68


 3048              		.loc 1 742 0
 3049 001c FB68     		ldr	r3, [r7, #12]
 3050 001e 114A     		ldr	r2, .L184+4
 3051 0020 9342     		cmp	r3, r2
 3052 0022 03D1     		bne	.L182
 743:.\main.c      ****                     portOpen = 0;
 3053              		.loc 1 743 0
 3054 0024 0E4B     		ldr	r3, .L184
 3055 0026 0022     		movs	r2, #0
 3056 0028 1A70     		strb	r2, [r3]
 744:.\main.c      ****                     return;
 3057              		.loc 1 744 0
 3058 002a 15E0     		b	.L180
 3059              	.L182:
 739:.\main.c      ****             {
 3060              		.loc 1 739 0
 3061 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 3062 0030 0346     		mov	r3, r0
 3063 0032 002B     		cmp	r3, #0
 3064 0034 EFD0     		beq	.L183
 745:.\main.c      ****                 }
 746:.\main.c      ****             }
 747:.\main.c      ****             s[63]='\0';
 3065              		.loc 1 747 0
 3066 0036 7B68     		ldr	r3, [r7, #4]
 3067 0038 3F33     		adds	r3, r3, #63
 3068 003a 0022     		movs	r2, #0
 3069 003c 1A70     		strb	r2, [r3]
 748:.\main.c      ****             s[62]='!';
 3070              		.loc 1 748 0
 3071 003e 7B68     		ldr	r3, [r7, #4]
 3072 0040 3E33     		adds	r3, r3, #62
 3073 0042 2122     		movs	r2, #33
 3074 0044 1A70     		strb	r2, [r3]
 749:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 3075              		.loc 1 749 0
 3076 0046 7868     		ldr	r0, [r7, #4]
 3077 0048 FFF7FEFF 		bl	strlen
 3078 004c 0346     		mov	r3, r0
 3079 004e 9BB2     		uxth	r3, r3
 3080 0050 7868     		ldr	r0, [r7, #4]
 3081 0052 1946     		mov	r1, r3
 3082 0054 FFF7FEFF 		bl	USBUART_PutData
 3083              	.L180:
 3084              	.LBE8:
 750:.\main.c      ****     }
 751:.\main.c      **** }
 3085              		.loc 1 751 0
 3086 0058 1037     		adds	r7, r7, #16
 3087              		.cfi_def_cfa_offset 8
 3088 005a BD46     		mov	sp, r7
 3089              		.cfi_def_cfa_register 13
 3090              		@ sp needed
 3091 005c 80BD     		pop	{r7, pc}
 3092              	.L185:
 3093 005e 00BF     		.align	2
 3094              	.L184:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 69


 3095 0060 00000000 		.word	portOpen
 3096 0064 C0C62D00 		.word	3000000
 3097              		.cfi_endproc
 3098              	.LFE96:
 3099              		.size	usbPutString, .-usbPutString
 3100              		.section	.text.usbPutChar,"ax",%progbits
 3101              		.align	2
 3102              		.global	usbPutChar
 3103              		.thumb
 3104              		.thumb_func
 3105              		.type	usbPutChar, %function
 3106              	usbPutChar:
 3107              	.LFB97:
 752:.\main.c      **** //* ========================================
 753:.\main.c      **** void usbPutChar(char c)
 754:.\main.c      **** {
 3108              		.loc 1 754 0
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 16
 3111              		@ frame_needed = 1, uses_anonymous_args = 0
 3112 0000 80B5     		push	{r7, lr}
 3113              		.cfi_def_cfa_offset 8
 3114              		.cfi_offset 7, -8
 3115              		.cfi_offset 14, -4
 3116 0002 84B0     		sub	sp, sp, #16
 3117              		.cfi_def_cfa_offset 24
 3118 0004 00AF     		add	r7, sp, #0
 3119              		.cfi_def_cfa_register 7
 3120 0006 0346     		mov	r3, r0
 3121 0008 FB71     		strb	r3, [r7, #7]
 755:.\main.c      ****     if (USE_USB && portOpen)    
 3122              		.loc 1 755 0
 3123 000a 0F4B     		ldr	r3, .L190
 3124 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3125 000e 002B     		cmp	r3, #0
 3126 0010 16D0     		beq	.L186
 3127              	.LBB9:
 756:.\main.c      ****     {    
 757:.\main.c      ****         uint32 cnt = 0;
 3128              		.loc 1 757 0
 3129 0012 0023     		movs	r3, #0
 3130 0014 FB60     		str	r3, [r7, #12]
 758:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 3131              		.loc 1 758 0
 3132 0016 0AE0     		b	.L188
 3133              	.L189:
 759:.\main.c      ****             cnt++;
 3134              		.loc 1 759 0
 3135 0018 FB68     		ldr	r3, [r7, #12]
 3136 001a 0133     		adds	r3, r3, #1
 3137 001c FB60     		str	r3, [r7, #12]
 760:.\main.c      ****             if(cnt == 3000000){
 3138              		.loc 1 760 0
 3139 001e FB68     		ldr	r3, [r7, #12]
 3140 0020 0A4A     		ldr	r2, .L190+4
 3141 0022 9342     		cmp	r3, r2
 3142 0024 03D1     		bne	.L188
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 70


 761:.\main.c      ****                 portOpen = 0;
 3143              		.loc 1 761 0
 3144 0026 084B     		ldr	r3, .L190
 3145 0028 0022     		movs	r2, #0
 3146 002a 1A70     		strb	r2, [r3]
 762:.\main.c      ****                 return;
 3147              		.loc 1 762 0
 3148 002c 08E0     		b	.L186
 3149              	.L188:
 758:.\main.c      ****             cnt++;
 3150              		.loc 1 758 0
 3151 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 3152 0032 0346     		mov	r3, r0
 3153 0034 002B     		cmp	r3, #0
 3154 0036 EFD0     		beq	.L189
 763:.\main.c      ****             }
 764:.\main.c      ****         }
 765:.\main.c      ****         USBUART_PutChar(c);
 3155              		.loc 1 765 0
 3156 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3157 003a 1846     		mov	r0, r3
 3158 003c FFF7FEFF 		bl	USBUART_PutChar
 3159              	.L186:
 3160              	.LBE9:
 766:.\main.c      ****     }    
 767:.\main.c      **** }
 3161              		.loc 1 767 0
 3162 0040 1037     		adds	r7, r7, #16
 3163              		.cfi_def_cfa_offset 8
 3164 0042 BD46     		mov	sp, r7
 3165              		.cfi_def_cfa_register 13
 3166              		@ sp needed
 3167 0044 80BD     		pop	{r7, pc}
 3168              	.L191:
 3169 0046 00BF     		.align	2
 3170              	.L190:
 3171 0048 00000000 		.word	portOpen
 3172 004c C0C62D00 		.word	3000000
 3173              		.cfi_endproc
 3174              	.LFE97:
 3175              		.size	usbPutChar, .-usbPutChar
 3176              		.section	.text.uart_set_PWM,"ax",%progbits
 3177              		.align	2
 3178              		.global	uart_set_PWM
 3179              		.thumb
 3180              		.thumb_func
 3181              		.type	uart_set_PWM, %function
 3182              	uart_set_PWM:
 3183              	.LFB98:
 768:.\main.c      **** //* ========================================
 769:.\main.c      **** 
 770:.\main.c      **** void uart_set_PWM()
 771:.\main.c      **** {
 3184              		.loc 1 771 0
 3185              		.cfi_startproc
 3186              		@ args = 0, pretend = 0, frame = 8
 3187              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 71


 3188 0000 80B5     		push	{r7, lr}
 3189              		.cfi_def_cfa_offset 8
 3190              		.cfi_offset 7, -8
 3191              		.cfi_offset 14, -4
 3192 0002 82B0     		sub	sp, sp, #8
 3193              		.cfi_def_cfa_offset 16
 3194 0004 00AF     		add	r7, sp, #0
 3195              		.cfi_def_cfa_register 7
 772:.\main.c      ****     uint8 c;
 773:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 3196              		.loc 1 773 0
 3197 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 3198 000a 0346     		mov	r3, r0
 3199 000c 002B     		cmp	r3, #0
 3200 000e 11D0     		beq	.L192
 774:.\main.c      ****        {  
 775:.\main.c      ****             c = USBUART_GetChar();
 3201              		.loc 1 775 0
 3202 0010 FFF7FEFF 		bl	USBUART_GetChar
 3203 0014 0346     		mov	r3, r0
 3204 0016 FB71     		strb	r3, [r7, #7]
 776:.\main.c      ****             
 777:.\main.c      ****             if(c <= 100 && c > 0){
 3205              		.loc 1 777 0
 3206 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3207 001a 642B     		cmp	r3, #100
 3208 001c 0AD8     		bhi	.L192
 3209              		.loc 1 777 0 is_stmt 0 discriminator 1
 3210 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3211 0020 002B     		cmp	r3, #0
 3212 0022 07D0     		beq	.L192
 778:.\main.c      ****                 PWM_1_WriteCompare(c);
 3213              		.loc 1 778 0 is_stmt 1
 3214 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3215 0026 1846     		mov	r0, r3
 3216 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 779:.\main.c      ****                 usbPutString(c);
 3217              		.loc 1 779 0
 3218 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3219 002e 1846     		mov	r0, r3
 3220 0030 FFF7FEFF 		bl	usbPutString
 3221              	.L192:
 780:.\main.c      ****             }
 781:.\main.c      ****        }
 782:.\main.c      **** }
 3222              		.loc 1 782 0
 3223 0034 0837     		adds	r7, r7, #8
 3224              		.cfi_def_cfa_offset 8
 3225 0036 BD46     		mov	sp, r7
 3226              		.cfi_def_cfa_register 13
 3227              		@ sp needed
 3228 0038 80BD     		pop	{r7, pc}
 3229              		.cfi_endproc
 3230              	.LFE98:
 3231              		.size	uart_set_PWM, .-uart_set_PWM
 3232 003a 00BF     		.text
 3233              	.Letext0:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 72


 3234              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3235              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3236              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3237              		.file 5 ".\\vars.h"
 3238              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 3239              		.section	.debug_info,"",%progbits
 3240              	.Ldebug_info0:
 3241 0000 DE0A0000 		.4byte	0xade
 3242 0004 0400     		.2byte	0x4
 3243 0006 00000000 		.4byte	.Ldebug_abbrev0
 3244 000a 04       		.byte	0x4
 3245 000b 01       		.uleb128 0x1
 3246 000c 60030000 		.4byte	.LASF151
 3247 0010 01       		.byte	0x1
 3248 0011 50070000 		.4byte	.LASF152
 3249 0015 F1060000 		.4byte	.LASF153
 3250 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3251 001d 00000000 		.4byte	0
 3252 0021 00000000 		.4byte	.Ldebug_line0
 3253 0025 02       		.uleb128 0x2
 3254 0026 01       		.byte	0x1
 3255 0027 06       		.byte	0x6
 3256 0028 79060000 		.4byte	.LASF0
 3257 002c 02       		.uleb128 0x2
 3258 002d 01       		.byte	0x1
 3259 002e 08       		.byte	0x8
 3260 002f DC050000 		.4byte	.LASF1
 3261 0033 02       		.uleb128 0x2
 3262 0034 02       		.byte	0x2
 3263 0035 05       		.byte	0x5
 3264 0036 C1040000 		.4byte	.LASF2
 3265 003a 02       		.uleb128 0x2
 3266 003b 02       		.byte	0x2
 3267 003c 07       		.byte	0x7
 3268 003d 85060000 		.4byte	.LASF3
 3269 0041 03       		.uleb128 0x3
 3270 0042 6D000000 		.4byte	.LASF11
 3271 0046 02       		.byte	0x2
 3272 0047 3F       		.byte	0x3f
 3273 0048 4C000000 		.4byte	0x4c
 3274 004c 02       		.uleb128 0x2
 3275 004d 04       		.byte	0x4
 3276 004e 05       		.byte	0x5
 3277 004f EB040000 		.4byte	.LASF4
 3278 0053 02       		.uleb128 0x2
 3279 0054 04       		.byte	0x4
 3280 0055 07       		.byte	0x7
 3281 0056 93050000 		.4byte	.LASF5
 3282 005a 02       		.uleb128 0x2
 3283 005b 08       		.byte	0x8
 3284 005c 05       		.byte	0x5
 3285 005d 33030000 		.4byte	.LASF6
 3286 0061 02       		.uleb128 0x2
 3287 0062 08       		.byte	0x8
 3288 0063 07       		.byte	0x7
 3289 0064 B9010000 		.4byte	.LASF7
 3290 0068 04       		.uleb128 0x4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 73


 3291 0069 04       		.byte	0x4
 3292 006a 05       		.byte	0x5
 3293 006b 696E7400 		.ascii	"int\000"
 3294 006f 02       		.uleb128 0x2
 3295 0070 04       		.byte	0x4
 3296 0071 07       		.byte	0x7
 3297 0072 55000000 		.4byte	.LASF8
 3298 0076 02       		.uleb128 0x2
 3299 0077 04       		.byte	0x4
 3300 0078 07       		.byte	0x7
 3301 0079 8A050000 		.4byte	.LASF9
 3302 007d 05       		.uleb128 0x5
 3303 007e 04       		.byte	0x4
 3304 007f 83000000 		.4byte	0x83
 3305 0083 02       		.uleb128 0x2
 3306 0084 01       		.byte	0x1
 3307 0085 08       		.byte	0x8
 3308 0086 C9020000 		.4byte	.LASF10
 3309 008a 03       		.uleb128 0x3
 3310 008b B1050000 		.4byte	.LASF12
 3311 008f 03       		.byte	0x3
 3312 0090 2C       		.byte	0x2c
 3313 0091 41000000 		.4byte	0x41
 3314 0095 06       		.uleb128 0x6
 3315 0096 C2060000 		.4byte	.LASF13
 3316 009a 04       		.byte	0x4
 3317 009b 9201     		.2byte	0x192
 3318 009d 2C000000 		.4byte	0x2c
 3319 00a1 06       		.uleb128 0x6
 3320 00a2 F2020000 		.4byte	.LASF14
 3321 00a6 04       		.byte	0x4
 3322 00a7 9301     		.2byte	0x193
 3323 00a9 3A000000 		.4byte	0x3a
 3324 00ad 06       		.uleb128 0x6
 3325 00ae 1B040000 		.4byte	.LASF15
 3326 00b2 04       		.byte	0x4
 3327 00b3 9401     		.2byte	0x194
 3328 00b5 53000000 		.4byte	0x53
 3329 00b9 06       		.uleb128 0x6
 3330 00ba F9020000 		.4byte	.LASF16
 3331 00be 04       		.byte	0x4
 3332 00bf 9501     		.2byte	0x195
 3333 00c1 25000000 		.4byte	0x25
 3334 00c5 06       		.uleb128 0x6
 3335 00c6 77000000 		.4byte	.LASF17
 3336 00ca 04       		.byte	0x4
 3337 00cb 9601     		.2byte	0x196
 3338 00cd 33000000 		.4byte	0x33
 3339 00d1 02       		.uleb128 0x2
 3340 00d2 04       		.byte	0x4
 3341 00d3 04       		.byte	0x4
 3342 00d4 64010000 		.4byte	.LASF18
 3343 00d8 02       		.uleb128 0x2
 3344 00d9 08       		.byte	0x8
 3345 00da 04       		.byte	0x4
 3346 00db C8060000 		.4byte	.LASF19
 3347 00df 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 74


 3348 00e0 08       		.byte	0x8
 3349 00e1 04       		.byte	0x4
 3350 00e2 7A040000 		.4byte	.LASF20
 3351 00e6 07       		.uleb128 0x7
 3352 00e7 1D060000 		.4byte	.LASF27
 3353 00eb 01       		.byte	0x1
 3354 00ec 05       		.byte	0x5
 3355 00ed 48       		.byte	0x48
 3356 00ee 17010000 		.4byte	0x117
 3357 00f2 08       		.uleb128 0x8
 3358 00f3 83010000 		.4byte	.LASF21
 3359 00f7 00       		.sleb128 0
 3360 00f8 08       		.uleb128 0x8
 3361 00f9 8A000000 		.4byte	.LASF22
 3362 00fd 01       		.sleb128 1
 3363 00fe 08       		.uleb128 0x8
 3364 00ff 0A000000 		.4byte	.LASF23
 3365 0103 02       		.sleb128 2
 3366 0104 08       		.uleb128 0x8
 3367 0105 69040000 		.4byte	.LASF24
 3368 0109 03       		.sleb128 3
 3369 010a 08       		.uleb128 0x8
 3370 010b 9D000000 		.4byte	.LASF25
 3371 010f 04       		.sleb128 4
 3372 0110 08       		.uleb128 0x8
 3373 0111 36010000 		.4byte	.LASF26
 3374 0115 05       		.sleb128 5
 3375 0116 00       		.byte	0
 3376 0117 07       		.uleb128 0x7
 3377 0118 C8000000 		.4byte	.LASF28
 3378 011c 01       		.byte	0x1
 3379 011d 05       		.byte	0x5
 3380 011e 49       		.byte	0x49
 3381 011f 3C010000 		.4byte	0x13c
 3382 0123 08       		.uleb128 0x8
 3383 0124 2D050000 		.4byte	.LASF29
 3384 0128 00       		.sleb128 0
 3385 0129 08       		.uleb128 0x8
 3386 012a 17030000 		.4byte	.LASF30
 3387 012e 01       		.sleb128 1
 3388 012f 08       		.uleb128 0x8
 3389 0130 02050000 		.4byte	.LASF31
 3390 0134 02       		.sleb128 2
 3391 0135 08       		.uleb128 0x8
 3392 0136 F0000000 		.4byte	.LASF32
 3393 013a 03       		.sleb128 3
 3394 013b 00       		.byte	0
 3395 013c 09       		.uleb128 0x9
 3396 013d 2E040000 		.4byte	.LASF154
 3397 0141 20       		.byte	0x20
 3398 0142 05       		.byte	0x5
 3399 0143 4F       		.byte	0x4f
 3400 0144 15020000 		.4byte	0x215
 3401 0148 0A       		.uleb128 0xa
 3402 0149 46040000 		.4byte	.LASF33
 3403 014d 05       		.byte	0x5
 3404 014e 50       		.byte	0x50
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 75


 3405 014f B9000000 		.4byte	0xb9
 3406 0153 00       		.byte	0
 3407 0154 0A       		.uleb128 0xa
 3408 0155 7D010000 		.4byte	.LASF34
 3409 0159 05       		.byte	0x5
 3410 015a 51       		.byte	0x51
 3411 015b 95000000 		.4byte	0x95
 3412 015f 01       		.byte	0x1
 3413 0160 0A       		.uleb128 0xa
 3414 0161 C0050000 		.4byte	.LASF35
 3415 0165 05       		.byte	0x5
 3416 0166 52       		.byte	0x52
 3417 0167 C5000000 		.4byte	0xc5
 3418 016b 02       		.byte	0x2
 3419 016c 0A       		.uleb128 0xa
 3420 016d 9D020000 		.4byte	.LASF36
 3421 0171 05       		.byte	0x5
 3422 0172 53       		.byte	0x53
 3423 0173 C5000000 		.4byte	0xc5
 3424 0177 04       		.byte	0x4
 3425 0178 0A       		.uleb128 0xa
 3426 0179 98060000 		.4byte	.LASF37
 3427 017d 05       		.byte	0x5
 3428 017e 54       		.byte	0x54
 3429 017f C5000000 		.4byte	0xc5
 3430 0183 06       		.byte	0x6
 3431 0184 0A       		.uleb128 0xa
 3432 0185 23070000 		.4byte	.LASF38
 3433 0189 05       		.byte	0x5
 3434 018a 55       		.byte	0x55
 3435 018b C5000000 		.4byte	0xc5
 3436 018f 08       		.byte	0x8
 3437 0190 0A       		.uleb128 0xa
 3438 0191 F7030000 		.4byte	.LASF39
 3439 0195 05       		.byte	0x5
 3440 0196 56       		.byte	0x56
 3441 0197 C5000000 		.4byte	0xc5
 3442 019b 0A       		.byte	0xa
 3443 019c 0A       		.uleb128 0xa
 3444 019d CE020000 		.4byte	.LASF40
 3445 01a1 05       		.byte	0x5
 3446 01a2 57       		.byte	0x57
 3447 01a3 C5000000 		.4byte	0xc5
 3448 01a7 0C       		.byte	0xc
 3449 01a8 0A       		.uleb128 0xa
 3450 01a9 4B040000 		.4byte	.LASF41
 3451 01ad 05       		.byte	0x5
 3452 01ae 58       		.byte	0x58
 3453 01af C5000000 		.4byte	0xc5
 3454 01b3 0E       		.byte	0xe
 3455 01b4 0A       		.uleb128 0xa
 3456 01b5 4E030000 		.4byte	.LASF42
 3457 01b9 05       		.byte	0x5
 3458 01ba 59       		.byte	0x59
 3459 01bb C5000000 		.4byte	0xc5
 3460 01bf 10       		.byte	0x10
 3461 01c0 0A       		.uleb128 0xa
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 76


 3462 01c1 69050000 		.4byte	.LASF43
 3463 01c5 05       		.byte	0x5
 3464 01c6 5A       		.byte	0x5a
 3465 01c7 C5000000 		.4byte	0xc5
 3466 01cb 12       		.byte	0x12
 3467 01cc 0A       		.uleb128 0xa
 3468 01cd 47070000 		.4byte	.LASF44
 3469 01d1 05       		.byte	0x5
 3470 01d2 5B       		.byte	0x5b
 3471 01d3 C5000000 		.4byte	0xc5
 3472 01d7 14       		.byte	0x14
 3473 01d8 0A       		.uleb128 0xa
 3474 01d9 FE020000 		.4byte	.LASF45
 3475 01dd 05       		.byte	0x5
 3476 01de 5C       		.byte	0x5c
 3477 01df C5000000 		.4byte	0xc5
 3478 01e3 16       		.byte	0x16
 3479 01e4 0A       		.uleb128 0xa
 3480 01e5 C0000000 		.4byte	.LASF46
 3481 01e9 05       		.byte	0x5
 3482 01ea 5D       		.byte	0x5d
 3483 01eb C5000000 		.4byte	0xc5
 3484 01ef 18       		.byte	0x18
 3485 01f0 0A       		.uleb128 0xa
 3486 01f1 45050000 		.4byte	.LASF47
 3487 01f5 05       		.byte	0x5
 3488 01f6 5E       		.byte	0x5e
 3489 01f7 C5000000 		.4byte	0xc5
 3490 01fb 1A       		.byte	0x1a
 3491 01fc 0A       		.uleb128 0xa
 3492 01fd EE030000 		.4byte	.LASF48
 3493 0201 05       		.byte	0x5
 3494 0202 5F       		.byte	0x5f
 3495 0203 C5000000 		.4byte	0xc5
 3496 0207 1C       		.byte	0x1c
 3497 0208 0A       		.uleb128 0xa
 3498 0209 4D010000 		.4byte	.LASF49
 3499 020d 05       		.byte	0x5
 3500 020e 60       		.byte	0x60
 3501 020f C5000000 		.4byte	0xc5
 3502 0213 1E       		.byte	0x1e
 3503 0214 00       		.byte	0
 3504 0215 0B       		.uleb128 0xb
 3505 0216 E0060000 		.4byte	.LASF55
 3506 021a 01       		.byte	0x1
 3507 021b 29       		.byte	0x29
 3508 021c 00000000 		.4byte	.LFB63
 3509 0220 60010000 		.4byte	.LFE63-.LFB63
 3510 0224 01       		.uleb128 0x1
 3511 0225 9C       		.byte	0x9c
 3512 0226 5F020000 		.4byte	0x25f
 3513 022a 0C       		.uleb128 0xc
 3514 022b 10000000 		.4byte	.LBB2
 3515 022f 34010000 		.4byte	.LBE2-.LBB2
 3516 0233 0D       		.uleb128 0xd
 3517 0234 B3000000 		.4byte	.LASF50
 3518 0238 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 77


 3519 0239 2F       		.byte	0x2f
 3520 023a A1000000 		.4byte	0xa1
 3521 023e 02       		.uleb128 0x2
 3522 023f 91       		.byte	0x91
 3523 0240 76       		.sleb128 -10
 3524 0241 0D       		.uleb128 0xd
 3525 0242 A5050000 		.4byte	.LASF51
 3526 0246 01       		.byte	0x1
 3527 0247 31       		.byte	0x31
 3528 0248 5F020000 		.4byte	0x25f
 3529 024c 02       		.uleb128 0x2
 3530 024d 91       		.byte	0x91
 3531 024e 68       		.sleb128 -24
 3532 024f 0D       		.uleb128 0xd
 3533 0250 89010000 		.4byte	.LASF52
 3534 0254 01       		.byte	0x1
 3535 0255 32       		.byte	0x32
 3536 0256 5F020000 		.4byte	0x25f
 3537 025a 02       		.uleb128 0x2
 3538 025b 91       		.byte	0x91
 3539 025c 5C       		.sleb128 -36
 3540 025d 00       		.byte	0
 3541 025e 00       		.byte	0
 3542 025f 0E       		.uleb128 0xe
 3543 0260 83000000 		.4byte	0x83
 3544 0264 6F020000 		.4byte	0x26f
 3545 0268 0F       		.uleb128 0xf
 3546 0269 76000000 		.4byte	0x76
 3547 026d 0B       		.byte	0xb
 3548 026e 00       		.byte	0
 3549 026f 10       		.uleb128 0x10
 3550 0270 E7020000 		.4byte	.LASF53
 3551 0274 01       		.byte	0x1
 3552 0275 A4       		.byte	0xa4
 3553 0276 00000000 		.4byte	.LFB64
 3554 027a 18000000 		.4byte	.LFE64-.LFB64
 3555 027e 01       		.uleb128 0x1
 3556 027f 9C       		.byte	0x9c
 3557 0280 93020000 		.4byte	0x293
 3558 0284 11       		.uleb128 0x11
 3559 0285 64697200 		.ascii	"dir\000"
 3560 0289 01       		.byte	0x1
 3561 028a A4       		.byte	0xa4
 3562 028b 95000000 		.4byte	0x95
 3563 028f 02       		.uleb128 0x2
 3564 0290 91       		.byte	0x91
 3565 0291 77       		.sleb128 -9
 3566 0292 00       		.byte	0
 3567 0293 10       		.uleb128 0x10
 3568 0294 0B030000 		.4byte	.LASF54
 3569 0298 01       		.byte	0x1
 3570 0299 A9       		.byte	0xa9
 3571 029a 00000000 		.4byte	.LFB65
 3572 029e 18000000 		.4byte	.LFE65-.LFB65
 3573 02a2 01       		.uleb128 0x1
 3574 02a3 9C       		.byte	0x9c
 3575 02a4 B7020000 		.4byte	0x2b7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 78


 3576 02a8 11       		.uleb128 0x11
 3577 02a9 64697200 		.ascii	"dir\000"
 3578 02ad 01       		.byte	0x1
 3579 02ae A9       		.byte	0xa9
 3580 02af 95000000 		.4byte	0x95
 3581 02b3 02       		.uleb128 0x2
 3582 02b4 91       		.byte	0x91
 3583 02b5 77       		.sleb128 -9
 3584 02b6 00       		.byte	0
 3585 02b7 12       		.uleb128 0x12
 3586 02b8 23060000 		.4byte	.LASF56
 3587 02bc 01       		.byte	0x1
 3588 02bd AE       		.byte	0xae
 3589 02be 00000000 		.4byte	.LFB66
 3590 02c2 54000000 		.4byte	.LFE66-.LFB66
 3591 02c6 01       		.uleb128 0x1
 3592 02c7 9C       		.byte	0x9c
 3593 02c8 DB020000 		.4byte	0x2db
 3594 02cc 13       		.uleb128 0x13
 3595 02cd 6D657300 		.ascii	"mes\000"
 3596 02d1 01       		.byte	0x1
 3597 02d2 B3       		.byte	0xb3
 3598 02d3 DB020000 		.4byte	0x2db
 3599 02d7 02       		.uleb128 0x2
 3600 02d8 91       		.byte	0x91
 3601 02d9 68       		.sleb128 -24
 3602 02da 00       		.byte	0
 3603 02db 0E       		.uleb128 0xe
 3604 02dc 83000000 		.4byte	0x83
 3605 02e0 EB020000 		.4byte	0x2eb
 3606 02e4 0F       		.uleb128 0xf
 3607 02e5 76000000 		.4byte	0x76
 3608 02e9 0F       		.byte	0xf
 3609 02ea 00       		.byte	0
 3610 02eb 10       		.uleb128 0x10
 3611 02ec 6A010000 		.4byte	.LASF57
 3612 02f0 01       		.byte	0x1
 3613 02f1 B8       		.byte	0xb8
 3614 02f2 00000000 		.4byte	.LFB67
 3615 02f6 54010000 		.4byte	.LFE67-.LFB67
 3616 02fa 01       		.uleb128 0x1
 3617 02fb 9C       		.byte	0x9c
 3618 02fc 6D030000 		.4byte	0x36d
 3619 0300 14       		.uleb128 0x14
 3620 0301 2D030000 		.4byte	.LASF58
 3621 0305 01       		.byte	0x1
 3622 0306 B8       		.byte	0xb8
 3623 0307 D8000000 		.4byte	0xd8
 3624 030b 02       		.uleb128 0x2
 3625 030c 91       		.byte	0x91
 3626 030d 48       		.sleb128 -56
 3627 030e 14       		.uleb128 0x14
 3628 030f 4D050000 		.4byte	.LASF59
 3629 0313 01       		.byte	0x1
 3630 0314 B8       		.byte	0xb8
 3631 0315 D8000000 		.4byte	0xd8
 3632 0319 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 79


 3633 031a 91       		.byte	0x91
 3634 031b 40       		.sleb128 -64
 3635 031c 0D       		.uleb128 0xd
 3636 031d 97010000 		.4byte	.LASF60
 3637 0321 01       		.byte	0x1
 3638 0322 CD       		.byte	0xcd
 3639 0323 95000000 		.4byte	0x95
 3640 0327 02       		.uleb128 0x2
 3641 0328 91       		.byte	0x91
 3642 0329 77       		.sleb128 -9
 3643 032a 0D       		.uleb128 0xd
 3644 032b 22040000 		.4byte	.LASF61
 3645 032f 01       		.byte	0x1
 3646 0330 CE       		.byte	0xce
 3647 0331 95000000 		.4byte	0x95
 3648 0335 02       		.uleb128 0x2
 3649 0336 91       		.byte	0x91
 3650 0337 76       		.sleb128 -10
 3651 0338 15       		.uleb128 0x15
 3652 0339 24000000 		.4byte	.LBB3
 3653 033d 46000000 		.4byte	.LBE3-.LBB3
 3654 0341 54030000 		.4byte	0x354
 3655 0345 13       		.uleb128 0x13
 3656 0346 6D657300 		.ascii	"mes\000"
 3657 034a 01       		.byte	0x1
 3658 034b BB       		.byte	0xbb
 3659 034c DB020000 		.4byte	0x2db
 3660 0350 02       		.uleb128 0x2
 3661 0351 91       		.byte	0x91
 3662 0352 64       		.sleb128 -28
 3663 0353 00       		.byte	0
 3664 0354 0C       		.uleb128 0xc
 3665 0355 8C000000 		.4byte	.LBB4
 3666 0359 46000000 		.4byte	.LBE4-.LBB4
 3667 035d 13       		.uleb128 0x13
 3668 035e 6D657300 		.ascii	"mes\000"
 3669 0362 01       		.byte	0x1
 3670 0363 C5       		.byte	0xc5
 3671 0364 DB020000 		.4byte	0x2db
 3672 0368 02       		.uleb128 0x2
 3673 0369 91       		.byte	0x91
 3674 036a 54       		.sleb128 -44
 3675 036b 00       		.byte	0
 3676 036c 00       		.byte	0
 3677 036d 16       		.uleb128 0x16
 3678 036e 34060000 		.4byte	.LASF62
 3679 0372 01       		.byte	0x1
 3680 0373 D4       		.byte	0xd4
 3681 0374 00000000 		.4byte	.LFB68
 3682 0378 18000000 		.4byte	.LFE68-.LFB68
 3683 037c 01       		.uleb128 0x1
 3684 037d 9C       		.byte	0x9c
 3685 037e 16       		.uleb128 0x16
 3686 037f 59070000 		.4byte	.LASF63
 3687 0383 01       		.byte	0x1
 3688 0384 DA       		.byte	0xda
 3689 0385 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 80


 3690 0389 18000000 		.4byte	.LFE69-.LFB69
 3691 038d 01       		.uleb128 0x1
 3692 038e 9C       		.byte	0x9c
 3693 038f 16       		.uleb128 0x16
 3694 0390 CB050000 		.4byte	.LASF64
 3695 0394 01       		.byte	0x1
 3696 0395 E0       		.byte	0xe0
 3697 0396 00000000 		.4byte	.LFB70
 3698 039a 22000000 		.4byte	.LFE70-.LFB70
 3699 039e 01       		.uleb128 0x1
 3700 039f 9C       		.byte	0x9c
 3701 03a0 16       		.uleb128 0x16
 3702 03a1 A2010000 		.4byte	.LASF65
 3703 03a5 01       		.byte	0x1
 3704 03a6 E7       		.byte	0xe7
 3705 03a7 00000000 		.4byte	.LFB71
 3706 03ab 1C000000 		.4byte	.LFE71-.LFB71
 3707 03af 01       		.uleb128 0x1
 3708 03b0 9C       		.byte	0x9c
 3709 03b1 16       		.uleb128 0x16
 3710 03b2 B0010000 		.4byte	.LASF66
 3711 03b6 01       		.byte	0x1
 3712 03b7 EC       		.byte	0xec
 3713 03b8 00000000 		.4byte	.LFB72
 3714 03bc 1C000000 		.4byte	.LFE72-.LFB72
 3715 03c0 01       		.uleb128 0x1
 3716 03c1 9C       		.byte	0x9c
 3717 03c2 16       		.uleb128 0x16
 3718 03c3 5F050000 		.4byte	.LASF67
 3719 03c7 01       		.byte	0x1
 3720 03c8 F1       		.byte	0xf1
 3721 03c9 00000000 		.4byte	.LFB73
 3722 03cd 1C000000 		.4byte	.LFE73-.LFB73
 3723 03d1 01       		.uleb128 0x1
 3724 03d2 9C       		.byte	0x9c
 3725 03d3 16       		.uleb128 0x16
 3726 03d4 02020000 		.4byte	.LASF68
 3727 03d8 01       		.byte	0x1
 3728 03d9 F6       		.byte	0xf6
 3729 03da 00000000 		.4byte	.LFB74
 3730 03de 38000000 		.4byte	.LFE74-.LFB74
 3731 03e2 01       		.uleb128 0x1
 3732 03e3 9C       		.byte	0x9c
 3733 03e4 16       		.uleb128 0x16
 3734 03e5 F4040000 		.4byte	.LASF69
 3735 03e9 01       		.byte	0x1
 3736 03ea FF       		.byte	0xff
 3737 03eb 00000000 		.4byte	.LFB75
 3738 03ef 38000000 		.4byte	.LFE75-.LFB75
 3739 03f3 01       		.uleb128 0x1
 3740 03f4 9C       		.byte	0x9c
 3741 03f5 17       		.uleb128 0x17
 3742 03f6 41010000 		.4byte	.LASF70
 3743 03fa 01       		.byte	0x1
 3744 03fb 0801     		.2byte	0x108
 3745 03fd 00000000 		.4byte	.LFB76
 3746 0401 14000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 81


 3747 0405 01       		.uleb128 0x1
 3748 0406 9C       		.byte	0x9c
 3749 0407 18       		.uleb128 0x18
 3750 0408 18020000 		.4byte	.LASF71
 3751 040c 01       		.byte	0x1
 3752 040d 0D01     		.2byte	0x10d
 3753 040f 00000000 		.4byte	.LFB77
 3754 0413 18000000 		.4byte	.LFE77-.LFB77
 3755 0417 01       		.uleb128 0x1
 3756 0418 9C       		.byte	0x9c
 3757 0419 18       		.uleb128 0x18
 3758 041a 56030000 		.4byte	.LASF72
 3759 041e 01       		.byte	0x1
 3760 041f 1101     		.2byte	0x111
 3761 0421 00000000 		.4byte	.LFB78
 3762 0425 18000000 		.4byte	.LFE78-.LFB78
 3763 0429 01       		.uleb128 0x1
 3764 042a 9C       		.byte	0x9c
 3765 042b 18       		.uleb128 0x18
 3766 042c 64070000 		.4byte	.LASF73
 3767 0430 01       		.byte	0x1
 3768 0431 1601     		.2byte	0x116
 3769 0433 00000000 		.4byte	.LFB79
 3770 0437 18000000 		.4byte	.LFE79-.LFB79
 3771 043b 01       		.uleb128 0x1
 3772 043c 9C       		.byte	0x9c
 3773 043d 19       		.uleb128 0x19
 3774 043e 86040000 		.4byte	.LASF74
 3775 0442 01       		.byte	0x1
 3776 0443 1B01     		.2byte	0x11b
 3777 0445 00000000 		.4byte	.LFB80
 3778 0449 98000000 		.4byte	.LFE80-.LFB80
 3779 044d 01       		.uleb128 0x1
 3780 044e 9C       		.byte	0x9c
 3781 044f 63040000 		.4byte	0x463
 3782 0453 1A       		.uleb128 0x1a
 3783 0454 FF030000 		.4byte	.LASF75
 3784 0458 01       		.byte	0x1
 3785 0459 1C01     		.2byte	0x11c
 3786 045b 83000000 		.4byte	0x83
 3787 045f 02       		.uleb128 0x2
 3788 0460 91       		.byte	0x91
 3789 0461 6F       		.sleb128 -17
 3790 0462 00       		.byte	0
 3791 0463 19       		.uleb128 0x19
 3792 0464 71040000 		.4byte	.LASF76
 3793 0468 01       		.byte	0x1
 3794 0469 3301     		.2byte	0x133
 3795 046b 00000000 		.4byte	.LFB81
 3796 046f F0000000 		.4byte	.LFE81-.LFB81
 3797 0473 01       		.uleb128 0x1
 3798 0474 9C       		.byte	0x9c
 3799 0475 89040000 		.4byte	0x489
 3800 0479 1A       		.uleb128 0x1a
 3801 047a FF030000 		.4byte	.LASF75
 3802 047e 01       		.byte	0x1
 3803 047f 3501     		.2byte	0x135
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 82


 3804 0481 83000000 		.4byte	0x83
 3805 0485 02       		.uleb128 0x2
 3806 0486 91       		.byte	0x91
 3807 0487 77       		.sleb128 -9
 3808 0488 00       		.byte	0
 3809 0489 1B       		.uleb128 0x1b
 3810 048a AF060000 		.4byte	.LASF77
 3811 048e 01       		.byte	0x1
 3812 048f 5B01     		.2byte	0x15b
 3813 0491 00000000 		.4byte	.LFB82
 3814 0495 0C000000 		.4byte	.LFE82-.LFB82
 3815 0499 01       		.uleb128 0x1
 3816 049a 9C       		.byte	0x9c
 3817 049b 1C       		.uleb128 0x1c
 3818 049c 71050000 		.4byte	.LASF78
 3819 04a0 01       		.byte	0x1
 3820 04a1 6101     		.2byte	0x161
 3821 04a3 00000000 		.4byte	.LFB83
 3822 04a7 2C000000 		.4byte	.LFE83-.LFB83
 3823 04ab 01       		.uleb128 0x1
 3824 04ac 9C       		.byte	0x9c
 3825 04ad 1C       		.uleb128 0x1c
 3826 04ae 5A010000 		.4byte	.LASF79
 3827 04b2 01       		.byte	0x1
 3828 04b3 6A01     		.2byte	0x16a
 3829 04b5 00000000 		.4byte	.LFB84
 3830 04b9 B8000000 		.4byte	.LFE84-.LFB84
 3831 04bd 01       		.uleb128 0x1
 3832 04be 9C       		.byte	0x9c
 3833 04bf 1C       		.uleb128 0x1c
 3834 04c0 E9010000 		.4byte	.LASF80
 3835 04c4 01       		.byte	0x1
 3836 04c5 7F01     		.2byte	0x17f
 3837 04c7 00000000 		.4byte	.LFB85
 3838 04cb 78000000 		.4byte	.LFE85-.LFB85
 3839 04cf 01       		.uleb128 0x1
 3840 04d0 9C       		.byte	0x9c
 3841 04d1 1B       		.uleb128 0x1b
 3842 04d2 EF050000 		.4byte	.LASF81
 3843 04d6 01       		.byte	0x1
 3844 04d7 9801     		.2byte	0x198
 3845 04d9 00000000 		.4byte	.LFB86
 3846 04dd 20000000 		.4byte	.LFE86-.LFB86
 3847 04e1 01       		.uleb128 0x1
 3848 04e2 9C       		.byte	0x9c
 3849 04e3 1C       		.uleb128 0x1c
 3850 04e4 5F020000 		.4byte	.LASF82
 3851 04e8 01       		.byte	0x1
 3852 04e9 9F01     		.2byte	0x19f
 3853 04eb 00000000 		.4byte	.LFB87
 3854 04ef 1C000000 		.4byte	.LFE87-.LFB87
 3855 04f3 01       		.uleb128 0x1
 3856 04f4 9C       		.byte	0x9c
 3857 04f5 1C       		.uleb128 0x1c
 3858 04f6 90000000 		.4byte	.LASF83
 3859 04fa 01       		.byte	0x1
 3860 04fb A801     		.2byte	0x1a8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 83


 3861 04fd 00000000 		.4byte	.LFB88
 3862 0501 0A000000 		.4byte	.LFE88-.LFB88
 3863 0505 01       		.uleb128 0x1
 3864 0506 9C       		.byte	0x9c
 3865 0507 1D       		.uleb128 0x1d
 3866 0508 26000000 		.4byte	.LASF84
 3867 050c 01       		.byte	0x1
 3868 050d AD01     		.2byte	0x1ad
 3869 050f 00000000 		.4byte	.LFB89
 3870 0513 30020000 		.4byte	.LFE89-.LFB89
 3871 0517 01       		.uleb128 0x1
 3872 0518 9C       		.byte	0x9c
 3873 0519 78050000 		.4byte	0x578
 3874 051d 1A       		.uleb128 0x1a
 3875 051e 3F020000 		.4byte	.LASF85
 3876 0522 01       		.byte	0x1
 3877 0523 BB01     		.2byte	0x1bb
 3878 0525 C5000000 		.4byte	0xc5
 3879 0529 02       		.uleb128 0x2
 3880 052a 91       		.byte	0x91
 3881 052b 5E       		.sleb128 -34
 3882 052c 1A       		.uleb128 0x1a
 3883 052d 07040000 		.4byte	.LASF86
 3884 0531 01       		.byte	0x1
 3885 0532 BC01     		.2byte	0x1bc
 3886 0534 C5000000 		.4byte	0xc5
 3887 0538 02       		.uleb128 0x2
 3888 0539 91       		.byte	0x91
 3889 053a 5C       		.sleb128 -36
 3890 053b 1A       		.uleb128 0x1a
 3891 053c BD020000 		.4byte	.LASF87
 3892 0540 01       		.byte	0x1
 3893 0541 BD01     		.2byte	0x1bd
 3894 0543 D8000000 		.4byte	0xd8
 3895 0547 02       		.uleb128 0x2
 3896 0548 91       		.byte	0x91
 3897 0549 68       		.sleb128 -24
 3898 054a 1A       		.uleb128 0x1a
 3899 054b 2B070000 		.4byte	.LASF88
 3900 054f 01       		.byte	0x1
 3901 0550 BE01     		.2byte	0x1be
 3902 0552 D8000000 		.4byte	0xd8
 3903 0556 02       		.uleb128 0x2
 3904 0557 91       		.byte	0x91
 3905 0558 60       		.sleb128 -32
 3906 0559 1A       		.uleb128 0x1a
 3907 055a 23030000 		.4byte	.LASF89
 3908 055e 01       		.byte	0x1
 3909 055f C701     		.2byte	0x1c7
 3910 0561 68000000 		.4byte	0x68
 3911 0565 02       		.uleb128 0x2
 3912 0566 91       		.byte	0x91
 3913 0567 58       		.sleb128 -40
 3914 0568 1A       		.uleb128 0x1a
 3915 0569 B8060000 		.4byte	.LASF90
 3916 056d 01       		.byte	0x1
 3917 056e C801     		.2byte	0x1c8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 84


 3918 0570 68000000 		.4byte	0x68
 3919 0574 02       		.uleb128 0x2
 3920 0575 91       		.byte	0x91
 3921 0576 54       		.sleb128 -44
 3922 0577 00       		.byte	0
 3923 0578 1D       		.uleb128 0x1d
 3924 0579 F8010000 		.4byte	.LASF91
 3925 057d 01       		.byte	0x1
 3926 057e D601     		.2byte	0x1d6
 3927 0580 00000000 		.4byte	.LFB90
 3928 0584 E8000000 		.4byte	.LFE90-.LFB90
 3929 0588 01       		.uleb128 0x1
 3930 0589 9C       		.byte	0x9c
 3931 058a BA050000 		.4byte	0x5ba
 3932 058e 1E       		.uleb128 0x1e
 3933 058f 6E6C00   		.ascii	"nl\000"
 3934 0592 01       		.byte	0x1
 3935 0593 DA01     		.2byte	0x1da
 3936 0595 95000000 		.4byte	0x95
 3937 0599 02       		.uleb128 0x2
 3938 059a 91       		.byte	0x91
 3939 059b 77       		.sleb128 -9
 3940 059c 1E       		.uleb128 0x1e
 3941 059d 6E7200   		.ascii	"nr\000"
 3942 05a0 01       		.byte	0x1
 3943 05a1 DB01     		.2byte	0x1db
 3944 05a3 95000000 		.4byte	0x95
 3945 05a7 02       		.uleb128 0x2
 3946 05a8 91       		.byte	0x91
 3947 05a9 76       		.sleb128 -10
 3948 05aa 1E       		.uleb128 0x1e
 3949 05ab 6D696400 		.ascii	"mid\000"
 3950 05af 01       		.byte	0x1
 3951 05b0 DC01     		.2byte	0x1dc
 3952 05b2 95000000 		.4byte	0x95
 3953 05b6 02       		.uleb128 0x2
 3954 05b7 91       		.byte	0x91
 3955 05b8 75       		.sleb128 -11
 3956 05b9 00       		.byte	0
 3957 05ba 1D       		.uleb128 0x1d
 3958 05bb E5000000 		.4byte	.LASF92
 3959 05bf 01       		.byte	0x1
 3960 05c0 FA01     		.2byte	0x1fa
 3961 05c2 00000000 		.4byte	.LFB91
 3962 05c6 48010000 		.4byte	.LFE91-.LFB91
 3963 05ca 01       		.uleb128 0x1
 3964 05cb 9C       		.byte	0x9c
 3965 05cc 18060000 		.4byte	0x618
 3966 05d0 1E       		.uleb128 0x1e
 3967 05d1 6E6C00   		.ascii	"nl\000"
 3968 05d4 01       		.byte	0x1
 3969 05d5 FE01     		.2byte	0x1fe
 3970 05d7 95000000 		.4byte	0x95
 3971 05db 02       		.uleb128 0x2
 3972 05dc 91       		.byte	0x91
 3973 05dd 77       		.sleb128 -9
 3974 05de 1E       		.uleb128 0x1e
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 85


 3975 05df 666C00   		.ascii	"fl\000"
 3976 05e2 01       		.byte	0x1
 3977 05e3 FF01     		.2byte	0x1ff
 3978 05e5 95000000 		.4byte	0x95
 3979 05e9 02       		.uleb128 0x2
 3980 05ea 91       		.byte	0x91
 3981 05eb 76       		.sleb128 -10
 3982 05ec 1E       		.uleb128 0x1e
 3983 05ed 6E7200   		.ascii	"nr\000"
 3984 05f0 01       		.byte	0x1
 3985 05f1 0002     		.2byte	0x200
 3986 05f3 95000000 		.4byte	0x95
 3987 05f7 02       		.uleb128 0x2
 3988 05f8 91       		.byte	0x91
 3989 05f9 75       		.sleb128 -11
 3990 05fa 1E       		.uleb128 0x1e
 3991 05fb 667200   		.ascii	"fr\000"
 3992 05fe 01       		.byte	0x1
 3993 05ff 0102     		.2byte	0x201
 3994 0601 95000000 		.4byte	0x95
 3995 0605 02       		.uleb128 0x2
 3996 0606 91       		.byte	0x91
 3997 0607 74       		.sleb128 -12
 3998 0608 1E       		.uleb128 0x1e
 3999 0609 6D696400 		.ascii	"mid\000"
 4000 060d 01       		.byte	0x1
 4001 060e 0202     		.2byte	0x202
 4002 0610 95000000 		.4byte	0x95
 4003 0614 02       		.uleb128 0x2
 4004 0615 91       		.byte	0x91
 4005 0616 73       		.sleb128 -13
 4006 0617 00       		.byte	0
 4007 0618 1D       		.uleb128 0x1d
 4008 0619 B3020000 		.4byte	.LASF93
 4009 061d 01       		.byte	0x1
 4010 061e 2B02     		.2byte	0x22b
 4011 0620 00000000 		.4byte	.LFB92
 4012 0624 C0000000 		.4byte	.LFE92-.LFB92
 4013 0628 01       		.uleb128 0x1
 4014 0629 9C       		.byte	0x9c
 4015 062a 66060000 		.4byte	0x666
 4016 062e 0C       		.uleb128 0xc
 4017 062f 0E000000 		.4byte	.LBB5
 4018 0633 8E000000 		.4byte	.LBE5-.LBB5
 4019 0637 1A       		.uleb128 0x1a
 4020 0638 31020000 		.4byte	.LASF94
 4021 063c 01       		.byte	0x1
 4022 063d 3402     		.2byte	0x234
 4023 063f D1000000 		.4byte	0xd1
 4024 0643 02       		.uleb128 0x2
 4025 0644 91       		.byte	0x91
 4026 0645 74       		.sleb128 -12
 4027 0646 1A       		.uleb128 0x1a
 4028 0647 38040000 		.4byte	.LASF95
 4029 064b 01       		.byte	0x1
 4030 064c 3502     		.2byte	0x235
 4031 064e C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 86


 4032 0652 02       		.uleb128 0x2
 4033 0653 91       		.byte	0x91
 4034 0654 72       		.sleb128 -14
 4035 0655 1A       		.uleb128 0x1a
 4036 0656 85020000 		.4byte	.LASF96
 4037 065a 01       		.byte	0x1
 4038 065b 3A02     		.2byte	0x23a
 4039 065d DB020000 		.4byte	0x2db
 4040 0661 02       		.uleb128 0x2
 4041 0662 91       		.byte	0x91
 4042 0663 60       		.sleb128 -32
 4043 0664 00       		.byte	0
 4044 0665 00       		.byte	0
 4045 0666 1D       		.uleb128 0x1d
 4046 0667 1A070000 		.4byte	.LASF97
 4047 066b 01       		.byte	0x1
 4048 066c 4102     		.2byte	0x241
 4049 066e 00000000 		.4byte	.LFB93
 4050 0672 B8000000 		.4byte	.LFE93-.LFB93
 4051 0676 01       		.uleb128 0x1
 4052 0677 9C       		.byte	0x9c
 4053 0678 96060000 		.4byte	0x696
 4054 067c 0C       		.uleb128 0xc
 4055 067d 0E000000 		.4byte	.LBB6
 4056 0681 86000000 		.4byte	.LBE6-.LBB6
 4057 0685 1A       		.uleb128 0x1a
 4058 0686 17050000 		.4byte	.LASF98
 4059 068a 01       		.byte	0x1
 4060 068b 4502     		.2byte	0x245
 4061 068d DB020000 		.4byte	0x2db
 4062 0691 02       		.uleb128 0x2
 4063 0692 91       		.byte	0x91
 4064 0693 68       		.sleb128 -24
 4065 0694 00       		.byte	0
 4066 0695 00       		.byte	0
 4067 0696 19       		.uleb128 0x19
 4068 0697 79050000 		.4byte	.LASF99
 4069 069b 01       		.byte	0x1
 4070 069c 5602     		.2byte	0x256
 4071 069e 00000000 		.4byte	.LFB94
 4072 06a2 4A000000 		.4byte	.LFE94-.LFB94
 4073 06a6 01       		.uleb128 0x1
 4074 06a7 9C       		.byte	0x9c
 4075 06a8 BC060000 		.4byte	0x6bc
 4076 06ac 1F       		.uleb128 0x1f
 4077 06ad 7A020000 		.4byte	.LASF100
 4078 06b1 01       		.byte	0x1
 4079 06b2 5602     		.2byte	0x256
 4080 06b4 BC060000 		.4byte	0x6bc
 4081 06b8 02       		.uleb128 0x2
 4082 06b9 91       		.byte	0x91
 4083 06ba 6C       		.sleb128 -20
 4084 06bb 00       		.byte	0
 4085 06bc 05       		.uleb128 0x5
 4086 06bd 04       		.byte	0x4
 4087 06be 95000000 		.4byte	0x95
 4088 06c2 20       		.uleb128 0x20
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 87


 4089 06c3 AA060000 		.4byte	.LASF101
 4090 06c7 01       		.byte	0x1
 4091 06c8 5F02     		.2byte	0x25f
 4092 06ca 68000000 		.4byte	0x68
 4093 06ce 00000000 		.4byte	.LFB95
 4094 06d2 1C010000 		.4byte	.LFE95-.LFB95
 4095 06d6 01       		.uleb128 0x1
 4096 06d7 9C       		.byte	0x9c
 4097 06d8 F6060000 		.4byte	0x6f6
 4098 06dc 0C       		.uleb128 0xc
 4099 06dd 5E000000 		.4byte	.LBB7
 4100 06e1 A2000000 		.4byte	.LBE7-.LBB7
 4101 06e5 1A       		.uleb128 0x1a
 4102 06e6 DC010000 		.4byte	.LASF102
 4103 06ea 01       		.byte	0x1
 4104 06eb AB02     		.2byte	0x2ab
 4105 06ed F6060000 		.4byte	0x6f6
 4106 06f1 02       		.uleb128 0x2
 4107 06f2 91       		.byte	0x91
 4108 06f3 70       		.sleb128 -16
 4109 06f4 00       		.byte	0
 4110 06f5 00       		.byte	0
 4111 06f6 0E       		.uleb128 0xe
 4112 06f7 95000000 		.4byte	0x95
 4113 06fb 06070000 		.4byte	0x706
 4114 06ff 0F       		.uleb128 0xf
 4115 0700 76000000 		.4byte	0x76
 4116 0704 04       		.byte	0x4
 4117 0705 00       		.byte	0
 4118 0706 19       		.uleb128 0x19
 4119 0707 52050000 		.4byte	.LASF103
 4120 070b 01       		.byte	0x1
 4121 070c DB02     		.2byte	0x2db
 4122 070e 00000000 		.4byte	.LFB96
 4123 0712 68000000 		.4byte	.LFE96-.LFB96
 4124 0716 01       		.uleb128 0x1
 4125 0717 9C       		.byte	0x9c
 4126 0718 43070000 		.4byte	0x743
 4127 071c 21       		.uleb128 0x21
 4128 071d 7300     		.ascii	"s\000"
 4129 071f 01       		.byte	0x1
 4130 0720 DB02     		.2byte	0x2db
 4131 0722 7D000000 		.4byte	0x7d
 4132 0726 02       		.uleb128 0x2
 4133 0727 91       		.byte	0x91
 4134 0728 6C       		.sleb128 -20
 4135 0729 0C       		.uleb128 0xc
 4136 072a 10000000 		.4byte	.LBB8
 4137 072e 48000000 		.4byte	.LBE8-.LBB8
 4138 0732 1E       		.uleb128 0x1e
 4139 0733 636E7400 		.ascii	"cnt\000"
 4140 0737 01       		.byte	0x1
 4141 0738 E202     		.2byte	0x2e2
 4142 073a AD000000 		.4byte	0xad
 4143 073e 02       		.uleb128 0x2
 4144 073f 91       		.byte	0x91
 4145 0740 74       		.sleb128 -12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 88


 4146 0741 00       		.byte	0
 4147 0742 00       		.byte	0
 4148 0743 19       		.uleb128 0x19
 4149 0744 6E060000 		.4byte	.LASF104
 4150 0748 01       		.byte	0x1
 4151 0749 F102     		.2byte	0x2f1
 4152 074b 00000000 		.4byte	.LFB97
 4153 074f 50000000 		.4byte	.LFE97-.LFB97
 4154 0753 01       		.uleb128 0x1
 4155 0754 9C       		.byte	0x9c
 4156 0755 80070000 		.4byte	0x780
 4157 0759 21       		.uleb128 0x21
 4158 075a 6300     		.ascii	"c\000"
 4159 075c 01       		.byte	0x1
 4160 075d F102     		.2byte	0x2f1
 4161 075f 83000000 		.4byte	0x83
 4162 0763 02       		.uleb128 0x2
 4163 0764 91       		.byte	0x91
 4164 0765 6F       		.sleb128 -17
 4165 0766 0C       		.uleb128 0xc
 4166 0767 12000000 		.4byte	.LBB9
 4167 076b 2E000000 		.4byte	.LBE9-.LBB9
 4168 076f 1E       		.uleb128 0x1e
 4169 0770 636E7400 		.ascii	"cnt\000"
 4170 0774 01       		.byte	0x1
 4171 0775 F502     		.2byte	0x2f5
 4172 0777 AD000000 		.4byte	0xad
 4173 077b 02       		.uleb128 0x2
 4174 077c 91       		.byte	0x91
 4175 077d 74       		.sleb128 -12
 4176 077e 00       		.byte	0
 4177 077f 00       		.byte	0
 4178 0780 1D       		.uleb128 0x1d
 4179 0781 90020000 		.4byte	.LASF105
 4180 0785 01       		.byte	0x1
 4181 0786 0203     		.2byte	0x302
 4182 0788 00000000 		.4byte	.LFB98
 4183 078c 3A000000 		.4byte	.LFE98-.LFB98
 4184 0790 01       		.uleb128 0x1
 4185 0791 9C       		.byte	0x9c
 4186 0792 A4070000 		.4byte	0x7a4
 4187 0796 1E       		.uleb128 0x1e
 4188 0797 6300     		.ascii	"c\000"
 4189 0799 01       		.byte	0x1
 4190 079a 0403     		.2byte	0x304
 4191 079c 95000000 		.4byte	0x95
 4192 07a0 02       		.uleb128 0x2
 4193 07a1 91       		.byte	0x91
 4194 07a2 77       		.sleb128 -9
 4195 07a3 00       		.byte	0
 4196 07a4 22       		.uleb128 0x22
 4197 07a5 0A050000 		.4byte	.LASF106
 4198 07a9 06       		.byte	0x6
 4199 07aa 9606     		.2byte	0x696
 4200 07ac B0070000 		.4byte	0x7b0
 4201 07b0 23       		.uleb128 0x23
 4202 07b1 8A000000 		.4byte	0x8a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 89


 4203 07b5 24       		.uleb128 0x24
 4204 07b6 747300   		.ascii	"ts\000"
 4205 07b9 05       		.byte	0x5
 4206 07ba 10       		.byte	0x10
 4207 07bb 95000000 		.4byte	0x95
 4208 07bf 05       		.uleb128 0x5
 4209 07c0 03       		.byte	0x3
 4210 07c1 00000000 		.4byte	ts
 4211 07c5 25       		.uleb128 0x25
 4212 07c6 FC050000 		.4byte	.LASF107
 4213 07ca 05       		.byte	0x5
 4214 07cb 11       		.byte	0x11
 4215 07cc A1000000 		.4byte	0xa1
 4216 07d0 05       		.uleb128 0x5
 4217 07d1 03       		.byte	0x3
 4218 07d2 00000000 		.4byte	ts_enc
 4219 07d6 25       		.uleb128 0x25
 4220 07d7 23050000 		.4byte	.LASF108
 4221 07db 05       		.byte	0x5
 4222 07dc 12       		.byte	0x12
 4223 07dd A1000000 		.4byte	0xa1
 4224 07e1 05       		.uleb128 0x5
 4225 07e2 03       		.byte	0x3
 4226 07e3 00000000 		.4byte	ts_update
 4227 07e7 25       		.uleb128 0x25
 4228 07e8 12040000 		.4byte	.LASF109
 4229 07ec 05       		.byte	0x5
 4230 07ed 13       		.byte	0x13
 4231 07ee A1000000 		.4byte	0xa1
 4232 07f2 05       		.uleb128 0x5
 4233 07f3 03       		.byte	0x3
 4234 07f4 00000000 		.4byte	ts_speed
 4235 07f8 25       		.uleb128 0x25
 4236 07f9 A8020000 		.4byte	.LASF110
 4237 07fd 05       		.byte	0x5
 4238 07fe 14       		.byte	0x14
 4239 07ff A1000000 		.4byte	0xa1
 4240 0803 05       		.uleb128 0x5
 4241 0804 03       		.byte	0x3
 4242 0805 00000000 		.4byte	ts_display
 4243 0809 25       		.uleb128 0x25
 4244 080a 49020000 		.4byte	.LASF111
 4245 080e 05       		.byte	0x5
 4246 080f 16       		.byte	0x16
 4247 0810 95000000 		.4byte	0x95
 4248 0814 05       		.uleb128 0x5
 4249 0815 03       		.byte	0x3
 4250 0816 00000000 		.4byte	flag_ts_enc
 4251 081a 25       		.uleb128 0x25
 4252 081b 22020000 		.4byte	.LASF112
 4253 081f 05       		.byte	0x5
 4254 0820 17       		.byte	0x17
 4255 0821 95000000 		.4byte	0x95
 4256 0825 05       		.uleb128 0x5
 4257 0826 03       		.byte	0x3
 4258 0827 00000000 		.4byte	flag_ts_update
 4259 082b 25       		.uleb128 0x25
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 90


 4260 082c 9C040000 		.4byte	.LASF113
 4261 0830 05       		.byte	0x5
 4262 0831 18       		.byte	0x18
 4263 0832 95000000 		.4byte	0x95
 4264 0836 05       		.uleb128 0x5
 4265 0837 03       		.byte	0x3
 4266 0838 00000000 		.4byte	flag_ts_speed
 4267 083c 25       		.uleb128 0x25
 4268 083d 0D060000 		.4byte	.LASF114
 4269 0841 05       		.byte	0x5
 4270 0842 19       		.byte	0x19
 4271 0843 95000000 		.4byte	0x95
 4272 0847 05       		.uleb128 0x5
 4273 0848 03       		.byte	0x3
 4274 0849 00000000 		.4byte	flag_ts_display
 4275 084d 25       		.uleb128 0x25
 4276 084e B9040000 		.4byte	.LASF115
 4277 0852 05       		.byte	0x5
 4278 0853 1C       		.byte	0x1c
 4279 0854 95000000 		.4byte	0x95
 4280 0858 05       		.uleb128 0x5
 4281 0859 03       		.byte	0x3
 4282 085a 00000000 		.4byte	flag_rx
 4283 085e 25       		.uleb128 0x25
 4284 085f D0010000 		.4byte	.LASF116
 4285 0863 05       		.byte	0x5
 4286 0864 1D       		.byte	0x1d
 4287 0865 95000000 		.4byte	0x95
 4288 0869 05       		.uleb128 0x5
 4289 086a 03       		.byte	0x3
 4290 086b 00000000 		.4byte	flag_packet
 4291 086f 25       		.uleb128 0x25
 4292 0870 38070000 		.4byte	.LASF117
 4293 0874 05       		.byte	0x5
 4294 0875 1E       		.byte	0x1e
 4295 0876 95000000 		.4byte	0x95
 4296 087a 05       		.uleb128 0x5
 4297 087b 03       		.byte	0x3
 4298 087c 00000000 		.4byte	flag_KB_string
 4299 0880 25       		.uleb128 0x25
 4300 0881 AA040000 		.4byte	.LASF118
 4301 0885 05       		.byte	0x5
 4302 0886 20       		.byte	0x20
 4303 0887 95000000 		.4byte	0x95
 4304 088b 05       		.uleb128 0x5
 4305 088c 03       		.byte	0x3
 4306 088d 00000000 		.4byte	dataready_flag
 4307 0891 25       		.uleb128 0x25
 4308 0892 FD000000 		.4byte	.LASF119
 4309 0896 05       		.byte	0x5
 4310 0897 22       		.byte	0x22
 4311 0898 95000000 		.4byte	0x95
 4312 089c 05       		.uleb128 0x5
 4313 089d 03       		.byte	0x3
 4314 089e 00000000 		.4byte	flag_rf_transmission_active
 4315 08a2 25       		.uleb128 0x25
 4316 08a3 19010000 		.4byte	.LASF120
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 91


 4317 08a7 05       		.byte	0x5
 4318 08a8 23       		.byte	0x23
 4319 08a9 95000000 		.4byte	0x95
 4320 08ad 05       		.uleb128 0x5
 4321 08ae 03       		.byte	0x3
 4322 08af 00000000 		.4byte	flag_print_rf
 4323 08b3 25       		.uleb128 0x25
 4324 08b4 58040000 		.4byte	.LASF121
 4325 08b8 05       		.byte	0x5
 4326 08b9 25       		.byte	0x25
 4327 08ba 95000000 		.4byte	0x95
 4328 08be 05       		.uleb128 0x5
 4329 08bf 03       		.byte	0x3
 4330 08c0 00000000 		.4byte	flag_receive_ADC
 4331 08c4 25       		.uleb128 0x25
 4332 08c5 CB040000 		.4byte	.LASF122
 4333 08c9 05       		.byte	0x5
 4334 08ca 26       		.byte	0x26
 4335 08cb C5000000 		.4byte	0xc5
 4336 08cf 05       		.uleb128 0x5
 4337 08d0 03       		.byte	0x3
 4338 08d1 00000000 		.4byte	adc_result
 4339 08d5 25       		.uleb128 0x25
 4340 08d6 00000000 		.4byte	.LASF123
 4341 08da 05       		.byte	0x5
 4342 08db 28       		.byte	0x28
 4343 08dc 95000000 		.4byte	0x95
 4344 08e0 05       		.uleb128 0x5
 4345 08e1 03       		.byte	0x3
 4346 08e2 00000000 		.4byte	direction
 4347 08e6 25       		.uleb128 0x25
 4348 08e7 D6040000 		.4byte	.LASF124
 4349 08eb 05       		.byte	0x5
 4350 08ec 2C       		.byte	0x2c
 4351 08ed 95000000 		.4byte	0x95
 4352 08f1 05       		.uleb128 0x5
 4353 08f2 03       		.byte	0x3
 4354 08f3 00000000 		.4byte	flag_calc_wheelspeed
 4355 08f7 25       		.uleb128 0x25
 4356 08f8 CD000000 		.4byte	.LASF125
 4357 08fc 05       		.byte	0x5
 4358 08fd 2D       		.byte	0x2d
 4359 08fe C5000000 		.4byte	0xc5
 4360 0902 05       		.uleb128 0x5
 4361 0903 03       		.byte	0x3
 4362 0904 00000000 		.4byte	quad_count1
 4363 0908 25       		.uleb128 0x25
 4364 0909 D9000000 		.4byte	.LASF126
 4365 090d 05       		.byte	0x5
 4366 090e 2E       		.byte	0x2e
 4367 090f C5000000 		.4byte	0xc5
 4368 0913 05       		.uleb128 0x5
 4369 0914 03       		.byte	0x3
 4370 0915 00000000 		.4byte	quad_count2
 4371 0919 25       		.uleb128 0x25
 4372 091a 4C060000 		.4byte	.LASF127
 4373 091e 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 92


 4374 091f 2F       		.byte	0x2f
 4375 0920 C5000000 		.4byte	0xc5
 4376 0924 05       		.uleb128 0x5
 4377 0925 03       		.byte	0x3
 4378 0926 00000000 		.4byte	last_quad_count1
 4379 092a 25       		.uleb128 0x25
 4380 092b 5D060000 		.4byte	.LASF128
 4381 092f 05       		.byte	0x5
 4382 0930 30       		.byte	0x30
 4383 0931 C5000000 		.4byte	0xc5
 4384 0935 05       		.uleb128 0x5
 4385 0936 03       		.byte	0x3
 4386 0937 00000000 		.4byte	last_quad_count2
 4387 093b 25       		.uleb128 0x25
 4388 093c 10000000 		.4byte	.LASF129
 4389 0940 05       		.byte	0x5
 4390 0941 31       		.byte	0x31
 4391 0942 C5000000 		.4byte	0xc5
 4392 0946 05       		.uleb128 0x5
 4393 0947 03       		.byte	0x3
 4394 0948 00000000 		.4byte	quad_diff1
 4395 094c 25       		.uleb128 0x25
 4396 094d 1B000000 		.4byte	.LASF130
 4397 0951 05       		.byte	0x5
 4398 0952 32       		.byte	0x32
 4399 0953 C5000000 		.4byte	0xc5
 4400 0957 05       		.uleb128 0x5
 4401 0958 03       		.byte	0x3
 4402 0959 00000000 		.4byte	quad_diff2
 4403 095d 25       		.uleb128 0x25
 4404 095e 44000000 		.4byte	.LASF131
 4405 0962 05       		.byte	0x5
 4406 0963 35       		.byte	0x35
 4407 0964 C5000000 		.4byte	0xc5
 4408 0968 05       		.uleb128 0x5
 4409 0969 03       		.byte	0x3
 4410 096a 00000000 		.4byte	start_turn_count
 4411 096e 25       		.uleb128 0x25
 4412 096f 8C040000 		.4byte	.LASF132
 4413 0973 05       		.byte	0x5
 4414 0974 38       		.byte	0x38
 4415 0975 C5000000 		.4byte	0xc5
 4416 0979 05       		.uleb128 0x5
 4417 097a 03       		.byte	0x3
 4418 097b 00000000 		.4byte	left_duty_cycle
 4419 097f 25       		.uleb128 0x25
 4420 0980 CF060000 		.4byte	.LASF133
 4421 0984 05       		.byte	0x5
 4422 0985 39       		.byte	0x39
 4423 0986 C5000000 		.4byte	0xc5
 4424 098a 05       		.uleb128 0x5
 4425 098b 03       		.byte	0x3
 4426 098c 00000000 		.4byte	right_duty_cycle
 4427 0990 25       		.uleb128 0x25
 4428 0991 36050000 		.4byte	.LASF134
 4429 0995 05       		.byte	0x5
 4430 0996 3C       		.byte	0x3c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 93


 4431 0997 C5000000 		.4byte	0xc5
 4432 099b 05       		.uleb128 0x5
 4433 099c 03       		.byte	0x3
 4434 099d 00000000 		.4byte	leftSpeedLimit
 4435 09a1 25       		.uleb128 0x25
 4436 09a2 D7020000 		.4byte	.LASF135
 4437 09a6 05       		.byte	0x5
 4438 09a7 3D       		.byte	0x3d
 4439 09a8 C5000000 		.4byte	0xc5
 4440 09ac 05       		.uleb128 0x5
 4441 09ad 03       		.byte	0x3
 4442 09ae 00000000 		.4byte	rightSpeedLimit
 4443 09b2 25       		.uleb128 0x25
 4444 09b3 03060000 		.4byte	.LASF136
 4445 09b7 05       		.byte	0x5
 4446 09b8 40       		.byte	0x40
 4447 09b9 95000000 		.4byte	0x95
 4448 09bd 05       		.uleb128 0x5
 4449 09be 03       		.byte	0x3
 4450 09bf 00000000 		.4byte	brakeFlag
 4451 09c3 25       		.uleb128 0x25
 4452 09c4 0F020000 		.4byte	.LASF137
 4453 09c8 05       		.byte	0x5
 4454 09c9 41       		.byte	0x41
 4455 09ca 95000000 		.4byte	0x95
 4456 09ce 05       		.uleb128 0x5
 4457 09cf 03       		.byte	0x3
 4458 09d0 00000000 		.4byte	portOpen
 4459 09d4 25       		.uleb128 0x25
 4460 09d5 38000000 		.4byte	.LASF138
 4461 09d9 05       		.byte	0x5
 4462 09da 44       		.byte	0x44
 4463 09db C5000000 		.4byte	0xc5
 4464 09df 05       		.uleb128 0x5
 4465 09e0 03       		.byte	0x3
 4466 09e1 00000000 		.4byte	prevVoltage
 4467 09e5 25       		.uleb128 0x25
 4468 09e6 A6000000 		.4byte	.LASF139
 4469 09ea 05       		.byte	0x5
 4470 09eb 45       		.byte	0x45
 4471 09ec C5000000 		.4byte	0xc5
 4472 09f0 05       		.uleb128 0x5
 4473 09f1 03       		.byte	0x3
 4474 09f2 00000000 		.4byte	prevVoltage2
 4475 09f6 0E       		.uleb128 0xe
 4476 09f7 83000000 		.4byte	0x83
 4477 09fb 060A0000 		.4byte	0xa06
 4478 09ff 0F       		.uleb128 0xf
 4479 0a00 76000000 		.4byte	0x76
 4480 0a04 3F       		.byte	0x3f
 4481 0a05 00       		.byte	0
 4482 0a06 25       		.uleb128 0x25
 4483 0a07 3E060000 		.4byte	.LASF140
 4484 0a0b 05       		.byte	0x5
 4485 0a0c 4B       		.byte	0x4b
 4486 0a0d F6090000 		.4byte	0x9f6
 4487 0a11 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 94


 4488 0a12 03       		.byte	0x3
 4489 0a13 00000000 		.4byte	displaystring
 4490 0a17 25       		.uleb128 0x25
 4491 0a18 EA050000 		.4byte	.LASF141
 4492 0a1c 05       		.byte	0x5
 4493 0a1d 4C       		.byte	0x4c
 4494 0a1e F6090000 		.4byte	0x9f6
 4495 0a22 05       		.uleb128 0x5
 4496 0a23 03       		.byte	0x3
 4497 0a24 00000000 		.4byte	line
 4498 0a28 25       		.uleb128 0x25
 4499 0a29 D6050000 		.4byte	.LASF142
 4500 0a2d 05       		.byte	0x5
 4501 0a2e 4C       		.byte	0x4c
 4502 0a2f F6090000 		.4byte	0x9f6
 4503 0a33 05       		.uleb128 0x5
 4504 0a34 03       		.byte	0x3
 4505 0a35 00000000 		.4byte	entry
 4506 0a39 0E       		.uleb128 0xe
 4507 0a3a 95000000 		.4byte	0x95
 4508 0a3e 490A0000 		.4byte	0xa49
 4509 0a42 0F       		.uleb128 0xf
 4510 0a43 76000000 		.4byte	0x76
 4511 0a47 3F       		.byte	0x3f
 4512 0a48 00       		.byte	0
 4513 0a49 25       		.uleb128 0x25
 4514 0a4a 73010000 		.4byte	.LASF143
 4515 0a4e 05       		.byte	0x5
 4516 0a4f 4D       		.byte	0x4d
 4517 0a50 390A0000 		.4byte	0xa39
 4518 0a54 05       		.uleb128 0x5
 4519 0a55 03       		.byte	0x3
 4520 0a56 00000000 		.4byte	usbBuffer
 4521 0a5a 25       		.uleb128 0x25
 4522 0a5b 41030000 		.4byte	.LASF144
 4523 0a5f 05       		.byte	0x5
 4524 0a60 62       		.byte	0x62
 4525 0a61 3C010000 		.4byte	0x13c
 4526 0a65 05       		.uleb128 0x5
 4527 0a66 03       		.byte	0x3
 4528 0a67 00000000 		.4byte	buffer_state
 4529 0a6b 25       		.uleb128 0x25
 4530 0a6c 7D000000 		.4byte	.LASF145
 4531 0a70 05       		.byte	0x5
 4532 0a71 63       		.byte	0x63
 4533 0a72 3C010000 		.4byte	0x13c
 4534 0a76 05       		.uleb128 0x5
 4535 0a77 03       		.byte	0x3
 4536 0a78 00000000 		.4byte	system_state
 4537 0a7c 25       		.uleb128 0x25
 4538 0a7d 66020000 		.4byte	.LASF146
 4539 0a81 05       		.byte	0x5
 4540 0a82 65       		.byte	0x65
 4541 0a83 E6000000 		.4byte	0xe6
 4542 0a87 05       		.uleb128 0x5
 4543 0a88 03       		.byte	0x3
 4544 0a89 00000000 		.4byte	prev_movement_state
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 95


 4545 0a8d 25       		.uleb128 0x25
 4546 0a8e 27010000 		.4byte	.LASF147
 4547 0a92 05       		.byte	0x5
 4548 0a93 66       		.byte	0x66
 4549 0a94 E6000000 		.4byte	0xe6
 4550 0a98 05       		.uleb128 0x5
 4551 0a99 03       		.byte	0x3
 4552 0a9a 00000000 		.4byte	movement_state
 4553 0a9e 25       		.uleb128 0x25
 4554 0a9f 62000000 		.4byte	.LASF148
 4555 0aa3 05       		.byte	0x5
 4556 0aa4 67       		.byte	0x67
 4557 0aa5 17010000 		.4byte	0x117
 4558 0aa9 05       		.uleb128 0x5
 4559 0aaa 03       		.byte	0x3
 4560 0aab 00000000 		.4byte	track_mode
 4561 0aaf 25       		.uleb128 0x25
 4562 0ab0 55020000 		.4byte	.LASF149
 4563 0ab4 05       		.byte	0x5
 4564 0ab5 69       		.byte	0x69
 4565 0ab6 95000000 		.4byte	0x95
 4566 0aba 05       		.uleb128 0x5
 4567 0abb 03       		.byte	0x3
 4568 0abc 00000000 		.4byte	byteCount
 4569 0ac0 0E       		.uleb128 0xe
 4570 0ac1 83000000 		.4byte	0x83
 4571 0ac5 D00A0000 		.4byte	0xad0
 4572 0ac9 0F       		.uleb128 0xf
 4573 0aca 76000000 		.4byte	0x76
 4574 0ace 01       		.byte	0x1
 4575 0acf 00       		.byte	0
 4576 0ad0 25       		.uleb128 0x25
 4577 0ad1 B9050000 		.4byte	.LASF150
 4578 0ad5 05       		.byte	0x5
 4579 0ad6 6A       		.byte	0x6a
 4580 0ad7 C00A0000 		.4byte	0xac0
 4581 0adb 05       		.uleb128 0x5
 4582 0adc 03       		.byte	0x3
 4583 0add 00000000 		.4byte	packet
 4584 0ae1 00       		.byte	0
 4585              		.section	.debug_abbrev,"",%progbits
 4586              	.Ldebug_abbrev0:
 4587 0000 01       		.uleb128 0x1
 4588 0001 11       		.uleb128 0x11
 4589 0002 01       		.byte	0x1
 4590 0003 25       		.uleb128 0x25
 4591 0004 0E       		.uleb128 0xe
 4592 0005 13       		.uleb128 0x13
 4593 0006 0B       		.uleb128 0xb
 4594 0007 03       		.uleb128 0x3
 4595 0008 0E       		.uleb128 0xe
 4596 0009 1B       		.uleb128 0x1b
 4597 000a 0E       		.uleb128 0xe
 4598 000b 55       		.uleb128 0x55
 4599 000c 17       		.uleb128 0x17
 4600 000d 11       		.uleb128 0x11
 4601 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 96


 4602 000f 10       		.uleb128 0x10
 4603 0010 17       		.uleb128 0x17
 4604 0011 00       		.byte	0
 4605 0012 00       		.byte	0
 4606 0013 02       		.uleb128 0x2
 4607 0014 24       		.uleb128 0x24
 4608 0015 00       		.byte	0
 4609 0016 0B       		.uleb128 0xb
 4610 0017 0B       		.uleb128 0xb
 4611 0018 3E       		.uleb128 0x3e
 4612 0019 0B       		.uleb128 0xb
 4613 001a 03       		.uleb128 0x3
 4614 001b 0E       		.uleb128 0xe
 4615 001c 00       		.byte	0
 4616 001d 00       		.byte	0
 4617 001e 03       		.uleb128 0x3
 4618 001f 16       		.uleb128 0x16
 4619 0020 00       		.byte	0
 4620 0021 03       		.uleb128 0x3
 4621 0022 0E       		.uleb128 0xe
 4622 0023 3A       		.uleb128 0x3a
 4623 0024 0B       		.uleb128 0xb
 4624 0025 3B       		.uleb128 0x3b
 4625 0026 0B       		.uleb128 0xb
 4626 0027 49       		.uleb128 0x49
 4627 0028 13       		.uleb128 0x13
 4628 0029 00       		.byte	0
 4629 002a 00       		.byte	0
 4630 002b 04       		.uleb128 0x4
 4631 002c 24       		.uleb128 0x24
 4632 002d 00       		.byte	0
 4633 002e 0B       		.uleb128 0xb
 4634 002f 0B       		.uleb128 0xb
 4635 0030 3E       		.uleb128 0x3e
 4636 0031 0B       		.uleb128 0xb
 4637 0032 03       		.uleb128 0x3
 4638 0033 08       		.uleb128 0x8
 4639 0034 00       		.byte	0
 4640 0035 00       		.byte	0
 4641 0036 05       		.uleb128 0x5
 4642 0037 0F       		.uleb128 0xf
 4643 0038 00       		.byte	0
 4644 0039 0B       		.uleb128 0xb
 4645 003a 0B       		.uleb128 0xb
 4646 003b 49       		.uleb128 0x49
 4647 003c 13       		.uleb128 0x13
 4648 003d 00       		.byte	0
 4649 003e 00       		.byte	0
 4650 003f 06       		.uleb128 0x6
 4651 0040 16       		.uleb128 0x16
 4652 0041 00       		.byte	0
 4653 0042 03       		.uleb128 0x3
 4654 0043 0E       		.uleb128 0xe
 4655 0044 3A       		.uleb128 0x3a
 4656 0045 0B       		.uleb128 0xb
 4657 0046 3B       		.uleb128 0x3b
 4658 0047 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 97


 4659 0048 49       		.uleb128 0x49
 4660 0049 13       		.uleb128 0x13
 4661 004a 00       		.byte	0
 4662 004b 00       		.byte	0
 4663 004c 07       		.uleb128 0x7
 4664 004d 04       		.uleb128 0x4
 4665 004e 01       		.byte	0x1
 4666 004f 03       		.uleb128 0x3
 4667 0050 0E       		.uleb128 0xe
 4668 0051 0B       		.uleb128 0xb
 4669 0052 0B       		.uleb128 0xb
 4670 0053 3A       		.uleb128 0x3a
 4671 0054 0B       		.uleb128 0xb
 4672 0055 3B       		.uleb128 0x3b
 4673 0056 0B       		.uleb128 0xb
 4674 0057 01       		.uleb128 0x1
 4675 0058 13       		.uleb128 0x13
 4676 0059 00       		.byte	0
 4677 005a 00       		.byte	0
 4678 005b 08       		.uleb128 0x8
 4679 005c 28       		.uleb128 0x28
 4680 005d 00       		.byte	0
 4681 005e 03       		.uleb128 0x3
 4682 005f 0E       		.uleb128 0xe
 4683 0060 1C       		.uleb128 0x1c
 4684 0061 0D       		.uleb128 0xd
 4685 0062 00       		.byte	0
 4686 0063 00       		.byte	0
 4687 0064 09       		.uleb128 0x9
 4688 0065 13       		.uleb128 0x13
 4689 0066 01       		.byte	0x1
 4690 0067 03       		.uleb128 0x3
 4691 0068 0E       		.uleb128 0xe
 4692 0069 0B       		.uleb128 0xb
 4693 006a 0B       		.uleb128 0xb
 4694 006b 3A       		.uleb128 0x3a
 4695 006c 0B       		.uleb128 0xb
 4696 006d 3B       		.uleb128 0x3b
 4697 006e 0B       		.uleb128 0xb
 4698 006f 01       		.uleb128 0x1
 4699 0070 13       		.uleb128 0x13
 4700 0071 00       		.byte	0
 4701 0072 00       		.byte	0
 4702 0073 0A       		.uleb128 0xa
 4703 0074 0D       		.uleb128 0xd
 4704 0075 00       		.byte	0
 4705 0076 03       		.uleb128 0x3
 4706 0077 0E       		.uleb128 0xe
 4707 0078 3A       		.uleb128 0x3a
 4708 0079 0B       		.uleb128 0xb
 4709 007a 3B       		.uleb128 0x3b
 4710 007b 0B       		.uleb128 0xb
 4711 007c 49       		.uleb128 0x49
 4712 007d 13       		.uleb128 0x13
 4713 007e 38       		.uleb128 0x38
 4714 007f 0B       		.uleb128 0xb
 4715 0080 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 98


 4716 0081 00       		.byte	0
 4717 0082 0B       		.uleb128 0xb
 4718 0083 2E       		.uleb128 0x2e
 4719 0084 01       		.byte	0x1
 4720 0085 3F       		.uleb128 0x3f
 4721 0086 19       		.uleb128 0x19
 4722 0087 03       		.uleb128 0x3
 4723 0088 0E       		.uleb128 0xe
 4724 0089 3A       		.uleb128 0x3a
 4725 008a 0B       		.uleb128 0xb
 4726 008b 3B       		.uleb128 0x3b
 4727 008c 0B       		.uleb128 0xb
 4728 008d 11       		.uleb128 0x11
 4729 008e 01       		.uleb128 0x1
 4730 008f 12       		.uleb128 0x12
 4731 0090 06       		.uleb128 0x6
 4732 0091 40       		.uleb128 0x40
 4733 0092 18       		.uleb128 0x18
 4734 0093 9742     		.uleb128 0x2117
 4735 0095 19       		.uleb128 0x19
 4736 0096 01       		.uleb128 0x1
 4737 0097 13       		.uleb128 0x13
 4738 0098 00       		.byte	0
 4739 0099 00       		.byte	0
 4740 009a 0C       		.uleb128 0xc
 4741 009b 0B       		.uleb128 0xb
 4742 009c 01       		.byte	0x1
 4743 009d 11       		.uleb128 0x11
 4744 009e 01       		.uleb128 0x1
 4745 009f 12       		.uleb128 0x12
 4746 00a0 06       		.uleb128 0x6
 4747 00a1 00       		.byte	0
 4748 00a2 00       		.byte	0
 4749 00a3 0D       		.uleb128 0xd
 4750 00a4 34       		.uleb128 0x34
 4751 00a5 00       		.byte	0
 4752 00a6 03       		.uleb128 0x3
 4753 00a7 0E       		.uleb128 0xe
 4754 00a8 3A       		.uleb128 0x3a
 4755 00a9 0B       		.uleb128 0xb
 4756 00aa 3B       		.uleb128 0x3b
 4757 00ab 0B       		.uleb128 0xb
 4758 00ac 49       		.uleb128 0x49
 4759 00ad 13       		.uleb128 0x13
 4760 00ae 02       		.uleb128 0x2
 4761 00af 18       		.uleb128 0x18
 4762 00b0 00       		.byte	0
 4763 00b1 00       		.byte	0
 4764 00b2 0E       		.uleb128 0xe
 4765 00b3 01       		.uleb128 0x1
 4766 00b4 01       		.byte	0x1
 4767 00b5 49       		.uleb128 0x49
 4768 00b6 13       		.uleb128 0x13
 4769 00b7 01       		.uleb128 0x1
 4770 00b8 13       		.uleb128 0x13
 4771 00b9 00       		.byte	0
 4772 00ba 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 99


 4773 00bb 0F       		.uleb128 0xf
 4774 00bc 21       		.uleb128 0x21
 4775 00bd 00       		.byte	0
 4776 00be 49       		.uleb128 0x49
 4777 00bf 13       		.uleb128 0x13
 4778 00c0 2F       		.uleb128 0x2f
 4779 00c1 0B       		.uleb128 0xb
 4780 00c2 00       		.byte	0
 4781 00c3 00       		.byte	0
 4782 00c4 10       		.uleb128 0x10
 4783 00c5 2E       		.uleb128 0x2e
 4784 00c6 01       		.byte	0x1
 4785 00c7 3F       		.uleb128 0x3f
 4786 00c8 19       		.uleb128 0x19
 4787 00c9 03       		.uleb128 0x3
 4788 00ca 0E       		.uleb128 0xe
 4789 00cb 3A       		.uleb128 0x3a
 4790 00cc 0B       		.uleb128 0xb
 4791 00cd 3B       		.uleb128 0x3b
 4792 00ce 0B       		.uleb128 0xb
 4793 00cf 27       		.uleb128 0x27
 4794 00d0 19       		.uleb128 0x19
 4795 00d1 11       		.uleb128 0x11
 4796 00d2 01       		.uleb128 0x1
 4797 00d3 12       		.uleb128 0x12
 4798 00d4 06       		.uleb128 0x6
 4799 00d5 40       		.uleb128 0x40
 4800 00d6 18       		.uleb128 0x18
 4801 00d7 9642     		.uleb128 0x2116
 4802 00d9 19       		.uleb128 0x19
 4803 00da 01       		.uleb128 0x1
 4804 00db 13       		.uleb128 0x13
 4805 00dc 00       		.byte	0
 4806 00dd 00       		.byte	0
 4807 00de 11       		.uleb128 0x11
 4808 00df 05       		.uleb128 0x5
 4809 00e0 00       		.byte	0
 4810 00e1 03       		.uleb128 0x3
 4811 00e2 08       		.uleb128 0x8
 4812 00e3 3A       		.uleb128 0x3a
 4813 00e4 0B       		.uleb128 0xb
 4814 00e5 3B       		.uleb128 0x3b
 4815 00e6 0B       		.uleb128 0xb
 4816 00e7 49       		.uleb128 0x49
 4817 00e8 13       		.uleb128 0x13
 4818 00e9 02       		.uleb128 0x2
 4819 00ea 18       		.uleb128 0x18
 4820 00eb 00       		.byte	0
 4821 00ec 00       		.byte	0
 4822 00ed 12       		.uleb128 0x12
 4823 00ee 2E       		.uleb128 0x2e
 4824 00ef 01       		.byte	0x1
 4825 00f0 3F       		.uleb128 0x3f
 4826 00f1 19       		.uleb128 0x19
 4827 00f2 03       		.uleb128 0x3
 4828 00f3 0E       		.uleb128 0xe
 4829 00f4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 100


 4830 00f5 0B       		.uleb128 0xb
 4831 00f6 3B       		.uleb128 0x3b
 4832 00f7 0B       		.uleb128 0xb
 4833 00f8 11       		.uleb128 0x11
 4834 00f9 01       		.uleb128 0x1
 4835 00fa 12       		.uleb128 0x12
 4836 00fb 06       		.uleb128 0x6
 4837 00fc 40       		.uleb128 0x40
 4838 00fd 18       		.uleb128 0x18
 4839 00fe 9642     		.uleb128 0x2116
 4840 0100 19       		.uleb128 0x19
 4841 0101 01       		.uleb128 0x1
 4842 0102 13       		.uleb128 0x13
 4843 0103 00       		.byte	0
 4844 0104 00       		.byte	0
 4845 0105 13       		.uleb128 0x13
 4846 0106 34       		.uleb128 0x34
 4847 0107 00       		.byte	0
 4848 0108 03       		.uleb128 0x3
 4849 0109 08       		.uleb128 0x8
 4850 010a 3A       		.uleb128 0x3a
 4851 010b 0B       		.uleb128 0xb
 4852 010c 3B       		.uleb128 0x3b
 4853 010d 0B       		.uleb128 0xb
 4854 010e 49       		.uleb128 0x49
 4855 010f 13       		.uleb128 0x13
 4856 0110 02       		.uleb128 0x2
 4857 0111 18       		.uleb128 0x18
 4858 0112 00       		.byte	0
 4859 0113 00       		.byte	0
 4860 0114 14       		.uleb128 0x14
 4861 0115 05       		.uleb128 0x5
 4862 0116 00       		.byte	0
 4863 0117 03       		.uleb128 0x3
 4864 0118 0E       		.uleb128 0xe
 4865 0119 3A       		.uleb128 0x3a
 4866 011a 0B       		.uleb128 0xb
 4867 011b 3B       		.uleb128 0x3b
 4868 011c 0B       		.uleb128 0xb
 4869 011d 49       		.uleb128 0x49
 4870 011e 13       		.uleb128 0x13
 4871 011f 02       		.uleb128 0x2
 4872 0120 18       		.uleb128 0x18
 4873 0121 00       		.byte	0
 4874 0122 00       		.byte	0
 4875 0123 15       		.uleb128 0x15
 4876 0124 0B       		.uleb128 0xb
 4877 0125 01       		.byte	0x1
 4878 0126 11       		.uleb128 0x11
 4879 0127 01       		.uleb128 0x1
 4880 0128 12       		.uleb128 0x12
 4881 0129 06       		.uleb128 0x6
 4882 012a 01       		.uleb128 0x1
 4883 012b 13       		.uleb128 0x13
 4884 012c 00       		.byte	0
 4885 012d 00       		.byte	0
 4886 012e 16       		.uleb128 0x16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 101


 4887 012f 2E       		.uleb128 0x2e
 4888 0130 00       		.byte	0
 4889 0131 3F       		.uleb128 0x3f
 4890 0132 19       		.uleb128 0x19
 4891 0133 03       		.uleb128 0x3
 4892 0134 0E       		.uleb128 0xe
 4893 0135 3A       		.uleb128 0x3a
 4894 0136 0B       		.uleb128 0xb
 4895 0137 3B       		.uleb128 0x3b
 4896 0138 0B       		.uleb128 0xb
 4897 0139 11       		.uleb128 0x11
 4898 013a 01       		.uleb128 0x1
 4899 013b 12       		.uleb128 0x12
 4900 013c 06       		.uleb128 0x6
 4901 013d 40       		.uleb128 0x40
 4902 013e 18       		.uleb128 0x18
 4903 013f 9642     		.uleb128 0x2116
 4904 0141 19       		.uleb128 0x19
 4905 0142 00       		.byte	0
 4906 0143 00       		.byte	0
 4907 0144 17       		.uleb128 0x17
 4908 0145 2E       		.uleb128 0x2e
 4909 0146 00       		.byte	0
 4910 0147 3F       		.uleb128 0x3f
 4911 0148 19       		.uleb128 0x19
 4912 0149 03       		.uleb128 0x3
 4913 014a 0E       		.uleb128 0xe
 4914 014b 3A       		.uleb128 0x3a
 4915 014c 0B       		.uleb128 0xb
 4916 014d 3B       		.uleb128 0x3b
 4917 014e 05       		.uleb128 0x5
 4918 014f 11       		.uleb128 0x11
 4919 0150 01       		.uleb128 0x1
 4920 0151 12       		.uleb128 0x12
 4921 0152 06       		.uleb128 0x6
 4922 0153 40       		.uleb128 0x40
 4923 0154 18       		.uleb128 0x18
 4924 0155 9642     		.uleb128 0x2116
 4925 0157 19       		.uleb128 0x19
 4926 0158 00       		.byte	0
 4927 0159 00       		.byte	0
 4928 015a 18       		.uleb128 0x18
 4929 015b 2E       		.uleb128 0x2e
 4930 015c 00       		.byte	0
 4931 015d 3F       		.uleb128 0x3f
 4932 015e 19       		.uleb128 0x19
 4933 015f 03       		.uleb128 0x3
 4934 0160 0E       		.uleb128 0xe
 4935 0161 3A       		.uleb128 0x3a
 4936 0162 0B       		.uleb128 0xb
 4937 0163 3B       		.uleb128 0x3b
 4938 0164 05       		.uleb128 0x5
 4939 0165 11       		.uleb128 0x11
 4940 0166 01       		.uleb128 0x1
 4941 0167 12       		.uleb128 0x12
 4942 0168 06       		.uleb128 0x6
 4943 0169 40       		.uleb128 0x40
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 102


 4944 016a 18       		.uleb128 0x18
 4945 016b 9742     		.uleb128 0x2117
 4946 016d 19       		.uleb128 0x19
 4947 016e 00       		.byte	0
 4948 016f 00       		.byte	0
 4949 0170 19       		.uleb128 0x19
 4950 0171 2E       		.uleb128 0x2e
 4951 0172 01       		.byte	0x1
 4952 0173 3F       		.uleb128 0x3f
 4953 0174 19       		.uleb128 0x19
 4954 0175 03       		.uleb128 0x3
 4955 0176 0E       		.uleb128 0xe
 4956 0177 3A       		.uleb128 0x3a
 4957 0178 0B       		.uleb128 0xb
 4958 0179 3B       		.uleb128 0x3b
 4959 017a 05       		.uleb128 0x5
 4960 017b 27       		.uleb128 0x27
 4961 017c 19       		.uleb128 0x19
 4962 017d 11       		.uleb128 0x11
 4963 017e 01       		.uleb128 0x1
 4964 017f 12       		.uleb128 0x12
 4965 0180 06       		.uleb128 0x6
 4966 0181 40       		.uleb128 0x40
 4967 0182 18       		.uleb128 0x18
 4968 0183 9642     		.uleb128 0x2116
 4969 0185 19       		.uleb128 0x19
 4970 0186 01       		.uleb128 0x1
 4971 0187 13       		.uleb128 0x13
 4972 0188 00       		.byte	0
 4973 0189 00       		.byte	0
 4974 018a 1A       		.uleb128 0x1a
 4975 018b 34       		.uleb128 0x34
 4976 018c 00       		.byte	0
 4977 018d 03       		.uleb128 0x3
 4978 018e 0E       		.uleb128 0xe
 4979 018f 3A       		.uleb128 0x3a
 4980 0190 0B       		.uleb128 0xb
 4981 0191 3B       		.uleb128 0x3b
 4982 0192 05       		.uleb128 0x5
 4983 0193 49       		.uleb128 0x49
 4984 0194 13       		.uleb128 0x13
 4985 0195 02       		.uleb128 0x2
 4986 0196 18       		.uleb128 0x18
 4987 0197 00       		.byte	0
 4988 0198 00       		.byte	0
 4989 0199 1B       		.uleb128 0x1b
 4990 019a 2E       		.uleb128 0x2e
 4991 019b 00       		.byte	0
 4992 019c 3F       		.uleb128 0x3f
 4993 019d 19       		.uleb128 0x19
 4994 019e 03       		.uleb128 0x3
 4995 019f 0E       		.uleb128 0xe
 4996 01a0 3A       		.uleb128 0x3a
 4997 01a1 0B       		.uleb128 0xb
 4998 01a2 3B       		.uleb128 0x3b
 4999 01a3 05       		.uleb128 0x5
 5000 01a4 27       		.uleb128 0x27
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 103


 5001 01a5 19       		.uleb128 0x19
 5002 01a6 11       		.uleb128 0x11
 5003 01a7 01       		.uleb128 0x1
 5004 01a8 12       		.uleb128 0x12
 5005 01a9 06       		.uleb128 0x6
 5006 01aa 40       		.uleb128 0x40
 5007 01ab 18       		.uleb128 0x18
 5008 01ac 9742     		.uleb128 0x2117
 5009 01ae 19       		.uleb128 0x19
 5010 01af 00       		.byte	0
 5011 01b0 00       		.byte	0
 5012 01b1 1C       		.uleb128 0x1c
 5013 01b2 2E       		.uleb128 0x2e
 5014 01b3 00       		.byte	0
 5015 01b4 3F       		.uleb128 0x3f
 5016 01b5 19       		.uleb128 0x19
 5017 01b6 03       		.uleb128 0x3
 5018 01b7 0E       		.uleb128 0xe
 5019 01b8 3A       		.uleb128 0x3a
 5020 01b9 0B       		.uleb128 0xb
 5021 01ba 3B       		.uleb128 0x3b
 5022 01bb 05       		.uleb128 0x5
 5023 01bc 27       		.uleb128 0x27
 5024 01bd 19       		.uleb128 0x19
 5025 01be 11       		.uleb128 0x11
 5026 01bf 01       		.uleb128 0x1
 5027 01c0 12       		.uleb128 0x12
 5028 01c1 06       		.uleb128 0x6
 5029 01c2 40       		.uleb128 0x40
 5030 01c3 18       		.uleb128 0x18
 5031 01c4 9642     		.uleb128 0x2116
 5032 01c6 19       		.uleb128 0x19
 5033 01c7 00       		.byte	0
 5034 01c8 00       		.byte	0
 5035 01c9 1D       		.uleb128 0x1d
 5036 01ca 2E       		.uleb128 0x2e
 5037 01cb 01       		.byte	0x1
 5038 01cc 3F       		.uleb128 0x3f
 5039 01cd 19       		.uleb128 0x19
 5040 01ce 03       		.uleb128 0x3
 5041 01cf 0E       		.uleb128 0xe
 5042 01d0 3A       		.uleb128 0x3a
 5043 01d1 0B       		.uleb128 0xb
 5044 01d2 3B       		.uleb128 0x3b
 5045 01d3 05       		.uleb128 0x5
 5046 01d4 11       		.uleb128 0x11
 5047 01d5 01       		.uleb128 0x1
 5048 01d6 12       		.uleb128 0x12
 5049 01d7 06       		.uleb128 0x6
 5050 01d8 40       		.uleb128 0x40
 5051 01d9 18       		.uleb128 0x18
 5052 01da 9642     		.uleb128 0x2116
 5053 01dc 19       		.uleb128 0x19
 5054 01dd 01       		.uleb128 0x1
 5055 01de 13       		.uleb128 0x13
 5056 01df 00       		.byte	0
 5057 01e0 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 104


 5058 01e1 1E       		.uleb128 0x1e
 5059 01e2 34       		.uleb128 0x34
 5060 01e3 00       		.byte	0
 5061 01e4 03       		.uleb128 0x3
 5062 01e5 08       		.uleb128 0x8
 5063 01e6 3A       		.uleb128 0x3a
 5064 01e7 0B       		.uleb128 0xb
 5065 01e8 3B       		.uleb128 0x3b
 5066 01e9 05       		.uleb128 0x5
 5067 01ea 49       		.uleb128 0x49
 5068 01eb 13       		.uleb128 0x13
 5069 01ec 02       		.uleb128 0x2
 5070 01ed 18       		.uleb128 0x18
 5071 01ee 00       		.byte	0
 5072 01ef 00       		.byte	0
 5073 01f0 1F       		.uleb128 0x1f
 5074 01f1 05       		.uleb128 0x5
 5075 01f2 00       		.byte	0
 5076 01f3 03       		.uleb128 0x3
 5077 01f4 0E       		.uleb128 0xe
 5078 01f5 3A       		.uleb128 0x3a
 5079 01f6 0B       		.uleb128 0xb
 5080 01f7 3B       		.uleb128 0x3b
 5081 01f8 05       		.uleb128 0x5
 5082 01f9 49       		.uleb128 0x49
 5083 01fa 13       		.uleb128 0x13
 5084 01fb 02       		.uleb128 0x2
 5085 01fc 18       		.uleb128 0x18
 5086 01fd 00       		.byte	0
 5087 01fe 00       		.byte	0
 5088 01ff 20       		.uleb128 0x20
 5089 0200 2E       		.uleb128 0x2e
 5090 0201 01       		.byte	0x1
 5091 0202 3F       		.uleb128 0x3f
 5092 0203 19       		.uleb128 0x19
 5093 0204 03       		.uleb128 0x3
 5094 0205 0E       		.uleb128 0xe
 5095 0206 3A       		.uleb128 0x3a
 5096 0207 0B       		.uleb128 0xb
 5097 0208 3B       		.uleb128 0x3b
 5098 0209 05       		.uleb128 0x5
 5099 020a 49       		.uleb128 0x49
 5100 020b 13       		.uleb128 0x13
 5101 020c 11       		.uleb128 0x11
 5102 020d 01       		.uleb128 0x1
 5103 020e 12       		.uleb128 0x12
 5104 020f 06       		.uleb128 0x6
 5105 0210 40       		.uleb128 0x40
 5106 0211 18       		.uleb128 0x18
 5107 0212 9642     		.uleb128 0x2116
 5108 0214 19       		.uleb128 0x19
 5109 0215 01       		.uleb128 0x1
 5110 0216 13       		.uleb128 0x13
 5111 0217 00       		.byte	0
 5112 0218 00       		.byte	0
 5113 0219 21       		.uleb128 0x21
 5114 021a 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 105


 5115 021b 00       		.byte	0
 5116 021c 03       		.uleb128 0x3
 5117 021d 08       		.uleb128 0x8
 5118 021e 3A       		.uleb128 0x3a
 5119 021f 0B       		.uleb128 0xb
 5120 0220 3B       		.uleb128 0x3b
 5121 0221 05       		.uleb128 0x5
 5122 0222 49       		.uleb128 0x49
 5123 0223 13       		.uleb128 0x13
 5124 0224 02       		.uleb128 0x2
 5125 0225 18       		.uleb128 0x18
 5126 0226 00       		.byte	0
 5127 0227 00       		.byte	0
 5128 0228 22       		.uleb128 0x22
 5129 0229 34       		.uleb128 0x34
 5130 022a 00       		.byte	0
 5131 022b 03       		.uleb128 0x3
 5132 022c 0E       		.uleb128 0xe
 5133 022d 3A       		.uleb128 0x3a
 5134 022e 0B       		.uleb128 0xb
 5135 022f 3B       		.uleb128 0x3b
 5136 0230 05       		.uleb128 0x5
 5137 0231 49       		.uleb128 0x49
 5138 0232 13       		.uleb128 0x13
 5139 0233 3F       		.uleb128 0x3f
 5140 0234 19       		.uleb128 0x19
 5141 0235 3C       		.uleb128 0x3c
 5142 0236 19       		.uleb128 0x19
 5143 0237 00       		.byte	0
 5144 0238 00       		.byte	0
 5145 0239 23       		.uleb128 0x23
 5146 023a 35       		.uleb128 0x35
 5147 023b 00       		.byte	0
 5148 023c 49       		.uleb128 0x49
 5149 023d 13       		.uleb128 0x13
 5150 023e 00       		.byte	0
 5151 023f 00       		.byte	0
 5152 0240 24       		.uleb128 0x24
 5153 0241 34       		.uleb128 0x34
 5154 0242 00       		.byte	0
 5155 0243 03       		.uleb128 0x3
 5156 0244 08       		.uleb128 0x8
 5157 0245 3A       		.uleb128 0x3a
 5158 0246 0B       		.uleb128 0xb
 5159 0247 3B       		.uleb128 0x3b
 5160 0248 0B       		.uleb128 0xb
 5161 0249 49       		.uleb128 0x49
 5162 024a 13       		.uleb128 0x13
 5163 024b 3F       		.uleb128 0x3f
 5164 024c 19       		.uleb128 0x19
 5165 024d 02       		.uleb128 0x2
 5166 024e 18       		.uleb128 0x18
 5167 024f 00       		.byte	0
 5168 0250 00       		.byte	0
 5169 0251 25       		.uleb128 0x25
 5170 0252 34       		.uleb128 0x34
 5171 0253 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 106


 5172 0254 03       		.uleb128 0x3
 5173 0255 0E       		.uleb128 0xe
 5174 0256 3A       		.uleb128 0x3a
 5175 0257 0B       		.uleb128 0xb
 5176 0258 3B       		.uleb128 0x3b
 5177 0259 0B       		.uleb128 0xb
 5178 025a 49       		.uleb128 0x49
 5179 025b 13       		.uleb128 0x13
 5180 025c 3F       		.uleb128 0x3f
 5181 025d 19       		.uleb128 0x19
 5182 025e 02       		.uleb128 0x2
 5183 025f 18       		.uleb128 0x18
 5184 0260 00       		.byte	0
 5185 0261 00       		.byte	0
 5186 0262 00       		.byte	0
 5187              		.section	.debug_aranges,"",%progbits
 5188 0000 34010000 		.4byte	0x134
 5189 0004 0200     		.2byte	0x2
 5190 0006 00000000 		.4byte	.Ldebug_info0
 5191 000a 04       		.byte	0x4
 5192 000b 00       		.byte	0
 5193 000c 0000     		.2byte	0
 5194 000e 0000     		.2byte	0
 5195 0010 00000000 		.4byte	.LFB63
 5196 0014 60010000 		.4byte	.LFE63-.LFB63
 5197 0018 00000000 		.4byte	.LFB64
 5198 001c 18000000 		.4byte	.LFE64-.LFB64
 5199 0020 00000000 		.4byte	.LFB65
 5200 0024 18000000 		.4byte	.LFE65-.LFB65
 5201 0028 00000000 		.4byte	.LFB66
 5202 002c 54000000 		.4byte	.LFE66-.LFB66
 5203 0030 00000000 		.4byte	.LFB67
 5204 0034 54010000 		.4byte	.LFE67-.LFB67
 5205 0038 00000000 		.4byte	.LFB68
 5206 003c 18000000 		.4byte	.LFE68-.LFB68
 5207 0040 00000000 		.4byte	.LFB69
 5208 0044 18000000 		.4byte	.LFE69-.LFB69
 5209 0048 00000000 		.4byte	.LFB70
 5210 004c 22000000 		.4byte	.LFE70-.LFB70
 5211 0050 00000000 		.4byte	.LFB71
 5212 0054 1C000000 		.4byte	.LFE71-.LFB71
 5213 0058 00000000 		.4byte	.LFB72
 5214 005c 1C000000 		.4byte	.LFE72-.LFB72
 5215 0060 00000000 		.4byte	.LFB73
 5216 0064 1C000000 		.4byte	.LFE73-.LFB73
 5217 0068 00000000 		.4byte	.LFB74
 5218 006c 38000000 		.4byte	.LFE74-.LFB74
 5219 0070 00000000 		.4byte	.LFB75
 5220 0074 38000000 		.4byte	.LFE75-.LFB75
 5221 0078 00000000 		.4byte	.LFB76
 5222 007c 14000000 		.4byte	.LFE76-.LFB76
 5223 0080 00000000 		.4byte	.LFB77
 5224 0084 18000000 		.4byte	.LFE77-.LFB77
 5225 0088 00000000 		.4byte	.LFB78
 5226 008c 18000000 		.4byte	.LFE78-.LFB78
 5227 0090 00000000 		.4byte	.LFB79
 5228 0094 18000000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 107


 5229 0098 00000000 		.4byte	.LFB80
 5230 009c 98000000 		.4byte	.LFE80-.LFB80
 5231 00a0 00000000 		.4byte	.LFB81
 5232 00a4 F0000000 		.4byte	.LFE81-.LFB81
 5233 00a8 00000000 		.4byte	.LFB82
 5234 00ac 0C000000 		.4byte	.LFE82-.LFB82
 5235 00b0 00000000 		.4byte	.LFB83
 5236 00b4 2C000000 		.4byte	.LFE83-.LFB83
 5237 00b8 00000000 		.4byte	.LFB84
 5238 00bc B8000000 		.4byte	.LFE84-.LFB84
 5239 00c0 00000000 		.4byte	.LFB85
 5240 00c4 78000000 		.4byte	.LFE85-.LFB85
 5241 00c8 00000000 		.4byte	.LFB86
 5242 00cc 20000000 		.4byte	.LFE86-.LFB86
 5243 00d0 00000000 		.4byte	.LFB87
 5244 00d4 1C000000 		.4byte	.LFE87-.LFB87
 5245 00d8 00000000 		.4byte	.LFB88
 5246 00dc 0A000000 		.4byte	.LFE88-.LFB88
 5247 00e0 00000000 		.4byte	.LFB89
 5248 00e4 30020000 		.4byte	.LFE89-.LFB89
 5249 00e8 00000000 		.4byte	.LFB90
 5250 00ec E8000000 		.4byte	.LFE90-.LFB90
 5251 00f0 00000000 		.4byte	.LFB91
 5252 00f4 48010000 		.4byte	.LFE91-.LFB91
 5253 00f8 00000000 		.4byte	.LFB92
 5254 00fc C0000000 		.4byte	.LFE92-.LFB92
 5255 0100 00000000 		.4byte	.LFB93
 5256 0104 B8000000 		.4byte	.LFE93-.LFB93
 5257 0108 00000000 		.4byte	.LFB94
 5258 010c 4A000000 		.4byte	.LFE94-.LFB94
 5259 0110 00000000 		.4byte	.LFB95
 5260 0114 1C010000 		.4byte	.LFE95-.LFB95
 5261 0118 00000000 		.4byte	.LFB96
 5262 011c 68000000 		.4byte	.LFE96-.LFB96
 5263 0120 00000000 		.4byte	.LFB97
 5264 0124 50000000 		.4byte	.LFE97-.LFB97
 5265 0128 00000000 		.4byte	.LFB98
 5266 012c 3A000000 		.4byte	.LFE98-.LFB98
 5267 0130 00000000 		.4byte	0
 5268 0134 00000000 		.4byte	0
 5269              		.section	.debug_ranges,"",%progbits
 5270              	.Ldebug_ranges0:
 5271 0000 00000000 		.4byte	.LFB63
 5272 0004 60010000 		.4byte	.LFE63
 5273 0008 00000000 		.4byte	.LFB64
 5274 000c 18000000 		.4byte	.LFE64
 5275 0010 00000000 		.4byte	.LFB65
 5276 0014 18000000 		.4byte	.LFE65
 5277 0018 00000000 		.4byte	.LFB66
 5278 001c 54000000 		.4byte	.LFE66
 5279 0020 00000000 		.4byte	.LFB67
 5280 0024 54010000 		.4byte	.LFE67
 5281 0028 00000000 		.4byte	.LFB68
 5282 002c 18000000 		.4byte	.LFE68
 5283 0030 00000000 		.4byte	.LFB69
 5284 0034 18000000 		.4byte	.LFE69
 5285 0038 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 108


 5286 003c 22000000 		.4byte	.LFE70
 5287 0040 00000000 		.4byte	.LFB71
 5288 0044 1C000000 		.4byte	.LFE71
 5289 0048 00000000 		.4byte	.LFB72
 5290 004c 1C000000 		.4byte	.LFE72
 5291 0050 00000000 		.4byte	.LFB73
 5292 0054 1C000000 		.4byte	.LFE73
 5293 0058 00000000 		.4byte	.LFB74
 5294 005c 38000000 		.4byte	.LFE74
 5295 0060 00000000 		.4byte	.LFB75
 5296 0064 38000000 		.4byte	.LFE75
 5297 0068 00000000 		.4byte	.LFB76
 5298 006c 14000000 		.4byte	.LFE76
 5299 0070 00000000 		.4byte	.LFB77
 5300 0074 18000000 		.4byte	.LFE77
 5301 0078 00000000 		.4byte	.LFB78
 5302 007c 18000000 		.4byte	.LFE78
 5303 0080 00000000 		.4byte	.LFB79
 5304 0084 18000000 		.4byte	.LFE79
 5305 0088 00000000 		.4byte	.LFB80
 5306 008c 98000000 		.4byte	.LFE80
 5307 0090 00000000 		.4byte	.LFB81
 5308 0094 F0000000 		.4byte	.LFE81
 5309 0098 00000000 		.4byte	.LFB82
 5310 009c 0C000000 		.4byte	.LFE82
 5311 00a0 00000000 		.4byte	.LFB83
 5312 00a4 2C000000 		.4byte	.LFE83
 5313 00a8 00000000 		.4byte	.LFB84
 5314 00ac B8000000 		.4byte	.LFE84
 5315 00b0 00000000 		.4byte	.LFB85
 5316 00b4 78000000 		.4byte	.LFE85
 5317 00b8 00000000 		.4byte	.LFB86
 5318 00bc 20000000 		.4byte	.LFE86
 5319 00c0 00000000 		.4byte	.LFB87
 5320 00c4 1C000000 		.4byte	.LFE87
 5321 00c8 00000000 		.4byte	.LFB88
 5322 00cc 0A000000 		.4byte	.LFE88
 5323 00d0 00000000 		.4byte	.LFB89
 5324 00d4 30020000 		.4byte	.LFE89
 5325 00d8 00000000 		.4byte	.LFB90
 5326 00dc E8000000 		.4byte	.LFE90
 5327 00e0 00000000 		.4byte	.LFB91
 5328 00e4 48010000 		.4byte	.LFE91
 5329 00e8 00000000 		.4byte	.LFB92
 5330 00ec C0000000 		.4byte	.LFE92
 5331 00f0 00000000 		.4byte	.LFB93
 5332 00f4 B8000000 		.4byte	.LFE93
 5333 00f8 00000000 		.4byte	.LFB94
 5334 00fc 4A000000 		.4byte	.LFE94
 5335 0100 00000000 		.4byte	.LFB95
 5336 0104 1C010000 		.4byte	.LFE95
 5337 0108 00000000 		.4byte	.LFB96
 5338 010c 68000000 		.4byte	.LFE96
 5339 0110 00000000 		.4byte	.LFB97
 5340 0114 50000000 		.4byte	.LFE97
 5341 0118 00000000 		.4byte	.LFB98
 5342 011c 3A000000 		.4byte	.LFE98
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 109


 5343 0120 00000000 		.4byte	0
 5344 0124 00000000 		.4byte	0
 5345              		.section	.debug_line,"",%progbits
 5346              	.Ldebug_line0:
 5347 0000 D9050000 		.section	.debug_str,"MS",%progbits,1
 5347      02005501 
 5347      00000201 
 5347      FB0E0D00 
 5347      01010101 
 5348              	.LASF123:
 5349 0000 64697265 		.ascii	"direction\000"
 5349      6374696F 
 5349      6E00
 5350              	.LASF23:
 5351 000a 52545552 		.ascii	"RTURN\000"
 5351      4E00
 5352              	.LASF129:
 5353 0010 71756164 		.ascii	"quad_diff1\000"
 5353      5F646966 
 5353      663100
 5354              	.LASF130:
 5355 001b 71756164 		.ascii	"quad_diff2\000"
 5355      5F646966 
 5355      663200
 5356              	.LASF84:
 5357 0026 51756164 		.ascii	"Quad_Dec_response\000"
 5357      5F446563 
 5357      5F726573 
 5357      706F6E73 
 5357      6500
 5358              	.LASF138:
 5359 0038 70726576 		.ascii	"prevVoltage\000"
 5359      566F6C74 
 5359      61676500 
 5360              	.LASF131:
 5361 0044 73746172 		.ascii	"start_turn_count\000"
 5361      745F7475 
 5361      726E5F63 
 5361      6F756E74 
 5361      00
 5362              	.LASF8:
 5363 0055 756E7369 		.ascii	"unsigned int\000"
 5363      676E6564 
 5363      20696E74 
 5363      00
 5364              	.LASF148:
 5365 0062 74726163 		.ascii	"track_mode\000"
 5365      6B5F6D6F 
 5365      646500
 5366              	.LASF11:
 5367 006d 5F5F696E 		.ascii	"__int32_t\000"
 5367      7433325F 
 5367      7400
 5368              	.LASF17:
 5369 0077 696E7431 		.ascii	"int16\000"
 5369      3600
 5370              	.LASF145:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 110


 5371 007d 73797374 		.ascii	"system_state\000"
 5371      656D5F73 
 5371      74617465 
 5371      00
 5372              	.LASF22:
 5373 008a 4C545552 		.ascii	"LTURN\000"
 5373      4E00
 5374              	.LASF83:
 5375 0090 6973725F 		.ascii	"isr_adcTimer\000"
 5375      61646354 
 5375      696D6572 
 5375      00
 5376              	.LASF25:
 5377 009d 54524143 		.ascii	"TRACKING\000"
 5377      4B494E47 
 5377      00
 5378              	.LASF139:
 5379 00a6 70726576 		.ascii	"prevVoltage2\000"
 5379      566F6C74 
 5379      61676532 
 5379      00
 5380              	.LASF50:
 5381 00b3 7061636B 		.ascii	"packet_bytes\000"
 5381      65745F62 
 5381      79746573 
 5381      00
 5382              	.LASF46:
 5383 00c0 67325F78 		.ascii	"g2_xpos\000"
 5383      706F7300 
 5384              	.LASF28:
 5385 00c8 6D6F6465 		.ascii	"mode\000"
 5385      00
 5386              	.LASF125:
 5387 00cd 71756164 		.ascii	"quad_count1\000"
 5387      5F636F75 
 5387      6E743100 
 5388              	.LASF126:
 5389 00d9 71756164 		.ascii	"quad_count2\000"
 5389      5F636F75 
 5389      6E743200 
 5390              	.LASF92:
 5391 00e5 74726163 		.ascii	"trackLineU\000"
 5391      6B4C696E 
 5391      655500
 5392              	.LASF32:
 5393 00f0 53515541 		.ascii	"SQUARE_TRACK\000"
 5393      52455F54 
 5393      5241434B 
 5393      00
 5394              	.LASF119:
 5395 00fd 666C6167 		.ascii	"flag_rf_transmission_active\000"
 5395      5F72665F 
 5395      7472616E 
 5395      736D6973 
 5395      73696F6E 
 5396              	.LASF120:
 5397 0119 666C6167 		.ascii	"flag_print_rf\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 111


 5397      5F707269 
 5397      6E745F72 
 5397      6600
 5398              	.LASF147:
 5399 0127 6D6F7665 		.ascii	"movement_state\000"
 5399      6D656E74 
 5399      5F737461 
 5399      746500
 5400              	.LASF26:
 5401 0136 54524143 		.ascii	"TRACKING_U\000"
 5401      4B494E47 
 5401      5F5500
 5402              	.LASF70:
 5403 0141 696E6974 		.ascii	"initForward\000"
 5403      466F7277 
 5403      61726400 
 5404              	.LASF49:
 5405 014d 67325F64 		.ascii	"g2_direction\000"
 5405      69726563 
 5405      74696F6E 
 5405      00
 5406              	.LASF79:
 5407 015a 6973725F 		.ascii	"isr_quad1\000"
 5407      71756164 
 5407      3100
 5408              	.LASF18:
 5409 0164 666C6F61 		.ascii	"float\000"
 5409      7400
 5410              	.LASF57:
 5411 016a 73657453 		.ascii	"setSpeed\000"
 5411      70656564 
 5411      00
 5412              	.LASF143:
 5413 0173 75736242 		.ascii	"usbBuffer\000"
 5413      75666665 
 5413      7200
 5414              	.LASF34:
 5415 017d 696E6465 		.ascii	"index\000"
 5415      7800
 5416              	.LASF21:
 5417 0183 44524956 		.ascii	"DRIVE\000"
 5417      4500
 5418              	.LASF52:
 5419 0189 73747269 		.ascii	"string_packet\000"
 5419      6E675F70 
 5419      61636B65 
 5419      7400
 5420              	.LASF60:
 5421 0197 636F756E 		.ascii	"countsLeft\000"
 5421      74734C65 
 5421      667400
 5422              	.LASF65:
 5423 01a2 64726976 		.ascii	"driveForwards\000"
 5423      65466F72 
 5423      77617264 
 5423      7300
 5424              	.LASF66:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 112


 5425 01b0 7475726E 		.ascii	"turnLeft\000"
 5425      4C656674 
 5425      00
 5426              	.LASF7:
 5427 01b9 6C6F6E67 		.ascii	"long long unsigned int\000"
 5427      206C6F6E 
 5427      6720756E 
 5427      7369676E 
 5427      65642069 
 5428              	.LASF116:
 5429 01d0 666C6167 		.ascii	"flag_packet\000"
 5429      5F706163 
 5429      6B657400 
 5430              	.LASF102:
 5431 01dc 66726F6E 		.ascii	"frontSensors\000"
 5431      7453656E 
 5431      736F7273 
 5431      00
 5432              	.LASF80:
 5433 01e9 6973725F 		.ascii	"isr_turn_timer\000"
 5433      7475726E 
 5433      5F74696D 
 5433      657200
 5434              	.LASF91:
 5435 01f8 74726163 		.ascii	"trackLine\000"
 5435      6B4C696E 
 5435      6500
 5436              	.LASF68:
 5437 0202 696E6974 		.ascii	"initTurnLeft\000"
 5437      5475726E 
 5437      4C656674 
 5437      00
 5438              	.LASF137:
 5439 020f 706F7274 		.ascii	"portOpen\000"
 5439      4F70656E 
 5439      00
 5440              	.LASF71:
 5441 0218 696E6974 		.ascii	"initBrake\000"
 5441      4272616B 
 5441      6500
 5442              	.LASF112:
 5443 0222 666C6167 		.ascii	"flag_ts_update\000"
 5443      5F74735F 
 5443      75706461 
 5443      746500
 5444              	.LASF94:
 5445 0231 7363616C 		.ascii	"scalingFactor\000"
 5445      696E6746 
 5445      6163746F 
 5445      7200
 5446              	.LASF85:
 5447 023f 6C656674 		.ascii	"leftSpeed\000"
 5447      53706565 
 5447      6400
 5448              	.LASF111:
 5449 0249 666C6167 		.ascii	"flag_ts_enc\000"
 5449      5F74735F 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 113


 5449      656E6300 
 5450              	.LASF149:
 5451 0255 62797465 		.ascii	"byteCount\000"
 5451      436F756E 
 5451      7400
 5452              	.LASF82:
 5453 025f 62757474 		.ascii	"button\000"
 5453      6F6E00
 5454              	.LASF146:
 5455 0266 70726576 		.ascii	"prev_movement_state\000"
 5455      5F6D6F76 
 5455      656D656E 
 5455      745F7374 
 5455      61746500 
 5456              	.LASF100:
 5457 027a 73656E73 		.ascii	"sensorVals\000"
 5457      6F725661 
 5457      6C7300
 5458              	.LASF96:
 5459 0285 72657375 		.ascii	"result_str\000"
 5459      6C745F73 
 5459      747200
 5460              	.LASF105:
 5461 0290 75617274 		.ascii	"uart_set_PWM\000"
 5461      5F736574 
 5461      5F50574D 
 5461      00
 5462              	.LASF36:
 5463 029d 726F626F 		.ascii	"robot_ypos\000"
 5463      745F7970 
 5463      6F7300
 5464              	.LASF110:
 5465 02a8 74735F64 		.ascii	"ts_display\000"
 5465      6973706C 
 5465      617900
 5466              	.LASF93:
 5467 02b3 7072696E 		.ascii	"print_ADC\000"
 5467      745F4144 
 5467      4300
 5468              	.LASF87:
 5469 02bd 7363616C 		.ascii	"scalingLeft\000"
 5469      696E674C 
 5469      65667400 
 5470              	.LASF10:
 5471 02c9 63686172 		.ascii	"char\000"
 5471      00
 5472              	.LASF40:
 5473 02ce 67305F73 		.ascii	"g0_speed\000"
 5473      70656564 
 5473      00
 5474              	.LASF135:
 5475 02d7 72696768 		.ascii	"rightSpeedLimit\000"
 5475      74537065 
 5475      65644C69 
 5475      6D697400 
 5476              	.LASF53:
 5477 02e7 7365744C 		.ascii	"setLeftDir\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 114


 5477      65667444 
 5477      697200
 5478              	.LASF14:
 5479 02f2 75696E74 		.ascii	"uint16\000"
 5479      313600
 5480              	.LASF16:
 5481 02f9 696E7438 		.ascii	"int8\000"
 5481      00
 5482              	.LASF45:
 5483 02fe 67315F64 		.ascii	"g1_direction\000"
 5483      69726563 
 5483      74696F6E 
 5483      00
 5484              	.LASF54:
 5485 030b 73657452 		.ascii	"setRightDir\000"
 5485      69676874 
 5485      44697200 
 5486              	.LASF30:
 5487 0317 43555256 		.ascii	"CURVE_TRACK\000"
 5487      455F5452 
 5487      41434B00 
 5488              	.LASF89:
 5489 0323 696E7465 		.ascii	"interCalc\000"
 5489      7243616C 
 5489      6300
 5490              	.LASF58:
 5491 032d 72696768 		.ascii	"right\000"
 5491      7400
 5492              	.LASF6:
 5493 0333 6C6F6E67 		.ascii	"long long int\000"
 5493      206C6F6E 
 5493      6720696E 
 5493      7400
 5494              	.LASF144:
 5495 0341 62756666 		.ascii	"buffer_state\000"
 5495      65725F73 
 5495      74617465 
 5495      00
 5496              	.LASF42:
 5497 034e 67315F78 		.ascii	"g1_xpos\000"
 5497      706F7300 
 5498              	.LASF72:
 5499 0356 696E6974 		.ascii	"initTrack\000"
 5499      54726163 
 5499      6B00
 5500              	.LASF151:
 5501 0360 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5501      4320342E 
 5501      392E3320 
 5501      32303135 
 5501      30333033 
 5502 0393 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 5502      20726576 
 5502      6973696F 
 5502      6E203232 
 5502      31323230 
 5503 03c6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 115


 5503      66756E63 
 5503      74696F6E 
 5503      2D736563 
 5503      74696F6E 
 5504              	.LASF48:
 5505 03ee 67325F73 		.ascii	"g2_speed\000"
 5505      70656564 
 5505      00
 5506              	.LASF39:
 5507 03f7 67305F79 		.ascii	"g0_ypos\000"
 5507      706F7300 
 5508              	.LASF75:
 5509 03ff 72665F63 		.ascii	"rf_char\000"
 5509      68617200 
 5510              	.LASF86:
 5511 0407 72696768 		.ascii	"rightSpeed\000"
 5511      74537065 
 5511      656400
 5512              	.LASF109:
 5513 0412 74735F73 		.ascii	"ts_speed\000"
 5513      70656564 
 5513      00
 5514              	.LASF15:
 5515 041b 75696E74 		.ascii	"uint32\000"
 5515      333200
 5516              	.LASF61:
 5517 0422 636F756E 		.ascii	"countsRight\000"
 5517      74735269 
 5517      67687400 
 5518              	.LASF154:
 5519 042e 64617461 		.ascii	"data_main\000"
 5519      5F6D6169 
 5519      6E00
 5520              	.LASF95:
 5521 0438 636F6E76 		.ascii	"converted_val\000"
 5521      65727465 
 5521      645F7661 
 5521      6C00
 5522              	.LASF33:
 5523 0446 72737369 		.ascii	"rssi\000"
 5523      00
 5524              	.LASF41:
 5525 044b 67305F64 		.ascii	"g0_direction\000"
 5525      69726563 
 5525      74696F6E 
 5525      00
 5526              	.LASF121:
 5527 0458 666C6167 		.ascii	"flag_receive_ADC\000"
 5527      5F726563 
 5527      65697665 
 5527      5F414443 
 5527      00
 5528              	.LASF24:
 5529 0469 53544F50 		.ascii	"STOPPED\000"
 5529      50454400 
 5530              	.LASF76:
 5531 0471 42545F72 		.ascii	"BT_rxInt\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 116


 5531      78496E74 
 5531      00
 5532              	.LASF20:
 5533 047a 6C6F6E67 		.ascii	"long double\000"
 5533      20646F75 
 5533      626C6500 
 5534              	.LASF74:
 5535 0486 7278496E 		.ascii	"rxInt\000"
 5535      7400
 5536              	.LASF132:
 5537 048c 6C656674 		.ascii	"left_duty_cycle\000"
 5537      5F647574 
 5537      795F6379 
 5537      636C6500 
 5538              	.LASF113:
 5539 049c 666C6167 		.ascii	"flag_ts_speed\000"
 5539      5F74735F 
 5539      73706565 
 5539      6400
 5540              	.LASF118:
 5541 04aa 64617461 		.ascii	"dataready_flag\000"
 5541      72656164 
 5541      795F666C 
 5541      616700
 5542              	.LASF115:
 5543 04b9 666C6167 		.ascii	"flag_rx\000"
 5543      5F727800 
 5544              	.LASF2:
 5545 04c1 73686F72 		.ascii	"short int\000"
 5545      7420696E 
 5545      7400
 5546              	.LASF122:
 5547 04cb 6164635F 		.ascii	"adc_result\000"
 5547      72657375 
 5547      6C7400
 5548              	.LASF124:
 5549 04d6 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 5549      5F63616C 
 5549      635F7768 
 5549      65656C73 
 5549      70656564 
 5550              	.LASF4:
 5551 04eb 6C6F6E67 		.ascii	"long int\000"
 5551      20696E74 
 5551      00
 5552              	.LASF69:
 5553 04f4 696E6974 		.ascii	"initTurnRight\000"
 5553      5475726E 
 5553      52696768 
 5553      7400
 5554              	.LASF31:
 5555 0502 555F5452 		.ascii	"U_TRACK\000"
 5555      41434B00 
 5556              	.LASF106:
 5557 050a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5557      52784275 
 5557      66666572 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 117


 5557      00
 5558              	.LASF98:
 5559 0517 7072696E 		.ascii	"printString\000"
 5559      74537472 
 5559      696E6700 
 5560              	.LASF108:
 5561 0523 74735F75 		.ascii	"ts_update\000"
 5561      70646174 
 5561      6500
 5562              	.LASF29:
 5563 052d 4E4F5F54 		.ascii	"NO_TRACK\000"
 5563      5241434B 
 5563      00
 5564              	.LASF134:
 5565 0536 6C656674 		.ascii	"leftSpeedLimit\000"
 5565      53706565 
 5565      644C696D 
 5565      697400
 5566              	.LASF47:
 5567 0545 67325F79 		.ascii	"g2_ypos\000"
 5567      706F7300 
 5568              	.LASF59:
 5569 054d 6C656674 		.ascii	"left\000"
 5569      00
 5570              	.LASF103:
 5571 0552 75736250 		.ascii	"usbPutString\000"
 5571      75745374 
 5571      72696E67 
 5571      00
 5572              	.LASF67:
 5573 055f 7475726E 		.ascii	"turnRight\000"
 5573      52696768 
 5573      7400
 5574              	.LASF43:
 5575 0569 67315F79 		.ascii	"g1_ypos\000"
 5575      706F7300 
 5576              	.LASF78:
 5577 0571 6164635F 		.ascii	"adc_isr\000"
 5577      69737200 
 5578              	.LASF99:
 5579 0579 72656164 		.ascii	"readFrontSensors\000"
 5579      46726F6E 
 5579      7453656E 
 5579      736F7273 
 5579      00
 5580              	.LASF9:
 5581 058a 73697A65 		.ascii	"sizetype\000"
 5581      74797065 
 5581      00
 5582              	.LASF5:
 5583 0593 6C6F6E67 		.ascii	"long unsigned int\000"
 5583      20756E73 
 5583      69676E65 
 5583      6420696E 
 5583      7400
 5584              	.LASF51:
 5585 05a5 62797465 		.ascii	"byte_packet\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 118


 5585      5F706163 
 5585      6B657400 
 5586              	.LASF12:
 5587 05b1 696E7433 		.ascii	"int32_t\000"
 5587      325F7400 
 5588              	.LASF150:
 5589 05b9 7061636B 		.ascii	"packet\000"
 5589      657400
 5590              	.LASF35:
 5591 05c0 726F626F 		.ascii	"robot_xpos\000"
 5591      745F7870 
 5591      6F7300
 5592              	.LASF64:
 5593 05cb 6272616B 		.ascii	"brakeMotor\000"
 5593      654D6F74 
 5593      6F7200
 5594              	.LASF142:
 5595 05d6 656E7472 		.ascii	"entry\000"
 5595      7900
 5596              	.LASF1:
 5597 05dc 756E7369 		.ascii	"unsigned char\000"
 5597      676E6564 
 5597      20636861 
 5597      7200
 5598              	.LASF141:
 5599 05ea 6C696E65 		.ascii	"line\000"
 5599      00
 5600              	.LASF81:
 5601 05ef 53746F70 		.ascii	"Stop_on_line\000"
 5601      5F6F6E5F 
 5601      6C696E65 
 5601      00
 5602              	.LASF107:
 5603 05fc 74735F65 		.ascii	"ts_enc\000"
 5603      6E6300
 5604              	.LASF136:
 5605 0603 6272616B 		.ascii	"brakeFlag\000"
 5605      65466C61 
 5605      6700
 5606              	.LASF114:
 5607 060d 666C6167 		.ascii	"flag_ts_display\000"
 5607      5F74735F 
 5607      64697370 
 5607      6C617900 
 5608              	.LASF27:
 5609 061d 73746174 		.ascii	"state\000"
 5609      6500
 5610              	.LASF56:
 5611 0623 72657665 		.ascii	"reverseDirection\000"
 5611      72736544 
 5611      69726563 
 5611      74696F6E 
 5611      00
 5612              	.LASF62:
 5613 0634 6272616B 		.ascii	"brakeLeft\000"
 5613      654C6566 
 5613      7400
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 119


 5614              	.LASF140:
 5615 063e 64697370 		.ascii	"displaystring\000"
 5615      6C617973 
 5615      7472696E 
 5615      6700
 5616              	.LASF127:
 5617 064c 6C617374 		.ascii	"last_quad_count1\000"
 5617      5F717561 
 5617      645F636F 
 5617      756E7431 
 5617      00
 5618              	.LASF128:
 5619 065d 6C617374 		.ascii	"last_quad_count2\000"
 5619      5F717561 
 5619      645F636F 
 5619      756E7432 
 5619      00
 5620              	.LASF104:
 5621 066e 75736250 		.ascii	"usbPutChar\000"
 5621      75744368 
 5621      617200
 5622              	.LASF0:
 5623 0679 7369676E 		.ascii	"signed char\000"
 5623      65642063 
 5623      68617200 
 5624              	.LASF3:
 5625 0685 73686F72 		.ascii	"short unsigned int\000"
 5625      7420756E 
 5625      7369676E 
 5625      65642069 
 5625      6E7400
 5626              	.LASF37:
 5627 0698 726F626F 		.ascii	"robot_orientation\000"
 5627      745F6F72 
 5627      69656E74 
 5627      6174696F 
 5627      6E00
 5628              	.LASF101:
 5629 06aa 6D61696E 		.ascii	"main\000"
 5629      00
 5630              	.LASF77:
 5631 06af 42545F74 		.ascii	"BT_txInt\000"
 5631      78496E74 
 5631      00
 5632              	.LASF90:
 5633 06b8 6E657874 		.ascii	"nextSpeed\000"
 5633      53706565 
 5633      6400
 5634              	.LASF13:
 5635 06c2 75696E74 		.ascii	"uint8\000"
 5635      3800
 5636              	.LASF19:
 5637 06c8 646F7562 		.ascii	"double\000"
 5637      6C6500
 5638              	.LASF133:
 5639 06cf 72696768 		.ascii	"right_duty_cycle\000"
 5639      745F6475 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc2iDOkg.s 			page 120


 5639      74795F63 
 5639      79636C65 
 5639      00
 5640              	.LASF55:
 5641 06e0 68616E64 		.ascii	"handle_rx_binary\000"
 5641      6C655F72 
 5641      785F6269 
 5641      6E617279 
 5641      00
 5642              	.LASF153:
 5643 06f1 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 5643      70315C43 
 5643      53333031 
 5643      2D546561 
 5643      6D2D5265 
 5644              	.LASF97:
 5645 071a 7072696E 		.ascii	"print_RF\000"
 5645      745F5246 
 5645      00
 5646              	.LASF38:
 5647 0723 67305F78 		.ascii	"g0_xpos\000"
 5647      706F7300 
 5648              	.LASF88:
 5649 072b 7363616C 		.ascii	"scalingRight\000"
 5649      696E6752 
 5649      69676874 
 5649      00
 5650              	.LASF117:
 5651 0738 666C6167 		.ascii	"flag_KB_string\000"
 5651      5F4B425F 
 5651      73747269 
 5651      6E6700
 5652              	.LASF44:
 5653 0747 67315F73 		.ascii	"g1_speed\000"
 5653      70656564 
 5653      00
 5654              	.LASF152:
 5655 0750 2E5C6D61 		.ascii	".\\main.c\000"
 5655      696E2E63 
 5655      00
 5656              	.LASF63:
 5657 0759 6272616B 		.ascii	"brakeRight\000"
 5657      65526967 
 5657      687400
 5658              	.LASF73:
 5659 0764 696E6974 		.ascii	"initTrackU\000"
 5659      54726163 
 5659      6B5500
 5660              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
