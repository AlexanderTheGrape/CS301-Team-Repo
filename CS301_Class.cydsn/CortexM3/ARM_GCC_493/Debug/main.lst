ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.comm	LostFlag,1,1
 107              		.global	direction
 108              		.type	direction, %object
 109              		.size	direction, 1
 110              	direction:
 111 0014 00       		.space	1
 112              		.global	BIN_ENABLED
 113              		.type	BIN_ENABLED, %object
 114              		.size	BIN_ENABLED, 1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 3


 115              	BIN_ENABLED:
 116 0015 00       		.space	1
 117              		.global	BT_ENABLED
 118              		.data
 119              		.type	BT_ENABLED, %object
 120              		.size	BT_ENABLED, 1
 121              	BT_ENABLED:
 122 0001 01       		.byte	1
 123              		.global	flag_calc_wheelspeed
 124              		.bss
 125              		.type	flag_calc_wheelspeed, %object
 126              		.size	flag_calc_wheelspeed, 1
 127              	flag_calc_wheelspeed:
 128 0016 00       		.space	1
 129              		.global	quad_count1
 130 0017 00       		.align	1
 131              		.type	quad_count1, %object
 132              		.size	quad_count1, 2
 133              	quad_count1:
 134 0018 0000     		.space	2
 135              		.global	quad_count2
 136              		.align	1
 137              		.type	quad_count2, %object
 138              		.size	quad_count2, 2
 139              	quad_count2:
 140 001a 0000     		.space	2
 141              		.global	last_quad_count1
 142              		.align	1
 143              		.type	last_quad_count1, %object
 144              		.size	last_quad_count1, 2
 145              	last_quad_count1:
 146 001c 0000     		.space	2
 147              		.global	last_quad_count2
 148              		.align	1
 149              		.type	last_quad_count2, %object
 150              		.size	last_quad_count2, 2
 151              	last_quad_count2:
 152 001e 0000     		.space	2
 153              		.global	quad_diff1
 154              		.align	1
 155              		.type	quad_diff1, %object
 156              		.size	quad_diff1, 2
 157              	quad_diff1:
 158 0020 0000     		.space	2
 159              		.global	quad_diff2
 160              		.align	1
 161              		.type	quad_diff2, %object
 162              		.size	quad_diff2, 2
 163              	quad_diff2:
 164 0022 0000     		.space	2
 165              		.global	deadzone
 166              		.type	deadzone, %object
 167              		.size	deadzone, 1
 168              	deadzone:
 169 0024 00       		.space	1
 170              		.global	start_turn_count
 171 0025 00       		.align	1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 4


 172              		.type	start_turn_count, %object
 173              		.size	start_turn_count, 2
 174              	start_turn_count:
 175 0026 0000     		.space	2
 176              		.global	left_duty_cycle
 177              		.align	1
 178              		.type	left_duty_cycle, %object
 179              		.size	left_duty_cycle, 2
 180              	left_duty_cycle:
 181 0028 0000     		.space	2
 182              		.global	right_duty_cycle
 183              		.align	1
 184              		.type	right_duty_cycle, %object
 185              		.size	right_duty_cycle, 2
 186              	right_duty_cycle:
 187 002a 0000     		.space	2
 188              		.global	leftSpeedLimit
 189              		.align	1
 190              		.type	leftSpeedLimit, %object
 191              		.size	leftSpeedLimit, 2
 192              	leftSpeedLimit:
 193 002c 0000     		.space	2
 194              		.global	rightSpeedLimit
 195              		.align	1
 196              		.type	rightSpeedLimit, %object
 197              		.size	rightSpeedLimit, 2
 198              	rightSpeedLimit:
 199 002e 0000     		.space	2
 200              		.global	target_distance_cm
 201              		.data
 202              		.align	1
 203              		.type	target_distance_cm, %object
 204              		.size	target_distance_cm, 2
 205              	target_distance_cm:
 206 0002 6400     		.short	100
 207              		.global	accum_dist
 208              		.bss
 209              		.align	1
 210              		.type	accum_dist, %object
 211              		.size	accum_dist, 2
 212              	accum_dist:
 213 0030 0000     		.space	2
 214              		.global	target_distance_quad
 215              		.align	1
 216              		.type	target_distance_quad, %object
 217              		.size	target_distance_quad, 2
 218              	target_distance_quad:
 219 0032 0000     		.space	2
 220              		.global	reached_target
 221              		.type	reached_target, %object
 222              		.size	reached_target, 1
 223              	reached_target:
 224 0034 00       		.space	1
 225              		.global	overshot_target
 226              		.type	overshot_target, %object
 227              		.size	overshot_target, 1
 228              	overshot_target:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 5


 229 0035 00       		.space	1
 230              		.global	quad_per_cm
 231              		.data
 232              		.align	2
 233              		.type	quad_per_cm, %object
 234              		.size	quad_per_cm, 4
 235              	quad_per_cm:
 236 0004 F0A73241 		.word	1093838832
 237              		.global	initial_pos_valid
 238              		.bss
 239              		.type	initial_pos_valid, %object
 240              		.size	initial_pos_valid, 1
 241              	initial_pos_valid:
 242 0036 00       		.space	1
 243              		.global	initial_x_pos
 244 0037 00       		.align	1
 245              		.type	initial_x_pos, %object
 246              		.size	initial_x_pos, 2
 247              	initial_x_pos:
 248 0038 0000     		.space	2
 249              		.global	initial_y_pos
 250              		.align	1
 251              		.type	initial_y_pos, %object
 252              		.size	initial_y_pos, 2
 253              	initial_y_pos:
 254 003a 0000     		.space	2
 255              		.comm	brakeFlag,1,1
 256              		.global	portOpen
 257              		.data
 258              		.type	portOpen, %object
 259              		.size	portOpen, 1
 260              	portOpen:
 261 0008 01       		.byte	1
 262              		.comm	frontSensors,5,4
 263              		.comm	leftOn,1,1
 264              		.comm	rightOn,1,1
 265              		.comm	min_turn_quad,2,2
 266              		.comm	max_turn_quad,2,2
 267              		.comm	prevVoltage,2,2
 268              		.comm	prevVoltage2,2,2
 269              		.global	displaystring
 270 0009 000000   		.align	2
 271              		.type	displaystring, %object
 272              		.size	displaystring, 64
 273              	displaystring:
 274 000c 43533330 		.ascii	"CS301 2016\012\000"
 274      31203230 
 274      31360A00 
 275 0018 00000000 		.space	52
 275      00000000 
 275      00000000 
 275      00000000 
 275      00000000 
 276              		.comm	line,64,4
 277              		.comm	entry,64,4
 278              		.comm	usbBuffer,64,4
 279              		.comm	buffer_state,32,4
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 6


 280              		.comm	system_state,32,4
 281              		.global	prev_movement_state
 282              		.type	prev_movement_state, %object
 283              		.size	prev_movement_state, 1
 284              	prev_movement_state:
 285 004c 03       		.byte	3
 286              		.global	movement_state
 287              		.type	movement_state, %object
 288              		.size	movement_state, 1
 289              	movement_state:
 290 004d 03       		.byte	3
 291              		.global	track_mode
 292              		.bss
 293              		.type	track_mode, %object
 294              		.size	track_mode, 1
 295              	track_mode:
 296 003c 00       		.space	1
 297              		.global	byteCount
 298              		.type	byteCount, %object
 299              		.size	byteCount, 1
 300              	byteCount:
 301 003d 00       		.space	1
 302              		.comm	packet,2,4
 303              		.global	speed
 304              		.data
 305 004e 0000     		.align	3
 306              		.type	speed, %object
 307              		.size	speed, 8
 308              	speed:
 309 0050 00000000 		.word	0
 310 0054 00002E40 		.word	1076756480
 311              		.comm	tracked_direction,4,4
 312              		.global	instructions
 313              		.bss
 314 003e 0000     		.align	2
 315              		.type	instructions, %object
 316              		.size	instructions, 800
 317              	instructions:
 318 0040 00000000 		.space	800
 318      00000000 
 318      00000000 
 318      00000000 
 318      00000000 
 319              		.global	instructionCount
 320              		.align	1
 321              		.type	instructionCount, %object
 322              		.size	instructionCount, 2
 323              	instructionCount:
 324 0360 0000     		.space	2
 325              		.global	instructionLength
 326              		.align	1
 327              		.type	instructionLength, %object
 328              		.size	instructionLength, 2
 329              	instructionLength:
 330 0362 0000     		.space	2
 331              		.global	sensorsDisabled
 332              		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 7


 333              		.type	sensorsDisabled, %object
 334              		.size	sensorsDisabled, 4
 335              	sensorsDisabled:
 336 0364 00000000 		.space	4
 337              		.global	robot_direction
 338              		.data
 339              		.align	2
 340              		.type	robot_direction, %object
 341              		.size	robot_direction, 4
 342              	robot_direction:
 343 0058 02000000 		.word	2
 344              		.global	path
 345              		.bss
 346              		.align	2
 347              		.type	path, %object
 348              		.size	path, 9600
 349              	path:
 350 0368 00000000 		.space	9600
 350      00000000 
 350      00000000 
 350      00000000 
 350      00000000 
 351              		.global	start
 352              		.data
 353              		.align	2
 354              		.type	start, %object
 355              		.size	start, 8
 356              	start:
 357 005c 01000000 		.word	1
 358 0060 01000000 		.word	1
 359              		.global	destination
 360              		.align	2
 361              		.type	destination, %object
 362              		.size	destination, 8
 363              	destination:
 364 0064 0E000000 		.word	14
 365 0068 12000000 		.word	18
 366              		.global	map
 367              		.align	2
 368              		.type	map, %object
 369              		.size	map, 1140
 370              	map:
 371 006c 01000000 		.word	1
 372 0070 01000000 		.word	1
 373 0074 01000000 		.word	1
 374 0078 01000000 		.word	1
 375 007c 01000000 		.word	1
 376 0080 01000000 		.word	1
 377 0084 01000000 		.word	1
 378 0088 01000000 		.word	1
 379 008c 01000000 		.word	1
 380 0090 01000000 		.word	1
 381 0094 01000000 		.word	1
 382 0098 01000000 		.word	1
 383 009c 01000000 		.word	1
 384 00a0 01000000 		.word	1
 385 00a4 01000000 		.word	1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 8


 386 00a8 01000000 		.word	1
 387 00ac 01000000 		.word	1
 388 00b0 01000000 		.word	1
 389 00b4 01000000 		.word	1
 390 00b8 01000000 		.word	1
 391 00bc 00000000 		.word	0
 392 00c0 00000000 		.word	0
 393 00c4 00000000 		.word	0
 394 00c8 00000000 		.word	0
 395 00cc 00000000 		.word	0
 396 00d0 00000000 		.word	0
 397 00d4 00000000 		.word	0
 398 00d8 00000000 		.word	0
 399 00dc 00000000 		.word	0
 400 00e0 00000000 		.word	0
 401 00e4 00000000 		.word	0
 402 00e8 00000000 		.word	0
 403 00ec 00000000 		.word	0
 404 00f0 00000000 		.word	0
 405 00f4 00000000 		.word	0
 406 00f8 00000000 		.word	0
 407 00fc 00000000 		.word	0
 408 0100 01000000 		.word	1
 409 0104 01000000 		.word	1
 410 0108 01000000 		.word	1
 411 010c 01000000 		.word	1
 412 0110 01000000 		.word	1
 413 0114 01000000 		.word	1
 414 0118 01000000 		.word	1
 415 011c 01000000 		.word	1
 416 0120 01000000 		.word	1
 417 0124 01000000 		.word	1
 418 0128 01000000 		.word	1
 419 012c 01000000 		.word	1
 420 0130 01000000 		.word	1
 421 0134 01000000 		.word	1
 422 0138 01000000 		.word	1
 423 013c 01000000 		.word	1
 424 0140 00000000 		.word	0
 425 0144 01000000 		.word	1
 426 0148 00000000 		.word	0
 427 014c 01000000 		.word	1
 428 0150 01000000 		.word	1
 429 0154 00000000 		.word	0
 430 0158 00000000 		.word	0
 431 015c 00000000 		.word	0
 432 0160 00000000 		.word	0
 433 0164 00000000 		.word	0
 434 0168 00000000 		.word	0
 435 016c 00000000 		.word	0
 436 0170 00000000 		.word	0
 437 0174 00000000 		.word	0
 438 0178 00000000 		.word	0
 439 017c 00000000 		.word	0
 440 0180 00000000 		.word	0
 441 0184 00000000 		.word	0
 442 0188 00000000 		.word	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 9


 443 018c 00000000 		.word	0
 444 0190 01000000 		.word	1
 445 0194 00000000 		.word	0
 446 0198 01000000 		.word	1
 447 019c 01000000 		.word	1
 448 01a0 00000000 		.word	0
 449 01a4 01000000 		.word	1
 450 01a8 01000000 		.word	1
 451 01ac 01000000 		.word	1
 452 01b0 01000000 		.word	1
 453 01b4 01000000 		.word	1
 454 01b8 01000000 		.word	1
 455 01bc 01000000 		.word	1
 456 01c0 01000000 		.word	1
 457 01c4 01000000 		.word	1
 458 01c8 01000000 		.word	1
 459 01cc 01000000 		.word	1
 460 01d0 00000000 		.word	0
 461 01d4 01000000 		.word	1
 462 01d8 00000000 		.word	0
 463 01dc 01000000 		.word	1
 464 01e0 00000000 		.word	0
 465 01e4 01000000 		.word	1
 466 01e8 01000000 		.word	1
 467 01ec 00000000 		.word	0
 468 01f0 00000000 		.word	0
 469 01f4 00000000 		.word	0
 470 01f8 00000000 		.word	0
 471 01fc 00000000 		.word	0
 472 0200 00000000 		.word	0
 473 0204 00000000 		.word	0
 474 0208 00000000 		.word	0
 475 020c 00000000 		.word	0
 476 0210 00000000 		.word	0
 477 0214 00000000 		.word	0
 478 0218 00000000 		.word	0
 479 021c 00000000 		.word	0
 480 0220 01000000 		.word	1
 481 0224 00000000 		.word	0
 482 0228 01000000 		.word	1
 483 022c 00000000 		.word	0
 484 0230 01000000 		.word	1
 485 0234 01000000 		.word	1
 486 0238 00000000 		.word	0
 487 023c 01000000 		.word	1
 488 0240 00000000 		.word	0
 489 0244 01000000 		.word	1
 490 0248 01000000 		.word	1
 491 024c 01000000 		.word	1
 492 0250 01000000 		.word	1
 493 0254 01000000 		.word	1
 494 0258 00000000 		.word	0
 495 025c 01000000 		.word	1
 496 0260 01000000 		.word	1
 497 0264 01000000 		.word	1
 498 0268 00000000 		.word	0
 499 026c 01000000 		.word	1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 10


 500 0270 00000000 		.word	0
 501 0274 01000000 		.word	1
 502 0278 00000000 		.word	0
 503 027c 01000000 		.word	1
 504 0280 01000000 		.word	1
 505 0284 00000000 		.word	0
 506 0288 01000000 		.word	1
 507 028c 00000000 		.word	0
 508 0290 00000000 		.word	0
 509 0294 00000000 		.word	0
 510 0298 00000000 		.word	0
 511 029c 00000000 		.word	0
 512 02a0 00000000 		.word	0
 513 02a4 00000000 		.word	0
 514 02a8 00000000 		.word	0
 515 02ac 00000000 		.word	0
 516 02b0 01000000 		.word	1
 517 02b4 00000000 		.word	0
 518 02b8 01000000 		.word	1
 519 02bc 00000000 		.word	0
 520 02c0 01000000 		.word	1
 521 02c4 00000000 		.word	0
 522 02c8 01000000 		.word	1
 523 02cc 01000000 		.word	1
 524 02d0 00000000 		.word	0
 525 02d4 01000000 		.word	1
 526 02d8 00000000 		.word	0
 527 02dc 01000000 		.word	1
 528 02e0 00000000 		.word	0
 529 02e4 01000000 		.word	1
 530 02e8 01000000 		.word	1
 531 02ec 01000000 		.word	1
 532 02f0 00000000 		.word	0
 533 02f4 01000000 		.word	1
 534 02f8 01000000 		.word	1
 535 02fc 01000000 		.word	1
 536 0300 00000000 		.word	0
 537 0304 01000000 		.word	1
 538 0308 00000000 		.word	0
 539 030c 01000000 		.word	1
 540 0310 00000000 		.word	0
 541 0314 01000000 		.word	1
 542 0318 01000000 		.word	1
 543 031c 00000000 		.word	0
 544 0320 01000000 		.word	1
 545 0324 00000000 		.word	0
 546 0328 01000000 		.word	1
 547 032c 00000000 		.word	0
 548 0330 00000000 		.word	0
 549 0334 00000000 		.word	0
 550 0338 00000000 		.word	0
 551 033c 00000000 		.word	0
 552 0340 00000000 		.word	0
 553 0344 00000000 		.word	0
 554 0348 00000000 		.word	0
 555 034c 00000000 		.word	0
 556 0350 00000000 		.word	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 11


 557 0354 00000000 		.word	0
 558 0358 01000000 		.word	1
 559 035c 00000000 		.word	0
 560 0360 01000000 		.word	1
 561 0364 01000000 		.word	1
 562 0368 00000000 		.word	0
 563 036c 01000000 		.word	1
 564 0370 00000000 		.word	0
 565 0374 01000000 		.word	1
 566 0378 00000000 		.word	0
 567 037c 01000000 		.word	1
 568 0380 01000000 		.word	1
 569 0384 01000000 		.word	1
 570 0388 01000000 		.word	1
 571 038c 01000000 		.word	1
 572 0390 01000000 		.word	1
 573 0394 01000000 		.word	1
 574 0398 01000000 		.word	1
 575 039c 01000000 		.word	1
 576 03a0 00000000 		.word	0
 577 03a4 01000000 		.word	1
 578 03a8 00000000 		.word	0
 579 03ac 01000000 		.word	1
 580 03b0 01000000 		.word	1
 581 03b4 00000000 		.word	0
 582 03b8 01000000 		.word	1
 583 03bc 00000000 		.word	0
 584 03c0 00000000 		.word	0
 585 03c4 00000000 		.word	0
 586 03c8 00000000 		.word	0
 587 03cc 00000000 		.word	0
 588 03d0 00000000 		.word	0
 589 03d4 00000000 		.word	0
 590 03d8 00000000 		.word	0
 591 03dc 00000000 		.word	0
 592 03e0 00000000 		.word	0
 593 03e4 00000000 		.word	0
 594 03e8 00000000 		.word	0
 595 03ec 00000000 		.word	0
 596 03f0 00000000 		.word	0
 597 03f4 00000000 		.word	0
 598 03f8 01000000 		.word	1
 599 03fc 01000000 		.word	1
 600 0400 00000000 		.word	0
 601 0404 01000000 		.word	1
 602 0408 00000000 		.word	0
 603 040c 01000000 		.word	1
 604 0410 01000000 		.word	1
 605 0414 01000000 		.word	1
 606 0418 01000000 		.word	1
 607 041c 01000000 		.word	1
 608 0420 01000000 		.word	1
 609 0424 01000000 		.word	1
 610 0428 01000000 		.word	1
 611 042c 01000000 		.word	1
 612 0430 01000000 		.word	1
 613 0434 01000000 		.word	1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 12


 614 0438 01000000 		.word	1
 615 043c 01000000 		.word	1
 616 0440 00000000 		.word	0
 617 0444 01000000 		.word	1
 618 0448 01000000 		.word	1
 619 044c 00000000 		.word	0
 620 0450 00000000 		.word	0
 621 0454 00000000 		.word	0
 622 0458 00000000 		.word	0
 623 045c 00000000 		.word	0
 624 0460 00000000 		.word	0
 625 0464 00000000 		.word	0
 626 0468 00000000 		.word	0
 627 046c 00000000 		.word	0
 628 0470 00000000 		.word	0
 629 0474 00000000 		.word	0
 630 0478 00000000 		.word	0
 631 047c 00000000 		.word	0
 632 0480 00000000 		.word	0
 633 0484 00000000 		.word	0
 634 0488 00000000 		.word	0
 635 048c 00000000 		.word	0
 636 0490 01000000 		.word	1
 637 0494 01000000 		.word	1
 638 0498 01000000 		.word	1
 639 049c 01000000 		.word	1
 640 04a0 01000000 		.word	1
 641 04a4 01000000 		.word	1
 642 04a8 01000000 		.word	1
 643 04ac 01000000 		.word	1
 644 04b0 01000000 		.word	1
 645 04b4 01000000 		.word	1
 646 04b8 01000000 		.word	1
 647 04bc 01000000 		.word	1
 648 04c0 01000000 		.word	1
 649 04c4 01000000 		.word	1
 650 04c8 01000000 		.word	1
 651 04cc 01000000 		.word	1
 652 04d0 01000000 		.word	1
 653 04d4 01000000 		.word	1
 654 04d8 01000000 		.word	1
 655 04dc 01000000 		.word	1
 656              		.global	food_list
 657              		.align	2
 658              		.type	food_list, %object
 659              		.size	food_list, 48
 660              	food_list:
 661 04e0 0B000000 		.word	11
 662 04e4 10000000 		.word	16
 663 04e8 0C000000 		.word	12
 664 04ec 03000000 		.word	3
 665 04f0 05000000 		.word	5
 666 04f4 03000000 		.word	3
 667 04f8 07000000 		.word	7
 668 04fc 09000000 		.word	9
 669 0500 09000000 		.word	9
 670 0504 05000000 		.word	5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 13


 671 0508 00000000 		.space	8
 671      00000000 
 672              		.global	food_length
 673              		.align	2
 674              		.type	food_length, %object
 675              		.size	food_length, 4
 676              	food_length:
 677 0510 05000000 		.word	5
 678 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 679              		.align	2
 680              		.global	BT_txInt
 681              		.thumb
 682              		.thumb_func
 683              		.type	BT_txInt, %function
 684              	BT_txInt:
 685              	.LFB63:
 686              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 138
  29:.\main.c      **** #define U_OFFSET 105
  30:.\main.c      **** 
  31:.\main.c      **** #define U_DEADZONE 90000
  32:.\main.c      **** #define TURN_DEADZONE 50000
  33:.\main.c      **** #define S_DEADZONE 10000
  34:.\main.c      **** #define QUAD_PER_UNIT 144
  35:.\main.c      **** 
  36:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  37:.\main.c      **** uint16 instructionCount = 0;
  38:.\main.c      **** uint16 instructionLength = 0;
  39:.\main.c      **** uint32_t sensorsDisabled = 0;
  40:.\main.c      **** 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 14


  41:.\main.c      **** uint32_t robot_direction = 2;
  42:.\main.c      **** 
  43:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  44:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  45:.\main.c      **** uint32_t destination[2] = {14, 18};//(y, x) DON'T HARDCODE THIS
  46:.\main.c      **** 
  47:.\main.c      **** // map default
  48:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  49:.\main.c      **** //                    {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  50:.\main.c      **** //                    {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  51:.\main.c      **** //                    {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  52:.\main.c      **** //                    {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  53:.\main.c      **** //                    {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  54:.\main.c      **** //                    {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  55:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  56:.\main.c      **** //                    {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  57:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  58:.\main.c      **** //                    {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  59:.\main.c      **** //                    {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  60:.\main.c      **** //                    {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  61:.\main.c      **** //                    {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  62:.\main.c      **** //                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  63:.\main.c      **** 
  64:.\main.c      **** //practice map 1
  65:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  66:.\main.c      **** ////practice map 2
  67:.\main.c      **** /*
  68:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  69:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  70:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  71:.\main.c      ****                         {1,1,0,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1},
  72:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1},
  73:.\main.c      ****                         {1,1,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1},
  74:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1},
  75:.\main.c      ****                         {1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,0,1,1},
  76:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,0,1,1},
  77:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  78:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  79:.\main.c      ****                         {1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1},
  80:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  81:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  82:.\main.c      ****                         {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  83:.\main.c      **** */
  84:.\main.c      **** //practice map 3
  85:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  86:.\main.c      **** 
  87:.\main.c      **** //first number is the y coord, second is x
  88:.\main.c      **** //first number is row, second column
  89:.\main.c      **** 
  90:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};//???
  91:.\main.c      **** //uint32_t food_list[6][2] = {{5, 9},{5,3}, {13, 2}}; //???
  92:.\main.c      **** //uint32_t food_list[6][2] ={ //default
  93:.\main.c      **** //{5, 7},
  94:.\main.c      **** //{5, 17},
  95:.\main.c      **** //{12, 13},
  96:.\main.c      **** //{5, 17},
  97:.\main.c      **** //{9, 3}
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 15


  98:.\main.c      **** //};
  99:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}}; //practice map 1
 100:.\main.c      **** //practice map 2
 101:.\main.c      **** //uint32_t food_list[6][2]= {{3,6},{5,10},{13,9},{13,16},{1,17}};
 102:.\main.c      **** 
 103:.\main.c      **** //practice map 3
 104:.\main.c      **** uint32_t food_list[6][2]= {{11,16},{12,3},{5,3},{7,9},{9,5}};
 105:.\main.c      **** 
 106:.\main.c      **** uint32_t food_length = 5;
 107:.\main.c      **** 
 108:.\main.c      **** void changeToRF();
 109:.\main.c      **** void changeToBT();
 110:.\main.c      **** void brakeMotor();
 111:.\main.c      **** void driveForwards();
 112:.\main.c      **** void initTurnLeft();
 113:.\main.c      **** void initTurnRight();
 114:.\main.c      **** void inittrackLineZ();
 115:.\main.c      **** void trackLineU();
 116:.\main.c      **** void trackLine();
 117:.\main.c      **** void trackLineZ();
 118:.\main.c      **** void initTrackU();
 119:.\main.c      **** void turnLeft();
 120:.\main.c      **** void turnRight();
 121:.\main.c      **** void initForward();
 122:.\main.c      **** void initTurnU();
 123:.\main.c      **** void turnU();
 124:.\main.c      **** void initBrake();
 125:.\main.c      **** void print_ADC();
 126:.\main.c      **** void Quad_Dec_response();
 127:.\main.c      **** void handle_rx_binary();
 128:.\main.c      **** void readFrontSensors();
 129:.\main.c      **** void print_RF();
 130:.\main.c      **** 
 131:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
 132:.\main.c      **** //BT
 133:.\main.c      **** CY_ISR(BT_txInt)
 134:.\main.c      **** {
 687              		.loc 1 134 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692 0000 80B4     		push	{r7}
 693              		.cfi_def_cfa_offset 4
 694              		.cfi_offset 7, -4
 695 0002 00AF     		add	r7, sp, #0
 696              		.cfi_def_cfa_register 7
 135:.\main.c      ****     
 136:.\main.c      **** }
 697              		.loc 1 136 0
 698 0004 BD46     		mov	sp, r7
 699              		.cfi_def_cfa_register 13
 700              		@ sp needed
 701 0006 5DF8047B 		ldr	r7, [sp], #4
 702              		.cfi_restore 7
 703              		.cfi_def_cfa_offset 0
 704 000a 7047     		bx	lr
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 16


 705              		.cfi_endproc
 706              	.LFE63:
 707              		.size	BT_txInt, .-BT_txInt
 708              		.section	.text.adc_isr,"ax",%progbits
 709              		.align	2
 710              		.global	adc_isr
 711              		.thumb
 712              		.thumb_func
 713              		.type	adc_isr, %function
 714              	adc_isr:
 715              	.LFB64:
 137:.\main.c      **** 
 138:.\main.c      **** //ADC:
 139:.\main.c      **** CY_ISR (adc_isr)
 140:.\main.c      **** {
 716              		.loc 1 140 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720 0000 80B5     		push	{r7, lr}
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 141:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 142:.\main.c      ****     adc_result = ADC_GetResult16();
 726              		.loc 1 142 0
 727 0004 FFF7FEFF 		bl	ADC_GetResult16
 728 0008 0346     		mov	r3, r0
 729 000a 1A46     		mov	r2, r3
 730 000c 044B     		ldr	r3, .L3
 731 000e 1A80     		strh	r2, [r3]	@ movhi
 143:.\main.c      ****     flag_receive_ADC = 1;
 732              		.loc 1 143 0
 733 0010 044B     		ldr	r3, .L3+4
 734 0012 0122     		movs	r2, #1
 735 0014 1A70     		strb	r2, [r3]
 144:.\main.c      ****     flag_print_rf = 1;
 736              		.loc 1 144 0
 737 0016 044B     		ldr	r3, .L3+8
 738 0018 0122     		movs	r2, #1
 739 001a 1A70     		strb	r2, [r3]
 145:.\main.c      ****     //LED_Write(~LED_Read());
 146:.\main.c      **** }
 740              		.loc 1 146 0
 741 001c 80BD     		pop	{r7, pc}
 742              	.L4:
 743 001e 00BF     		.align	2
 744              	.L3:
 745 0020 00000000 		.word	adc_result
 746 0024 00000000 		.word	flag_receive_ADC
 747 0028 00000000 		.word	flag_print_rf
 748              		.cfi_endproc
 749              	.LFE64:
 750              		.size	adc_isr, .-adc_isr
 751              		.global	__aeabi_i2d
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 17


 752              		.global	__aeabi_dsub
 753              		.global	__aeabi_dcmpge
 754              		.global	__aeabi_dadd
 755              		.section	.text.isr_quad1,"ax",%progbits
 756              		.align	2
 757              		.global	isr_quad1
 758              		.thumb
 759              		.thumb_func
 760              		.type	isr_quad1, %function
 761              	isr_quad1:
 762              	.LFB65:
 147:.\main.c      **** 
 148:.\main.c      **** CY_ISR (isr_quad1)
 149:.\main.c      **** {
 763              		.loc 1 149 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767 0000 B0B5     		push	{r4, r5, r7, lr}
 768              		.cfi_def_cfa_offset 16
 769              		.cfi_offset 4, -16
 770              		.cfi_offset 5, -12
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 00AF     		add	r7, sp, #0
 774              		.cfi_def_cfa_register 7
 150:.\main.c      ****     
 151:.\main.c      ****     //LED_Write(~LED_Read());
 152:.\main.c      ****     last_quad_count1 = quad_count1;
 775              		.loc 1 152 0
 776 0004 564B     		ldr	r3, .L12
 777 0006 1A88     		ldrh	r2, [r3]
 778 0008 564B     		ldr	r3, .L12+4
 779 000a 1A80     		strh	r2, [r3]	@ movhi
 153:.\main.c      ****     last_quad_count2 = quad_count2;
 780              		.loc 1 153 0
 781 000c 564B     		ldr	r3, .L12+8
 782 000e 1A88     		ldrh	r2, [r3]
 783 0010 564B     		ldr	r3, .L12+12
 784 0012 1A80     		strh	r2, [r3]	@ movhi
 154:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 785              		.loc 1 154 0
 786 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 787 0018 0346     		mov	r3, r0
 788 001a 1A46     		mov	r2, r3
 789 001c 504B     		ldr	r3, .L12
 790 001e 1A80     		strh	r2, [r3]	@ movhi
 155:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 791              		.loc 1 155 0
 792 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 793 0024 0346     		mov	r3, r0
 794 0026 1A46     		mov	r2, r3
 795 0028 4F4B     		ldr	r3, .L12+8
 796 002a 1A80     		strh	r2, [r3]	@ movhi
 156:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 797              		.loc 1 156 0
 798 002c 4C4B     		ldr	r3, .L12
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 18


 799 002e 1B88     		ldrh	r3, [r3]
 800 0030 9AB2     		uxth	r2, r3
 801 0032 4C4B     		ldr	r3, .L12+4
 802 0034 1B88     		ldrh	r3, [r3]
 803 0036 9BB2     		uxth	r3, r3
 804 0038 D31A     		subs	r3, r2, r3
 805 003a 9BB2     		uxth	r3, r3
 806 003c 9AB2     		uxth	r2, r3
 807 003e 4C4B     		ldr	r3, .L12+16
 808 0040 1A80     		strh	r2, [r3]	@ movhi
 157:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 809              		.loc 1 157 0
 810 0042 494B     		ldr	r3, .L12+8
 811 0044 1B88     		ldrh	r3, [r3]
 812 0046 9AB2     		uxth	r2, r3
 813 0048 484B     		ldr	r3, .L12+12
 814 004a 1B88     		ldrh	r3, [r3]
 815 004c 9BB2     		uxth	r3, r3
 816 004e D31A     		subs	r3, r2, r3
 817 0050 9BB2     		uxth	r3, r3
 818 0052 9AB2     		uxth	r2, r3
 819 0054 474B     		ldr	r3, .L12+20
 820 0056 1A80     		strh	r2, [r3]	@ movhi
 158:.\main.c      ****     
 159:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 821              		.loc 1 159 0
 822 0058 414B     		ldr	r3, .L12
 823 005a 1B88     		ldrh	r3, [r3]
 824 005c 1BB2     		sxth	r3, r3
 825 005e 002B     		cmp	r3, #0
 826 0060 B8BF     		it	lt
 827 0062 5B42     		rsblt	r3, r3, #0
 828 0064 40F6B832 		movw	r2, #3000
 829 0068 9342     		cmp	r3, r2
 830 006a 17DD     		ble	.L6
 831              		.loc 1 159 0 is_stmt 0 discriminator 1
 832 006c 424B     		ldr	r3, .L12+24
 833 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 834 0070 012B     		cmp	r3, #1
 835 0072 13D0     		beq	.L6
 836              		.loc 1 159 0 discriminator 2
 837 0074 404B     		ldr	r3, .L12+24
 838 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 839 0078 022B     		cmp	r3, #2
 840 007a 0FD0     		beq	.L6
 841              		.loc 1 159 0 discriminator 3
 842 007c 3E4B     		ldr	r3, .L12+24
 843 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 844 0080 072B     		cmp	r3, #7
 845 0082 0BD0     		beq	.L6
 160:.\main.c      ****     {
 161:.\main.c      ****         QuadDec_M1_SetCounter(0);
 846              		.loc 1 161 0 is_stmt 1
 847 0084 0020     		movs	r0, #0
 848 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 162:.\main.c      ****         QuadDec_M2_SetCounter(0);
 849              		.loc 1 162 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 19


 850 008a 0020     		movs	r0, #0
 851 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 163:.\main.c      ****         quad_count1 = 0;
 852              		.loc 1 163 0
 853 0090 334B     		ldr	r3, .L12
 854 0092 0022     		movs	r2, #0
 855 0094 1A80     		strh	r2, [r3]	@ movhi
 164:.\main.c      ****         quad_count2 = 0;
 856              		.loc 1 164 0
 857 0096 344B     		ldr	r3, .L12+8
 858 0098 0022     		movs	r2, #0
 859 009a 1A80     		strh	r2, [r3]	@ movhi
 860              	.L6:
 165:.\main.c      ****     }
 166:.\main.c      **** 
 167:.\main.c      ****     flag_calc_wheelspeed = 1;
 861              		.loc 1 167 0
 862 009c 374B     		ldr	r3, .L12+28
 863 009e 0122     		movs	r2, #1
 864 00a0 1A70     		strb	r2, [r3]
 168:.\main.c      ****     
 169:.\main.c      ****     
 170:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 865              		.loc 1 170 0
 866 00a2 374B     		ldr	r3, .L12+32
 867 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 00a6 062B     		cmp	r3, #6
 869 00a8 58D1     		bne	.L5
 870              		.loc 1 170 0 is_stmt 0 discriminator 1
 871 00aa 334B     		ldr	r3, .L12+24
 872 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 873 00ae 062B     		cmp	r3, #6
 874 00b0 54D1     		bne	.L5
 171:.\main.c      ****     {
 172:.\main.c      ****         //track the distance
 173:.\main.c      ****         accum_dist -= quad_diff1;
 875              		.loc 1 173 0 is_stmt 1
 876 00b2 344B     		ldr	r3, .L12+36
 877 00b4 1B88     		ldrh	r3, [r3]
 878 00b6 9AB2     		uxth	r2, r3
 879 00b8 2D4B     		ldr	r3, .L12+16
 880 00ba 1B88     		ldrh	r3, [r3]
 881 00bc 9BB2     		uxth	r3, r3
 882 00be D31A     		subs	r3, r2, r3
 883 00c0 9BB2     		uxth	r3, r3
 884 00c2 9AB2     		uxth	r2, r3
 885 00c4 2F4B     		ldr	r3, .L12+36
 886 00c6 1A80     		strh	r2, [r3]	@ movhi
 174:.\main.c      ****         if(accum_dist >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 887              		.loc 1 174 0
 888 00c8 2E4B     		ldr	r3, .L12+36
 889 00ca 1B88     		ldrh	r3, [r3]
 890 00cc 1BB2     		sxth	r3, r3
 891 00ce 1846     		mov	r0, r3
 892 00d0 FFF7FEFF 		bl	__aeabi_i2d
 893 00d4 0446     		mov	r4, r0
 894 00d6 0D46     		mov	r5, r1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 20


 895 00d8 2B4B     		ldr	r3, .L12+40
 896 00da 1B88     		ldrh	r3, [r3]
 897 00dc 1BB2     		sxth	r3, r3
 898 00de 1846     		mov	r0, r3
 899 00e0 FFF7FEFF 		bl	__aeabi_i2d
 900 00e4 0246     		mov	r2, r0
 901 00e6 0B46     		mov	r3, r1
 902 00e8 1046     		mov	r0, r2
 903 00ea 1946     		mov	r1, r3
 904 00ec 4FF00002 		mov	r2, #0
 905 00f0 264B     		ldr	r3, .L12+44
 906 00f2 FFF7FEFF 		bl	__aeabi_dsub
 907 00f6 0246     		mov	r2, r0
 908 00f8 0B46     		mov	r3, r1
 909 00fa 2046     		mov	r0, r4
 910 00fc 2946     		mov	r1, r5
 911 00fe FFF7FEFF 		bl	__aeabi_dcmpge
 912 0102 0346     		mov	r3, r0
 913 0104 002B     		cmp	r3, #0
 914 0106 02D0     		beq	.L8
 175:.\main.c      ****         {
 176:.\main.c      ****             reached_target = 1;
 915              		.loc 1 176 0
 916 0108 214B     		ldr	r3, .L12+48
 917 010a 0122     		movs	r2, #1
 918 010c 1A70     		strb	r2, [r3]
 919              	.L8:
 177:.\main.c      ****         }
 178:.\main.c      ****         if((accum_dist >= (target_distance_quad + QUAD_PER_UNIT * 0.5)) || target_distance_quad == 
 920              		.loc 1 178 0
 921 010e 1D4B     		ldr	r3, .L12+36
 922 0110 1B88     		ldrh	r3, [r3]
 923 0112 1BB2     		sxth	r3, r3
 924 0114 1846     		mov	r0, r3
 925 0116 FFF7FEFF 		bl	__aeabi_i2d
 926 011a 0446     		mov	r4, r0
 927 011c 0D46     		mov	r5, r1
 928 011e 1A4B     		ldr	r3, .L12+40
 929 0120 1B88     		ldrh	r3, [r3]
 930 0122 1BB2     		sxth	r3, r3
 931 0124 1846     		mov	r0, r3
 932 0126 FFF7FEFF 		bl	__aeabi_i2d
 933 012a 0246     		mov	r2, r0
 934 012c 0B46     		mov	r3, r1
 935 012e 1046     		mov	r0, r2
 936 0130 1946     		mov	r1, r3
 937 0132 4FF00002 		mov	r2, #0
 938 0136 154B     		ldr	r3, .L12+44
 939 0138 FFF7FEFF 		bl	__aeabi_dadd
 940 013c 0246     		mov	r2, r0
 941 013e 0B46     		mov	r3, r1
 942 0140 2046     		mov	r0, r4
 943 0142 2946     		mov	r1, r5
 944 0144 FFF7FEFF 		bl	__aeabi_dcmpge
 945 0148 0346     		mov	r3, r0
 946 014a 002B     		cmp	r3, #0
 947 014c 03D1     		bne	.L10
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 21


 948              		.loc 1 178 0 is_stmt 0 discriminator 1
 949 014e 0E4B     		ldr	r3, .L12+40
 950 0150 1B88     		ldrh	r3, [r3]
 951 0152 002B     		cmp	r3, #0
 952 0154 02D1     		bne	.L5
 953              	.L10:
 179:.\main.c      ****         {
 180:.\main.c      ****             overshot_target = 1;
 954              		.loc 1 180 0 is_stmt 1
 955 0156 0F4B     		ldr	r3, .L12+52
 956 0158 0122     		movs	r2, #1
 957 015a 1A70     		strb	r2, [r3]
 958              	.L5:
 181:.\main.c      ****         }
 182:.\main.c      ****     }
 183:.\main.c      **** }
 959              		.loc 1 183 0
 960 015c B0BD     		pop	{r4, r5, r7, pc}
 961              	.L13:
 962 015e 00BF     		.align	2
 963              	.L12:
 964 0160 00000000 		.word	quad_count1
 965 0164 00000000 		.word	last_quad_count1
 966 0168 00000000 		.word	quad_count2
 967 016c 00000000 		.word	last_quad_count2
 968 0170 00000000 		.word	quad_diff1
 969 0174 00000000 		.word	quad_diff2
 970 0178 00000000 		.word	movement_state
 971 017c 00000000 		.word	flag_calc_wheelspeed
 972 0180 00000000 		.word	track_mode
 973 0184 00000000 		.word	accum_dist
 974 0188 00000000 		.word	target_distance_quad
 975 018c 00005240 		.word	1079115776
 976 0190 00000000 		.word	reached_target
 977 0194 00000000 		.word	overshot_target
 978              		.cfi_endproc
 979              	.LFE65:
 980              		.size	isr_quad1, .-isr_quad1
 981              		.global	nTurns
 982              		.bss
 983              		.type	nTurns, %object
 984              		.size	nTurns, 1
 985              	nTurns:
 986 28e8 00       		.space	1
 987              		.global	prev_distTurned
 988 28e9 00       		.align	1
 989              		.type	prev_distTurned, %object
 990              		.size	prev_distTurned, 2
 991              	prev_distTurned:
 992 28ea 0000     		.space	2
 993              		.section	.text.isr_turn_timer,"ax",%progbits
 994              		.align	2
 995              		.global	isr_turn_timer
 996              		.thumb
 997              		.thumb_func
 998              		.type	isr_turn_timer, %function
 999              	isr_turn_timer:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 22


 1000              	.LFB66:
 184:.\main.c      **** 
 185:.\main.c      **** uint8 nTurns = 0;
 186:.\main.c      **** uint16 prev_distTurned = 0;
 187:.\main.c      **** 
 188:.\main.c      **** CY_ISR(isr_turn_timer)
 189:.\main.c      **** {
 1001              		.loc 1 189 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 8
 1004              		@ frame_needed = 1, uses_anonymous_args = 0
 1005 0000 80B5     		push	{r7, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 7, -8
 1008              		.cfi_offset 14, -4
 1009 0002 82B0     		sub	sp, sp, #8
 1010              		.cfi_def_cfa_offset 16
 1011 0004 00AF     		add	r7, sp, #0
 1012              		.cfi_def_cfa_register 7
 190:.\main.c      ****     if(movement_state == LTURN)
 1013              		.loc 1 190 0
 1014 0006 5D4B     		ldr	r3, .L24
 1015 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1016 000a 012B     		cmp	r3, #1
 1017 000c 58D1     		bne	.L15
 1018              	.LBB2:
 191:.\main.c      ****     {
 192:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 1019              		.loc 1 192 0
 1020 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1021 0012 0346     		mov	r3, r0
 1022 0014 1A46     		mov	r2, r3
 1023 0016 5A4B     		ldr	r3, .L24+4
 1024 0018 1B88     		ldrh	r3, [r3]
 1025 001a 1BB2     		sxth	r3, r3
 1026 001c D31A     		subs	r3, r2, r3
 1027 001e 002B     		cmp	r3, #0
 1028 0020 B8BF     		it	lt
 1029 0022 5B42     		rsblt	r3, r3, #0
 1030 0024 574A     		ldr	r2, .L24+8
 1031 0026 82FB0312 		smull	r1, r2, r2, r3
 1032 002a 1112     		asrs	r1, r2, #8
 1033 002c DA17     		asrs	r2, r3, #31
 1034 002e 8A1A     		subs	r2, r1, r2
 1035 0030 4FF45071 		mov	r1, #832
 1036 0034 01FB02F2 		mul	r2, r1, r2
 1037 0038 9A1A     		subs	r2, r3, r2
 1038 003a 1346     		mov	r3, r2	@ movhi
 1039 003c FB80     		strh	r3, [r7, #6]	@ movhi
 193:.\main.c      ****         
 194:.\main.c      ****         if(((distTurned >= min_turn_quad) && distTurned <= max_turn_quad) && (frontSensors[2] == 1 
 1040              		.loc 1 194 0
 1041 003e 524B     		ldr	r3, .L24+12
 1042 0040 1B88     		ldrh	r3, [r3]
 1043 0042 FA88     		ldrh	r2, [r7, #6]
 1044 0044 9A42     		cmp	r2, r3
 1045 0046 25D3     		bcc	.L16
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 23


 1046              		.loc 1 194 0 is_stmt 0 discriminator 1
 1047 0048 504B     		ldr	r3, .L24+16
 1048 004a 1B88     		ldrh	r3, [r3]
 1049 004c FA88     		ldrh	r2, [r7, #6]
 1050 004e 9A42     		cmp	r2, r3
 1051 0050 20D8     		bhi	.L16
 1052              		.loc 1 194 0 discriminator 2
 1053 0052 4F4B     		ldr	r3, .L24+20
 1054 0054 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1055 0056 012B     		cmp	r3, #1
 1056 0058 07D0     		beq	.L17
 1057              		.loc 1 194 0 discriminator 3
 1058 005a 4D4B     		ldr	r3, .L24+20
 1059 005c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1060 005e 012B     		cmp	r3, #1
 1061 0060 03D0     		beq	.L17
 1062              		.loc 1 194 0 discriminator 4
 1063 0062 4B4B     		ldr	r3, .L24+20
 1064 0064 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1065 0066 012B     		cmp	r3, #1
 1066 0068 14D1     		bne	.L16
 1067              	.L17:
 195:.\main.c      ****         {
 196:.\main.c      ****             //movement_state = STOPPED;
 197:.\main.c      ****             brakeMotor();
 1068              		.loc 1 197 0 is_stmt 1
 1069 006a FFF7FEFF 		bl	brakeMotor
 198:.\main.c      ****             movement_state = prev_movement_state;
 1070              		.loc 1 198 0
 1071 006e 494B     		ldr	r3, .L24+24
 1072 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1073 0072 424B     		ldr	r3, .L24
 1074 0074 1A70     		strb	r2, [r3]
 199:.\main.c      ****             Timer_2_Stop();
 1075              		.loc 1 199 0
 1076 0076 FFF7FEFF 		bl	Timer_2_Stop
 200:.\main.c      ****             min_turn_quad = DEFAULT_MIN_TURN;
 1077              		.loc 1 200 0
 1078 007a 434B     		ldr	r3, .L24+12
 1079 007c BC22     		movs	r2, #188
 1080 007e 1A80     		strh	r2, [r3]	@ movhi
 201:.\main.c      ****             max_turn_quad = DEFAULT_MAX_TURN;
 1081              		.loc 1 201 0
 1082 0080 424B     		ldr	r3, .L24+16
 1083 0082 E422     		movs	r2, #228
 1084 0084 1A80     		strh	r2, [r3]	@ movhi
 202:.\main.c      ****             nTurns = 0;
 1085              		.loc 1 202 0
 1086 0086 444B     		ldr	r3, .L24+28
 1087 0088 0022     		movs	r2, #0
 1088 008a 1A70     		strb	r2, [r3]
 203:.\main.c      ****             prev_distTurned = 0;
 1089              		.loc 1 203 0
 1090 008c 434B     		ldr	r3, .L24+32
 1091 008e 0022     		movs	r2, #0
 1092 0090 1A80     		strh	r2, [r3]	@ movhi
 1093 0092 0AE0     		b	.L18
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 24


 1094              	.L16:
 204:.\main.c      ****         }else if(distTurned < prev_distTurned){//newly added thing
 1095              		.loc 1 204 0
 1096 0094 414B     		ldr	r3, .L24+32
 1097 0096 1B88     		ldrh	r3, [r3]
 1098 0098 FA88     		ldrh	r2, [r7, #6]
 1099 009a 9A42     		cmp	r2, r3
 1100 009c 05D2     		bcs	.L18
 205:.\main.c      ****             nTurns++;
 1101              		.loc 1 205 0
 1102 009e 3E4B     		ldr	r3, .L24+28
 1103 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 00a2 0133     		adds	r3, r3, #1
 1105 00a4 DAB2     		uxtb	r2, r3
 1106 00a6 3C4B     		ldr	r3, .L24+28
 1107 00a8 1A70     		strb	r2, [r3]
 1108              	.L18:
 206:.\main.c      ****         }
 207:.\main.c      ****         if(nTurns > MAX_NUM_TURNS){
 1109              		.loc 1 207 0
 1110 00aa 3B4B     		ldr	r3, .L24+28
 1111 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1112 00ae 052B     		cmp	r3, #5
 1113 00b0 02D9     		bls	.L19
 208:.\main.c      ****             LostFlag = 1;
 1114              		.loc 1 208 0
 1115 00b2 3B4B     		ldr	r3, .L24+36
 1116 00b4 0122     		movs	r2, #1
 1117 00b6 1A70     		strb	r2, [r3]
 1118              	.L19:
 209:.\main.c      ****         }
 210:.\main.c      ****         prev_distTurned = distTurned;
 1119              		.loc 1 210 0
 1120 00b8 384A     		ldr	r2, .L24+32
 1121 00ba FB88     		ldrh	r3, [r7, #6]	@ movhi
 1122 00bc 1380     		strh	r3, [r2]	@ movhi
 1123              	.LBE2:
 1124 00be 5AE0     		b	.L14
 1125              	.L15:
 211:.\main.c      ****     }
 212:.\main.c      ****     else if (movement_state == RTURN)
 1126              		.loc 1 212 0
 1127 00c0 2E4B     		ldr	r3, .L24
 1128 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1129 00c4 022B     		cmp	r3, #2
 1130 00c6 3DD1     		bne	.L21
 1131              	.LBB3:
 213:.\main.c      ****     {
 214:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1132              		.loc 1 214 0
 1133 00c8 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1134 00cc 0346     		mov	r3, r0
 1135 00ce 1A46     		mov	r2, r3
 1136 00d0 2B4B     		ldr	r3, .L24+4
 1137 00d2 1B88     		ldrh	r3, [r3]
 1138 00d4 1BB2     		sxth	r3, r3
 1139 00d6 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 25


 1140 00d8 002B     		cmp	r3, #0
 1141 00da B8BF     		it	lt
 1142 00dc 5B42     		rsblt	r3, r3, #0
 1143 00de 294A     		ldr	r2, .L24+8
 1144 00e0 82FB0312 		smull	r1, r2, r2, r3
 1145 00e4 1112     		asrs	r1, r2, #8
 1146 00e6 DA17     		asrs	r2, r3, #31
 1147 00e8 8A1A     		subs	r2, r1, r2
 1148 00ea 4FF45071 		mov	r1, #832
 1149 00ee 01FB02F2 		mul	r2, r1, r2
 1150 00f2 9A1A     		subs	r2, r3, r2
 1151 00f4 1346     		mov	r3, r2	@ movhi
 1152 00f6 BB80     		strh	r3, [r7, #4]	@ movhi
 215:.\main.c      ****         if(((distTurned >= min_turn_quad) && distTurned <= max_turn_quad) && (frontSensors[2] == 1 
 1153              		.loc 1 215 0
 1154 00f8 234B     		ldr	r3, .L24+12
 1155 00fa 1B88     		ldrh	r3, [r3]
 1156 00fc BA88     		ldrh	r2, [r7, #4]
 1157 00fe 9A42     		cmp	r2, r3
 1158 0100 1FD3     		bcc	.L22
 1159              		.loc 1 215 0 is_stmt 0 discriminator 1
 1160 0102 224B     		ldr	r3, .L24+16
 1161 0104 1B88     		ldrh	r3, [r3]
 1162 0106 BA88     		ldrh	r2, [r7, #4]
 1163 0108 9A42     		cmp	r2, r3
 1164 010a 1AD8     		bhi	.L22
 1165              		.loc 1 215 0 discriminator 2
 1166 010c 204B     		ldr	r3, .L24+20
 1167 010e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1168 0110 012B     		cmp	r3, #1
 1169 0112 07D0     		beq	.L23
 1170              		.loc 1 215 0 discriminator 3
 1171 0114 1E4B     		ldr	r3, .L24+20
 1172 0116 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1173 0118 012B     		cmp	r3, #1
 1174 011a 03D0     		beq	.L23
 1175              		.loc 1 215 0 discriminator 4
 1176 011c 1C4B     		ldr	r3, .L24+20
 1177 011e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1178 0120 012B     		cmp	r3, #1
 1179 0122 0ED1     		bne	.L22
 1180              	.L23:
 216:.\main.c      ****         {
 217:.\main.c      ****             //movement_state = STOPPED;
 218:.\main.c      ****             brakeMotor();
 1181              		.loc 1 218 0 is_stmt 1
 1182 0124 FFF7FEFF 		bl	brakeMotor
 219:.\main.c      ****             movement_state = prev_movement_state;
 1183              		.loc 1 219 0
 1184 0128 1A4B     		ldr	r3, .L24+24
 1185 012a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1186 012c 134B     		ldr	r3, .L24
 1187 012e 1A70     		strb	r2, [r3]
 220:.\main.c      ****             Timer_2_Stop();
 1188              		.loc 1 220 0
 1189 0130 FFF7FEFF 		bl	Timer_2_Stop
 221:.\main.c      ****             min_turn_quad = DEFAULT_MIN_TURN;
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 26


 1190              		.loc 1 221 0
 1191 0134 144B     		ldr	r3, .L24+12
 1192 0136 BC22     		movs	r2, #188
 1193 0138 1A80     		strh	r2, [r3]	@ movhi
 222:.\main.c      ****             max_turn_quad = DEFAULT_MAX_TURN;
 1194              		.loc 1 222 0
 1195 013a 144B     		ldr	r3, .L24+16
 1196 013c E422     		movs	r2, #228
 1197 013e 1A80     		strh	r2, [r3]	@ movhi
 1198              	.LBE3:
 1199 0140 19E0     		b	.L14
 1200              	.L22:
 1201 0142 18E0     		b	.L14
 1202              	.L21:
 223:.\main.c      ****         }
 224:.\main.c      ****     }
 225:.\main.c      ****     else if (movement_state == UTURN)
 1203              		.loc 1 225 0
 1204 0144 0D4B     		ldr	r3, .L24
 1205 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1206 0148 072B     		cmp	r3, #7
 1207 014a 14D1     		bne	.L14
 226:.\main.c      ****     {
 227:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1208              		.loc 1 227 0
 1209 014c FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1210 0150 0346     		mov	r3, r0
 1211 0152 1A46     		mov	r2, r3
 1212 0154 0A4B     		ldr	r3, .L24+4
 1213 0156 1B88     		ldrh	r3, [r3]
 1214 0158 1BB2     		sxth	r3, r3
 1215 015a D31A     		subs	r3, r2, r3
 1216 015c 002B     		cmp	r3, #0
 1217 015e B8BF     		it	lt
 1218 0160 5B42     		rsblt	r3, r3, #0
 1219 0162 CF2B     		cmp	r3, #207
 1220 0164 07DD     		ble	.L14
 228:.\main.c      ****         {
 229:.\main.c      ****             //movement_state = STOPPED;
 230:.\main.c      ****             brakeMotor();
 1221              		.loc 1 230 0
 1222 0166 FFF7FEFF 		bl	brakeMotor
 231:.\main.c      ****             movement_state = prev_movement_state;
 1223              		.loc 1 231 0
 1224 016a 0A4B     		ldr	r3, .L24+24
 1225 016c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1226 016e 034B     		ldr	r3, .L24
 1227 0170 1A70     		strb	r2, [r3]
 232:.\main.c      ****             Timer_2_Stop();
 1228              		.loc 1 232 0
 1229 0172 FFF7FEFF 		bl	Timer_2_Stop
 1230              	.L14:
 233:.\main.c      ****         }
 234:.\main.c      ****     }
 235:.\main.c      **** }
 1231              		.loc 1 235 0
 1232 0176 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 27


 1233              		.cfi_def_cfa_offset 8
 1234 0178 BD46     		mov	sp, r7
 1235              		.cfi_def_cfa_register 13
 1236              		@ sp needed
 1237 017a 80BD     		pop	{r7, pc}
 1238              	.L25:
 1239              		.align	2
 1240              	.L24:
 1241 017c 00000000 		.word	movement_state
 1242 0180 00000000 		.word	start_turn_count
 1243 0184 4FECC44E 		.word	1321528399
 1244 0188 00000000 		.word	min_turn_quad
 1245 018c 00000000 		.word	max_turn_quad
 1246 0190 00000000 		.word	frontSensors
 1247 0194 00000000 		.word	prev_movement_state
 1248 0198 00000000 		.word	nTurns
 1249 019c 00000000 		.word	prev_distTurned
 1250 01a0 00000000 		.word	LostFlag
 1251              		.cfi_endproc
 1252              	.LFE66:
 1253              		.size	isr_turn_timer, .-isr_turn_timer
 1254              		.section	.text.Stop_on_line,"ax",%progbits
 1255              		.align	2
 1256              		.global	Stop_on_line
 1257              		.thumb
 1258              		.thumb_func
 1259              		.type	Stop_on_line, %function
 1260              	Stop_on_line:
 1261              	.LFB67:
 236:.\main.c      **** 
 237:.\main.c      **** 
 238:.\main.c      **** CY_ISR (Stop_on_line)
 239:.\main.c      **** {
 1262              		.loc 1 239 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
 1266              		@ link register save eliminated.
 1267 0000 80B4     		push	{r7}
 1268              		.cfi_def_cfa_offset 4
 1269              		.cfi_offset 7, -4
 1270 0002 00AF     		add	r7, sp, #0
 1271              		.cfi_def_cfa_register 7
 240:.\main.c      ****     movement_state = STOPPED;
 1272              		.loc 1 240 0
 1273 0004 054B     		ldr	r3, .L28
 1274 0006 0322     		movs	r2, #3
 1275 0008 1A70     		strb	r2, [r3]
 241:.\main.c      ****     if(movement_state != DRIVE) return;
 1276              		.loc 1 241 0
 1277 000a 044B     		ldr	r3, .L28
 1278 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1279 000e 002B     		cmp	r3, #0
 1280 0010 00D0     		beq	.L26
 1281 0012 00BF     		nop
 1282              	.L26:
 242:.\main.c      ****     //initTurnLeft();
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 28


 243:.\main.c      **** }
 1283              		.loc 1 243 0
 1284 0014 BD46     		mov	sp, r7
 1285              		.cfi_def_cfa_register 13
 1286              		@ sp needed
 1287 0016 5DF8047B 		ldr	r7, [sp], #4
 1288              		.cfi_restore 7
 1289              		.cfi_def_cfa_offset 0
 1290 001a 7047     		bx	lr
 1291              	.L29:
 1292              		.align	2
 1293              	.L28:
 1294 001c 00000000 		.word	movement_state
 1295              		.cfi_endproc
 1296              	.LFE67:
 1297              		.size	Stop_on_line, .-Stop_on_line
 1298              		.section	.rodata
 1299              		.align	2
 1300              	.LC0:
 1301 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1301      74696E67 
 1301      20726F62 
 1301      6F74210D 
 1301      0A00
 1302              		.section	.text.button,"ax",%progbits
 1303              		.align	2
 1304              		.global	button
 1305              		.thumb
 1306              		.thumb_func
 1307              		.type	button, %function
 1308              	button:
 1309              	.LFB68:
 244:.\main.c      **** 
 245:.\main.c      **** CY_ISR (button)
 246:.\main.c      **** {
 1310              		.loc 1 246 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314 0000 80B5     		push	{r7, lr}
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 7, -8
 1317              		.cfi_offset 14, -4
 1318 0002 00AF     		add	r7, sp, #0
 1319              		.cfi_def_cfa_register 7
 247:.\main.c      ****     if(BT_ENABLED)
 1320              		.loc 1 247 0
 1321 0004 054B     		ldr	r3, .L32
 1322 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1323 0008 002B     		cmp	r3, #0
 1324 000a 02D0     		beq	.L31
 248:.\main.c      ****     {
 249:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1325              		.loc 1 249 0
 1326 000c 0448     		ldr	r0, .L32+4
 1327 000e FFF7FEFF 		bl	UART_PutString
 1328              	.L31:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 29


 250:.\main.c      ****     }
 251:.\main.c      ****     movement_state = DRIVE;
 1329              		.loc 1 251 0
 1330 0012 044B     		ldr	r3, .L32+8
 1331 0014 0022     		movs	r2, #0
 1332 0016 1A70     		strb	r2, [r3]
 252:.\main.c      **** }
 1333              		.loc 1 252 0
 1334 0018 80BD     		pop	{r7, pc}
 1335              	.L33:
 1336 001a 00BF     		.align	2
 1337              	.L32:
 1338 001c 00000000 		.word	BT_ENABLED
 1339 0020 00000000 		.word	.LC0
 1340 0024 00000000 		.word	movement_state
 1341              		.cfi_endproc
 1342              	.LFE68:
 1343              		.size	button, .-button
 1344              		.section	.text.isr_adcTimer,"ax",%progbits
 1345              		.align	2
 1346              		.global	isr_adcTimer
 1347              		.thumb
 1348              		.thumb_func
 1349              		.type	isr_adcTimer, %function
 1350              	isr_adcTimer:
 1351              	.LFB69:
 253:.\main.c      **** 
 254:.\main.c      **** CY_ISR(isr_adcTimer)
 255:.\main.c      **** {
 1352              		.loc 1 255 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 1, uses_anonymous_args = 0
 1356 0000 80B5     		push	{r7, lr}
 1357              		.cfi_def_cfa_offset 8
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
 1360 0002 00AF     		add	r7, sp, #0
 1361              		.cfi_def_cfa_register 7
 256:.\main.c      ****     ADC_StartConvert();
 1362              		.loc 1 256 0
 1363 0004 FFF7FEFF 		bl	ADC_StartConvert
 257:.\main.c      **** }
 1364              		.loc 1 257 0
 1365 0008 80BD     		pop	{r7, pc}
 1366              		.cfi_endproc
 1367              	.LFE69:
 1368              		.size	isr_adcTimer, .-isr_adcTimer
 1369 000a 00BF     		.section	.rodata
 1370 0012 0000     		.align	2
 1371              	.LC1:
 1372 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1372      7A6F6E65 
 1372      206C6566 
 1372      740D0A00 
 1373              		.section	.text.isr_deadzone,"ax",%progbits
 1374              		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 30


 1375              		.global	isr_deadzone
 1376              		.thumb
 1377              		.thumb_func
 1378              		.type	isr_deadzone, %function
 1379              	isr_deadzone:
 1380              	.LFB70:
 258:.\main.c      **** 
 259:.\main.c      **** CY_ISR(isr_deadzone)
 260:.\main.c      **** {
 1381              		.loc 1 260 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 0
 1384              		@ frame_needed = 1, uses_anonymous_args = 0
 1385 0000 80B5     		push	{r7, lr}
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 00AF     		add	r7, sp, #0
 1390              		.cfi_def_cfa_register 7
 261:.\main.c      ****     sensorsDisabled = 0;
 1391              		.loc 1 261 0
 1392 0004 054B     		ldr	r3, .L36
 1393 0006 0022     		movs	r2, #0
 1394 0008 1A60     		str	r2, [r3]
 262:.\main.c      ****     deadzone = 0;
 1395              		.loc 1 262 0
 1396 000a 054B     		ldr	r3, .L36+4
 1397 000c 0022     		movs	r2, #0
 1398 000e 1A70     		strb	r2, [r3]
 263:.\main.c      ****     Timer_Deadzone_Stop();
 1399              		.loc 1 263 0
 1400 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 264:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1401              		.loc 1 264 0
 1402 0014 0348     		ldr	r0, .L36+8
 1403 0016 FFF7FEFF 		bl	UART_PutString
 265:.\main.c      **** }
 1404              		.loc 1 265 0
 1405 001a 80BD     		pop	{r7, pc}
 1406              	.L37:
 1407              		.align	2
 1408              	.L36:
 1409 001c 00000000 		.word	sensorsDisabled
 1410 0020 00000000 		.word	deadzone
 1411 0024 14000000 		.word	.LC1
 1412              		.cfi_endproc
 1413              	.LFE70:
 1414              		.size	isr_deadzone, .-isr_deadzone
 1415              		.section	.rodata
 1416              		.align	2
 1417              	.LC2:
 1418 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1418      20747261 
 1418      76656C3A 
 1418      2025640D 
 1418      0A00
 1419 0036 0000     		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 31


 1420              	.LC3:
 1421 0038 54726967 		.ascii	"Trigger quad\015\012\000"
 1421      67657220 
 1421      71756164 
 1421      0D0A00
 1422 0047 00       		.align	2
 1423              	.LC4:
 1424 0048 696E7374 		.ascii	"instruct trig:%d\015\012\000"
 1424      72756374 
 1424      20747269 
 1424      673A2564 
 1424      0D0A00
 1425              		.global	__aeabi_d2iz
 1426 005b 00       		.align	2
 1427              	.LC5:
 1428 005c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1428      65742064 
 1428      6973743A 
 1428      2025640D 
 1428      0A00
 1429 006e 0000     		.align	2
 1430              	.LC6:
 1431 0070 696E7374 		.ascii	"instr count:%d\015\012\000"
 1431      7220636F 
 1431      756E743A 
 1431      25640D0A 
 1431      00
 1432 0081 000000   		.align	2
 1433              	.LC7:
 1434 0084 74726176 		.ascii	"travel:%d, sensors on:%d\015\012\000"
 1434      656C3A25 
 1434      642C2073 
 1434      656E736F 
 1434      7273206F 
 1435 009f 00       		.align	2
 1436              	.LC8:
 1437 00a0 54726967 		.ascii	"Trigger intersection\015\012\000"
 1437      67657220 
 1437      696E7465 
 1437      72736563 
 1437      74696F6E 
 1438              		.section	.text.main,"ax",%progbits
 1439              		.align	2
 1440              		.global	main
 1441              		.thumb
 1442              		.thumb_func
 1443              		.type	main, %function
 1444              	main:
 1445              	.LFB71:
 266:.\main.c      **** 
 267:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 268:.\main.c      **** 
 269:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 270:.\main.c      **** int main()
 271:.\main.c      **** {  
 1446              		.loc 1 271 0
 1447              		.cfi_startproc
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 32


 1448              		@ args = 0, pretend = 0, frame = 40
 1449              		@ frame_needed = 1, uses_anonymous_args = 0
 1450 0000 90B5     		push	{r4, r7, lr}
 1451              		.cfi_def_cfa_offset 12
 1452              		.cfi_offset 4, -12
 1453              		.cfi_offset 7, -8
 1454              		.cfi_offset 14, -4
 1455 0002 8BB0     		sub	sp, sp, #44
 1456              		.cfi_def_cfa_offset 56
 1457 0004 00AF     		add	r7, sp, #0
 1458              		.cfi_def_cfa_register 7
 272:.\main.c      **** 
 273:.\main.c      **** // ----- INITIALIZATIONS ----------
 274:.\main.c      ****     
 275:.\main.c      ****     min_turn_quad = DEFAULT_MIN_TURN;
 1459              		.loc 1 275 0
 1460 0006 B24B     		ldr	r3, .L100
 1461 0008 BC22     		movs	r2, #188
 1462 000a 1A80     		strh	r2, [r3]	@ movhi
 276:.\main.c      ****     max_turn_quad = DEFAULT_MAX_TURN;
 1463              		.loc 1 276 0
 1464 000c B14B     		ldr	r3, .L100+4
 1465 000e E422     		movs	r2, #228
 1466 0010 1A80     		strh	r2, [r3]	@ movhi
 277:.\main.c      ****     LostFlag = 0;// lost flag will be set to 1 if the robot gets lost
 1467              		.loc 1 277 0
 1468 0012 B14B     		ldr	r3, .L100+8
 1469 0014 0022     		movs	r2, #0
 1470 0016 1A70     		strb	r2, [r3]
 278:.\main.c      ****     
 279:.\main.c      ****     CYGlobalIntEnable;
 1471              		.loc 1 279 0
 1472              	@ 279 ".\main.c" 1
 1473 0018 62B6     		CPSIE   i
 1474              	@ 0 "" 2
 280:.\main.c      ****     if(ENABLE_PWM)
 281:.\main.c      ****     {
 282:.\main.c      ****         PWM_1_Start();// starting the pwm
 1475              		.loc 1 282 0
 1476              		.thumb
 1477 001a FFF7FEFF 		bl	PWM_1_Start
 283:.\main.c      ****         PWM_2_Start();// starting the pwm
 1478              		.loc 1 283 0
 1479 001e FFF7FEFF 		bl	PWM_2_Start
 284:.\main.c      ****     }
 285:.\main.c      ****     
 286:.\main.c      ****     if(ENABLE_ADC)
 287:.\main.c      ****     {
 288:.\main.c      ****         ADC_Start();
 289:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 290:.\main.c      ****         //ADC_StartConvert();
 291:.\main.c      ****         
 292:.\main.c      ****         //start the ADC timer for software trigger mode
 293:.\main.c      ****         Timer_TS_Start();
 294:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 295:.\main.c      ****     }
 296:.\main.c      ****     
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 33


 297:.\main.c      ****     if (ENABLE_QUAD)
 298:.\main.c      ****     {
 299:.\main.c      ****         QuadDec_M1_Start();
 1480              		.loc 1 299 0
 1481 0022 FFF7FEFF 		bl	QuadDec_M1_Start
 300:.\main.c      ****         QuadDec_M2_Start();
 1482              		.loc 1 300 0
 1483 0026 FFF7FEFF 		bl	QuadDec_M2_Start
 301:.\main.c      ****         
 302:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1484              		.loc 1 302 0
 1485 002a AC48     		ldr	r0, .L100+12
 1486 002c FFF7FEFF 		bl	isr_quad1_StartEx
 303:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1487              		.loc 1 303 0
 1488 0030 AB48     		ldr	r0, .L100+16
 1489 0032 FFF7FEFF 		bl	isr_turn_count_StartEx
 304:.\main.c      ****         
 305:.\main.c      ****         Timer_1_Start();
 1490              		.loc 1 305 0
 1491 0036 FFF7FEFF 		bl	Timer_1_Start
 306:.\main.c      ****     }
 307:.\main.c      ****     
 308:.\main.c      ****     if(ENABLE_STOP){
 309:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 310:.\main.c      ****         
 311:.\main.c      ****     }
 312:.\main.c      ****     isr_button_StartEx(button);
 1492              		.loc 1 312 0
 1493 003a AA48     		ldr	r0, .L100+20
 1494 003c FFF7FEFF 		bl	isr_button_StartEx
 313:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1495              		.loc 1 313 0
 1496 0040 A948     		ldr	r0, .L100+24
 1497 0042 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 314:.\main.c      **** 
 315:.\main.c      ****     // ------USB SETUP ----------------    
 316:.\main.c      ****     if (USE_USB){    
 317:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1498              		.loc 1 317 0
 1499 0046 0020     		movs	r0, #0
 1500 0048 0121     		movs	r1, #1
 1501 004a FFF7FEFF 		bl	USBUART_Start
 318:.\main.c      ****         if (USBUART_GetConfiguration())
 1502              		.loc 1 318 0
 1503 004e FFF7FEFF 		bl	USBUART_GetConfiguration
 1504 0052 0346     		mov	r3, r0
 1505 0054 002B     		cmp	r3, #0
 1506 0056 01D0     		beq	.L39
 319:.\main.c      ****             {
 320:.\main.c      ****                  USBUART_CDC_Init();
 1507              		.loc 1 320 0
 1508 0058 FFF7FEFF 		bl	USBUART_CDC_Init
 1509              	.L39:
 321:.\main.c      ****             }
 322:.\main.c      ****     }
 323:.\main.c      ****     
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 34


 324:.\main.c      ****     if(BIN_ENABLED){
 1510              		.loc 1 324 0
 1511 005c A34B     		ldr	r3, .L100+28
 1512 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 0060 002B     		cmp	r3, #0
 1514 0062 01D0     		beq	.L40
 325:.\main.c      ****         changeToRF();
 1515              		.loc 1 325 0
 1516 0064 FFF7FEFF 		bl	changeToRF
 1517              	.L40:
 326:.\main.c      ****     }
 327:.\main.c      ****     
 328:.\main.c      ****     if(BT_ENABLED){
 1518              		.loc 1 328 0
 1519 0068 A14B     		ldr	r3, .L100+32
 1520 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 006c 002B     		cmp	r3, #0
 1522 006e 01D0     		beq	.L41
 329:.\main.c      ****         changeToBT();
 1523              		.loc 1 329 0
 1524 0070 FFF7FEFF 		bl	changeToBT
 1525              	.L41:
 330:.\main.c      ****     }
 331:.\main.c      ****     
 332:.\main.c      ****     uint16 actionDebounce = 0;
 1526              		.loc 1 332 0
 1527 0074 0023     		movs	r3, #0
 1528 0076 FB84     		strh	r3, [r7, #38]	@ movhi
 1529              	.L97:
 333:.\main.c      ****     
 334:.\main.c      ****     //usbPutString("Started");
 335:.\main.c      ****     for(;;)
 336:.\main.c      ****     {
 337:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 338:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1530              		.loc 1 338 0
 1531 0078 FFF7FEFF 		bl	Quad_Dec_response
 339:.\main.c      ****         if(BIN_ENABLED == 1)
 1532              		.loc 1 339 0
 1533 007c 9B4B     		ldr	r3, .L100+28
 1534 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1535 0080 012B     		cmp	r3, #1
 1536 0082 03D1     		bne	.L42
 340:.\main.c      ****         {
 341:.\main.c      ****             handle_rx_binary();
 1537              		.loc 1 341 0
 1538 0084 FFF7FEFF 		bl	handle_rx_binary
 342:.\main.c      ****             print_RF();
 1539              		.loc 1 342 0
 1540 0088 FFF7FEFF 		bl	print_RF
 1541              	.L42:
 343:.\main.c      ****         }
 344:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 345:.\main.c      ****        
 346:.\main.c      ****         readFrontSensors(frontSensors);
 1542              		.loc 1 346 0
 1543 008c 9948     		ldr	r0, .L100+36
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 35


 1544 008e FFF7FEFF 		bl	readFrontSensors
 347:.\main.c      ****         
 348:.\main.c      ****         switch(track_mode)
 1545              		.loc 1 348 0
 1546 0092 994B     		ldr	r3, .L100+40
 1547 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 0096 072B     		cmp	r3, #7
 1549 0098 00F21483 		bhi	.L43
 1550 009c 01A2     		adr	r2, .L45
 1551 009e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1552 00a2 00BF     		.p2align 2
 1553              	.L45:
 1554 00a4 C5060000 		.word	.L43+1
 1555 00a8 C5060000 		.word	.L43+1
 1556 00ac C5060000 		.word	.L43+1
 1557 00b0 C5000000 		.word	.L48+1
 1558 00b4 C5060000 		.word	.L43+1
 1559 00b8 09010000 		.word	.L50+1
 1560 00bc 2F010000 		.word	.L51+1
 1561 00c0 2F010000 		.word	.L51+1
 1562              		.p2align 1
 1563              	.L48:
 349:.\main.c      ****         {
 350:.\main.c      ****             case SQUARE_TRACK:
 351:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1564              		.loc 1 351 0
 1565 00c4 8D4B     		ldr	r3, .L100+44
 1566 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1567 00c8 012B     		cmp	r3, #1
 1568 00ca 1CD0     		beq	.L52
 1569              		.loc 1 351 0 is_stmt 0 discriminator 1
 1570 00cc 8B4B     		ldr	r3, .L100+44
 1571 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1572 00d0 022B     		cmp	r3, #2
 1573 00d2 18D0     		beq	.L52
 352:.\main.c      ****                 {
 353:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1574              		.loc 1 353 0 is_stmt 1
 1575 00d4 874B     		ldr	r3, .L100+36
 1576 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1577 00d8 012B     		cmp	r3, #1
 1578 00da 06D1     		bne	.L53
 1579              		.loc 1 353 0 is_stmt 0 discriminator 1
 1580 00dc 854B     		ldr	r3, .L100+36
 1581 00de 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1582 00e0 012B     		cmp	r3, #1
 1583 00e2 02D1     		bne	.L53
 354:.\main.c      ****                         initTurnLeft();
 1584              		.loc 1 354 0 is_stmt 1
 1585 00e4 FFF7FEFF 		bl	initTurnLeft
 1586 00e8 0DE0     		b	.L52
 1587              	.L53:
 355:.\main.c      ****                     }
 356:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1588              		.loc 1 356 0
 1589 00ea 824B     		ldr	r3, .L100+36
 1590 00ec 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 36


 1591 00ee 012B     		cmp	r3, #1
 1592 00f0 06D1     		bne	.L54
 1593              		.loc 1 356 0 is_stmt 0 discriminator 1
 1594 00f2 804B     		ldr	r3, .L100+36
 1595 00f4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1596 00f6 012B     		cmp	r3, #1
 1597 00f8 02D1     		bne	.L54
 357:.\main.c      ****                     {
 358:.\main.c      ****                         initTurnRight();
 1598              		.loc 1 358 0 is_stmt 1
 1599 00fa FFF7FEFF 		bl	initTurnRight
 1600 00fe 02E0     		b	.L52
 1601              	.L54:
 359:.\main.c      ****                     }
 360:.\main.c      ****                     else inittrackLineZ();
 1602              		.loc 1 360 0
 1603 0100 FFF7FEFF 		bl	inittrackLineZ
 361:.\main.c      ****                 }
 362:.\main.c      ****             break;
 1604              		.loc 1 362 0
 1605 0104 DEE2     		b	.L43
 1606              	.L52:
 1607 0106 DDE2     		b	.L43
 1608              	.L50:
 363:.\main.c      ****             case NO_TRACK:
 364:.\main.c      ****             break;
 365:.\main.c      ****             case CURVE_TRACK:
 366:.\main.c      ****             break;
 367:.\main.c      ****             case U_TRACK:
 368:.\main.c      ****             break;
 369:.\main.c      ****             case QUAD_STOP:
 370:.\main.c      ****             break;
 371:.\main.c      ****             case RF_STOP:
 372:.\main.c      ****                 if(initial_pos_valid == 1)
 1609              		.loc 1 372 0
 1610 0108 7D4B     		ldr	r3, .L100+48
 1611 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1612 010c 012B     		cmp	r3, #1
 1613 010e 0DD1     		bne	.L55
 373:.\main.c      ****                 {
 374:.\main.c      ****                     //changeToBT();
 375:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 376:.\main.c      ****                     //changeToRF();
 377:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1614              		.loc 1 377 0
 1615 0110 7C4B     		ldr	r3, .L100+52
 1616 0112 5A88     		ldrh	r2, [r3, #2]
 1617 0114 7C4B     		ldr	r3, .L100+56
 1618 0116 1A80     		strh	r2, [r3]	@ movhi
 378:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1619              		.loc 1 378 0
 1620 0118 7A4B     		ldr	r3, .L100+52
 1621 011a 9A88     		ldrh	r2, [r3, #4]
 1622 011c 7B4B     		ldr	r3, .L100+60
 1623 011e 1A80     		strh	r2, [r3]	@ movhi
 379:.\main.c      ****                     initial_pos_valid = 2;
 1624              		.loc 1 379 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 37


 1625 0120 774B     		ldr	r3, .L100+48
 1626 0122 0222     		movs	r2, #2
 1627 0124 1A70     		strb	r2, [r3]
 380:.\main.c      ****                     initForward();
 1628              		.loc 1 380 0
 1629 0126 FFF7FEFF 		bl	initForward
 381:.\main.c      ****                 }
 382:.\main.c      ****             break;
 1630              		.loc 1 382 0
 1631 012a CBE2     		b	.L43
 1632              	.L55:
 1633 012c CAE2     		b	.L43
 1634              	.L51:
 383:.\main.c      ****             case MAP_TRAVERSE:
 384:.\main.c      ****             case DEST_TEST:
 385:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1635              		.loc 1 385 0
 1636 012e 734B     		ldr	r3, .L100+44
 1637 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 0132 012B     		cmp	r3, #1
 1639 0134 00F0C582 		beq	.L56
 1640              		.loc 1 385 0 is_stmt 0 discriminator 1
 1641 0138 704B     		ldr	r3, .L100+44
 1642 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1643 013c 022B     		cmp	r3, #2
 1644 013e 00F0C082 		beq	.L56
 1645              		.loc 1 385 0 discriminator 2
 1646 0142 6E4B     		ldr	r3, .L100+44
 1647 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1648 0146 072B     		cmp	r3, #7
 1649 0148 00F0BB82 		beq	.L56
 1650              	.LBB4:
 386:.\main.c      ****                     //if(instructionCount > instructionLength) initBrake();
 387:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 388:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1651              		.loc 1 388 0 is_stmt 1
 1652 014c 704B     		ldr	r3, .L100+64
 1653 014e 1B88     		ldrh	r3, [r3]
 1654 0150 1A46     		mov	r2, r3
 1655 0152 704B     		ldr	r3, .L100+68
 1656 0154 9B5C     		ldrb	r3, [r3, r2]
 1657 0156 87F82330 		strb	r3, [r7, #35]
 389:.\main.c      ****                     leftOn = frontSensors[0] && frontSensors[2];
 1658              		.loc 1 389 0
 1659 015a 664B     		ldr	r3, .L100+36
 1660 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1661 015e 002B     		cmp	r3, #0
 1662 0160 05D0     		beq	.L57
 1663              		.loc 1 389 0 is_stmt 0 discriminator 1
 1664 0162 644B     		ldr	r3, .L100+36
 1665 0164 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1666 0166 002B     		cmp	r3, #0
 1667 0168 01D0     		beq	.L57
 1668              		.loc 1 389 0 discriminator 3
 1669 016a 0123     		movs	r3, #1
 1670 016c 00E0     		b	.L58
 1671              	.L57:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 38


 1672              		.loc 1 389 0 discriminator 4
 1673 016e 0023     		movs	r3, #0
 1674              	.L58:
 1675              		.loc 1 389 0 discriminator 6
 1676 0170 DAB2     		uxtb	r2, r3
 1677 0172 694B     		ldr	r3, .L100+72
 1678 0174 1A70     		strb	r2, [r3]
 390:.\main.c      ****                     rightOn = frontSensors[4] && frontSensors[2];
 1679              		.loc 1 390 0 is_stmt 1 discriminator 6
 1680 0176 5F4B     		ldr	r3, .L100+36
 1681 0178 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1682 017a 002B     		cmp	r3, #0
 1683 017c 05D0     		beq	.L59
 1684              		.loc 1 390 0 is_stmt 0 discriminator 1
 1685 017e 5D4B     		ldr	r3, .L100+36
 1686 0180 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1687 0182 002B     		cmp	r3, #0
 1688 0184 01D0     		beq	.L59
 1689              		.loc 1 390 0 discriminator 3
 1690 0186 0123     		movs	r3, #1
 1691 0188 00E0     		b	.L60
 1692              	.L59:
 1693              		.loc 1 390 0 discriminator 4
 1694 018a 0023     		movs	r3, #0
 1695              	.L60:
 1696              		.loc 1 390 0 discriminator 6
 1697 018c DAB2     		uxtb	r2, r3
 1698 018e 634B     		ldr	r3, .L100+76
 1699 0190 1A70     		strb	r2, [r3]
 391:.\main.c      **** 
 392:.\main.c      ****                     //else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U' || nextS
 393:.\main.c      ****                     if (overshot_target == 1)
 1700              		.loc 1 393 0 is_stmt 1 discriminator 6
 1701 0192 634B     		ldr	r3, .L100+80
 1702 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1703 0196 012B     		cmp	r3, #1
 1704 0198 40F07C81 		bne	.L61
 1705              	.LBB5:
 394:.\main.c      ****                     {
 395:.\main.c      ****                                 
 396:.\main.c      ****                                 //instructionCount += 2;
 397:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 398:.\main.c      ****                         
 399:.\main.c      ****                                 isr_quad1_Stop();
 1706              		.loc 1 399 0
 1707 019c FFF7FEFF 		bl	isr_quad1_Stop
 400:.\main.c      ****                                 
 401:.\main.c      ****                                 char mes[32];
 402:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1708              		.loc 1 402 0
 1709 01a0 604B     		ldr	r3, .L100+84
 1710 01a2 1B88     		ldrh	r3, [r3]
 1711 01a4 1BB2     		sxth	r3, r3
 1712 01a6 3A46     		mov	r2, r7
 1713 01a8 1046     		mov	r0, r2
 1714 01aa 5F49     		ldr	r1, .L100+88
 1715 01ac 1A46     		mov	r2, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 39


 1716 01ae FFF7FEFF 		bl	sprintf
 403:.\main.c      ****                                  UART_PutString(mes);
 1717              		.loc 1 403 0
 1718 01b2 3B46     		mov	r3, r7
 1719 01b4 1846     		mov	r0, r3
 1720 01b6 FFF7FEFF 		bl	UART_PutString
 404:.\main.c      ****                                  accum_dist = 0;
 1721              		.loc 1 404 0
 1722 01ba 5A4B     		ldr	r3, .L100+84
 1723 01bc 0022     		movs	r2, #0
 1724 01be 1A80     		strh	r2, [r3]	@ movhi
 405:.\main.c      ****                                 uint8 nextStepDist;
 406:.\main.c      ****                                 if(instructionCount <= instructionLength - 3) nextStepDist = instru
 1725              		.loc 1 406 0
 1726 01c0 534B     		ldr	r3, .L100+64
 1727 01c2 1B88     		ldrh	r3, [r3]
 1728 01c4 1A46     		mov	r2, r3
 1729 01c6 594B     		ldr	r3, .L100+92
 1730 01c8 1B88     		ldrh	r3, [r3]
 1731 01ca 033B     		subs	r3, r3, #3
 1732 01cc 9A42     		cmp	r2, r3
 1733 01ce 07DC     		bgt	.L62
 1734              		.loc 1 406 0 is_stmt 0 discriminator 1
 1735 01d0 4F4B     		ldr	r3, .L100+64
 1736 01d2 1B88     		ldrh	r3, [r3]
 1737 01d4 0333     		adds	r3, r3, #3
 1738 01d6 4F4A     		ldr	r2, .L100+68
 1739 01d8 D35C     		ldrb	r3, [r2, r3]
 1740 01da 87F82530 		strb	r3, [r7, #37]
 1741 01de 02E0     		b	.L63
 1742              	.L62:
 407:.\main.c      ****                                 else nextStepDist = 0;
 1743              		.loc 1 407 0 is_stmt 1
 1744 01e0 0023     		movs	r3, #0
 1745 01e2 87F82530 		strb	r3, [r7, #37]
 1746              	.L63:
 408:.\main.c      ****                                 
 409:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1747              		.loc 1 409 0
 1748 01e6 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 1749 01ea 9BB2     		uxth	r3, r3
 1750 01ec 1A46     		mov	r2, r3	@ movhi
 1751 01ee D200     		lsls	r2, r2, #3
 1752 01f0 1344     		add	r3, r3, r2
 1753 01f2 1B01     		lsls	r3, r3, #4
 1754 01f4 9BB2     		uxth	r3, r3
 1755 01f6 9AB2     		uxth	r2, r3
 1756 01f8 4D4B     		ldr	r3, .L100+96
 1757 01fa 1A80     		strh	r2, [r3]	@ movhi
 410:.\main.c      ****                                 
 411:.\main.c      ****                                 
 412:.\main.c      ****                                     UART_PutString("Trigger quad\r\n");
 1758              		.loc 1 412 0
 1759 01fc 4D48     		ldr	r0, .L100+100
 1760 01fe FFF7FEFF 		bl	UART_PutString
 413:.\main.c      ****                                     sprintf(mes, "instruct trig:%d\r\n", instructions[instructionCo
 1761              		.loc 1 413 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 40


 1762 0202 434B     		ldr	r3, .L100+64
 1763 0204 1B88     		ldrh	r3, [r3]
 1764 0206 1A46     		mov	r2, r3
 1765 0208 424B     		ldr	r3, .L100+68
 1766 020a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1767 020c 1A46     		mov	r2, r3
 1768 020e 3B46     		mov	r3, r7
 1769 0210 1846     		mov	r0, r3
 1770 0212 4949     		ldr	r1, .L100+104
 1771 0214 FFF7FEFF 		bl	sprintf
 414:.\main.c      ****                                     UART_PutString(mes);
 1772              		.loc 1 414 0
 1773 0218 3B46     		mov	r3, r7
 1774 021a 1846     		mov	r0, r3
 1775 021c FFF7FEFF 		bl	UART_PutString
 415:.\main.c      ****                                     nextStep = instructions[instructionCount];
 1776              		.loc 1 415 0
 1777 0220 3B4B     		ldr	r3, .L100+64
 1778 0222 1B88     		ldrh	r3, [r3]
 1779 0224 1A46     		mov	r2, r3
 1780 0226 3B4B     		ldr	r3, .L100+68
 1781 0228 9B5C     		ldrb	r3, [r3, r2]
 1782 022a 87F82330 		strb	r3, [r7, #35]
 416:.\main.c      ****                                     switch(nextStep)
 1783              		.loc 1 416 0
 1784 022e 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1785 0232 443B     		subs	r3, r3, #68
 1786 0234 112B     		cmp	r3, #17
 1787 0236 00F2FA80 		bhi	.L64
 1788 023a 01A2     		adr	r2, .L66
 1789 023c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1790              		.p2align 2
 1791              	.L66:
 1792 0240 49030000 		.word	.L65+1
 1793 0244 2F040000 		.word	.L64+1
 1794 0248 2F040000 		.word	.L64+1
 1795 024c 2F040000 		.word	.L64+1
 1796 0250 2F040000 		.word	.L64+1
 1797 0254 2F040000 		.word	.L64+1
 1798 0258 2F040000 		.word	.L64+1
 1799 025c 2F040000 		.word	.L64+1
 1800 0260 C7030000 		.word	.L67+1
 1801 0264 2F040000 		.word	.L64+1
 1802 0268 2F040000 		.word	.L64+1
 1803 026c 2F040000 		.word	.L64+1
 1804 0270 2F040000 		.word	.L64+1
 1805 0274 2F040000 		.word	.L64+1
 1806 0278 FB030000 		.word	.L68+1
 1807 027c 7D030000 		.word	.L69+1
 1808 0280 2F040000 		.word	.L64+1
 1809 0284 89020000 		.word	.L70+1
 1810              		.p2align 1
 1811              	.L70:
 417:.\main.c      ****                                     {
 418:.\main.c      ****                                         case 'U':
 419:.\main.c      ****                                              Timer_Deadzone_WriteCounter(U_DEADZONE);
 1812              		.loc 1 419 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 41


 1813 0288 2C48     		ldr	r0, .L100+108
 1814 028a FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 420:.\main.c      ****                                             initTurnU();
 1815              		.loc 1 420 0
 1816 028e FFF7FEFF 		bl	initTurnU
 421:.\main.c      ****                                             //target_distance_quad += 208;
 422:.\main.c      ****                                             target_distance_quad -= (U_OFFSET - QUAD_PER_UNIT * 0.5
 1817              		.loc 1 422 0
 1818 0292 274B     		ldr	r3, .L100+96
 1819 0294 1B88     		ldrh	r3, [r3]
 1820 0296 1BB2     		sxth	r3, r3
 1821 0298 1846     		mov	r0, r3
 1822 029a FFF7FEFF 		bl	__aeabi_i2d
 1823 029e 0246     		mov	r2, r0
 1824 02a0 0B46     		mov	r3, r1
 1825 02a2 1046     		mov	r0, r2
 1826 02a4 1946     		mov	r1, r3
 1827 02a6 4FF00002 		mov	r2, #0
 1828 02aa 254B     		ldr	r3, .L100+112
 1829 02ac FFF7FEFF 		bl	__aeabi_dsub
 1830 02b0 0246     		mov	r2, r0
 1831 02b2 0B46     		mov	r3, r1
 1832 02b4 1046     		mov	r0, r2
 1833 02b6 1946     		mov	r1, r3
 1834 02b8 FFF7FEFF 		bl	__aeabi_d2iz
 1835 02bc 0346     		mov	r3, r0
 1836 02be 9AB2     		uxth	r2, r3
 1837 02c0 1B4B     		ldr	r3, .L100+96
 1838 02c2 1A80     		strh	r2, [r3]	@ movhi
 423:.\main.c      ****                                             Timer_Deadzone_Start();
 1839              		.loc 1 423 0
 1840 02c4 FFF7FEFF 		bl	Timer_Deadzone_Start
 424:.\main.c      ****                                              deadzone = 1;
 1841              		.loc 1 424 0
 1842 02c8 1E4B     		ldr	r3, .L100+116
 1843 02ca 0122     		movs	r2, #1
 1844 02cc 1A70     		strb	r2, [r3]
 425:.\main.c      ****                                         break;
 1845              		.loc 1 425 0
 1846 02ce AEE0     		b	.L64
 1847              	.L101:
 1848              		.align	2
 1849              	.L100:
 1850 02d0 00000000 		.word	min_turn_quad
 1851 02d4 00000000 		.word	max_turn_quad
 1852 02d8 00000000 		.word	LostFlag
 1853 02dc 00000000 		.word	isr_quad1
 1854 02e0 00000000 		.word	isr_turn_timer
 1855 02e4 00000000 		.word	button
 1856 02e8 00000000 		.word	isr_deadzone
 1857 02ec 00000000 		.word	BIN_ENABLED
 1858 02f0 00000000 		.word	BT_ENABLED
 1859 02f4 00000000 		.word	frontSensors
 1860 02f8 00000000 		.word	track_mode
 1861 02fc 00000000 		.word	movement_state
 1862 0300 00000000 		.word	initial_pos_valid
 1863 0304 00000000 		.word	system_state
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 42


 1864 0308 00000000 		.word	initial_x_pos
 1865 030c 00000000 		.word	initial_y_pos
 1866 0310 00000000 		.word	instructionCount
 1867 0314 00000000 		.word	instructions
 1868 0318 00000000 		.word	leftOn
 1869 031c 00000000 		.word	rightOn
 1870 0320 00000000 		.word	overshot_target
 1871 0324 00000000 		.word	accum_dist
 1872 0328 24000000 		.word	.LC2
 1873 032c 00000000 		.word	instructionLength
 1874 0330 00000000 		.word	target_distance_quad
 1875 0334 38000000 		.word	.LC3
 1876 0338 48000000 		.word	.LC4
 1877 033c 905F0100 		.word	90000
 1878 0340 00804040 		.word	1077968896
 1879 0344 00000000 		.word	deadzone
 1880              	.L65:
 426:.\main.c      ****                                         case 'D':
 427:.\main.c      ****                                             target_distance_quad -= QUAD_PER_UNIT * 0.5;
 1881              		.loc 1 427 0
 1882 0348 AD4B     		ldr	r3, .L102
 1883 034a 1B88     		ldrh	r3, [r3]
 1884 034c 1BB2     		sxth	r3, r3
 1885 034e 1846     		mov	r0, r3
 1886 0350 FFF7FEFF 		bl	__aeabi_i2d
 1887 0354 0246     		mov	r2, r0
 1888 0356 0B46     		mov	r3, r1
 1889 0358 1046     		mov	r0, r2
 1890 035a 1946     		mov	r1, r3
 1891 035c 4FF00002 		mov	r2, #0
 1892 0360 A84B     		ldr	r3, .L102+4
 1893 0362 FFF7FEFF 		bl	__aeabi_dsub
 1894 0366 0246     		mov	r2, r0
 1895 0368 0B46     		mov	r3, r1
 1896 036a 1046     		mov	r0, r2
 1897 036c 1946     		mov	r1, r3
 1898 036e FFF7FEFF 		bl	__aeabi_d2iz
 1899 0372 0346     		mov	r3, r0
 1900 0374 9AB2     		uxth	r2, r3
 1901 0376 A24B     		ldr	r3, .L102
 1902 0378 1A80     		strh	r2, [r3]	@ movhi
 428:.\main.c      ****                                             //do nothing
 429:.\main.c      ****                                         break;
 1903              		.loc 1 429 0
 1904 037a 58E0     		b	.L64
 1905              	.L69:
 430:.\main.c      ****                                         case 'S':
 431:.\main.c      ****                                             inittrackLineZ();
 1906              		.loc 1 431 0
 1907 037c FFF7FEFF 		bl	inittrackLineZ
 432:.\main.c      ****                                             Timer_Deadzone_WriteCounter(S_DEADZONE);
 1908              		.loc 1 432 0
 1909 0380 42F21070 		movw	r0, #10000
 1910 0384 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 433:.\main.c      ****                                              target_distance_quad -= (QUAD_PER_UNIT * 0.5);
 1911              		.loc 1 433 0
 1912 0388 9D4B     		ldr	r3, .L102
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 43


 1913 038a 1B88     		ldrh	r3, [r3]
 1914 038c 1BB2     		sxth	r3, r3
 1915 038e 1846     		mov	r0, r3
 1916 0390 FFF7FEFF 		bl	__aeabi_i2d
 1917 0394 0246     		mov	r2, r0
 1918 0396 0B46     		mov	r3, r1
 1919 0398 1046     		mov	r0, r2
 1920 039a 1946     		mov	r1, r3
 1921 039c 4FF00002 		mov	r2, #0
 1922 03a0 984B     		ldr	r3, .L102+4
 1923 03a2 FFF7FEFF 		bl	__aeabi_dsub
 1924 03a6 0246     		mov	r2, r0
 1925 03a8 0B46     		mov	r3, r1
 1926 03aa 1046     		mov	r0, r2
 1927 03ac 1946     		mov	r1, r3
 1928 03ae FFF7FEFF 		bl	__aeabi_d2iz
 1929 03b2 0346     		mov	r3, r0
 1930 03b4 9AB2     		uxth	r2, r3
 1931 03b6 924B     		ldr	r3, .L102
 1932 03b8 1A80     		strh	r2, [r3]	@ movhi
 434:.\main.c      ****                                             Timer_Deadzone_Start();
 1933              		.loc 1 434 0
 1934 03ba FFF7FEFF 		bl	Timer_Deadzone_Start
 435:.\main.c      ****                                             deadzone = 1;
 1935              		.loc 1 435 0
 1936 03be 924B     		ldr	r3, .L102+8
 1937 03c0 0122     		movs	r2, #1
 1938 03c2 1A70     		strb	r2, [r3]
 436:.\main.c      ****                                         break;
 1939              		.loc 1 436 0
 1940 03c4 33E0     		b	.L64
 1941              	.L67:
 437:.\main.c      ****                                         case 'L':
 438:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 439:.\main.c      ****                                         min_turn_quad = QUAD_TURN_MIN;
 1942              		.loc 1 439 0
 1943 03c6 914B     		ldr	r3, .L102+12
 1944 03c8 A822     		movs	r2, #168
 1945 03ca 1A80     		strh	r2, [r3]	@ movhi
 440:.\main.c      ****                                         max_turn_quad = QUAD_TURN_MAX;
 1946              		.loc 1 440 0
 1947 03cc 904B     		ldr	r3, .L102+16
 1948 03ce F822     		movs	r2, #248
 1949 03d0 1A80     		strh	r2, [r3]	@ movhi
 441:.\main.c      ****                                         initTurnLeft();
 1950              		.loc 1 441 0
 1951 03d2 FFF7FEFF 		bl	initTurnLeft
 442:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1952              		.loc 1 442 0
 1953 03d6 4CF25030 		movw	r0, #50000
 1954 03da FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 443:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1955              		.loc 1 443 0
 1956 03de 884B     		ldr	r3, .L102
 1957 03e0 1B88     		ldrh	r3, [r3]
 1958 03e2 9BB2     		uxth	r3, r3
 1959 03e4 8A3B     		subs	r3, r3, #138
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 44


 1960 03e6 9BB2     		uxth	r3, r3
 1961 03e8 9AB2     		uxth	r2, r3
 1962 03ea 854B     		ldr	r3, .L102
 1963 03ec 1A80     		strh	r2, [r3]	@ movhi
 444:.\main.c      ****                                         deadzone = 1;
 1964              		.loc 1 444 0
 1965 03ee 864B     		ldr	r3, .L102+8
 1966 03f0 0122     		movs	r2, #1
 1967 03f2 1A70     		strb	r2, [r3]
 445:.\main.c      ****                                         Timer_Deadzone_Start();
 1968              		.loc 1 445 0
 1969 03f4 FFF7FEFF 		bl	Timer_Deadzone_Start
 446:.\main.c      ****                                             
 447:.\main.c      ****                                         break;
 1970              		.loc 1 447 0
 1971 03f8 19E0     		b	.L64
 1972              	.L68:
 448:.\main.c      ****                                         case 'R':
 449:.\main.c      ****                                         min_turn_quad = QUAD_TURN_MIN;
 1973              		.loc 1 449 0
 1974 03fa 844B     		ldr	r3, .L102+12
 1975 03fc A822     		movs	r2, #168
 1976 03fe 1A80     		strh	r2, [r3]	@ movhi
 450:.\main.c      ****                                         max_turn_quad = QUAD_TURN_MAX;
 1977              		.loc 1 450 0
 1978 0400 834B     		ldr	r3, .L102+16
 1979 0402 F822     		movs	r2, #248
 1980 0404 1A80     		strh	r2, [r3]	@ movhi
 451:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 452:.\main.c      ****                                         initTurnRight();
 1981              		.loc 1 452 0
 1982 0406 FFF7FEFF 		bl	initTurnRight
 453:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1983              		.loc 1 453 0
 1984 040a 7D4B     		ldr	r3, .L102
 1985 040c 1B88     		ldrh	r3, [r3]
 1986 040e 9BB2     		uxth	r3, r3
 1987 0410 8A3B     		subs	r3, r3, #138
 1988 0412 9BB2     		uxth	r3, r3
 1989 0414 9AB2     		uxth	r2, r3
 1990 0416 7A4B     		ldr	r3, .L102
 1991 0418 1A80     		strh	r2, [r3]	@ movhi
 454:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 455:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1992              		.loc 1 455 0
 1993 041a 4CF25030 		movw	r0, #50000
 1994 041e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 456:.\main.c      ****                                         deadzone = 1;
 1995              		.loc 1 456 0
 1996 0422 794B     		ldr	r3, .L102+8
 1997 0424 0122     		movs	r2, #1
 1998 0426 1A70     		strb	r2, [r3]
 457:.\main.c      ****                                         Timer_Deadzone_Start();
 1999              		.loc 1 457 0
 2000 0428 FFF7FEFF 		bl	Timer_Deadzone_Start
 458:.\main.c      ****                                             
 459:.\main.c      ****                                         break;
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 45


 2001              		.loc 1 459 0
 2002 042c 00BF     		nop
 2003              	.L64:
 460:.\main.c      ****                                     }                                   
 461:.\main.c      ****                                     reached_target = 0;
 2004              		.loc 1 461 0
 2005 042e 794B     		ldr	r3, .L102+20
 2006 0430 0022     		movs	r2, #0
 2007 0432 1A70     		strb	r2, [r3]
 462:.\main.c      ****                                     overshot_target = 0;
 2008              		.loc 1 462 0
 2009 0434 784B     		ldr	r3, .L102+24
 2010 0436 0022     		movs	r2, #0
 2011 0438 1A70     		strb	r2, [r3]
 463:.\main.c      ****                                     actionDebounce = 0;
 2012              		.loc 1 463 0
 2013 043a 0023     		movs	r3, #0
 2014 043c FB84     		strh	r3, [r7, #38]	@ movhi
 464:.\main.c      ****                                     instructionCount += 2;
 2015              		.loc 1 464 0
 2016 043e 774B     		ldr	r3, .L102+28
 2017 0440 1B88     		ldrh	r3, [r3]
 2018 0442 0233     		adds	r3, r3, #2
 2019 0444 9AB2     		uxth	r2, r3
 2020 0446 754B     		ldr	r3, .L102+28
 2021 0448 1A80     		strh	r2, [r3]	@ movhi
 465:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2022              		.loc 1 465 0
 2023 044a 6D4B     		ldr	r3, .L102
 2024 044c 1B88     		ldrh	r3, [r3]
 2025 044e 1BB2     		sxth	r3, r3
 2026 0450 002B     		cmp	r3, #0
 2027 0452 02DA     		bge	.L71
 2028              		.loc 1 465 0 is_stmt 0 discriminator 1
 2029 0454 6A4B     		ldr	r3, .L102
 2030 0456 0022     		movs	r2, #0
 2031 0458 1A80     		strh	r2, [r3]	@ movhi
 2032              	.L71:
 466:.\main.c      ****                                     //Timer_Deadzone_Start();
 467:.\main.c      ****                                     //deadzone = 1;
 468:.\main.c      ****                                     isr_quad1_StartEx(isr_quad1);
 2033              		.loc 1 468 0 is_stmt 1
 2034 045a 7148     		ldr	r0, .L102+32
 2035 045c FFF7FEFF 		bl	isr_quad1_StartEx
 469:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2036              		.loc 1 469 0
 2037 0460 674B     		ldr	r3, .L102
 2038 0462 1B88     		ldrh	r3, [r3]
 2039 0464 1BB2     		sxth	r3, r3
 2040 0466 3A46     		mov	r2, r7
 2041 0468 1046     		mov	r0, r2
 2042 046a 6E49     		ldr	r1, .L102+36
 2043 046c 1A46     		mov	r2, r3
 2044 046e FFF7FEFF 		bl	sprintf
 470:.\main.c      ****                                     UART_PutString(mes);
 2045              		.loc 1 470 0
 2046 0472 3B46     		mov	r3, r7
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 46


 2047 0474 1846     		mov	r0, r3
 2048 0476 FFF7FEFF 		bl	UART_PutString
 471:.\main.c      ****                                     sprintf(mes, "instr count:%d\r\n", instructionCount);
 2049              		.loc 1 471 0
 2050 047a 684B     		ldr	r3, .L102+28
 2051 047c 1B88     		ldrh	r3, [r3]
 2052 047e 1A46     		mov	r2, r3
 2053 0480 3B46     		mov	r3, r7
 2054 0482 1846     		mov	r0, r3
 2055 0484 6849     		ldr	r1, .L102+40
 2056 0486 FFF7FEFF 		bl	sprintf
 472:.\main.c      ****                                     UART_PutString(mes);
 2057              		.loc 1 472 0
 2058 048a 3B46     		mov	r3, r7
 2059 048c 1846     		mov	r0, r3
 2060 048e FFF7FEFF 		bl	UART_PutString
 2061              	.LBE5:
 2062 0492 16E1     		b	.L56
 2063              	.L61:
 473:.\main.c      ****                                     
 474:.\main.c      ****                     }
 475:.\main.c      ****                     else if((leftOn && (nextStep != 'R')) || (rightOn && (nextStep != 'L'))){ //int
 2064              		.loc 1 475 0
 2065 0494 654B     		ldr	r3, .L102+44
 2066 0496 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2067 0498 002B     		cmp	r3, #0
 2068 049a 03D0     		beq	.L72
 2069              		.loc 1 475 0 is_stmt 0 discriminator 1
 2070 049c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2071 04a0 522B     		cmp	r3, #82
 2072 04a2 09D1     		bne	.L73
 2073              	.L72:
 2074              		.loc 1 475 0 discriminator 3
 2075 04a4 624B     		ldr	r3, .L102+48
 2076 04a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2077 04a8 002B     		cmp	r3, #0
 2078 04aa 00F00581 		beq	.L74
 2079              		.loc 1 475 0 discriminator 4
 2080 04ae 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2081 04b2 4C2B     		cmp	r3, #76
 2082 04b4 00F00081 		beq	.L74
 2083              	.L73:
 476:.\main.c      ****                         if(sensorsDisabled == 0)
 2084              		.loc 1 476 0 is_stmt 1
 2085 04b8 5E4B     		ldr	r3, .L102+52
 2086 04ba 1B68     		ldr	r3, [r3]
 2087 04bc 002B     		cmp	r3, #0
 2088 04be 40F0FA80 		bne	.L75
 477:.\main.c      ****                         {
 478:.\main.c      ****                             actionDebounce++;
 2089              		.loc 1 478 0
 2090 04c2 FB8C     		ldrh	r3, [r7, #38]
 2091 04c4 0133     		adds	r3, r3, #1
 2092 04c6 FB84     		strh	r3, [r7, #38]	@ movhi
 479:.\main.c      ****                             if(actionDebounce >= 400)
 2093              		.loc 1 479 0
 2094 04c8 FB8C     		ldrh	r3, [r7, #38]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 47


 2095 04ca B3F5C87F 		cmp	r3, #400
 2096 04ce C0F0F280 		bcc	.L75
 2097              	.LBB6:
 480:.\main.c      ****                             {
 481:.\main.c      ****                                 char mes[32];
 482:.\main.c      ****                                 sprintf(mes, "travel:%d, sensors on:%d\r\n", accum_dist, reached_ta
 2098              		.loc 1 482 0
 2099 04d2 594B     		ldr	r3, .L102+56
 2100 04d4 1B88     		ldrh	r3, [r3]
 2101 04d6 1AB2     		sxth	r2, r3
 2102 04d8 4E4B     		ldr	r3, .L102+20
 2103 04da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2104 04dc 1C46     		mov	r4, r3
 2105 04de 3B46     		mov	r3, r7
 2106 04e0 1846     		mov	r0, r3
 2107 04e2 5649     		ldr	r1, .L102+60
 2108 04e4 2346     		mov	r3, r4
 2109 04e6 FFF7FEFF 		bl	sprintf
 483:.\main.c      ****                                  UART_PutString(mes);
 2110              		.loc 1 483 0
 2111 04ea 3B46     		mov	r3, r7
 2112 04ec 1846     		mov	r0, r3
 2113 04ee FFF7FEFF 		bl	UART_PutString
 484:.\main.c      ****                             if(reached_target == 1)
 2114              		.loc 1 484 0
 2115 04f2 484B     		ldr	r3, .L102+20
 2116 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2117 04f6 012B     		cmp	r3, #1
 2118 04f8 40F0DD80 		bne	.L75
 2119              	.LBB7:
 485:.\main.c      ****                             {
 486:.\main.c      **** //                                if(nextStep == 'D')
 487:.\main.c      **** //                                {
 488:.\main.c      **** //                                    instructionCount += 2;
 489:.\main.c      **** //                                    nextStep = instructions[instructionCount]; 
 490:.\main.c      **** //                                }
 491:.\main.c      ****                                 
 492:.\main.c      ****                                 sensorsDisabled = 1;
 2120              		.loc 1 492 0
 2121 04fc 4D4B     		ldr	r3, .L102+52
 2122 04fe 0122     		movs	r2, #1
 2123 0500 1A60     		str	r2, [r3]
 493:.\main.c      ****                                 UART_PutString("Trigger intersection\r\n");
 2124              		.loc 1 493 0
 2125 0502 4F48     		ldr	r0, .L102+64
 2126 0504 FFF7FEFF 		bl	UART_PutString
 494:.\main.c      ****                                 //UART_PutString("Deadzone enter\r\n");
 495:.\main.c      ****                                 deadzone = 1;
 2127              		.loc 1 495 0
 2128 0508 3F4B     		ldr	r3, .L102+8
 2129 050a 0122     		movs	r2, #1
 2130 050c 1A70     		strb	r2, [r3]
 496:.\main.c      ****                                 
 497:.\main.c      ****                                 accum_dist = 0;
 2131              		.loc 1 497 0
 2132 050e 4A4B     		ldr	r3, .L102+56
 2133 0510 0022     		movs	r2, #0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 48


 2134 0512 1A80     		strh	r2, [r3]	@ movhi
 498:.\main.c      ****                                 uint8 nextStepDist;
 499:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2135              		.loc 1 499 0
 2136 0514 414B     		ldr	r3, .L102+28
 2137 0516 1B88     		ldrh	r3, [r3]
 2138 0518 1A46     		mov	r2, r3
 2139 051a 4A4B     		ldr	r3, .L102+68
 2140 051c 1B88     		ldrh	r3, [r3]
 2141 051e 053B     		subs	r3, r3, #5
 2142 0520 9A42     		cmp	r2, r3
 2143 0522 07DC     		bgt	.L77
 2144              		.loc 1 499 0 is_stmt 0 discriminator 1
 2145 0524 3D4B     		ldr	r3, .L102+28
 2146 0526 1B88     		ldrh	r3, [r3]
 2147 0528 0333     		adds	r3, r3, #3
 2148 052a 474A     		ldr	r2, .L102+72
 2149 052c D35C     		ldrb	r3, [r2, r3]
 2150 052e 87F82430 		strb	r3, [r7, #36]
 2151 0532 02E0     		b	.L78
 2152              	.L77:
 500:.\main.c      ****                                 else nextStepDist = 0;
 2153              		.loc 1 500 0 is_stmt 1
 2154 0534 0023     		movs	r3, #0
 2155 0536 87F82430 		strb	r3, [r7, #36]
 2156              	.L78:
 501:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2157              		.loc 1 501 0
 2158 053a 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 2159 053e 9BB2     		uxth	r3, r3
 2160 0540 1A46     		mov	r2, r3	@ movhi
 2161 0542 D200     		lsls	r2, r2, #3
 2162 0544 1344     		add	r3, r3, r2
 2163 0546 1B01     		lsls	r3, r3, #4
 2164 0548 9BB2     		uxth	r3, r3
 2165 054a 9AB2     		uxth	r2, r3
 2166 054c 2C4B     		ldr	r3, .L102
 2167 054e 1A80     		strh	r2, [r3]	@ movhi
 502:.\main.c      ****                                 
 503:.\main.c      ****                                 nextStep = instructions[instructionCount];
 2168              		.loc 1 503 0
 2169 0550 324B     		ldr	r3, .L102+28
 2170 0552 1B88     		ldrh	r3, [r3]
 2171 0554 1A46     		mov	r2, r3
 2172 0556 3C4B     		ldr	r3, .L102+72
 2173 0558 9B5C     		ldrb	r3, [r3, r2]
 2174 055a 87F82330 		strb	r3, [r7, #35]
 504:.\main.c      ****                                 
 505:.\main.c      ****                                 switch(nextStep)
 2175              		.loc 1 505 0
 2176 055e 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2177 0562 4C3B     		subs	r3, r3, #76
 2178 0564 092B     		cmp	r3, #9
 2179 0566 73D8     		bhi	.L98
 2180 0568 01A2     		adr	r2, .L81
 2181 056a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2182 056e 00BF     		.p2align 2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 49


 2183              	.L81:
 2184 0570 A7050000 		.word	.L80+1
 2185 0574 51060000 		.word	.L98+1
 2186 0578 51060000 		.word	.L98+1
 2187 057c 51060000 		.word	.L98+1
 2188 0580 51060000 		.word	.L98+1
 2189 0584 51060000 		.word	.L98+1
 2190 0588 C5050000 		.word	.L82+1
 2191 058c 99050000 		.word	.L83+1
 2192 0590 51060000 		.word	.L98+1
 2193 0594 E3050000 		.word	.L84+1
 2194              		.p2align 1
 2195              	.L83:
 506:.\main.c      ****                                 {
 507:.\main.c      ****                                     case 'S':
 508:.\main.c      ****                                         inittrackLineZ();
 2196              		.loc 1 508 0
 2197 0598 FFF7FEFF 		bl	inittrackLineZ
 509:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 2198              		.loc 1 509 0
 2199 059c 42F21070 		movw	r0, #10000
 2200 05a0 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 510:.\main.c      ****                                         //do nothing
 511:.\main.c      ****                                     break;
 2201              		.loc 1 511 0
 2202 05a4 55E0     		b	.L85
 2203              	.L80:
 512:.\main.c      ****                                     case 'L':
 513:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 514:.\main.c      ****                                         initTurnLeft();
 2204              		.loc 1 514 0
 2205 05a6 FFF7FEFF 		bl	initTurnLeft
 515:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2206              		.loc 1 515 0
 2207 05aa 4CF25030 		movw	r0, #50000
 2208 05ae FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 516:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2209              		.loc 1 516 0
 2210 05b2 134B     		ldr	r3, .L102
 2211 05b4 1B88     		ldrh	r3, [r3]
 2212 05b6 9BB2     		uxth	r3, r3
 2213 05b8 8A3B     		subs	r3, r3, #138
 2214 05ba 9BB2     		uxth	r3, r3
 2215 05bc 9AB2     		uxth	r2, r3
 2216 05be 104B     		ldr	r3, .L102
 2217 05c0 1A80     		strh	r2, [r3]	@ movhi
 517:.\main.c      ****                                     break;
 2218              		.loc 1 517 0
 2219 05c2 46E0     		b	.L85
 2220              	.L82:
 518:.\main.c      ****                                     case 'R':
 519:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 520:.\main.c      ****                                         initTurnRight();
 2221              		.loc 1 520 0
 2222 05c4 FFF7FEFF 		bl	initTurnRight
 521:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2223              		.loc 1 521 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 50


 2224 05c8 0D4B     		ldr	r3, .L102
 2225 05ca 1B88     		ldrh	r3, [r3]
 2226 05cc 9BB2     		uxth	r3, r3
 2227 05ce 8A3B     		subs	r3, r3, #138
 2228 05d0 9BB2     		uxth	r3, r3
 2229 05d2 9AB2     		uxth	r2, r3
 2230 05d4 0A4B     		ldr	r3, .L102
 2231 05d6 1A80     		strh	r2, [r3]	@ movhi
 522:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 523:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2232              		.loc 1 523 0
 2233 05d8 4CF25030 		movw	r0, #50000
 2234 05dc FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 524:.\main.c      ****                                     break;
 2235              		.loc 1 524 0
 2236 05e0 37E0     		b	.L85
 2237              	.L84:
 525:.\main.c      ****                                     case 'U':
 526:.\main.c      ****                                         // Direction not tracked any more
 527:.\main.c      ****                                         initTurnU();
 2238              		.loc 1 527 0
 2239 05e2 FFF7FEFF 		bl	initTurnU
 528:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2240              		.loc 1 528 0
 2241 05e6 1948     		ldr	r0, .L102+76
 2242 05e8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 529:.\main.c      ****                                         target_distance_quad -= U_OFFSET;
 2243              		.loc 1 529 0
 2244 05ec 044B     		ldr	r3, .L102
 2245 05ee 1B88     		ldrh	r3, [r3]
 2246 05f0 9BB2     		uxth	r3, r3
 2247 05f2 693B     		subs	r3, r3, #105
 2248 05f4 9BB2     		uxth	r3, r3
 2249 05f6 9AB2     		uxth	r2, r3
 2250 05f8 014B     		ldr	r3, .L102
 2251 05fa 1A80     		strh	r2, [r3]	@ movhi
 530:.\main.c      ****                                         //target_distance_quad += 208;
 531:.\main.c      ****                                     break;
 2252              		.loc 1 531 0
 2253 05fc 29E0     		b	.L85
 2254              	.L103:
 2255 05fe 00BF     		.align	2
 2256              	.L102:
 2257 0600 00000000 		.word	target_distance_quad
 2258 0604 00005240 		.word	1079115776
 2259 0608 00000000 		.word	deadzone
 2260 060c 00000000 		.word	min_turn_quad
 2261 0610 00000000 		.word	max_turn_quad
 2262 0614 00000000 		.word	reached_target
 2263 0618 00000000 		.word	overshot_target
 2264 061c 00000000 		.word	instructionCount
 2265 0620 00000000 		.word	isr_quad1
 2266 0624 5C000000 		.word	.LC5
 2267 0628 70000000 		.word	.LC6
 2268 062c 00000000 		.word	leftOn
 2269 0630 00000000 		.word	rightOn
 2270 0634 00000000 		.word	sensorsDisabled
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 51


 2271 0638 00000000 		.word	accum_dist
 2272 063c 84000000 		.word	.LC7
 2273 0640 A0000000 		.word	.LC8
 2274 0644 00000000 		.word	instructionLength
 2275 0648 00000000 		.word	instructions
 2276 064c 905F0100 		.word	90000
 2277              	.L98:
 532:.\main.c      ****                                     
 533:.\main.c      ****                                     default:
 534:.\main.c      ****                                         //do nothing
 535:.\main.c      ****                                         break;
 2278              		.loc 1 535 0
 2279 0650 00BF     		nop
 2280              	.L85:
 536:.\main.c      ****                                 }
 537:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 2281              		.loc 1 537 0
 2282 0652 344B     		ldr	r3, .L104
 2283 0654 1B88     		ldrh	r3, [r3]
 2284 0656 1BB2     		sxth	r3, r3
 2285 0658 002B     		cmp	r3, #0
 2286 065a 02DA     		bge	.L86
 2287              		.loc 1 537 0 is_stmt 0 discriminator 1
 2288 065c 314B     		ldr	r3, .L104
 2289 065e 0022     		movs	r2, #0
 2290 0660 1A80     		strh	r2, [r3]	@ movhi
 2291              	.L86:
 538:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2292              		.loc 1 538 0 is_stmt 1
 2293 0662 304B     		ldr	r3, .L104
 2294 0664 1B88     		ldrh	r3, [r3]
 2295 0666 1BB2     		sxth	r3, r3
 2296 0668 3A46     		mov	r2, r7
 2297 066a 1046     		mov	r0, r2
 2298 066c 2E49     		ldr	r1, .L104+4
 2299 066e 1A46     		mov	r2, r3
 2300 0670 FFF7FEFF 		bl	sprintf
 539:.\main.c      ****                                  UART_PutString(mes);
 2301              		.loc 1 539 0
 2302 0674 3B46     		mov	r3, r7
 2303 0676 1846     		mov	r0, r3
 2304 0678 FFF7FEFF 		bl	UART_PutString
 540:.\main.c      ****                                 
 541:.\main.c      ****                                 Timer_Deadzone_Start();
 2305              		.loc 1 541 0
 2306 067c FFF7FEFF 		bl	Timer_Deadzone_Start
 542:.\main.c      ****                                 reached_target = 0;
 2307              		.loc 1 542 0
 2308 0680 2A4B     		ldr	r3, .L104+8
 2309 0682 0022     		movs	r2, #0
 2310 0684 1A70     		strb	r2, [r3]
 543:.\main.c      ****                                 actionDebounce = 0;
 2311              		.loc 1 543 0
 2312 0686 0023     		movs	r3, #0
 2313 0688 FB84     		strh	r3, [r7, #38]	@ movhi
 544:.\main.c      ****                                 overshot_target = 0;
 2314              		.loc 1 544 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 52


 2315 068a 294B     		ldr	r3, .L104+12
 2316 068c 0022     		movs	r2, #0
 2317 068e 1A70     		strb	r2, [r3]
 545:.\main.c      ****                                 instructionCount += 2;
 2318              		.loc 1 545 0
 2319 0690 284B     		ldr	r3, .L104+16
 2320 0692 1B88     		ldrh	r3, [r3]
 2321 0694 0233     		adds	r3, r3, #2
 2322 0696 9AB2     		uxth	r2, r3
 2323 0698 264B     		ldr	r3, .L104+16
 2324 069a 1A80     		strh	r2, [r3]	@ movhi
 546:.\main.c      ****                                 sprintf(mes, "instr count:%d\r\n", instructionCount);
 2325              		.loc 1 546 0
 2326 069c 254B     		ldr	r3, .L104+16
 2327 069e 1B88     		ldrh	r3, [r3]
 2328 06a0 1A46     		mov	r2, r3
 2329 06a2 3B46     		mov	r3, r7
 2330 06a4 1846     		mov	r0, r3
 2331 06a6 2449     		ldr	r1, .L104+20
 2332 06a8 FFF7FEFF 		bl	sprintf
 547:.\main.c      ****                                 UART_PutString(mes);
 2333              		.loc 1 547 0
 2334 06ac 3B46     		mov	r3, r7
 2335 06ae 1846     		mov	r0, r3
 2336 06b0 FFF7FEFF 		bl	UART_PutString
 2337              	.LBE7:
 2338              	.LBE6:
 476:.\main.c      ****                         {
 2339              		.loc 1 476 0
 2340 06b4 05E0     		b	.L56
 2341              	.L75:
 476:.\main.c      ****                         {
 2342              		.loc 1 476 0 is_stmt 0 discriminator 2
 2343 06b6 04E0     		b	.L56
 2344              	.L74:
 548:.\main.c      ****                                 
 549:.\main.c      ****                             }
 550:.\main.c      ****                             }
 551:.\main.c      ****                         }
 552:.\main.c      ****                     }
 553:.\main.c      ****                     else
 554:.\main.c      ****                     {
 555:.\main.c      ****                         inittrackLineZ();
 2345              		.loc 1 555 0 is_stmt 1
 2346 06b8 FFF7FEFF 		bl	inittrackLineZ
 556:.\main.c      ****                         actionDebounce = 0;
 2347              		.loc 1 556 0
 2348 06bc 0023     		movs	r3, #0
 2349 06be FB84     		strh	r3, [r7, #38]	@ movhi
 2350              	.LBE4:
 557:.\main.c      ****                     }
 558:.\main.c      ****                 }
 559:.\main.c      ****                 break;
 2351              		.loc 1 559 0
 2352 06c0 FFE7     		b	.L99
 2353              	.L56:
 2354              	.L99:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 53


 2355 06c2 00BF     		nop
 2356              	.L43:
 560:.\main.c      ****         }
 561:.\main.c      ****         
 562:.\main.c      ****         switch(movement_state)
 2357              		.loc 1 562 0
 2358 06c4 1D4B     		ldr	r3, .L104+24
 2359 06c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2360 06c8 072B     		cmp	r3, #7
 2361 06ca 3FF6D5AC 		bhi	.L97
 2362 06ce 01A2     		adr	r2, .L89
 2363 06d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2364              		.p2align 2
 2365              	.L89:
 2366 06d4 F5060000 		.word	.L88+1
 2367 06d8 FB060000 		.word	.L90+1
 2368 06dc 01070000 		.word	.L91+1
 2369 06e0 0D070000 		.word	.L92+1
 2370 06e4 13070000 		.word	.L93+1
 2371 06e8 19070000 		.word	.L94+1
 2372 06ec 1F070000 		.word	.L95+1
 2373 06f0 07070000 		.word	.L96+1
 2374              		.p2align 1
 2375              	.L88:
 563:.\main.c      ****         {
 564:.\main.c      ****             case DRIVE:
 565:.\main.c      ****                 driveForwards();
 2376              		.loc 1 565 0
 2377 06f4 FFF7FEFF 		bl	driveForwards
 566:.\main.c      ****             break;
 2378              		.loc 1 566 0
 2379 06f8 13E0     		b	.L87
 2380              	.L90:
 567:.\main.c      ****             case LTURN:
 568:.\main.c      ****                 turnLeft();
 2381              		.loc 1 568 0
 2382 06fa FFF7FEFF 		bl	turnLeft
 569:.\main.c      ****             break;
 2383              		.loc 1 569 0
 2384 06fe 10E0     		b	.L87
 2385              	.L91:
 570:.\main.c      ****             case RTURN:
 571:.\main.c      ****                 turnRight();
 2386              		.loc 1 571 0
 2387 0700 FFF7FEFF 		bl	turnRight
 572:.\main.c      ****             break;
 2388              		.loc 1 572 0
 2389 0704 0DE0     		b	.L87
 2390              	.L96:
 573:.\main.c      ****             case UTURN:
 574:.\main.c      ****                 turnU();
 2391              		.loc 1 574 0
 2392 0706 FFF7FEFF 		bl	turnU
 575:.\main.c      ****             break;
 2393              		.loc 1 575 0
 2394 070a 0AE0     		b	.L87
 2395              	.L92:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 54


 576:.\main.c      ****             case STOPPED:
 577:.\main.c      ****                 brakeMotor();
 2396              		.loc 1 577 0
 2397 070c FFF7FEFF 		bl	brakeMotor
 578:.\main.c      ****             break;
 2398              		.loc 1 578 0
 2399 0710 07E0     		b	.L87
 2400              	.L93:
 579:.\main.c      ****             case TRACKING:
 580:.\main.c      ****                 trackLine();
 2401              		.loc 1 580 0
 2402 0712 FFF7FEFF 		bl	trackLine
 581:.\main.c      ****             break;
 2403              		.loc 1 581 0
 2404 0716 04E0     		b	.L87
 2405              	.L94:
 582:.\main.c      ****             case TRACKING_U:
 583:.\main.c      ****                 trackLineU();
 2406              		.loc 1 583 0
 2407 0718 FFF7FEFF 		bl	trackLineU
 584:.\main.c      ****             break;
 2408              		.loc 1 584 0
 2409 071c 01E0     		b	.L87
 2410              	.L95:
 585:.\main.c      ****             case TRACKING_SOFT:
 586:.\main.c      ****                 trackLineZ();
 2411              		.loc 1 586 0
 2412 071e FFF7FEFF 		bl	trackLineZ
 2413              	.L87:
 587:.\main.c      ****         }      
 588:.\main.c      ****     }   
 2414              		.loc 1 588 0
 2415 0722 A9E4     		b	.L97
 2416              	.L105:
 2417              		.align	2
 2418              	.L104:
 2419 0724 00000000 		.word	target_distance_quad
 2420 0728 5C000000 		.word	.LC5
 2421 072c 00000000 		.word	reached_target
 2422 0730 00000000 		.word	overshot_target
 2423 0734 00000000 		.word	instructionCount
 2424 0738 70000000 		.word	.LC6
 2425 073c 00000000 		.word	movement_state
 2426              		.cfi_endproc
 2427              	.LFE71:
 2428              		.size	main, .-main
 2429              		.section	.text.handle_rx_binary,"ax",%progbits
 2430              		.align	2
 2431              		.global	handle_rx_binary
 2432              		.thumb
 2433              		.thumb_func
 2434              		.type	handle_rx_binary, %function
 2435              	handle_rx_binary:
 2436              	.LFB72:
 589:.\main.c      **** }
 590:.\main.c      **** 
 591:.\main.c      **** /*-------------------------------------------------------------------------------------------------
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 55


 592:.\main.c      **** 
 593:.\main.c      **** void handle_rx_binary()
 594:.\main.c      **** {
 2437              		.loc 1 594 0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 32
 2440              		@ frame_needed = 1, uses_anonymous_args = 0
 2441              		@ link register save eliminated.
 2442 0000 80B4     		push	{r7}
 2443              		.cfi_def_cfa_offset 4
 2444              		.cfi_offset 7, -4
 2445 0002 89B0     		sub	sp, sp, #36
 2446              		.cfi_def_cfa_offset 40
 2447 0004 00AF     		add	r7, sp, #0
 2448              		.cfi_def_cfa_register 7
 595:.\main.c      ****     if(flag_rx == 1)
 2449              		.loc 1 595 0
 2450 0006 524B     		ldr	r3, .L126
 2451 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2452 000a 012B     		cmp	r3, #1
 2453 000c 40F09A80 		bne	.L106
 2454              	.LBB8:
 596:.\main.c      ****     {    
 597:.\main.c      ****         flag_rx = 0;
 2455              		.loc 1 597 0
 2456 0010 4F4B     		ldr	r3, .L126
 2457 0012 0022     		movs	r2, #0
 2458 0014 1A70     		strb	r2, [r3]
 598:.\main.c      ****         
 599:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2459              		.loc 1 599 0
 2460 0016 4F4B     		ldr	r3, .L126+4
 2461 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2462 001a 1B02     		lsls	r3, r3, #8
 2463 001c 9AB2     		uxth	r2, r3
 2464 001e 4D4B     		ldr	r3, .L126+4
 2465 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2466 0022 9BB2     		uxth	r3, r3
 2467 0024 1343     		orrs	r3, r3, r2
 2468 0026 9BB2     		uxth	r3, r3
 2469 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 600:.\main.c      ****         char byte_packet[12];
 601:.\main.c      ****         char string_packet[12];
 602:.\main.c      ****         
 603:.\main.c      ****         switch(byteCount)
 2470              		.loc 1 603 0
 2471 002a 4B4B     		ldr	r3, .L126+8
 2472 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2473 002e 043B     		subs	r3, r3, #4
 2474 0030 1E2B     		cmp	r3, #30
 2475 0032 00F28780 		bhi	.L106
 2476 0036 01A2     		adr	r2, .L110
 2477 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2478              		.p2align 2
 2479              	.L110:
 2480 003c B9000000 		.word	.L109+1
 2481 0040 45010000 		.word	.L106+1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 56


 2482 0044 CD000000 		.word	.L111+1
 2483 0048 45010000 		.word	.L106+1
 2484 004c D5000000 		.word	.L112+1
 2485 0050 45010000 		.word	.L106+1
 2486 0054 DD000000 		.word	.L113+1
 2487 0058 45010000 		.word	.L106+1
 2488 005c E5000000 		.word	.L114+1
 2489 0060 45010000 		.word	.L106+1
 2490 0064 ED000000 		.word	.L115+1
 2491 0068 45010000 		.word	.L106+1
 2492 006c F5000000 		.word	.L116+1
 2493 0070 45010000 		.word	.L106+1
 2494 0074 FD000000 		.word	.L117+1
 2495 0078 45010000 		.word	.L106+1
 2496 007c 05010000 		.word	.L118+1
 2497 0080 45010000 		.word	.L106+1
 2498 0084 0D010000 		.word	.L119+1
 2499 0088 45010000 		.word	.L106+1
 2500 008c 15010000 		.word	.L120+1
 2501 0090 45010000 		.word	.L106+1
 2502 0094 1D010000 		.word	.L121+1
 2503 0098 45010000 		.word	.L106+1
 2504 009c 25010000 		.word	.L122+1
 2505 00a0 45010000 		.word	.L106+1
 2506 00a4 2D010000 		.word	.L123+1
 2507 00a8 45010000 		.word	.L106+1
 2508 00ac 35010000 		.word	.L124+1
 2509 00b0 45010000 		.word	.L106+1
 2510 00b4 3D010000 		.word	.L125+1
 2511              		.p2align 1
 2512              	.L109:
 604:.\main.c      ****         {
 605:.\main.c      ****             case 4:
 606:.\main.c      ****                 buffer_state.rssi = packet[0];
 2513              		.loc 1 606 0
 2514 00b8 264B     		ldr	r3, .L126+4
 2515 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 00bc DAB2     		uxtb	r2, r3
 2517 00be 274B     		ldr	r3, .L126+12
 2518 00c0 1A70     		strb	r2, [r3]
 607:.\main.c      ****                 buffer_state.index = packet[1];
 2519              		.loc 1 607 0
 2520 00c2 244B     		ldr	r3, .L126+4
 2521 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2522 00c6 254B     		ldr	r3, .L126+12
 2523 00c8 5A70     		strb	r2, [r3, #1]
 608:.\main.c      ****             break;
 2524              		.loc 1 608 0
 2525 00ca 3BE0     		b	.L106
 2526              	.L111:
 609:.\main.c      ****             case 6:
 610:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2527              		.loc 1 610 0
 2528 00cc FA8B     		ldrh	r2, [r7, #30]
 2529 00ce 234B     		ldr	r3, .L126+12
 2530 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 611:.\main.c      ****             break;
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 57


 2531              		.loc 1 611 0
 2532 00d2 37E0     		b	.L106
 2533              	.L112:
 612:.\main.c      ****             case 8:
 613:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2534              		.loc 1 613 0
 2535 00d4 FA8B     		ldrh	r2, [r7, #30]
 2536 00d6 214B     		ldr	r3, .L126+12
 2537 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 614:.\main.c      ****             break;
 2538              		.loc 1 614 0
 2539 00da 33E0     		b	.L106
 2540              	.L113:
 615:.\main.c      ****             case 10:
 616:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2541              		.loc 1 616 0
 2542 00dc FA8B     		ldrh	r2, [r7, #30]
 2543 00de 1F4B     		ldr	r3, .L126+12
 2544 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 617:.\main.c      ****             break;
 2545              		.loc 1 617 0
 2546 00e2 2FE0     		b	.L106
 2547              	.L114:
 618:.\main.c      ****             case 12:
 619:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2548              		.loc 1 619 0
 2549 00e4 FA8B     		ldrh	r2, [r7, #30]
 2550 00e6 1D4B     		ldr	r3, .L126+12
 2551 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 620:.\main.c      ****             break;
 2552              		.loc 1 620 0
 2553 00ea 2BE0     		b	.L106
 2554              	.L115:
 621:.\main.c      ****             case 14:
 622:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2555              		.loc 1 622 0
 2556 00ec FA8B     		ldrh	r2, [r7, #30]
 2557 00ee 1B4B     		ldr	r3, .L126+12
 2558 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 623:.\main.c      ****             break;
 2559              		.loc 1 623 0
 2560 00f2 27E0     		b	.L106
 2561              	.L116:
 624:.\main.c      ****             case 16:
 625:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2562              		.loc 1 625 0
 2563 00f4 FA8B     		ldrh	r2, [r7, #30]
 2564 00f6 194B     		ldr	r3, .L126+12
 2565 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 626:.\main.c      ****             break;
 2566              		.loc 1 626 0
 2567 00fa 23E0     		b	.L106
 2568              	.L117:
 627:.\main.c      ****             case 18:
 628:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2569              		.loc 1 628 0
 2570 00fc FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 58


 2571 00fe 174B     		ldr	r3, .L126+12
 2572 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 629:.\main.c      ****             break;
 2573              		.loc 1 629 0
 2574 0102 1FE0     		b	.L106
 2575              	.L118:
 630:.\main.c      ****             case 20:
 631:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2576              		.loc 1 631 0
 2577 0104 FA8B     		ldrh	r2, [r7, #30]
 2578 0106 154B     		ldr	r3, .L126+12
 2579 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 632:.\main.c      ****             break;
 2580              		.loc 1 632 0
 2581 010a 1BE0     		b	.L106
 2582              	.L119:
 633:.\main.c      ****             case 22:
 634:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2583              		.loc 1 634 0
 2584 010c FA8B     		ldrh	r2, [r7, #30]
 2585 010e 134B     		ldr	r3, .L126+12
 2586 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 635:.\main.c      ****             break;
 2587              		.loc 1 635 0
 2588 0112 17E0     		b	.L106
 2589              	.L120:
 636:.\main.c      ****             case 24:
 637:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2590              		.loc 1 637 0
 2591 0114 FA8B     		ldrh	r2, [r7, #30]
 2592 0116 114B     		ldr	r3, .L126+12
 2593 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 638:.\main.c      ****             break;
 2594              		.loc 1 638 0
 2595 011a 13E0     		b	.L106
 2596              	.L121:
 639:.\main.c      ****             case 26:
 640:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2597              		.loc 1 640 0
 2598 011c FA8B     		ldrh	r2, [r7, #30]
 2599 011e 0F4B     		ldr	r3, .L126+12
 2600 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 641:.\main.c      ****             break;
 2601              		.loc 1 641 0
 2602 0122 0FE0     		b	.L106
 2603              	.L122:
 642:.\main.c      ****             case 28:
 643:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2604              		.loc 1 643 0
 2605 0124 FA8B     		ldrh	r2, [r7, #30]
 2606 0126 0D4B     		ldr	r3, .L126+12
 2607 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 644:.\main.c      ****             break;
 2608              		.loc 1 644 0
 2609 012a 0BE0     		b	.L106
 2610              	.L123:
 645:.\main.c      ****             case 30:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 59


 646:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2611              		.loc 1 646 0
 2612 012c FA8B     		ldrh	r2, [r7, #30]
 2613 012e 0B4B     		ldr	r3, .L126+12
 2614 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 647:.\main.c      ****             break;
 2615              		.loc 1 647 0
 2616 0132 07E0     		b	.L106
 2617              	.L124:
 648:.\main.c      ****             case 32:
 649:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2618              		.loc 1 649 0
 2619 0134 FA8B     		ldrh	r2, [r7, #30]
 2620 0136 094B     		ldr	r3, .L126+12
 2621 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 650:.\main.c      ****             break;
 2622              		.loc 1 650 0
 2623 013a 03E0     		b	.L106
 2624              	.L125:
 651:.\main.c      ****             case 34:
 652:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2625              		.loc 1 652 0
 2626 013c FA8B     		ldrh	r2, [r7, #30]
 2627 013e 074B     		ldr	r3, .L126+12
 2628 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 653:.\main.c      ****             break;
 2629              		.loc 1 653 0
 2630 0142 00BF     		nop
 2631              	.L106:
 2632              	.LBE8:
 654:.\main.c      ****         }
 655:.\main.c      ****     }
 656:.\main.c      **** }
 2633              		.loc 1 656 0
 2634 0144 2437     		adds	r7, r7, #36
 2635              		.cfi_def_cfa_offset 4
 2636 0146 BD46     		mov	sp, r7
 2637              		.cfi_def_cfa_register 13
 2638              		@ sp needed
 2639 0148 5DF8047B 		ldr	r7, [sp], #4
 2640              		.cfi_restore 7
 2641              		.cfi_def_cfa_offset 0
 2642 014c 7047     		bx	lr
 2643              	.L127:
 2644 014e 00BF     		.align	2
 2645              	.L126:
 2646 0150 00000000 		.word	flag_rx
 2647 0154 00000000 		.word	packet
 2648 0158 00000000 		.word	byteCount
 2649 015c 00000000 		.word	buffer_state
 2650              		.cfi_endproc
 2651              	.LFE72:
 2652              		.size	handle_rx_binary, .-handle_rx_binary
 2653              		.section	.text.setLeftDir,"ax",%progbits
 2654              		.align	2
 2655              		.global	setLeftDir
 2656              		.thumb
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 60


 2657              		.thumb_func
 2658              		.type	setLeftDir, %function
 2659              	setLeftDir:
 2660              	.LFB73:
 657:.\main.c      **** 
 658:.\main.c      **** void setLeftDir(uint8 dir)
 659:.\main.c      **** {
 2661              		.loc 1 659 0
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 8
 2664              		@ frame_needed = 1, uses_anonymous_args = 0
 2665 0000 80B5     		push	{r7, lr}
 2666              		.cfi_def_cfa_offset 8
 2667              		.cfi_offset 7, -8
 2668              		.cfi_offset 14, -4
 2669 0002 82B0     		sub	sp, sp, #8
 2670              		.cfi_def_cfa_offset 16
 2671 0004 00AF     		add	r7, sp, #0
 2672              		.cfi_def_cfa_register 7
 2673 0006 0346     		mov	r3, r0
 2674 0008 FB71     		strb	r3, [r7, #7]
 660:.\main.c      ****     M2_IN2_Write(dir);
 2675              		.loc 1 660 0
 2676 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2677 000c 1846     		mov	r0, r3
 2678 000e FFF7FEFF 		bl	M2_IN2_Write
 661:.\main.c      **** }
 2679              		.loc 1 661 0
 2680 0012 0837     		adds	r7, r7, #8
 2681              		.cfi_def_cfa_offset 8
 2682 0014 BD46     		mov	sp, r7
 2683              		.cfi_def_cfa_register 13
 2684              		@ sp needed
 2685 0016 80BD     		pop	{r7, pc}
 2686              		.cfi_endproc
 2687              	.LFE73:
 2688              		.size	setLeftDir, .-setLeftDir
 2689              		.section	.text.setRightDir,"ax",%progbits
 2690              		.align	2
 2691              		.global	setRightDir
 2692              		.thumb
 2693              		.thumb_func
 2694              		.type	setRightDir, %function
 2695              	setRightDir:
 2696              	.LFB74:
 662:.\main.c      **** 
 663:.\main.c      **** void setRightDir(uint8 dir)
 664:.\main.c      **** {
 2697              		.loc 1 664 0
 2698              		.cfi_startproc
 2699              		@ args = 0, pretend = 0, frame = 8
 2700              		@ frame_needed = 1, uses_anonymous_args = 0
 2701 0000 80B5     		push	{r7, lr}
 2702              		.cfi_def_cfa_offset 8
 2703              		.cfi_offset 7, -8
 2704              		.cfi_offset 14, -4
 2705 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 61


 2706              		.cfi_def_cfa_offset 16
 2707 0004 00AF     		add	r7, sp, #0
 2708              		.cfi_def_cfa_register 7
 2709 0006 0346     		mov	r3, r0
 2710 0008 FB71     		strb	r3, [r7, #7]
 665:.\main.c      ****     M1_IN2_Write(dir);
 2711              		.loc 1 665 0
 2712 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2713 000c 1846     		mov	r0, r3
 2714 000e FFF7FEFF 		bl	M1_IN2_Write
 666:.\main.c      **** }
 2715              		.loc 1 666 0
 2716 0012 0837     		adds	r7, r7, #8
 2717              		.cfi_def_cfa_offset 8
 2718 0014 BD46     		mov	sp, r7
 2719              		.cfi_def_cfa_register 13
 2720              		@ sp needed
 2721 0016 80BD     		pop	{r7, pc}
 2722              		.cfi_endproc
 2723              	.LFE74:
 2724              		.size	setRightDir, .-setRightDir
 2725              		.section	.rodata
 2726 00b7 00       		.align	2
 2727              	.LC9:
 2728 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2728      2025640D 
 2728      0A00
 2729              		.section	.text.reverseDirection,"ax",%progbits
 2730              		.align	2
 2731              		.global	reverseDirection
 2732              		.thumb
 2733              		.thumb_func
 2734              		.type	reverseDirection, %function
 2735              	reverseDirection:
 2736              	.LFB75:
 667:.\main.c      **** 
 668:.\main.c      **** void reverseDirection()
 669:.\main.c      **** {
 2737              		.loc 1 669 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 32
 2740              		@ frame_needed = 1, uses_anonymous_args = 0
 2741 0000 80B5     		push	{r7, lr}
 2742              		.cfi_def_cfa_offset 8
 2743              		.cfi_offset 7, -8
 2744              		.cfi_offset 14, -4
 2745 0002 88B0     		sub	sp, sp, #32
 2746              		.cfi_def_cfa_offset 40
 2747 0004 00AF     		add	r7, sp, #0
 2748              		.cfi_def_cfa_register 7
 670:.\main.c      ****     direction = !direction;
 2749              		.loc 1 670 0
 2750 0006 114B     		ldr	r3, .L131
 2751 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2752 000a 002B     		cmp	r3, #0
 2753 000c 0CBF     		ite	eq
 2754 000e 0123     		moveq	r3, #1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 62


 2755 0010 0023     		movne	r3, #0
 2756 0012 DBB2     		uxtb	r3, r3
 2757 0014 1A46     		mov	r2, r3
 2758 0016 0D4B     		ldr	r3, .L131
 2759 0018 1A70     		strb	r2, [r3]
 671:.\main.c      ****     setLeftDir(direction);
 2760              		.loc 1 671 0
 2761 001a 0C4B     		ldr	r3, .L131
 2762 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2763 001e 1846     		mov	r0, r3
 2764 0020 FFF7FEFF 		bl	setLeftDir
 672:.\main.c      ****     setRightDir(direction);
 2765              		.loc 1 672 0
 2766 0024 094B     		ldr	r3, .L131
 2767 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2768 0028 1846     		mov	r0, r3
 2769 002a FFF7FEFF 		bl	setRightDir
 673:.\main.c      ****     char mes[32];
 674:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2770              		.loc 1 674 0
 2771 002e 074B     		ldr	r3, .L131
 2772 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 0032 1A46     		mov	r2, r3
 2774 0034 3B46     		mov	r3, r7
 2775 0036 1846     		mov	r0, r3
 2776 0038 0549     		ldr	r1, .L131+4
 2777 003a FFF7FEFF 		bl	sprintf
 675:.\main.c      ****     UART_PutString(mes);
 2778              		.loc 1 675 0
 2779 003e 3B46     		mov	r3, r7
 2780 0040 1846     		mov	r0, r3
 2781 0042 FFF7FEFF 		bl	UART_PutString
 676:.\main.c      **** }
 2782              		.loc 1 676 0
 2783 0046 2037     		adds	r7, r7, #32
 2784              		.cfi_def_cfa_offset 8
 2785 0048 BD46     		mov	sp, r7
 2786              		.cfi_def_cfa_register 13
 2787              		@ sp needed
 2788 004a 80BD     		pop	{r7, pc}
 2789              	.L132:
 2790              		.align	2
 2791              	.L131:
 2792 004c 00000000 		.word	direction
 2793 0050 B8000000 		.word	.LC9
 2794              		.cfi_endproc
 2795              	.LFE75:
 2796              		.size	reverseDirection, .-reverseDirection
 2797              		.global	__aeabi_dcmplt
 2798              		.global	__aeabi_ddiv
 2799              		.section	.text.setSpeed,"ax",%progbits
 2800              		.align	2
 2801              		.global	setSpeed
 2802              		.thumb
 2803              		.thumb_func
 2804              		.type	setSpeed, %function
 2805              	setSpeed:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 63


 2806              	.LFB76:
 677:.\main.c      **** 
 678:.\main.c      **** void setSpeed(double left, double right){
 2807              		.loc 1 678 0
 2808              		.cfi_startproc
 2809              		@ args = 0, pretend = 0, frame = 24
 2810              		@ frame_needed = 1, uses_anonymous_args = 0
 2811 0000 80B5     		push	{r7, lr}
 2812              		.cfi_def_cfa_offset 8
 2813              		.cfi_offset 7, -8
 2814              		.cfi_offset 14, -4
 2815 0002 86B0     		sub	sp, sp, #24
 2816              		.cfi_def_cfa_offset 32
 2817 0004 00AF     		add	r7, sp, #0
 2818              		.cfi_def_cfa_register 7
 2819 0006 C7E90201 		strd	r0, [r7, #8]
 2820 000a C7E90023 		strd	r2, [r7]
 679:.\main.c      ****     if(right < 0.0)
 2821              		.loc 1 679 0
 2822 000e D7E90001 		ldrd	r0, [r7]
 2823 0012 4FF00002 		mov	r2, #0
 2824 0016 4FF00003 		mov	r3, #0
 2825 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2826 001e 0346     		mov	r3, r0
 2827 0020 002B     		cmp	r3, #0
 2828 0022 10D0     		beq	.L142
 680:.\main.c      ****     {
 681:.\main.c      ****         //char mes[16];
 682:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 683:.\main.c      ****        // UART_PutString(mes);
 684:.\main.c      ****         setRightDir(!direction);
 2829              		.loc 1 684 0
 2830 0024 304B     		ldr	r3, .L144+8
 2831 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2832 0028 002B     		cmp	r3, #0
 2833 002a 0CBF     		ite	eq
 2834 002c 0123     		moveq	r3, #1
 2835 002e 0023     		movne	r3, #0
 2836 0030 DBB2     		uxtb	r3, r3
 2837 0032 1846     		mov	r0, r3
 2838 0034 FFF7FEFF 		bl	setRightDir
 685:.\main.c      ****         right = -right;
 2839              		.loc 1 685 0
 2840 0038 3B68     		ldr	r3, [r7]
 2841 003a 3B60     		str	r3, [r7]
 2842 003c 7B68     		ldr	r3, [r7, #4]
 2843 003e 83F00043 		eor	r3, r3, #-2147483648
 2844 0042 7B60     		str	r3, [r7, #4]
 2845 0044 04E0     		b	.L136
 2846              	.L142:
 686:.\main.c      ****     }
 687:.\main.c      ****     else setRightDir(direction);
 2847              		.loc 1 687 0
 2848 0046 284B     		ldr	r3, .L144+8
 2849 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2850 004a 1846     		mov	r0, r3
 2851 004c FFF7FEFF 		bl	setRightDir
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 64


 2852              	.L136:
 688:.\main.c      ****     
 689:.\main.c      ****     if(left < 0.0)
 2853              		.loc 1 689 0
 2854 0050 D7E90201 		ldrd	r0, [r7, #8]
 2855 0054 4FF00002 		mov	r2, #0
 2856 0058 4FF00003 		mov	r3, #0
 2857 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2858 0060 0346     		mov	r3, r0
 2859 0062 002B     		cmp	r3, #0
 2860 0064 10D0     		beq	.L143
 690:.\main.c      ****     {
 691:.\main.c      ****        // char mes[16];
 692:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 693:.\main.c      ****         //UART_PutString(mes);
 694:.\main.c      ****         setLeftDir(!direction);
 2861              		.loc 1 694 0
 2862 0066 204B     		ldr	r3, .L144+8
 2863 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2864 006a 002B     		cmp	r3, #0
 2865 006c 0CBF     		ite	eq
 2866 006e 0123     		moveq	r3, #1
 2867 0070 0023     		movne	r3, #0
 2868 0072 DBB2     		uxtb	r3, r3
 2869 0074 1846     		mov	r0, r3
 2870 0076 FFF7FEFF 		bl	setLeftDir
 695:.\main.c      ****         left = -left;
 2871              		.loc 1 695 0
 2872 007a BB68     		ldr	r3, [r7, #8]
 2873 007c BB60     		str	r3, [r7, #8]
 2874 007e FB68     		ldr	r3, [r7, #12]
 2875 0080 83F00043 		eor	r3, r3, #-2147483648
 2876 0084 FB60     		str	r3, [r7, #12]
 2877 0086 04E0     		b	.L139
 2878              	.L143:
 696:.\main.c      ****     }
 697:.\main.c      ****     else setLeftDir(direction);
 2879              		.loc 1 697 0
 2880 0088 174B     		ldr	r3, .L144+8
 2881 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2882 008c 1846     		mov	r0, r3
 2883 008e FFF7FEFF 		bl	setLeftDir
 2884              	.L139:
 698:.\main.c      ****     
 699:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2885              		.loc 1 699 0
 2886 0092 D7E90201 		ldrd	r0, [r7, #8]
 2887 0096 12A3     		adr	r3, .L144
 2888 0098 D3E90023 		ldrd	r2, [r3]
 2889 009c FFF7FEFF 		bl	__aeabi_ddiv
 2890 00a0 0246     		mov	r2, r0
 2891 00a2 0B46     		mov	r3, r1
 2892 00a4 1046     		mov	r0, r2
 2893 00a6 1946     		mov	r1, r3
 2894 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2895 00ac 0346     		mov	r3, r0
 2896 00ae FB82     		strh	r3, [r7, #22]	@ movhi
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 65


 700:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2897              		.loc 1 700 0
 2898 00b0 D7E90001 		ldrd	r0, [r7]
 2899 00b4 0AA3     		adr	r3, .L144
 2900 00b6 D3E90023 		ldrd	r2, [r3]
 2901 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2902 00be 0246     		mov	r2, r0
 2903 00c0 0B46     		mov	r3, r1
 2904 00c2 1046     		mov	r0, r2
 2905 00c4 1946     		mov	r1, r3
 2906 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2907 00ca 0346     		mov	r3, r0
 2908 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 701:.\main.c      ****     
 702:.\main.c      ****     leftSpeedLimit = countsRight;
 2909              		.loc 1 702 0
 2910 00ce 074A     		ldr	r2, .L144+12
 2911 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2912 00d2 1380     		strh	r3, [r2]	@ movhi
 703:.\main.c      ****     rightSpeedLimit = countsLeft;
 2913              		.loc 1 703 0
 2914 00d4 064A     		ldr	r2, .L144+16
 2915 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2916 00d8 1380     		strh	r3, [r2]	@ movhi
 704:.\main.c      **** }
 2917              		.loc 1 704 0
 2918 00da 1837     		adds	r7, r7, #24
 2919              		.cfi_def_cfa_offset 8
 2920 00dc BD46     		mov	sp, r7
 2921              		.cfi_def_cfa_register 13
 2922              		@ sp needed
 2923 00de 80BD     		pop	{r7, pc}
 2924              	.L145:
 2925              		.align	3
 2926              	.L144:
 2927 00e0 969526A5 		.word	-1524197994
 2928 00e4 A0DBEF3F 		.word	1072683936
 2929 00e8 00000000 		.word	direction
 2930 00ec 00000000 		.word	leftSpeedLimit
 2931 00f0 00000000 		.word	rightSpeedLimit
 2932              		.cfi_endproc
 2933              	.LFE76:
 2934              		.size	setSpeed, .-setSpeed
 2935 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2936              		.align	2
 2937              		.global	brakeLeft
 2938              		.thumb
 2939              		.thumb_func
 2940              		.type	brakeLeft, %function
 2941              	brakeLeft:
 2942              	.LFB77:
 705:.\main.c      **** 
 706:.\main.c      **** void brakeLeft()
 707:.\main.c      **** {
 2943              		.loc 1 707 0
 2944              		.cfi_startproc
 2945              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 66


 2946              		@ frame_needed = 1, uses_anonymous_args = 0
 2947 0000 80B5     		push	{r7, lr}
 2948              		.cfi_def_cfa_offset 8
 2949              		.cfi_offset 7, -8
 2950              		.cfi_offset 14, -4
 2951 0002 00AF     		add	r7, sp, #0
 2952              		.cfi_def_cfa_register 7
 708:.\main.c      ****     PWM_1_WriteCompare(0);
 2953              		.loc 1 708 0
 2954 0004 0020     		movs	r0, #0
 2955 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 709:.\main.c      ****     left_duty_cycle = 0;
 2956              		.loc 1 709 0
 2957 000a 024B     		ldr	r3, .L147
 2958 000c 0022     		movs	r2, #0
 2959 000e 1A80     		strh	r2, [r3]	@ movhi
 710:.\main.c      **** }
 2960              		.loc 1 710 0
 2961 0010 80BD     		pop	{r7, pc}
 2962              	.L148:
 2963 0012 00BF     		.align	2
 2964              	.L147:
 2965 0014 00000000 		.word	left_duty_cycle
 2966              		.cfi_endproc
 2967              	.LFE77:
 2968              		.size	brakeLeft, .-brakeLeft
 2969              		.section	.text.brakeRight,"ax",%progbits
 2970              		.align	2
 2971              		.global	brakeRight
 2972              		.thumb
 2973              		.thumb_func
 2974              		.type	brakeRight, %function
 2975              	brakeRight:
 2976              	.LFB78:
 711:.\main.c      **** 
 712:.\main.c      **** void brakeRight()
 713:.\main.c      **** {
 2977              		.loc 1 713 0
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 0
 2980              		@ frame_needed = 1, uses_anonymous_args = 0
 2981 0000 80B5     		push	{r7, lr}
 2982              		.cfi_def_cfa_offset 8
 2983              		.cfi_offset 7, -8
 2984              		.cfi_offset 14, -4
 2985 0002 00AF     		add	r7, sp, #0
 2986              		.cfi_def_cfa_register 7
 714:.\main.c      ****      PWM_2_WriteCompare(0);
 2987              		.loc 1 714 0
 2988 0004 0020     		movs	r0, #0
 2989 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 715:.\main.c      ****      right_duty_cycle = 0;
 2990              		.loc 1 715 0
 2991 000a 024B     		ldr	r3, .L150
 2992 000c 0022     		movs	r2, #0
 2993 000e 1A80     		strh	r2, [r3]	@ movhi
 716:.\main.c      **** }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 67


 2994              		.loc 1 716 0
 2995 0010 80BD     		pop	{r7, pc}
 2996              	.L151:
 2997 0012 00BF     		.align	2
 2998              	.L150:
 2999 0014 00000000 		.word	right_duty_cycle
 3000              		.cfi_endproc
 3001              	.LFE78:
 3002              		.size	brakeRight, .-brakeRight
 3003              		.section	.text.brakeMotor,"ax",%progbits
 3004              		.align	2
 3005              		.global	brakeMotor
 3006              		.thumb
 3007              		.thumb_func
 3008              		.type	brakeMotor, %function
 3009              	brakeMotor:
 3010              	.LFB79:
 717:.\main.c      **** 
 718:.\main.c      **** void brakeMotor(){
 3011              		.loc 1 718 0
 3012              		.cfi_startproc
 3013              		@ args = 0, pretend = 0, frame = 0
 3014              		@ frame_needed = 1, uses_anonymous_args = 0
 3015 0000 80B5     		push	{r7, lr}
 3016              		.cfi_def_cfa_offset 8
 3017              		.cfi_offset 7, -8
 3018              		.cfi_offset 14, -4
 3019 0002 00AF     		add	r7, sp, #0
 3020              		.cfi_def_cfa_register 7
 719:.\main.c      ****     setSpeed(0, 0);
 3021              		.loc 1 719 0
 3022 0004 4FF00000 		mov	r0, #0
 3023 0008 4FF00001 		mov	r1, #0
 3024 000c 4FF00002 		mov	r2, #0
 3025 0010 4FF00003 		mov	r3, #0
 3026 0014 FFF7FEFF 		bl	setSpeed
 720:.\main.c      ****     brakeLeft();
 3027              		.loc 1 720 0
 3028 0018 FFF7FEFF 		bl	brakeLeft
 721:.\main.c      ****     brakeRight();
 3029              		.loc 1 721 0
 3030 001c FFF7FEFF 		bl	brakeRight
 722:.\main.c      **** }
 3031              		.loc 1 722 0
 3032 0020 80BD     		pop	{r7, pc}
 3033              		.cfi_endproc
 3034              	.LFE79:
 3035              		.size	brakeMotor, .-brakeMotor
 3036 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 3037              		.align	2
 3038              		.global	driveForwards
 3039              		.thumb
 3040              		.thumb_func
 3041              		.type	driveForwards, %function
 3042              	driveForwards:
 3043              	.LFB80:
 723:.\main.c      **** 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 68


 724:.\main.c      **** void driveForwards()
 725:.\main.c      **** {
 3044              		.loc 1 725 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 0
 3047              		@ frame_needed = 1, uses_anonymous_args = 0
 3048 0000 80B5     		push	{r7, lr}
 3049              		.cfi_def_cfa_offset 8
 3050              		.cfi_offset 7, -8
 3051              		.cfi_offset 14, -4
 3052 0002 00AF     		add	r7, sp, #0
 3053              		.cfi_def_cfa_register 7
 726:.\main.c      ****     setSpeed(speed, speed);
 3054              		.loc 1 726 0
 3055 0004 044B     		ldr	r3, .L154
 3056 0006 D3E90001 		ldrd	r0, [r3]
 3057 000a 034B     		ldr	r3, .L154
 3058 000c D3E90023 		ldrd	r2, [r3]
 3059 0010 FFF7FEFF 		bl	setSpeed
 727:.\main.c      **** }
 3060              		.loc 1 727 0
 3061 0014 80BD     		pop	{r7, pc}
 3062              	.L155:
 3063 0016 00BF     		.align	2
 3064              	.L154:
 3065 0018 00000000 		.word	speed
 3066              		.cfi_endproc
 3067              	.LFE80:
 3068              		.size	driveForwards, .-driveForwards
 3069              		.global	__aeabi_dmul
 3070              		.section	.text.turnRight,"ax",%progbits
 3071              		.align	2
 3072              		.global	turnRight
 3073              		.thumb
 3074              		.thumb_func
 3075              		.type	turnRight, %function
 3076              	turnRight:
 3077              	.LFB81:
 728:.\main.c      **** 
 729:.\main.c      **** void turnRight()
 730:.\main.c      **** {
 3078              		.loc 1 730 0
 3079              		.cfi_startproc
 3080              		@ args = 0, pretend = 0, frame = 0
 3081              		@ frame_needed = 1, uses_anonymous_args = 0
 3082 0000 80B5     		push	{r7, lr}
 3083              		.cfi_def_cfa_offset 8
 3084              		.cfi_offset 7, -8
 3085              		.cfi_offset 14, -4
 3086 0002 00AF     		add	r7, sp, #0
 3087              		.cfi_def_cfa_register 7
 731:.\main.c      ****     setSpeed(0,speed * 1.5);
 3088              		.loc 1 731 0
 3089 0004 094B     		ldr	r3, .L157
 3090 0006 D3E90023 		ldrd	r2, [r3]
 3091 000a 1046     		mov	r0, r2
 3092 000c 1946     		mov	r1, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 69


 3093 000e 4FF00002 		mov	r2, #0
 3094 0012 074B     		ldr	r3, .L157+4
 3095 0014 FFF7FEFF 		bl	__aeabi_dmul
 3096 0018 0246     		mov	r2, r0
 3097 001a 0B46     		mov	r3, r1
 3098 001c 4FF00000 		mov	r0, #0
 3099 0020 4FF00001 		mov	r1, #0
 3100 0024 FFF7FEFF 		bl	setSpeed
 732:.\main.c      **** }
 3101              		.loc 1 732 0
 3102 0028 80BD     		pop	{r7, pc}
 3103              	.L158:
 3104 002a 00BF     		.align	2
 3105              	.L157:
 3106 002c 00000000 		.word	speed
 3107 0030 0000F83F 		.word	1073217536
 3108              		.cfi_endproc
 3109              	.LFE81:
 3110              		.size	turnRight, .-turnRight
 3111              		.section	.text.turnLeft,"ax",%progbits
 3112              		.align	2
 3113              		.global	turnLeft
 3114              		.thumb
 3115              		.thumb_func
 3116              		.type	turnLeft, %function
 3117              	turnLeft:
 3118              	.LFB82:
 733:.\main.c      **** 
 734:.\main.c      **** void turnLeft()
 735:.\main.c      **** {
 3119              		.loc 1 735 0
 3120              		.cfi_startproc
 3121              		@ args = 0, pretend = 0, frame = 0
 3122              		@ frame_needed = 1, uses_anonymous_args = 0
 3123 0000 80B5     		push	{r7, lr}
 3124              		.cfi_def_cfa_offset 8
 3125              		.cfi_offset 7, -8
 3126              		.cfi_offset 14, -4
 3127 0002 00AF     		add	r7, sp, #0
 3128              		.cfi_def_cfa_register 7
 736:.\main.c      ****     setSpeed(speed * 1.5,0);
 3129              		.loc 1 736 0
 3130 0004 0A4B     		ldr	r3, .L160
 3131 0006 D3E90023 		ldrd	r2, [r3]
 3132 000a 1046     		mov	r0, r2
 3133 000c 1946     		mov	r1, r3
 3134 000e 4FF00002 		mov	r2, #0
 3135 0012 084B     		ldr	r3, .L160+4
 3136 0014 FFF7FEFF 		bl	__aeabi_dmul
 3137 0018 0246     		mov	r2, r0
 3138 001a 0B46     		mov	r3, r1
 3139 001c 1046     		mov	r0, r2
 3140 001e 1946     		mov	r1, r3
 3141 0020 4FF00002 		mov	r2, #0
 3142 0024 4FF00003 		mov	r3, #0
 3143 0028 FFF7FEFF 		bl	setSpeed
 737:.\main.c      **** }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 70


 3144              		.loc 1 737 0
 3145 002c 80BD     		pop	{r7, pc}
 3146              	.L161:
 3147 002e 00BF     		.align	2
 3148              	.L160:
 3149 0030 00000000 		.word	speed
 3150 0034 0000F83F 		.word	1073217536
 3151              		.cfi_endproc
 3152              	.LFE82:
 3153              		.size	turnLeft, .-turnLeft
 3154              		.section	.text.turnU,"ax",%progbits
 3155              		.align	2
 3156              		.global	turnU
 3157              		.thumb
 3158              		.thumb_func
 3159              		.type	turnU, %function
 3160              	turnU:
 3161              	.LFB83:
 738:.\main.c      **** 
 739:.\main.c      **** void turnU()
 740:.\main.c      **** {
 3162              		.loc 1 740 0
 3163              		.cfi_startproc
 3164              		@ args = 0, pretend = 0, frame = 0
 3165              		@ frame_needed = 1, uses_anonymous_args = 0
 3166 0000 B0B5     		push	{r4, r5, r7, lr}
 3167              		.cfi_def_cfa_offset 16
 3168              		.cfi_offset 4, -16
 3169              		.cfi_offset 5, -12
 3170              		.cfi_offset 7, -8
 3171              		.cfi_offset 14, -4
 3172 0002 00AF     		add	r7, sp, #0
 3173              		.cfi_def_cfa_register 7
 741:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3174              		.loc 1 741 0
 3175 0004 0F4B     		ldr	r3, .L163
 3176 0006 D3E90023 		ldrd	r2, [r3]
 3177 000a 1046     		mov	r0, r2
 3178 000c 83F00041 		eor	r1, r3, #-2147483648
 3179 0010 4FF00002 		mov	r2, #0
 3180 0014 0C4B     		ldr	r3, .L163+4
 3181 0016 FFF7FEFF 		bl	__aeabi_dmul
 3182 001a 0246     		mov	r2, r0
 3183 001c 0B46     		mov	r3, r1
 3184 001e 1446     		mov	r4, r2
 3185 0020 1D46     		mov	r5, r3
 3186 0022 084B     		ldr	r3, .L163
 3187 0024 D3E90023 		ldrd	r2, [r3]
 3188 0028 1046     		mov	r0, r2
 3189 002a 1946     		mov	r1, r3
 3190 002c 4FF00002 		mov	r2, #0
 3191 0030 054B     		ldr	r3, .L163+4
 3192 0032 FFF7FEFF 		bl	__aeabi_dmul
 3193 0036 0246     		mov	r2, r0
 3194 0038 0B46     		mov	r3, r1
 3195 003a 2046     		mov	r0, r4
 3196 003c 2946     		mov	r1, r5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 71


 3197 003e FFF7FEFF 		bl	setSpeed
 742:.\main.c      **** }
 3198              		.loc 1 742 0
 3199 0042 B0BD     		pop	{r4, r5, r7, pc}
 3200              	.L164:
 3201              		.align	2
 3202              	.L163:
 3203 0044 00000000 		.word	speed
 3204 0048 0000F83F 		.word	1073217536
 3205              		.cfi_endproc
 3206              	.LFE83:
 3207              		.size	turnU, .-turnU
 3208              		.section	.text.initTurnLeft,"ax",%progbits
 3209              		.align	2
 3210              		.global	initTurnLeft
 3211              		.thumb
 3212              		.thumb_func
 3213              		.type	initTurnLeft, %function
 3214              	initTurnLeft:
 3215              	.LFB84:
 743:.\main.c      **** 
 744:.\main.c      **** void initTurnLeft(){
 3216              		.loc 1 744 0
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 0
 3219              		@ frame_needed = 1, uses_anonymous_args = 0
 3220 0000 80B5     		push	{r7, lr}
 3221              		.cfi_def_cfa_offset 8
 3222              		.cfi_offset 7, -8
 3223              		.cfi_offset 14, -4
 3224 0002 00AF     		add	r7, sp, #0
 3225              		.cfi_def_cfa_register 7
 745:.\main.c      ****     Timer_2_Stop();
 3226              		.loc 1 745 0
 3227 0004 FFF7FEFF 		bl	Timer_2_Stop
 746:.\main.c      ****     prev_movement_state = movement_state;
 3228              		.loc 1 746 0
 3229 0008 084B     		ldr	r3, .L166
 3230 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3231 000c 084B     		ldr	r3, .L166+4
 3232 000e 1A70     		strb	r2, [r3]
 747:.\main.c      ****     movement_state = LTURN;
 3233              		.loc 1 747 0
 3234 0010 064B     		ldr	r3, .L166
 3235 0012 0122     		movs	r2, #1
 3236 0014 1A70     		strb	r2, [r3]
 748:.\main.c      ****     brakeLeft();
 3237              		.loc 1 748 0
 3238 0016 FFF7FEFF 		bl	brakeLeft
 749:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3239              		.loc 1 749 0
 3240 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3241 001e 0346     		mov	r3, r0
 3242 0020 1A46     		mov	r2, r3
 3243 0022 044B     		ldr	r3, .L166+8
 3244 0024 1A80     		strh	r2, [r3]	@ movhi
 750:.\main.c      ****     Timer_2_Start();
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 72


 3245              		.loc 1 750 0
 3246 0026 FFF7FEFF 		bl	Timer_2_Start
 751:.\main.c      **** }
 3247              		.loc 1 751 0
 3248 002a 80BD     		pop	{r7, pc}
 3249              	.L167:
 3250              		.align	2
 3251              	.L166:
 3252 002c 00000000 		.word	movement_state
 3253 0030 00000000 		.word	prev_movement_state
 3254 0034 00000000 		.word	start_turn_count
 3255              		.cfi_endproc
 3256              	.LFE84:
 3257              		.size	initTurnLeft, .-initTurnLeft
 3258              		.section	.text.initTurnRight,"ax",%progbits
 3259              		.align	2
 3260              		.global	initTurnRight
 3261              		.thumb
 3262              		.thumb_func
 3263              		.type	initTurnRight, %function
 3264              	initTurnRight:
 3265              	.LFB85:
 752:.\main.c      **** 
 753:.\main.c      **** void initTurnRight(){
 3266              		.loc 1 753 0
 3267              		.cfi_startproc
 3268              		@ args = 0, pretend = 0, frame = 0
 3269              		@ frame_needed = 1, uses_anonymous_args = 0
 3270 0000 80B5     		push	{r7, lr}
 3271              		.cfi_def_cfa_offset 8
 3272              		.cfi_offset 7, -8
 3273              		.cfi_offset 14, -4
 3274 0002 00AF     		add	r7, sp, #0
 3275              		.cfi_def_cfa_register 7
 754:.\main.c      ****     Timer_2_Stop();
 3276              		.loc 1 754 0
 3277 0004 FFF7FEFF 		bl	Timer_2_Stop
 755:.\main.c      ****     prev_movement_state = movement_state;
 3278              		.loc 1 755 0
 3279 0008 084B     		ldr	r3, .L169
 3280 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3281 000c 084B     		ldr	r3, .L169+4
 3282 000e 1A70     		strb	r2, [r3]
 756:.\main.c      ****     movement_state = RTURN;
 3283              		.loc 1 756 0
 3284 0010 064B     		ldr	r3, .L169
 3285 0012 0222     		movs	r2, #2
 3286 0014 1A70     		strb	r2, [r3]
 757:.\main.c      ****     brakeRight();
 3287              		.loc 1 757 0
 3288 0016 FFF7FEFF 		bl	brakeRight
 758:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3289              		.loc 1 758 0
 3290 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3291 001e 0346     		mov	r3, r0
 3292 0020 1A46     		mov	r2, r3
 3293 0022 044B     		ldr	r3, .L169+8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 73


 3294 0024 1A80     		strh	r2, [r3]	@ movhi
 759:.\main.c      ****     Timer_2_Start();
 3295              		.loc 1 759 0
 3296 0026 FFF7FEFF 		bl	Timer_2_Start
 760:.\main.c      **** }
 3297              		.loc 1 760 0
 3298 002a 80BD     		pop	{r7, pc}
 3299              	.L170:
 3300              		.align	2
 3301              	.L169:
 3302 002c 00000000 		.word	movement_state
 3303 0030 00000000 		.word	prev_movement_state
 3304 0034 00000000 		.word	start_turn_count
 3305              		.cfi_endproc
 3306              	.LFE85:
 3307              		.size	initTurnRight, .-initTurnRight
 3308              		.section	.text.initTurnU,"ax",%progbits
 3309              		.align	2
 3310              		.global	initTurnU
 3311              		.thumb
 3312              		.thumb_func
 3313              		.type	initTurnU, %function
 3314              	initTurnU:
 3315              	.LFB86:
 761:.\main.c      **** 
 762:.\main.c      **** void initTurnU(){
 3316              		.loc 1 762 0
 3317              		.cfi_startproc
 3318              		@ args = 0, pretend = 0, frame = 0
 3319              		@ frame_needed = 1, uses_anonymous_args = 0
 3320 0000 80B5     		push	{r7, lr}
 3321              		.cfi_def_cfa_offset 8
 3322              		.cfi_offset 7, -8
 3323              		.cfi_offset 14, -4
 3324 0002 00AF     		add	r7, sp, #0
 3325              		.cfi_def_cfa_register 7
 763:.\main.c      ****     Timer_2_Stop();
 3326              		.loc 1 763 0
 3327 0004 FFF7FEFF 		bl	Timer_2_Stop
 764:.\main.c      ****     prev_movement_state = movement_state;
 3328              		.loc 1 764 0
 3329 0008 084B     		ldr	r3, .L172
 3330 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3331 000c 084B     		ldr	r3, .L172+4
 3332 000e 1A70     		strb	r2, [r3]
 765:.\main.c      ****     movement_state = UTURN;
 3333              		.loc 1 765 0
 3334 0010 064B     		ldr	r3, .L172
 3335 0012 0722     		movs	r2, #7
 3336 0014 1A70     		strb	r2, [r3]
 766:.\main.c      ****     brakeMotor();
 3337              		.loc 1 766 0
 3338 0016 FFF7FEFF 		bl	brakeMotor
 767:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3339              		.loc 1 767 0
 3340 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3341 001e 0346     		mov	r3, r0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 74


 3342 0020 1A46     		mov	r2, r3
 3343 0022 044B     		ldr	r3, .L172+8
 3344 0024 1A80     		strh	r2, [r3]	@ movhi
 768:.\main.c      ****     Timer_2_Start();
 3345              		.loc 1 768 0
 3346 0026 FFF7FEFF 		bl	Timer_2_Start
 769:.\main.c      **** }
 3347              		.loc 1 769 0
 3348 002a 80BD     		pop	{r7, pc}
 3349              	.L173:
 3350              		.align	2
 3351              	.L172:
 3352 002c 00000000 		.word	movement_state
 3353 0030 00000000 		.word	prev_movement_state
 3354 0034 00000000 		.word	start_turn_count
 3355              		.cfi_endproc
 3356              	.LFE86:
 3357              		.size	initTurnU, .-initTurnU
 3358              		.section	.text.initForward,"ax",%progbits
 3359              		.align	2
 3360              		.global	initForward
 3361              		.thumb
 3362              		.thumb_func
 3363              		.type	initForward, %function
 3364              	initForward:
 3365              	.LFB87:
 770:.\main.c      **** 
 771:.\main.c      **** void initForward(){
 3366              		.loc 1 771 0
 3367              		.cfi_startproc
 3368              		@ args = 0, pretend = 0, frame = 0
 3369              		@ frame_needed = 1, uses_anonymous_args = 0
 3370 0000 80B5     		push	{r7, lr}
 3371              		.cfi_def_cfa_offset 8
 3372              		.cfi_offset 7, -8
 3373              		.cfi_offset 14, -4
 3374 0002 00AF     		add	r7, sp, #0
 3375              		.cfi_def_cfa_register 7
 772:.\main.c      ****     brakeMotor();
 3376              		.loc 1 772 0
 3377 0004 FFF7FEFF 		bl	brakeMotor
 773:.\main.c      ****     movement_state = DRIVE;
 3378              		.loc 1 773 0
 3379 0008 014B     		ldr	r3, .L175
 3380 000a 0022     		movs	r2, #0
 3381 000c 1A70     		strb	r2, [r3]
 774:.\main.c      **** }
 3382              		.loc 1 774 0
 3383 000e 80BD     		pop	{r7, pc}
 3384              	.L176:
 3385              		.align	2
 3386              	.L175:
 3387 0010 00000000 		.word	movement_state
 3388              		.cfi_endproc
 3389              	.LFE87:
 3390              		.size	initForward, .-initForward
 3391              		.section	.text.initBrake,"ax",%progbits
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 75


 3392              		.align	2
 3393              		.global	initBrake
 3394              		.thumb
 3395              		.thumb_func
 3396              		.type	initBrake, %function
 3397              	initBrake:
 3398              	.LFB88:
 775:.\main.c      **** 
 776:.\main.c      **** void initBrake(){
 3399              		.loc 1 776 0
 3400              		.cfi_startproc
 3401              		@ args = 0, pretend = 0, frame = 0
 3402              		@ frame_needed = 1, uses_anonymous_args = 0
 3403              		@ link register save eliminated.
 3404 0000 80B4     		push	{r7}
 3405              		.cfi_def_cfa_offset 4
 3406              		.cfi_offset 7, -4
 3407 0002 00AF     		add	r7, sp, #0
 3408              		.cfi_def_cfa_register 7
 777:.\main.c      ****     movement_state = STOPPED;
 3409              		.loc 1 777 0
 3410 0004 034B     		ldr	r3, .L178
 3411 0006 0322     		movs	r2, #3
 3412 0008 1A70     		strb	r2, [r3]
 778:.\main.c      **** }
 3413              		.loc 1 778 0
 3414 000a BD46     		mov	sp, r7
 3415              		.cfi_def_cfa_register 13
 3416              		@ sp needed
 3417 000c 5DF8047B 		ldr	r7, [sp], #4
 3418              		.cfi_restore 7
 3419              		.cfi_def_cfa_offset 0
 3420 0010 7047     		bx	lr
 3421              	.L179:
 3422 0012 00BF     		.align	2
 3423              	.L178:
 3424 0014 00000000 		.word	movement_state
 3425              		.cfi_endproc
 3426              	.LFE88:
 3427              		.size	initBrake, .-initBrake
 3428              		.section	.text.initTrack,"ax",%progbits
 3429              		.align	2
 3430              		.global	initTrack
 3431              		.thumb
 3432              		.thumb_func
 3433              		.type	initTrack, %function
 3434              	initTrack:
 3435              	.LFB89:
 779:.\main.c      **** 
 780:.\main.c      **** void initTrack()
 781:.\main.c      **** {
 3436              		.loc 1 781 0
 3437              		.cfi_startproc
 3438              		@ args = 0, pretend = 0, frame = 0
 3439              		@ frame_needed = 1, uses_anonymous_args = 0
 3440              		@ link register save eliminated.
 3441 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 76


 3442              		.cfi_def_cfa_offset 4
 3443              		.cfi_offset 7, -4
 3444 0002 00AF     		add	r7, sp, #0
 3445              		.cfi_def_cfa_register 7
 782:.\main.c      ****     movement_state = TRACKING;
 3446              		.loc 1 782 0
 3447 0004 034B     		ldr	r3, .L181
 3448 0006 0422     		movs	r2, #4
 3449 0008 1A70     		strb	r2, [r3]
 783:.\main.c      **** }
 3450              		.loc 1 783 0
 3451 000a BD46     		mov	sp, r7
 3452              		.cfi_def_cfa_register 13
 3453              		@ sp needed
 3454 000c 5DF8047B 		ldr	r7, [sp], #4
 3455              		.cfi_restore 7
 3456              		.cfi_def_cfa_offset 0
 3457 0010 7047     		bx	lr
 3458              	.L182:
 3459 0012 00BF     		.align	2
 3460              	.L181:
 3461 0014 00000000 		.word	movement_state
 3462              		.cfi_endproc
 3463              	.LFE89:
 3464              		.size	initTrack, .-initTrack
 3465              		.section	.text.initTrackU,"ax",%progbits
 3466              		.align	2
 3467              		.global	initTrackU
 3468              		.thumb
 3469              		.thumb_func
 3470              		.type	initTrackU, %function
 3471              	initTrackU:
 3472              	.LFB90:
 784:.\main.c      **** 
 785:.\main.c      **** void initTrackU(){
 3473              		.loc 1 785 0
 3474              		.cfi_startproc
 3475              		@ args = 0, pretend = 0, frame = 0
 3476              		@ frame_needed = 1, uses_anonymous_args = 0
 3477              		@ link register save eliminated.
 3478 0000 80B4     		push	{r7}
 3479              		.cfi_def_cfa_offset 4
 3480              		.cfi_offset 7, -4
 3481 0002 00AF     		add	r7, sp, #0
 3482              		.cfi_def_cfa_register 7
 786:.\main.c      ****     movement_state = TRACKING_U;
 3483              		.loc 1 786 0
 3484 0004 034B     		ldr	r3, .L184
 3485 0006 0522     		movs	r2, #5
 3486 0008 1A70     		strb	r2, [r3]
 787:.\main.c      **** }
 3487              		.loc 1 787 0
 3488 000a BD46     		mov	sp, r7
 3489              		.cfi_def_cfa_register 13
 3490              		@ sp needed
 3491 000c 5DF8047B 		ldr	r7, [sp], #4
 3492              		.cfi_restore 7
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 77


 3493              		.cfi_def_cfa_offset 0
 3494 0010 7047     		bx	lr
 3495              	.L185:
 3496 0012 00BF     		.align	2
 3497              	.L184:
 3498 0014 00000000 		.word	movement_state
 3499              		.cfi_endproc
 3500              	.LFE90:
 3501              		.size	initTrackU, .-initTrackU
 3502              		.section	.text.inittrackLineZ,"ax",%progbits
 3503              		.align	2
 3504              		.global	inittrackLineZ
 3505              		.thumb
 3506              		.thumb_func
 3507              		.type	inittrackLineZ, %function
 3508              	inittrackLineZ:
 3509              	.LFB91:
 788:.\main.c      **** 
 789:.\main.c      **** void inittrackLineZ(){
 3510              		.loc 1 789 0
 3511              		.cfi_startproc
 3512              		@ args = 0, pretend = 0, frame = 0
 3513              		@ frame_needed = 1, uses_anonymous_args = 0
 3514              		@ link register save eliminated.
 3515 0000 80B4     		push	{r7}
 3516              		.cfi_def_cfa_offset 4
 3517              		.cfi_offset 7, -4
 3518 0002 00AF     		add	r7, sp, #0
 3519              		.cfi_def_cfa_register 7
 790:.\main.c      ****     movement_state = TRACKING_SOFT;
 3520              		.loc 1 790 0
 3521 0004 034B     		ldr	r3, .L187
 3522 0006 0622     		movs	r2, #6
 3523 0008 1A70     		strb	r2, [r3]
 791:.\main.c      **** }
 3524              		.loc 1 791 0
 3525 000a BD46     		mov	sp, r7
 3526              		.cfi_def_cfa_register 13
 3527              		@ sp needed
 3528 000c 5DF8047B 		ldr	r7, [sp], #4
 3529              		.cfi_restore 7
 3530              		.cfi_def_cfa_offset 0
 3531 0010 7047     		bx	lr
 3532              	.L188:
 3533 0012 00BF     		.align	2
 3534              	.L187:
 3535 0014 00000000 		.word	movement_state
 3536              		.cfi_endproc
 3537              	.LFE91:
 3538              		.size	inittrackLineZ, .-inittrackLineZ
 3539              		.section	.text.rxInt,"ax",%progbits
 3540              		.align	2
 3541              		.global	rxInt
 3542              		.thumb
 3543              		.thumb_func
 3544              		.type	rxInt, %function
 3545              	rxInt:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 78


 3546              	.LFB92:
 792:.\main.c      **** 
 793:.\main.c      **** 
 794:.\main.c      **** 
 795:.\main.c      **** //Binary RF Data
 796:.\main.c      **** CY_ISR(rxInt){
 3547              		.loc 1 796 0
 3548              		.cfi_startproc
 3549              		@ args = 0, pretend = 0, frame = 8
 3550              		@ frame_needed = 1, uses_anonymous_args = 0
 3551 0000 B0B5     		push	{r4, r5, r7, lr}
 3552              		.cfi_def_cfa_offset 16
 3553              		.cfi_offset 4, -16
 3554              		.cfi_offset 5, -12
 3555              		.cfi_offset 7, -8
 3556              		.cfi_offset 14, -4
 3557 0002 82B0     		sub	sp, sp, #8
 3558              		.cfi_def_cfa_offset 24
 3559 0004 00AF     		add	r7, sp, #0
 3560              		.cfi_def_cfa_register 7
 797:.\main.c      ****     char rf_char = UART_GetChar();
 3561              		.loc 1 797 0
 3562 0006 FFF7FEFF 		bl	UART_GetChar
 3563 000a 0346     		mov	r3, r0
 3564 000c FB71     		strb	r3, [r7, #7]
 798:.\main.c      ****     if(rf_char == SOP){
 3565              		.loc 1 798 0
 3566 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3567 0010 AA2B     		cmp	r3, #170
 3568 0012 2BD1     		bne	.L190
 799:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 800:.\main.c      ****             if(byteCount == 34)
 3569              		.loc 1 800 0
 3570 0014 224B     		ldr	r3, .L194
 3571 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3572 0018 222B     		cmp	r3, #34
 3573 001a 20D1     		bne	.L191
 801:.\main.c      ****             {
 802:.\main.c      ****                 system_state = buffer_state;
 3574              		.loc 1 802 0
 3575 001c 214B     		ldr	r3, .L194+4
 3576 001e 224A     		ldr	r2, .L194+8
 3577 0020 1568     		ldr	r5, [r2]	@ unaligned
 3578 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3579 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3580 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3581 0028 1D60     		str	r5, [r3]	@ unaligned
 3582 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3583 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3584 002e D960     		str	r1, [r3, #12]	@ unaligned
 3585 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3586 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3587 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3588 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3589 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3590 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3591 003c 9861     		str	r0, [r3, #24]	@ unaligned
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 79


 3592 003e D961     		str	r1, [r3, #28]	@ unaligned
 803:.\main.c      ****                 if(initial_pos_valid == 0)
 3593              		.loc 1 803 0
 3594 0040 1A4B     		ldr	r3, .L194+12
 3595 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3596 0044 002B     		cmp	r3, #0
 3597 0046 0AD1     		bne	.L191
 804:.\main.c      ****                 {
 805:.\main.c      ****                     LED_Write(~LED_Read());
 3598              		.loc 1 805 0
 3599 0048 FFF7FEFF 		bl	LED_Read
 3600 004c 0346     		mov	r3, r0
 3601 004e DB43     		mvns	r3, r3
 3602 0050 DBB2     		uxtb	r3, r3
 3603 0052 1846     		mov	r0, r3
 3604 0054 FFF7FEFF 		bl	LED_Write
 806:.\main.c      ****                     initial_pos_valid = 1;
 3605              		.loc 1 806 0
 3606 0058 144B     		ldr	r3, .L194+12
 3607 005a 0122     		movs	r2, #1
 3608 005c 1A70     		strb	r2, [r3]
 3609              	.L191:
 807:.\main.c      ****                 }
 808:.\main.c      ****             }
 809:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3610              		.loc 1 809 0
 3611 005e 104B     		ldr	r3, .L194
 3612 0060 0222     		movs	r2, #2
 3613 0062 1A70     		strb	r2, [r3]
 810:.\main.c      ****             flag_rx = 0;
 3614              		.loc 1 810 0
 3615 0064 124B     		ldr	r3, .L194+16
 3616 0066 0022     		movs	r2, #0
 3617 0068 1A70     		strb	r2, [r3]
 3618 006a 16E0     		b	.L189
 3619              	.L190:
 811:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 812:.\main.c      ****         }
 813:.\main.c      ****         else
 814:.\main.c      ****         {
 815:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3620              		.loc 1 815 0
 3621 006c 0C4B     		ldr	r3, .L194
 3622 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3623 0070 03F00103 		and	r3, r3, #1
 3624 0074 0F49     		ldr	r1, .L194+20
 3625 0076 FA79     		ldrb	r2, [r7, #7]
 3626 0078 CA54     		strb	r2, [r1, r3]
 816:.\main.c      ****            
 817:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3627              		.loc 1 817 0
 3628 007a 094B     		ldr	r3, .L194
 3629 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3630 007e 03F00103 		and	r3, r3, #1
 3631 0082 DBB2     		uxtb	r3, r3
 3632 0084 002B     		cmp	r3, #0
 3633 0086 02D0     		beq	.L193
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 80


 818:.\main.c      ****             {
 819:.\main.c      ****                 flag_rx = 1;
 3634              		.loc 1 819 0
 3635 0088 094B     		ldr	r3, .L194+16
 3636 008a 0122     		movs	r2, #1
 3637 008c 1A70     		strb	r2, [r3]
 3638              	.L193:
 820:.\main.c      ****             }
 821:.\main.c      ****             byteCount = (byteCount + 1);
 3639              		.loc 1 821 0
 3640 008e 044B     		ldr	r3, .L194
 3641 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3642 0092 0133     		adds	r3, r3, #1
 3643 0094 DAB2     		uxtb	r2, r3
 3644 0096 024B     		ldr	r3, .L194
 3645 0098 1A70     		strb	r2, [r3]
 3646              	.L189:
 822:.\main.c      ****         }
 823:.\main.c      **** }
 3647              		.loc 1 823 0
 3648 009a 0837     		adds	r7, r7, #8
 3649              		.cfi_def_cfa_offset 16
 3650 009c BD46     		mov	sp, r7
 3651              		.cfi_def_cfa_register 13
 3652              		@ sp needed
 3653 009e B0BD     		pop	{r4, r5, r7, pc}
 3654              	.L195:
 3655              		.align	2
 3656              	.L194:
 3657 00a0 00000000 		.word	byteCount
 3658 00a4 00000000 		.word	system_state
 3659 00a8 00000000 		.word	buffer_state
 3660 00ac 00000000 		.word	initial_pos_valid
 3661 00b0 00000000 		.word	flag_rx
 3662 00b4 00000000 		.word	packet
 3663              		.cfi_endproc
 3664              	.LFE92:
 3665              		.size	rxInt, .-rxInt
 3666              		.global	__aeabi_i2f
 3667              		.global	__aeabi_fmul
 3668              		.global	__aeabi_f2iz
 3669              		.section	.rodata
 3670 00c2 0000     		.align	2
 3671              	.LC10:
 3672 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3672      65742071 
 3672      7561643A 
 3672      2025640D 
 3672      0A00
 3673 00d6 0000     		.align	2
 3674              	.LC11:
 3675 00d8 72656365 		.ascii	"received: \000"
 3675      69766564 
 3675      3A2000
 3676 00e3 00       		.align	2
 3677              	.LC12:
 3678 00e4 0D0A00   		.ascii	"\015\012\000"
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 81


 3679 00e7 00       		.align	2
 3680              	.LC13:
 3681 00e8 6E756D20 		.ascii	"num instruct:%d\015\012\000"
 3681      696E7374 
 3681      72756374 
 3681      3A25640D 
 3681      0A00
 3682 00fa 0000     		.align	2
 3683              	.LC14:
 3684 00fc 73746172 		.ascii	"starting from instruction %d\015\012\000"
 3684      74696E67 
 3684      2066726F 
 3684      6D20696E 
 3684      73747275 
 3685              		.section	.text.BT_rxInt,"ax",%progbits
 3686              		.align	2
 3687              		.global	BT_rxInt
 3688              		.thumb
 3689              		.thumb_func
 3690              		.type	BT_rxInt, %function
 3691              	BT_rxInt:
 3692              	.LFB93:
 824:.\main.c      **** 
 825:.\main.c      **** CY_ISR(BT_rxInt)
 826:.\main.c      **** {
 3693              		.loc 1 826 0
 3694              		.cfi_startproc
 3695              		@ args = 0, pretend = 0, frame = 48
 3696              		@ frame_needed = 1, uses_anonymous_args = 0
 3697 0000 80B5     		push	{r7, lr}
 3698              		.cfi_def_cfa_offset 8
 3699              		.cfi_offset 7, -8
 3700              		.cfi_offset 14, -4
 3701 0002 8CB0     		sub	sp, sp, #48
 3702              		.cfi_def_cfa_offset 56
 3703 0004 00AF     		add	r7, sp, #0
 3704              		.cfi_def_cfa_register 7
 827:.\main.c      ****     char rf_char = UART_GetChar();
 3705              		.loc 1 827 0
 3706 0006 FFF7FEFF 		bl	UART_GetChar
 3707 000a 0346     		mov	r3, r0
 3708 000c 87F82F30 		strb	r3, [r7, #47]
 828:.\main.c      ****     switch(rf_char){
 3709              		.loc 1 828 0
 3710 0010 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3711 0014 313B     		subs	r3, r3, #49
 3712 0016 492B     		cmp	r3, #73
 3713 0018 00F2CF82 		bhi	.L196
 3714 001c 01A2     		adr	r2, .L199
 3715 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3716 0022 00BF     		.p2align 2
 3717              	.L199:
 3718 0024 CD030000 		.word	.L198+1
 3719 0028 19020000 		.word	.L200+1
 3720 002c BB050000 		.word	.L196+1
 3721 0030 BB050000 		.word	.L196+1
 3722 0034 BB050000 		.word	.L196+1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 82


 3723 0038 BB050000 		.word	.L196+1
 3724 003c BB050000 		.word	.L196+1
 3725 0040 BB050000 		.word	.L196+1
 3726 0044 BB050000 		.word	.L196+1
 3727 0048 BB050000 		.word	.L196+1
 3728 004c BB050000 		.word	.L196+1
 3729 0050 BB050000 		.word	.L196+1
 3730 0054 BB050000 		.word	.L196+1
 3731 0058 BB050000 		.word	.L196+1
 3732 005c BB050000 		.word	.L196+1
 3733 0060 BB050000 		.word	.L196+1
 3734 0064 BB050000 		.word	.L196+1
 3735 0068 BB050000 		.word	.L196+1
 3736 006c BB050000 		.word	.L196+1
 3737 0070 BB050000 		.word	.L196+1
 3738 0074 BB050000 		.word	.L196+1
 3739 0078 BB050000 		.word	.L196+1
 3740 007c BB050000 		.word	.L196+1
 3741 0080 BB050000 		.word	.L196+1
 3742 0084 BB050000 		.word	.L196+1
 3743 0088 BB050000 		.word	.L196+1
 3744 008c BB050000 		.word	.L196+1
 3745 0090 BB050000 		.word	.L196+1
 3746 0094 BB050000 		.word	.L196+1
 3747 0098 BB050000 		.word	.L196+1
 3748 009c BB050000 		.word	.L196+1
 3749 00a0 BB050000 		.word	.L196+1
 3750 00a4 BB050000 		.word	.L196+1
 3751 00a8 BB050000 		.word	.L196+1
 3752 00ac BB050000 		.word	.L196+1
 3753 00b0 BB050000 		.word	.L196+1
 3754 00b4 BB050000 		.word	.L196+1
 3755 00b8 BB050000 		.word	.L196+1
 3756 00bc BB050000 		.word	.L196+1
 3757 00c0 BB050000 		.word	.L196+1
 3758 00c4 BB050000 		.word	.L196+1
 3759 00c8 BB050000 		.word	.L196+1
 3760 00cc BB050000 		.word	.L196+1
 3761 00d0 BB050000 		.word	.L196+1
 3762 00d4 BB050000 		.word	.L196+1
 3763 00d8 BB050000 		.word	.L196+1
 3764 00dc BB050000 		.word	.L196+1
 3765 00e0 BB050000 		.word	.L196+1
 3766 00e4 4D010000 		.word	.L201+1
 3767 00e8 BB050000 		.word	.L196+1
 3768 00ec BB050000 		.word	.L196+1
 3769 00f0 71010000 		.word	.L202+1
 3770 00f4 BB050000 		.word	.L196+1
 3771 00f8 7D010000 		.word	.L203+1
 3772 00fc BB050000 		.word	.L196+1
 3773 0100 BB050000 		.word	.L196+1
 3774 0104 BB050000 		.word	.L196+1
 3775 0108 BB050000 		.word	.L196+1
 3776 010c BB050000 		.word	.L196+1
 3777 0110 BB050000 		.word	.L196+1
 3778 0114 BB050000 		.word	.L196+1
 3779 0118 BB050000 		.word	.L196+1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 83


 3780 011c BB050000 		.word	.L196+1
 3781 0120 BB050000 		.word	.L196+1
 3782 0124 AD010000 		.word	.L204+1
 3783 0128 03020000 		.word	.L205+1
 3784 012c 65010000 		.word	.L206+1
 3785 0130 89010000 		.word	.L207+1
 3786 0134 95010000 		.word	.L208+1
 3787 0138 BB050000 		.word	.L196+1
 3788 013c 59010000 		.word	.L209+1
 3789 0140 BB050000 		.word	.L196+1
 3790 0144 BB050000 		.word	.L196+1
 3791 0148 A1010000 		.word	.L210+1
 3792              		.p2align 1
 3793              	.L201:
 3794              	.LBB9:
 829:.\main.c      ****     case 'a':
 830:.\main.c      ****         initTurnLeft();
 3795              		.loc 1 830 0
 3796 014c FFF7FEFF 		bl	initTurnLeft
 831:.\main.c      ****         track_mode = NO_TRACK;
 3797              		.loc 1 831 0
 3798 0150 AE4B     		ldr	r3, .L229
 3799 0152 0022     		movs	r2, #0
 3800 0154 1A70     		strb	r2, [r3]
 832:.\main.c      ****         break;
 3801              		.loc 1 832 0
 3802 0156 30E2     		b	.L196
 3803              	.L209:
 833:.\main.c      ****     case 'w':
 834:.\main.c      ****         initForward();
 3804              		.loc 1 834 0
 3805 0158 FFF7FEFF 		bl	initForward
 835:.\main.c      ****         track_mode = NO_TRACK;
 3806              		.loc 1 835 0
 3807 015c AB4B     		ldr	r3, .L229
 3808 015e 0022     		movs	r2, #0
 3809 0160 1A70     		strb	r2, [r3]
 836:.\main.c      ****         break;
 3810              		.loc 1 836 0
 3811 0162 2AE2     		b	.L196
 3812              	.L206:
 837:.\main.c      ****     case 's': 
 838:.\main.c      ****         reverseDirection();
 3813              		.loc 1 838 0
 3814 0164 FFF7FEFF 		bl	reverseDirection
 839:.\main.c      ****         track_mode = NO_TRACK;
 3815              		.loc 1 839 0
 3816 0168 A84B     		ldr	r3, .L229
 3817 016a 0022     		movs	r2, #0
 3818 016c 1A70     		strb	r2, [r3]
 840:.\main.c      ****         break;
 3819              		.loc 1 840 0
 3820 016e 24E2     		b	.L196
 3821              	.L202:
 841:.\main.c      ****     case 'd':
 842:.\main.c      ****         initTurnRight();
 3822              		.loc 1 842 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 84


 3823 0170 FFF7FEFF 		bl	initTurnRight
 843:.\main.c      ****         track_mode = NO_TRACK;
 3824              		.loc 1 843 0
 3825 0174 A54B     		ldr	r3, .L229
 3826 0176 0022     		movs	r2, #0
 3827 0178 1A70     		strb	r2, [r3]
 844:.\main.c      ****         break;
 3828              		.loc 1 844 0
 3829 017a 1EE2     		b	.L196
 3830              	.L203:
 845:.\main.c      ****     case 'f':
 846:.\main.c      ****         initBrake();
 3831              		.loc 1 846 0
 3832 017c FFF7FEFF 		bl	initBrake
 847:.\main.c      ****         track_mode = NO_TRACK;
 3833              		.loc 1 847 0
 3834 0180 A24B     		ldr	r3, .L229
 3835 0182 0022     		movs	r2, #0
 3836 0184 1A70     		strb	r2, [r3]
 848:.\main.c      ****         break;
 3837              		.loc 1 848 0
 3838 0186 18E2     		b	.L196
 3839              	.L207:
 849:.\main.c      ****     case('t'):
 850:.\main.c      ****         track_mode = CURVE_TRACK;
 3840              		.loc 1 850 0
 3841 0188 A04B     		ldr	r3, .L229
 3842 018a 0122     		movs	r2, #1
 3843 018c 1A70     		strb	r2, [r3]
 851:.\main.c      ****         initTrack();
 3844              		.loc 1 851 0
 3845 018e FFF7FEFF 		bl	initTrack
 852:.\main.c      ****         break;
 3846              		.loc 1 852 0
 3847 0192 12E2     		b	.L196
 3848              	.L208:
 853:.\main.c      ****     case('u'):
 854:.\main.c      ****         initTrackU();
 3849              		.loc 1 854 0
 3850 0194 FFF7FEFF 		bl	initTrackU
 855:.\main.c      ****         track_mode = U_TRACK;
 3851              		.loc 1 855 0
 3852 0198 9C4B     		ldr	r3, .L229
 3853 019a 0222     		movs	r2, #2
 3854 019c 1A70     		strb	r2, [r3]
 856:.\main.c      ****         break;
 3855              		.loc 1 856 0
 3856 019e 0CE2     		b	.L196
 3857              	.L210:
 857:.\main.c      ****     case('z'):
 858:.\main.c      ****         track_mode = SQUARE_TRACK;
 3858              		.loc 1 858 0
 3859 01a0 9A4B     		ldr	r3, .L229
 3860 01a2 0322     		movs	r2, #3
 3861 01a4 1A70     		strb	r2, [r3]
 859:.\main.c      ****         inittrackLineZ();
 3862              		.loc 1 859 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 85


 3863 01a6 FFF7FEFF 		bl	inittrackLineZ
 860:.\main.c      ****         break;
 3864              		.loc 1 860 0
 3865 01aa 06E2     		b	.L196
 3866              	.L204:
 861:.\main.c      ****     case('q'):
 862:.\main.c      ****         track_mode = QUAD_STOP;
 3867              		.loc 1 862 0
 3868 01ac 974B     		ldr	r3, .L229
 3869 01ae 0422     		movs	r2, #4
 3870 01b0 1A70     		strb	r2, [r3]
 863:.\main.c      ****         accum_dist = 0;
 3871              		.loc 1 863 0
 3872 01b2 974B     		ldr	r3, .L229+4
 3873 01b4 0022     		movs	r2, #0
 3874 01b6 1A80     		strh	r2, [r3]	@ movhi
 864:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3875              		.loc 1 864 0
 3876 01b8 964B     		ldr	r3, .L229+8
 3877 01ba 1B88     		ldrh	r3, [r3]
 3878 01bc 1BB2     		sxth	r3, r3
 3879 01be 1846     		mov	r0, r3
 3880 01c0 FFF7FEFF 		bl	__aeabi_i2f
 3881 01c4 0246     		mov	r2, r0
 3882 01c6 944B     		ldr	r3, .L229+12
 3883 01c8 1B68     		ldr	r3, [r3]	@ float
 3884 01ca 1046     		mov	r0, r2
 3885 01cc 1946     		mov	r1, r3
 3886 01ce FFF7FEFF 		bl	__aeabi_fmul
 3887 01d2 0346     		mov	r3, r0
 3888 01d4 1846     		mov	r0, r3
 3889 01d6 FFF7FEFF 		bl	__aeabi_f2iz
 3890 01da 0346     		mov	r3, r0
 3891 01dc 9AB2     		uxth	r2, r3
 3892 01de 8F4B     		ldr	r3, .L229+16
 3893 01e0 1A80     		strh	r2, [r3]	@ movhi
 865:.\main.c      ****         char mes[32];
 866:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3894              		.loc 1 866 0
 3895 01e2 8E4B     		ldr	r3, .L229+16
 3896 01e4 1B88     		ldrh	r3, [r3]
 3897 01e6 1BB2     		sxth	r3, r3
 3898 01e8 3A46     		mov	r2, r7
 3899 01ea 1046     		mov	r0, r2
 3900 01ec 8C49     		ldr	r1, .L229+20
 3901 01ee 1A46     		mov	r2, r3
 3902 01f0 FFF7FEFF 		bl	sprintf
 867:.\main.c      ****         UART_PutString(mes);
 3903              		.loc 1 867 0
 3904 01f4 3B46     		mov	r3, r7
 3905 01f6 1846     		mov	r0, r3
 3906 01f8 FFF7FEFF 		bl	UART_PutString
 868:.\main.c      ****         initForward();
 3907              		.loc 1 868 0
 3908 01fc FFF7FEFF 		bl	initForward
 869:.\main.c      ****         break;
 3909              		.loc 1 869 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 86


 3910 0200 DBE1     		b	.L196
 3911              	.L205:
 870:.\main.c      ****     case ('r'):
 871:.\main.c      ****         track_mode = RF_STOP;
 3912              		.loc 1 871 0
 3913 0202 824B     		ldr	r3, .L229
 3914 0204 0522     		movs	r2, #5
 3915 0206 1A70     		strb	r2, [r3]
 872:.\main.c      ****         changeToRF();
 3916              		.loc 1 872 0
 3917 0208 FFF7FEFF 		bl	changeToRF
 873:.\main.c      ****         // Make initial position
 874:.\main.c      ****         initial_pos_valid = 0;
 3918              		.loc 1 874 0
 3919 020c 854B     		ldr	r3, .L229+24
 3920 020e 0022     		movs	r2, #0
 3921 0210 1A70     		strb	r2, [r3]
 875:.\main.c      ****         initBrake();
 3922              		.loc 1 875 0
 3923 0212 FFF7FEFF 		bl	initBrake
 876:.\main.c      ****         break;
 3924              		.loc 1 876 0
 3925 0216 D0E1     		b	.L196
 3926              	.L200:
 877:.\main.c      ****     case ('2'):
 878:.\main.c      ****         track_mode = DEST_TEST;
 3927              		.loc 1 878 0
 3928 0218 7C4B     		ldr	r3, .L229
 3929 021a 0622     		movs	r2, #6
 3930 021c 1A70     		strb	r2, [r3]
 879:.\main.c      ****         tracked_direction = robot_direction;
 3931              		.loc 1 879 0
 3932 021e 824B     		ldr	r3, .L229+28
 3933 0220 1B68     		ldr	r3, [r3]
 3934 0222 824A     		ldr	r2, .L229+32
 3935 0224 1360     		str	r3, [r2]
 880:.\main.c      ****         instructionLength = generateDirections();
 3936              		.loc 1 880 0
 3937 0226 FFF7FEFF 		bl	generateDirections
 3938 022a 0346     		mov	r3, r0
 3939 022c 9AB2     		uxth	r2, r3
 3940 022e 804B     		ldr	r3, .L229+36
 3941 0230 1A80     		strh	r2, [r3]	@ movhi
 881:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 882:.\main.c      ****         //char message[128];
 883:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 884:.\main.c      ****         
 885:.\main.c      ****         last_quad_count1 = 0;
 3942              		.loc 1 885 0
 3943 0232 804B     		ldr	r3, .L229+40
 3944 0234 0022     		movs	r2, #0
 3945 0236 1A80     		strh	r2, [r3]	@ movhi
 886:.\main.c      ****         last_quad_count2 = 0;
 3946              		.loc 1 886 0
 3947 0238 7F4B     		ldr	r3, .L229+44
 3948 023a 0022     		movs	r2, #0
 3949 023c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 87


 887:.\main.c      ****         QuadDec_M1_SetCounter(0);
 3950              		.loc 1 887 0
 3951 023e 0020     		movs	r0, #0
 3952 0240 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 888:.\main.c      ****         QuadDec_M2_SetCounter(0);
 3953              		.loc 1 888 0
 3954 0244 0020     		movs	r0, #0
 3955 0246 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 889:.\main.c      ****         instructionCount = 0;
 3956              		.loc 1 889 0
 3957 024a 7C4B     		ldr	r3, .L229+48
 3958 024c 0022     		movs	r2, #0
 3959 024e 1A80     		strh	r2, [r3]	@ movhi
 890:.\main.c      ****         isrRF_RX_Disable();
 3960              		.loc 1 890 0
 3961 0250 FFF7FEFF 		bl	isrRF_RX_Disable
 891:.\main.c      ****         while(rf_char != 'F')
 3962              		.loc 1 891 0
 3963 0254 2CE0     		b	.L212
 3964              	.L215:
 892:.\main.c      ****         {
 893:.\main.c      ****             rf_char = UART_GetChar();
 3965              		.loc 1 893 0
 3966 0256 FFF7FEFF 		bl	UART_GetChar
 3967 025a 0346     		mov	r3, r0
 3968 025c 87F82F30 		strb	r3, [r7, #47]
 894:.\main.c      ****             if(rf_char == 'F') break;
 3969              		.loc 1 894 0
 3970 0260 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3971 0264 462B     		cmp	r3, #70
 3972 0266 00D1     		bne	.L213
 3973 0268 26E0     		b	.L214
 3974              	.L213:
 895:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 3975              		.loc 1 895 0
 3976 026a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3977 026e 2F2B     		cmp	r3, #47
 3978 0270 1ED9     		bls	.L212
 3979              		.loc 1 895 0 is_stmt 0 discriminator 1
 3980 0272 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3981 0276 392B     		cmp	r3, #57
 3982 0278 1AD8     		bhi	.L212
 896:.\main.c      ****             {
 897:.\main.c      ****                 UART_PutString("received: ");
 3983              		.loc 1 897 0 is_stmt 1
 3984 027a 7148     		ldr	r0, .L229+52
 3985 027c FFF7FEFF 		bl	UART_PutString
 898:.\main.c      ****                 UART_PutChar(rf_char);
 3986              		.loc 1 898 0
 3987 0280 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3988 0284 1846     		mov	r0, r3
 3989 0286 FFF7FEFF 		bl	UART_PutChar
 899:.\main.c      ****                 UART_PutString("\r\n");
 3990              		.loc 1 899 0
 3991 028a 6E48     		ldr	r0, .L229+56
 3992 028c FFF7FEFF 		bl	UART_PutString
 900:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 88


 3993              		.loc 1 900 0
 3994 0290 6A4B     		ldr	r3, .L229+48
 3995 0292 1B88     		ldrh	r3, [r3]
 3996 0294 1A46     		mov	r2, r3	@ movhi
 3997 0296 9200     		lsls	r2, r2, #2
 3998 0298 1344     		add	r3, r3, r2
 3999 029a 5B00     		lsls	r3, r3, #1
 4000 029c 9AB2     		uxth	r2, r3
 4001 029e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4002 02a2 9BB2     		uxth	r3, r3
 4003 02a4 1344     		add	r3, r3, r2
 4004 02a6 9BB2     		uxth	r3, r3
 4005 02a8 303B     		subs	r3, r3, #48
 4006 02aa 9AB2     		uxth	r2, r3
 4007 02ac 634B     		ldr	r3, .L229+48
 4008 02ae 1A80     		strh	r2, [r3]	@ movhi
 4009              	.L212:
 891:.\main.c      ****         {
 4010              		.loc 1 891 0
 4011 02b0 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4012 02b4 462B     		cmp	r3, #70
 4013 02b6 CED1     		bne	.L215
 4014              	.L214:
 901:.\main.c      ****             }
 902:.\main.c      ****             
 903:.\main.c      ****         }
 904:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4015              		.loc 1 904 0
 4016 02b8 6348     		ldr	r0, .L229+60
 4017 02ba FFF7FEFF 		bl	isrRF_RX_StartEx
 905:.\main.c      ****         sprintf(mes, "num instruct:%d\r\n", instructionLength);
 4018              		.loc 1 905 0
 4019 02be 5C4B     		ldr	r3, .L229+36
 4020 02c0 1B88     		ldrh	r3, [r3]
 4021 02c2 1A46     		mov	r2, r3
 4022 02c4 3B46     		mov	r3, r7
 4023 02c6 1846     		mov	r0, r3
 4024 02c8 6049     		ldr	r1, .L229+64
 4025 02ca FFF7FEFF 		bl	sprintf
 906:.\main.c      ****         UART_PutString(mes);
 4026              		.loc 1 906 0
 4027 02ce 3B46     		mov	r3, r7
 4028 02d0 1846     		mov	r0, r3
 4029 02d2 FFF7FEFF 		bl	UART_PutString
 907:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4030              		.loc 1 907 0
 4031 02d6 594B     		ldr	r3, .L229+48
 4032 02d8 1B88     		ldrh	r3, [r3]
 4033 02da 1A46     		mov	r2, r3
 4034 02dc 3B46     		mov	r3, r7
 4035 02de 1846     		mov	r0, r3
 4036 02e0 5B49     		ldr	r1, .L229+68
 4037 02e2 FFF7FEFF 		bl	sprintf
 908:.\main.c      ****         UART_PutString(mes);
 4038              		.loc 1 908 0
 4039 02e6 3B46     		mov	r3, r7
 4040 02e8 1846     		mov	r0, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 89


 4041 02ea FFF7FEFF 		bl	UART_PutString
 909:.\main.c      ****         
 910:.\main.c      ****         int i;
 911:.\main.c      ****         for(i = instructionCount;i < instructionLength; i++)
 4042              		.loc 1 911 0
 4043 02ee 534B     		ldr	r3, .L229+48
 4044 02f0 1B88     		ldrh	r3, [r3]
 4045 02f2 BB62     		str	r3, [r7, #40]
 4046 02f4 18E0     		b	.L216
 4047              	.L219:
 912:.\main.c      ****         {
 913:.\main.c      ****             if(i%2 == 0)
 4048              		.loc 1 913 0
 4049 02f6 BB6A     		ldr	r3, [r7, #40]
 4050 02f8 03F00103 		and	r3, r3, #1
 4051 02fc 002B     		cmp	r3, #0
 4052 02fe 07D1     		bne	.L217
 914:.\main.c      ****             {
 915:.\main.c      ****                 UART_PutChar(instructions[i]);
 4053              		.loc 1 915 0
 4054 0300 544A     		ldr	r2, .L229+72
 4055 0302 BB6A     		ldr	r3, [r7, #40]
 4056 0304 1344     		add	r3, r3, r2
 4057 0306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4058 0308 1846     		mov	r0, r3
 4059 030a FFF7FEFF 		bl	UART_PutChar
 4060 030e 08E0     		b	.L218
 4061              	.L217:
 916:.\main.c      ****             }
 917:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 4062              		.loc 1 917 0
 4063 0310 504A     		ldr	r2, .L229+72
 4064 0312 BB6A     		ldr	r3, [r7, #40]
 4065 0314 1344     		add	r3, r3, r2
 4066 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4067 0318 3033     		adds	r3, r3, #48
 4068 031a DBB2     		uxtb	r3, r3
 4069 031c 1846     		mov	r0, r3
 4070 031e FFF7FEFF 		bl	UART_PutChar
 4071              	.L218:
 911:.\main.c      ****         {
 4072              		.loc 1 911 0 discriminator 2
 4073 0322 BB6A     		ldr	r3, [r7, #40]
 4074 0324 0133     		adds	r3, r3, #1
 4075 0326 BB62     		str	r3, [r7, #40]
 4076              	.L216:
 911:.\main.c      ****         {
 4077              		.loc 1 911 0 is_stmt 0 discriminator 1
 4078 0328 414B     		ldr	r3, .L229+36
 4079 032a 1B88     		ldrh	r3, [r3]
 4080 032c 1A46     		mov	r2, r3
 4081 032e BB6A     		ldr	r3, [r7, #40]
 4082 0330 9A42     		cmp	r2, r3
 4083 0332 E0DC     		bgt	.L219
 918:.\main.c      **** 
 919:.\main.c      ****         }
 920:.\main.c      ****         
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 90


 921:.\main.c      ****         instructions[instructionLength] = 'D';
 4084              		.loc 1 921 0 is_stmt 1
 4085 0334 3E4B     		ldr	r3, .L229+36
 4086 0336 1B88     		ldrh	r3, [r3]
 4087 0338 1A46     		mov	r2, r3
 4088 033a 464B     		ldr	r3, .L229+72
 4089 033c 4421     		movs	r1, #68
 4090 033e 9954     		strb	r1, [r3, r2]
 922:.\main.c      ****         instructions[instructionLength+1] = 1;
 4091              		.loc 1 922 0
 4092 0340 3B4B     		ldr	r3, .L229+36
 4093 0342 1B88     		ldrh	r3, [r3]
 4094 0344 0133     		adds	r3, r3, #1
 4095 0346 434A     		ldr	r2, .L229+72
 4096 0348 0121     		movs	r1, #1
 4097 034a D154     		strb	r1, [r2, r3]
 923:.\main.c      ****         instructionLength += 2;
 4098              		.loc 1 923 0
 4099 034c 384B     		ldr	r3, .L229+36
 4100 034e 1B88     		ldrh	r3, [r3]
 4101 0350 0233     		adds	r3, r3, #2
 4102 0352 9AB2     		uxth	r2, r3
 4103 0354 364B     		ldr	r3, .L229+36
 4104 0356 1A80     		strh	r2, [r3]	@ movhi
 924:.\main.c      ****         instructions[instructionLength] = 0;
 4105              		.loc 1 924 0
 4106 0358 354B     		ldr	r3, .L229+36
 4107 035a 1B88     		ldrh	r3, [r3]
 4108 035c 1A46     		mov	r2, r3
 4109 035e 3D4B     		ldr	r3, .L229+72
 4110 0360 0021     		movs	r1, #0
 4111 0362 9954     		strb	r1, [r3, r2]
 925:.\main.c      ****         
 926:.\main.c      ****         UART_PutString("\r\n");
 4112              		.loc 1 926 0
 4113 0364 3748     		ldr	r0, .L229+56
 4114 0366 FFF7FEFF 		bl	UART_PutString
 927:.\main.c      ****         
 928:.\main.c      ****         char nextStep = instructions[instructionCount];
 4115              		.loc 1 928 0
 4116 036a 344B     		ldr	r3, .L229+48
 4117 036c 1B88     		ldrh	r3, [r3]
 4118 036e 1A46     		mov	r2, r3
 4119 0370 384B     		ldr	r3, .L229+72
 4120 0372 9B5C     		ldrb	r3, [r3, r2]
 4121 0374 87F82330 		strb	r3, [r7, #35]
 929:.\main.c      ****         
 930:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];
 4122              		.loc 1 930 0
 4123 0378 304B     		ldr	r3, .L229+48
 4124 037a 1B88     		ldrh	r3, [r3]
 4125 037c 0133     		adds	r3, r3, #1
 4126 037e 354A     		ldr	r2, .L229+72
 4127 0380 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4128 0382 9BB2     		uxth	r3, r3
 4129 0384 1A46     		mov	r2, r3	@ movhi
 4130 0386 D200     		lsls	r2, r2, #3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 91


 4131 0388 1344     		add	r3, r3, r2
 4132 038a 1B01     		lsls	r3, r3, #4
 4133 038c 9BB2     		uxth	r3, r3
 4134 038e 9AB2     		uxth	r2, r3
 4135 0390 224B     		ldr	r3, .L229+16
 4136 0392 1A80     		strh	r2, [r3]	@ movhi
 931:.\main.c      ****         if(instructionCount == 0) target_distance_quad -= QUAD_PER_UNIT; 
 4137              		.loc 1 931 0
 4138 0394 294B     		ldr	r3, .L229+48
 4139 0396 1B88     		ldrh	r3, [r3]
 4140 0398 002B     		cmp	r3, #0
 4141 039a 07D1     		bne	.L220
 4142              		.loc 1 931 0 is_stmt 0 discriminator 1
 4143 039c 1F4B     		ldr	r3, .L229+16
 4144 039e 1B88     		ldrh	r3, [r3]
 4145 03a0 9BB2     		uxth	r3, r3
 4146 03a2 903B     		subs	r3, r3, #144
 4147 03a4 9BB2     		uxth	r3, r3
 4148 03a6 9AB2     		uxth	r2, r3
 4149 03a8 1C4B     		ldr	r3, .L229+16
 4150 03aa 1A80     		strh	r2, [r3]	@ movhi
 4151              	.L220:
 932:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4152              		.loc 1 932 0 is_stmt 1
 4153 03ac 1B4B     		ldr	r3, .L229+16
 4154 03ae 1B88     		ldrh	r3, [r3]
 4155 03b0 1BB2     		sxth	r3, r3
 4156 03b2 3A46     		mov	r2, r7
 4157 03b4 1046     		mov	r0, r2
 4158 03b6 2849     		ldr	r1, .L229+76
 4159 03b8 1A46     		mov	r2, r3
 4160 03ba FFF7FEFF 		bl	sprintf
 933:.\main.c      ****         UART_PutString(mes);
 4161              		.loc 1 933 0
 4162 03be 3B46     		mov	r3, r7
 4163 03c0 1846     		mov	r0, r3
 4164 03c2 FFF7FEFF 		bl	UART_PutString
 934:.\main.c      ****         inittrackLineZ();
 4165              		.loc 1 934 0
 4166 03c6 FFF7FEFF 		bl	inittrackLineZ
 935:.\main.c      ****         break;
 4167              		.loc 1 935 0
 4168 03ca F6E0     		b	.L196
 4169              	.L198:
 936:.\main.c      ****     case ('1'):
 937:.\main.c      ****         track_mode = DEST_TEST;
 4170              		.loc 1 937 0
 4171 03cc 0F4B     		ldr	r3, .L229
 4172 03ce 0622     		movs	r2, #6
 4173 03d0 1A70     		strb	r2, [r3]
 938:.\main.c      ****         tracked_direction = robot_direction;
 4174              		.loc 1 938 0
 4175 03d2 154B     		ldr	r3, .L229+28
 4176 03d4 1B68     		ldr	r3, [r3]
 4177 03d6 154A     		ldr	r2, .L229+32
 4178 03d8 1360     		str	r3, [r2]
 939:.\main.c      ****         //instructionLength = generateDirections();
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 92


 940:.\main.c      ****         instructionLength = generateEntireMapDirections();
 4179              		.loc 1 940 0
 4180 03da FFF7FEFF 		bl	generateEntireMapDirections
 4181 03de 0346     		mov	r3, r0
 4182 03e0 9AB2     		uxth	r2, r3
 4183 03e2 134B     		ldr	r3, .L229+36
 4184 03e4 1A80     		strh	r2, [r3]	@ movhi
 941:.\main.c      ****         //char message[128];
 942:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 943:.\main.c      ****         instructionCount = 0;
 4185              		.loc 1 943 0
 4186 03e6 154B     		ldr	r3, .L229+48
 4187 03e8 0022     		movs	r2, #0
 4188 03ea 1A80     		strh	r2, [r3]	@ movhi
 944:.\main.c      ****         QuadDec_M1_SetCounter(0);
 4189              		.loc 1 944 0
 4190 03ec 0020     		movs	r0, #0
 4191 03ee FFF7FEFF 		bl	QuadDec_M1_SetCounter
 945:.\main.c      ****         QuadDec_M2_SetCounter(0);
 4192              		.loc 1 945 0
 4193 03f2 0020     		movs	r0, #0
 4194 03f4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 946:.\main.c      ****         last_quad_count1 = 0;
 4195              		.loc 1 946 0
 4196 03f8 0E4B     		ldr	r3, .L229+40
 4197 03fa 0022     		movs	r2, #0
 4198 03fc 1A80     		strh	r2, [r3]	@ movhi
 947:.\main.c      ****         last_quad_count2 = 0;
 4199              		.loc 1 947 0
 4200 03fe 0E4B     		ldr	r3, .L229+44
 4201 0400 0022     		movs	r2, #0
 4202 0402 1A80     		strh	r2, [r3]	@ movhi
 948:.\main.c      ****         isrRF_RX_Disable();
 4203              		.loc 1 948 0
 4204 0404 FFF7FEFF 		bl	isrRF_RX_Disable
 949:.\main.c      ****         while(rf_char != 'F')
 4205              		.loc 1 949 0
 4206 0408 55E0     		b	.L221
 4207              	.L230:
 4208 040a 00BF     		.align	2
 4209              	.L229:
 4210 040c 00000000 		.word	track_mode
 4211 0410 00000000 		.word	accum_dist
 4212 0414 00000000 		.word	target_distance_cm
 4213 0418 00000000 		.word	quad_per_cm
 4214 041c 00000000 		.word	target_distance_quad
 4215 0420 C4000000 		.word	.LC10
 4216 0424 00000000 		.word	initial_pos_valid
 4217 0428 00000000 		.word	robot_direction
 4218 042c 00000000 		.word	tracked_direction
 4219 0430 00000000 		.word	instructionLength
 4220 0434 00000000 		.word	last_quad_count1
 4221 0438 00000000 		.word	last_quad_count2
 4222 043c 00000000 		.word	instructionCount
 4223 0440 D8000000 		.word	.LC11
 4224 0444 E4000000 		.word	.LC12
 4225 0448 00000000 		.word	BT_rxInt
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 93


 4226 044c E8000000 		.word	.LC13
 4227 0450 FC000000 		.word	.LC14
 4228 0454 00000000 		.word	instructions
 4229 0458 5C000000 		.word	.LC5
 4230              	.L224:
 950:.\main.c      ****         {
 951:.\main.c      ****             rf_char = UART_GetChar();
 4231              		.loc 1 951 0
 4232 045c FFF7FEFF 		bl	UART_GetChar
 4233 0460 0346     		mov	r3, r0
 4234 0462 87F82F30 		strb	r3, [r7, #47]
 952:.\main.c      ****             if(rf_char == 'F') break;
 4235              		.loc 1 952 0
 4236 0466 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4237 046a 462B     		cmp	r3, #70
 4238 046c 00D1     		bne	.L222
 4239 046e 26E0     		b	.L223
 4240              	.L222:
 953:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 4241              		.loc 1 953 0
 4242 0470 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4243 0474 2F2B     		cmp	r3, #47
 4244 0476 1ED9     		bls	.L221
 4245              		.loc 1 953 0 is_stmt 0 discriminator 1
 4246 0478 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4247 047c 392B     		cmp	r3, #57
 4248 047e 1AD8     		bhi	.L221
 954:.\main.c      ****             {
 955:.\main.c      ****                 UART_PutString("received: ");
 4249              		.loc 1 955 0 is_stmt 1
 4250 0480 4F48     		ldr	r0, .L231
 4251 0482 FFF7FEFF 		bl	UART_PutString
 956:.\main.c      ****                 UART_PutChar(rf_char);
 4252              		.loc 1 956 0
 4253 0486 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4254 048a 1846     		mov	r0, r3
 4255 048c FFF7FEFF 		bl	UART_PutChar
 957:.\main.c      ****                 UART_PutString("\r\n");
 4256              		.loc 1 957 0
 4257 0490 4C48     		ldr	r0, .L231+4
 4258 0492 FFF7FEFF 		bl	UART_PutString
 958:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 4259              		.loc 1 958 0
 4260 0496 4C4B     		ldr	r3, .L231+8
 4261 0498 1B88     		ldrh	r3, [r3]
 4262 049a 1A46     		mov	r2, r3	@ movhi
 4263 049c 9200     		lsls	r2, r2, #2
 4264 049e 1344     		add	r3, r3, r2
 4265 04a0 5B00     		lsls	r3, r3, #1
 4266 04a2 9AB2     		uxth	r2, r3
 4267 04a4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4268 04a8 9BB2     		uxth	r3, r3
 4269 04aa 1344     		add	r3, r3, r2
 4270 04ac 9BB2     		uxth	r3, r3
 4271 04ae 303B     		subs	r3, r3, #48
 4272 04b0 9AB2     		uxth	r2, r3
 4273 04b2 454B     		ldr	r3, .L231+8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 94


 4274 04b4 1A80     		strh	r2, [r3]	@ movhi
 4275              	.L221:
 949:.\main.c      ****         {
 4276              		.loc 1 949 0
 4277 04b6 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4278 04ba 462B     		cmp	r3, #70
 4279 04bc CED1     		bne	.L224
 4280              	.L223:
 959:.\main.c      ****             }
 960:.\main.c      ****             
 961:.\main.c      ****         }
 962:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4281              		.loc 1 962 0
 4282 04be 4348     		ldr	r0, .L231+12
 4283 04c0 FFF7FEFF 		bl	isrRF_RX_StartEx
 963:.\main.c      ****         sprintf(mes, "num instruct:%d\r\n", instructionLength);
 4284              		.loc 1 963 0
 4285 04c4 424B     		ldr	r3, .L231+16
 4286 04c6 1B88     		ldrh	r3, [r3]
 4287 04c8 1A46     		mov	r2, r3
 4288 04ca 3B46     		mov	r3, r7
 4289 04cc 1846     		mov	r0, r3
 4290 04ce 4149     		ldr	r1, .L231+20
 4291 04d0 FFF7FEFF 		bl	sprintf
 964:.\main.c      ****         UART_PutString(mes);
 4292              		.loc 1 964 0
 4293 04d4 3B46     		mov	r3, r7
 4294 04d6 1846     		mov	r0, r3
 4295 04d8 FFF7FEFF 		bl	UART_PutString
 965:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4296              		.loc 1 965 0
 4297 04dc 3A4B     		ldr	r3, .L231+8
 4298 04de 1B88     		ldrh	r3, [r3]
 4299 04e0 1A46     		mov	r2, r3
 4300 04e2 3B46     		mov	r3, r7
 4301 04e4 1846     		mov	r0, r3
 4302 04e6 3C49     		ldr	r1, .L231+24
 4303 04e8 FFF7FEFF 		bl	sprintf
 966:.\main.c      ****         UART_PutString(mes);
 4304              		.loc 1 966 0
 4305 04ec 3B46     		mov	r3, r7
 4306 04ee 1846     		mov	r0, r3
 4307 04f0 FFF7FEFF 		bl	UART_PutString
 967:.\main.c      ****         //instructionCount = instructionLength - 22;
 968:.\main.c      ****         int x;
 969:.\main.c      ****         
 970:.\main.c      **** //        for(x  = instructionCount; x < instructionLength; x+=2)
 971:.\main.c      **** //        {
 972:.\main.c      **** //            char step = instructions[x];
 973:.\main.c      **** //            uint8_t dist = instructions[x+1];
 974:.\main.c      **** //            
 975:.\main.c      **** //            if(step == 'D' && dist == 0)
 976:.\main.c      **** //            {
 977:.\main.c      **** //            }
 978:.\main.c      **** //            else
 979:.\main.c      **** //            {
 980:.\main.c      **** //                
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 95


 981:.\main.c      **** //            }
 982:.\main.c      **** //        }
 983:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 4308              		.loc 1 983 0
 4309 04f4 344B     		ldr	r3, .L231+8
 4310 04f6 1B88     		ldrh	r3, [r3]
 4311 04f8 7B62     		str	r3, [r7, #36]
 4312 04fa 18E0     		b	.L225
 4313              	.L228:
 984:.\main.c      ****         {
 985:.\main.c      ****             
 986:.\main.c      ****             if(x%2 == 0)
 4314              		.loc 1 986 0
 4315 04fc 7B6A     		ldr	r3, [r7, #36]
 4316 04fe 03F00103 		and	r3, r3, #1
 4317 0502 002B     		cmp	r3, #0
 4318 0504 07D1     		bne	.L226
 987:.\main.c      ****             {
 988:.\main.c      ****                 UART_PutChar(instructions[x]);
 4319              		.loc 1 988 0
 4320 0506 354A     		ldr	r2, .L231+28
 4321 0508 7B6A     		ldr	r3, [r7, #36]
 4322 050a 1344     		add	r3, r3, r2
 4323 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4324 050e 1846     		mov	r0, r3
 4325 0510 FFF7FEFF 		bl	UART_PutChar
 4326 0514 08E0     		b	.L227
 4327              	.L226:
 989:.\main.c      ****             }
 990:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 4328              		.loc 1 990 0
 4329 0516 314A     		ldr	r2, .L231+28
 4330 0518 7B6A     		ldr	r3, [r7, #36]
 4331 051a 1344     		add	r3, r3, r2
 4332 051c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4333 051e 3033     		adds	r3, r3, #48
 4334 0520 DBB2     		uxtb	r3, r3
 4335 0522 1846     		mov	r0, r3
 4336 0524 FFF7FEFF 		bl	UART_PutChar
 4337              	.L227:
 983:.\main.c      ****         {
 4338              		.loc 1 983 0 discriminator 2
 4339 0528 7B6A     		ldr	r3, [r7, #36]
 4340 052a 0133     		adds	r3, r3, #1
 4341 052c 7B62     		str	r3, [r7, #36]
 4342              	.L225:
 983:.\main.c      ****         {
 4343              		.loc 1 983 0 is_stmt 0 discriminator 1
 4344 052e 284B     		ldr	r3, .L231+16
 4345 0530 1B88     		ldrh	r3, [r3]
 4346 0532 1A46     		mov	r2, r3
 4347 0534 7B6A     		ldr	r3, [r7, #36]
 4348 0536 9A42     		cmp	r2, r3
 4349 0538 E0DC     		bgt	.L228
 991:.\main.c      **** 
 992:.\main.c      ****         }
 993:.\main.c      ****         
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 96


 994:.\main.c      ****          instructions[instructionLength] = 'D';
 4350              		.loc 1 994 0 is_stmt 1
 4351 053a 254B     		ldr	r3, .L231+16
 4352 053c 1B88     		ldrh	r3, [r3]
 4353 053e 1A46     		mov	r2, r3
 4354 0540 264B     		ldr	r3, .L231+28
 4355 0542 4421     		movs	r1, #68
 4356 0544 9954     		strb	r1, [r3, r2]
 995:.\main.c      ****         instructions[instructionLength+1] = 1;
 4357              		.loc 1 995 0
 4358 0546 224B     		ldr	r3, .L231+16
 4359 0548 1B88     		ldrh	r3, [r3]
 4360 054a 0133     		adds	r3, r3, #1
 4361 054c 234A     		ldr	r2, .L231+28
 4362 054e 0121     		movs	r1, #1
 4363 0550 D154     		strb	r1, [r2, r3]
 996:.\main.c      ****         instructionLength += 2;
 4364              		.loc 1 996 0
 4365 0552 1F4B     		ldr	r3, .L231+16
 4366 0554 1B88     		ldrh	r3, [r3]
 4367 0556 0233     		adds	r3, r3, #2
 4368 0558 9AB2     		uxth	r2, r3
 4369 055a 1D4B     		ldr	r3, .L231+16
 4370 055c 1A80     		strh	r2, [r3]	@ movhi
 997:.\main.c      ****         instructions[instructionLength] = 0;
 4371              		.loc 1 997 0
 4372 055e 1C4B     		ldr	r3, .L231+16
 4373 0560 1B88     		ldrh	r3, [r3]
 4374 0562 1A46     		mov	r2, r3
 4375 0564 1D4B     		ldr	r3, .L231+28
 4376 0566 0021     		movs	r1, #0
 4377 0568 9954     		strb	r1, [r3, r2]
 998:.\main.c      ****         
 999:.\main.c      ****         UART_PutString("\r\n");
 4378              		.loc 1 999 0
 4379 056a 1648     		ldr	r0, .L231+4
 4380 056c FFF7FEFF 		bl	UART_PutString
1000:.\main.c      **** 
1001:.\main.c      ****         nextStep = instructions[instructionCount];
 4381              		.loc 1 1001 0
 4382 0570 154B     		ldr	r3, .L231+8
 4383 0572 1B88     		ldrh	r3, [r3]
 4384 0574 1A46     		mov	r2, r3
 4385 0576 194B     		ldr	r3, .L231+28
 4386 0578 9B5C     		ldrb	r3, [r3, r2]
 4387 057a 87F82330 		strb	r3, [r7, #35]
1002:.\main.c      ****         
1003:.\main.c      ****         
1004:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1]; 
 4388              		.loc 1 1004 0
 4389 057e 124B     		ldr	r3, .L231+8
 4390 0580 1B88     		ldrh	r3, [r3]
 4391 0582 0133     		adds	r3, r3, #1
 4392 0584 154A     		ldr	r2, .L231+28
 4393 0586 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4394 0588 9BB2     		uxth	r3, r3
 4395 058a 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 97


 4396 058c D200     		lsls	r2, r2, #3
 4397 058e 1344     		add	r3, r3, r2
 4398 0590 1B01     		lsls	r3, r3, #4
 4399 0592 9BB2     		uxth	r3, r3
 4400 0594 9AB2     		uxth	r2, r3
 4401 0596 124B     		ldr	r3, .L231+32
 4402 0598 1A80     		strh	r2, [r3]	@ movhi
1005:.\main.c      ****        // if(instructionCount == 0) target_distance_quad += QUAD_PER_UNIT; 
1006:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4403              		.loc 1 1006 0
 4404 059a 114B     		ldr	r3, .L231+32
 4405 059c 1B88     		ldrh	r3, [r3]
 4406 059e 1BB2     		sxth	r3, r3
 4407 05a0 3A46     		mov	r2, r7
 4408 05a2 1046     		mov	r0, r2
 4409 05a4 0F49     		ldr	r1, .L231+36
 4410 05a6 1A46     		mov	r2, r3
 4411 05a8 FFF7FEFF 		bl	sprintf
1007:.\main.c      ****         UART_PutString(mes);
 4412              		.loc 1 1007 0
 4413 05ac 3B46     		mov	r3, r7
 4414 05ae 1846     		mov	r0, r3
 4415 05b0 FFF7FEFF 		bl	UART_PutString
1008:.\main.c      ****         inittrackLineZ();
 4416              		.loc 1 1008 0
 4417 05b4 FFF7FEFF 		bl	inittrackLineZ
1009:.\main.c      ****         break;
 4418              		.loc 1 1009 0
 4419 05b8 00BF     		nop
 4420              	.L196:
 4421              	.LBE9:
1010:.\main.c      ****     }
1011:.\main.c      **** }
 4422              		.loc 1 1011 0
 4423 05ba 3037     		adds	r7, r7, #48
 4424              		.cfi_def_cfa_offset 8
 4425 05bc BD46     		mov	sp, r7
 4426              		.cfi_def_cfa_register 13
 4427              		@ sp needed
 4428 05be 80BD     		pop	{r7, pc}
 4429              	.L232:
 4430              		.align	2
 4431              	.L231:
 4432 05c0 D8000000 		.word	.LC11
 4433 05c4 E4000000 		.word	.LC12
 4434 05c8 00000000 		.word	instructionCount
 4435 05cc 00000000 		.word	BT_rxInt
 4436 05d0 00000000 		.word	instructionLength
 4437 05d4 E8000000 		.word	.LC13
 4438 05d8 FC000000 		.word	.LC14
 4439 05dc 00000000 		.word	instructions
 4440 05e0 00000000 		.word	target_distance_quad
 4441 05e4 5C000000 		.word	.LC5
 4442              		.cfi_endproc
 4443              	.LFE93:
 4444              		.size	BT_rxInt, .-BT_rxInt
 4445              		.section	.text.changeToRF,"ax",%progbits
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 98


 4446              		.align	2
 4447              		.global	changeToRF
 4448              		.thumb
 4449              		.thumb_func
 4450              		.type	changeToRF, %function
 4451              	changeToRF:
 4452              	.LFB94:
1012:.\main.c      **** 
1013:.\main.c      **** 
1014:.\main.c      **** void changeToRF()
1015:.\main.c      **** {
 4453              		.loc 1 1015 0
 4454              		.cfi_startproc
 4455              		@ args = 0, pretend = 0, frame = 0
 4456              		@ frame_needed = 1, uses_anonymous_args = 0
 4457 0000 80B5     		push	{r7, lr}
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 7, -8
 4460              		.cfi_offset 14, -4
 4461 0002 00AF     		add	r7, sp, #0
 4462              		.cfi_def_cfa_register 7
1016:.\main.c      ****         //disable BT
1017:.\main.c      ****         BT_ENABLED = 0;
 4463              		.loc 1 1017 0
 4464 0004 0B4B     		ldr	r3, .L234
 4465 0006 0022     		movs	r2, #0
 4466 0008 1A70     		strb	r2, [r3]
1018:.\main.c      ****         isrRF_RX_Stop();
 4467              		.loc 1 1018 0
 4468 000a FFF7FEFF 		bl	isrRF_RX_Stop
1019:.\main.c      ****         UART_Stop();
 4469              		.loc 1 1019 0
 4470 000e FFF7FEFF 		bl	UART_Stop
1020:.\main.c      ****         
1021:.\main.c      ****         //enable RF
1022:.\main.c      ****         BIN_ENABLED = 1;
 4471              		.loc 1 1022 0
 4472 0012 094B     		ldr	r3, .L234+4
 4473 0014 0122     		movs	r2, #1
 4474 0016 1A70     		strb	r2, [r3]
1023:.\main.c      ****         UART_clk_SetDividerValue(130);
 4475              		.loc 1 1023 0
 4476 0018 8120     		movs	r0, #129
 4477 001a 0121     		movs	r1, #1
 4478 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
1024:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4479              		.loc 1 1024 0
 4480 0020 0648     		ldr	r0, .L234+8
 4481 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
1025:.\main.c      ****         UART_Start();
 4482              		.loc 1 1025 0
 4483 0026 FFF7FEFF 		bl	UART_Start
1026:.\main.c      ****         RF_BT_SELECT_Write(0);
 4484              		.loc 1 1026 0
 4485 002a 0020     		movs	r0, #0
 4486 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
1027:.\main.c      **** }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 99


 4487              		.loc 1 1027 0
 4488 0030 80BD     		pop	{r7, pc}
 4489              	.L235:
 4490 0032 00BF     		.align	2
 4491              	.L234:
 4492 0034 00000000 		.word	BT_ENABLED
 4493 0038 00000000 		.word	BIN_ENABLED
 4494 003c 00000000 		.word	rxInt
 4495              		.cfi_endproc
 4496              	.LFE94:
 4497              		.size	changeToRF, .-changeToRF
 4498              		.section	.text.changeToBT,"ax",%progbits
 4499              		.align	2
 4500              		.global	changeToBT
 4501              		.thumb
 4502              		.thumb_func
 4503              		.type	changeToBT, %function
 4504              	changeToBT:
 4505              	.LFB95:
1028:.\main.c      **** 
1029:.\main.c      **** void changeToBT()
1030:.\main.c      **** {
 4506              		.loc 1 1030 0
 4507              		.cfi_startproc
 4508              		@ args = 0, pretend = 0, frame = 0
 4509              		@ frame_needed = 1, uses_anonymous_args = 0
 4510 0000 80B5     		push	{r7, lr}
 4511              		.cfi_def_cfa_offset 8
 4512              		.cfi_offset 7, -8
 4513              		.cfi_offset 14, -4
 4514 0002 00AF     		add	r7, sp, #0
 4515              		.cfi_def_cfa_register 7
1031:.\main.c      ****         //disable RF
1032:.\main.c      ****         BIN_ENABLED = 0;
 4516              		.loc 1 1032 0
 4517 0004 0B4B     		ldr	r3, .L237
 4518 0006 0022     		movs	r2, #0
 4519 0008 1A70     		strb	r2, [r3]
1033:.\main.c      ****         isrRF_RX_Stop();
 4520              		.loc 1 1033 0
 4521 000a FFF7FEFF 		bl	isrRF_RX_Stop
1034:.\main.c      ****         UART_Stop();
 4522              		.loc 1 1034 0
 4523 000e FFF7FEFF 		bl	UART_Stop
1035:.\main.c      ****         
1036:.\main.c      ****         //enable BT
1037:.\main.c      ****         BT_ENABLED = 1;
 4524              		.loc 1 1037 0
 4525 0012 094B     		ldr	r3, .L237+4
 4526 0014 0122     		movs	r2, #1
 4527 0016 1A70     		strb	r2, [r3]
1038:.\main.c      ****         UART_clk_SetDividerValue(781);
 4528              		.loc 1 1038 0
 4529 0018 4FF44370 		mov	r0, #780
 4530 001c 0121     		movs	r1, #1
 4531 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
1039:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 100


 4532              		.loc 1 1039 0
 4533 0022 0648     		ldr	r0, .L237+8
 4534 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
1040:.\main.c      ****         UART_Start();
 4535              		.loc 1 1040 0
 4536 0028 FFF7FEFF 		bl	UART_Start
1041:.\main.c      ****         RF_BT_SELECT_Write(1);
 4537              		.loc 1 1041 0
 4538 002c 0120     		movs	r0, #1
 4539 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
1042:.\main.c      **** }
 4540              		.loc 1 1042 0
 4541 0032 80BD     		pop	{r7, pc}
 4542              	.L238:
 4543              		.align	2
 4544              	.L237:
 4545 0034 00000000 		.word	BIN_ENABLED
 4546 0038 00000000 		.word	BT_ENABLED
 4547 003c 00000000 		.word	BT_rxInt
 4548              		.cfi_endproc
 4549              	.LFE95:
 4550              		.size	changeToBT, .-changeToBT
 4551              		.section	.text.Quad_Dec_response,"ax",%progbits
 4552              		.align	2
 4553              		.global	Quad_Dec_response
 4554              		.thumb
 4555              		.thumb_func
 4556              		.type	Quad_Dec_response, %function
 4557              	Quad_Dec_response:
 4558              	.LFB96:
1043:.\main.c      **** 
1044:.\main.c      **** 
1045:.\main.c      **** void Quad_Dec_response()
1046:.\main.c      **** {
 4559              		.loc 1 1046 0
 4560              		.cfi_startproc
 4561              		@ args = 0, pretend = 0, frame = 32
 4562              		@ frame_needed = 1, uses_anonymous_args = 0
 4563 0000 B0B5     		push	{r4, r5, r7, lr}
 4564              		.cfi_def_cfa_offset 16
 4565              		.cfi_offset 4, -16
 4566              		.cfi_offset 5, -12
 4567              		.cfi_offset 7, -8
 4568              		.cfi_offset 14, -4
 4569 0002 88B0     		sub	sp, sp, #32
 4570              		.cfi_def_cfa_offset 48
 4571 0004 00AF     		add	r7, sp, #0
 4572              		.cfi_def_cfa_register 7
1047:.\main.c      ****     //Check if the flag has been set
1048:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4573              		.loc 1 1048 0
 4574 0006 824B     		ldr	r3, .L247
 4575 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4576 000a 002B     		cmp	r3, #0
 4577 000c 00D1     		bne	.L240
 4578 000e FCE0     		b	.L239
 4579              	.L240:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 101


1049:.\main.c      ****     flag_calc_wheelspeed = 0;
 4580              		.loc 1 1049 0
 4581 0010 7F4B     		ldr	r3, .L247
 4582 0012 0022     		movs	r2, #0
 4583 0014 1A70     		strb	r2, [r3]
1050:.\main.c      ****     
1051:.\main.c      ****     //char wheel_1_str [64];
1052:.\main.c      ****     //char wheel_2_str [64];
1053:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
1054:.\main.c      ****     //usbPutString(wheel_1_str);
1055:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
1056:.\main.c      ****     
1057:.\main.c      ****     //usbPutString(wheel_2_str);
1058:.\main.c      ****     
1059:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4584              		.loc 1 1059 0
 4585 0016 7F4B     		ldr	r3, .L247+4
 4586 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4587 001a FB81     		strh	r3, [r7, #14]	@ movhi
1060:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4588              		.loc 1 1060 0
 4589 001c 7E4B     		ldr	r3, .L247+8
 4590 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4591 0020 BB81     		strh	r3, [r7, #12]	@ movhi
1061:.\main.c      ****     double scalingLeft = 1;
 4592              		.loc 1 1061 0
 4593 0022 4FF00002 		mov	r2, #0
 4594 0026 7D4B     		ldr	r3, .L247+12
 4595 0028 C7E90623 		strd	r2, [r7, #24]
1062:.\main.c      ****     double scalingRight = 1;
 4596              		.loc 1 1062 0
 4597 002c 4FF00002 		mov	r2, #0
 4598 0030 7A4B     		ldr	r3, .L247+12
 4599 0032 C7E90423 		strd	r2, [r7, #16]
1063:.\main.c      ****     
1064:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
1065:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4600              		.loc 1 1065 0
 4601 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4602 003a 002B     		cmp	r3, #0
 4603 003c 0FD1     		bne	.L242
 4604              		.loc 1 1065 0 is_stmt 0 discriminator 1
 4605 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4606 0042 002B     		cmp	r3, #0
 4607 0044 0BD1     		bne	.L242
1066:.\main.c      ****        //leftSpeed = 3;
1067:.\main.c      ****         scalingLeft = 2;
 4608              		.loc 1 1067 0 is_stmt 1
 4609 0046 4FF00002 		mov	r2, #0
 4610 004a 4FF08043 		mov	r3, #1073741824
 4611 004e C7E90623 		strd	r2, [r7, #24]
1068:.\main.c      ****         scalingRight = 2;
 4612              		.loc 1 1068 0
 4613 0052 4FF00002 		mov	r2, #0
 4614 0056 4FF08043 		mov	r3, #1073741824
 4615 005a C7E90423 		strd	r2, [r7, #16]
 4616              	.L242:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 102


1069:.\main.c      ****     }
1070:.\main.c      **** 
1071:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4617              		.loc 1 1071 0
 4618 005e 704B     		ldr	r3, .L247+16
 4619 0060 1B88     		ldrh	r3, [r3]
 4620 0062 1AB2     		sxth	r2, r3
 4621 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4622 0068 002B     		cmp	r3, #0
 4623 006a B8BF     		it	lt
 4624 006c 5B42     		rsblt	r3, r3, #0
 4625 006e D31A     		subs	r3, r2, r3
 4626 0070 BB60     		str	r3, [r7, #8]
1072:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4627              		.loc 1 1072 0
 4628 0072 BB68     		ldr	r3, [r7, #8]
 4629 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4630 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4631 007c BB68     		ldr	r3, [r7, #8]
 4632 007e 92FBF3F3 		sdiv	r3, r2, r3
 4633 0082 1846     		mov	r0, r3
 4634 0084 FFF7FEFF 		bl	__aeabi_i2d
 4635 0088 0446     		mov	r4, r0
 4636 008a 0D46     		mov	r5, r1
 4637 008c BB68     		ldr	r3, [r7, #8]
 4638 008e 002B     		cmp	r3, #0
 4639 0090 B8BF     		it	lt
 4640 0092 5B42     		rsblt	r3, r3, #0
 4641 0094 1846     		mov	r0, r3
 4642 0096 FFF7FEFF 		bl	__aeabi_i2d
 4643 009a 0246     		mov	r2, r0
 4644 009c 0B46     		mov	r3, r1
 4645 009e 1046     		mov	r0, r2
 4646 00a0 1946     		mov	r1, r3
 4647 00a2 FFF7FEFF 		bl	sqrt
 4648 00a6 0246     		mov	r2, r0
 4649 00a8 0B46     		mov	r3, r1
 4650 00aa 2046     		mov	r0, r4
 4651 00ac 2946     		mov	r1, r5
 4652 00ae FFF7FEFF 		bl	__aeabi_dmul
 4653 00b2 0246     		mov	r2, r0
 4654 00b4 0B46     		mov	r3, r1
 4655 00b6 1046     		mov	r0, r2
 4656 00b8 1946     		mov	r1, r3
 4657 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4658 00be 0346     		mov	r3, r0
 4659 00c0 7B60     		str	r3, [r7, #4]
1073:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4660              		.loc 1 1073 0
 4661 00c2 584B     		ldr	r3, .L247+20
 4662 00c4 1B88     		ldrh	r3, [r3]
 4663 00c6 1BB2     		sxth	r3, r3
 4664 00c8 1846     		mov	r0, r3
 4665 00ca FFF7FEFF 		bl	__aeabi_i2d
 4666 00ce 0446     		mov	r4, r0
 4667 00d0 0D46     		mov	r5, r1
 4668 00d2 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 103


 4669 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4670 00d8 0246     		mov	r2, r0
 4671 00da 0B46     		mov	r3, r1
 4672 00dc 1046     		mov	r0, r2
 4673 00de 1946     		mov	r1, r3
 4674 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4675 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4676 00e8 0246     		mov	r2, r0
 4677 00ea 0B46     		mov	r3, r1
 4678 00ec 2046     		mov	r0, r4
 4679 00ee 2946     		mov	r1, r5
 4680 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4681 00f4 0246     		mov	r2, r0
 4682 00f6 0B46     		mov	r3, r1
 4683 00f8 1046     		mov	r0, r2
 4684 00fa 1946     		mov	r1, r3
 4685 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4686 0100 0346     		mov	r3, r0
 4687 0102 9AB2     		uxth	r2, r3
 4688 0104 474B     		ldr	r3, .L247+20
 4689 0106 1A80     		strh	r2, [r3]	@ movhi
1074:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4690              		.loc 1 1074 0
 4691 0108 474B     		ldr	r3, .L247+24
 4692 010a 1B88     		ldrh	r3, [r3]
 4693 010c 1AB2     		sxth	r2, r3
 4694 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4695 0112 002B     		cmp	r3, #0
 4696 0114 B8BF     		it	lt
 4697 0116 5B42     		rsblt	r3, r3, #0
 4698 0118 D31A     		subs	r3, r2, r3
 4699 011a BB60     		str	r3, [r7, #8]
1075:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4700              		.loc 1 1075 0
 4701 011c BB68     		ldr	r3, [r7, #8]
 4702 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4703 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4704 0126 BB68     		ldr	r3, [r7, #8]
 4705 0128 92FBF3F3 		sdiv	r3, r2, r3
 4706 012c 1846     		mov	r0, r3
 4707 012e FFF7FEFF 		bl	__aeabi_i2d
 4708 0132 0446     		mov	r4, r0
 4709 0134 0D46     		mov	r5, r1
 4710 0136 BB68     		ldr	r3, [r7, #8]
 4711 0138 002B     		cmp	r3, #0
 4712 013a B8BF     		it	lt
 4713 013c 5B42     		rsblt	r3, r3, #0
 4714 013e 1846     		mov	r0, r3
 4715 0140 FFF7FEFF 		bl	__aeabi_i2d
 4716 0144 0246     		mov	r2, r0
 4717 0146 0B46     		mov	r3, r1
 4718 0148 1046     		mov	r0, r2
 4719 014a 1946     		mov	r1, r3
 4720 014c FFF7FEFF 		bl	sqrt
 4721 0150 0246     		mov	r2, r0
 4722 0152 0B46     		mov	r3, r1
 4723 0154 2046     		mov	r0, r4
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 104


 4724 0156 2946     		mov	r1, r5
 4725 0158 FFF7FEFF 		bl	__aeabi_dmul
 4726 015c 0246     		mov	r2, r0
 4727 015e 0B46     		mov	r3, r1
 4728 0160 1046     		mov	r0, r2
 4729 0162 1946     		mov	r1, r3
 4730 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4731 0168 0346     		mov	r3, r0
 4732 016a 7B60     		str	r3, [r7, #4]
1076:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4733              		.loc 1 1076 0
 4734 016c 2F4B     		ldr	r3, .L247+28
 4735 016e 1B88     		ldrh	r3, [r3]
 4736 0170 1BB2     		sxth	r3, r3
 4737 0172 1846     		mov	r0, r3
 4738 0174 FFF7FEFF 		bl	__aeabi_i2d
 4739 0178 0446     		mov	r4, r0
 4740 017a 0D46     		mov	r5, r1
 4741 017c 7868     		ldr	r0, [r7, #4]
 4742 017e FFF7FEFF 		bl	__aeabi_i2d
 4743 0182 0246     		mov	r2, r0
 4744 0184 0B46     		mov	r3, r1
 4745 0186 1046     		mov	r0, r2
 4746 0188 1946     		mov	r1, r3
 4747 018a D7E90423 		ldrd	r2, [r7, #16]
 4748 018e FFF7FEFF 		bl	__aeabi_dmul
 4749 0192 0246     		mov	r2, r0
 4750 0194 0B46     		mov	r3, r1
 4751 0196 2046     		mov	r0, r4
 4752 0198 2946     		mov	r1, r5
 4753 019a FFF7FEFF 		bl	__aeabi_dadd
 4754 019e 0246     		mov	r2, r0
 4755 01a0 0B46     		mov	r3, r1
 4756 01a2 1046     		mov	r0, r2
 4757 01a4 1946     		mov	r1, r3
 4758 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4759 01aa 0346     		mov	r3, r0
 4760 01ac 9AB2     		uxth	r2, r3
 4761 01ae 1F4B     		ldr	r3, .L247+28
 4762 01b0 1A80     		strh	r2, [r3]	@ movhi
1077:.\main.c      ****     
1078:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4763              		.loc 1 1078 0
 4764 01b2 1E4B     		ldr	r3, .L247+28
 4765 01b4 1B88     		ldrh	r3, [r3]
 4766 01b6 1BB2     		sxth	r3, r3
 4767 01b8 002B     		cmp	r3, #0
 4768 01ba 02DA     		bge	.L243
 4769              		.loc 1 1078 0 is_stmt 0 discriminator 1
 4770 01bc 1B4B     		ldr	r3, .L247+28
 4771 01be 0022     		movs	r2, #0
 4772 01c0 1A80     		strh	r2, [r3]	@ movhi
 4773              	.L243:
1079:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4774              		.loc 1 1079 0 is_stmt 1
 4775 01c2 184B     		ldr	r3, .L247+20
 4776 01c4 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 105


 4777 01c6 1BB2     		sxth	r3, r3
 4778 01c8 002B     		cmp	r3, #0
 4779 01ca 02DA     		bge	.L244
 4780              		.loc 1 1079 0 is_stmt 0 discriminator 1
 4781 01cc 154B     		ldr	r3, .L247+20
 4782 01ce 0022     		movs	r2, #0
 4783 01d0 1A80     		strh	r2, [r3]	@ movhi
 4784              	.L244:
1080:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4785              		.loc 1 1080 0 is_stmt 1
 4786 01d2 164B     		ldr	r3, .L247+28
 4787 01d4 1B88     		ldrh	r3, [r3]
 4788 01d6 1BB2     		sxth	r3, r3
 4789 01d8 642B     		cmp	r3, #100
 4790 01da 02DD     		ble	.L245
 4791              		.loc 1 1080 0 is_stmt 0 discriminator 1
 4792 01dc 134B     		ldr	r3, .L247+28
 4793 01de 6422     		movs	r2, #100
 4794 01e0 1A80     		strh	r2, [r3]	@ movhi
 4795              	.L245:
1081:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4796              		.loc 1 1081 0 is_stmt 1
 4797 01e2 104B     		ldr	r3, .L247+20
 4798 01e4 1B88     		ldrh	r3, [r3]
 4799 01e6 1BB2     		sxth	r3, r3
 4800 01e8 642B     		cmp	r3, #100
 4801 01ea 02DD     		ble	.L246
 4802              		.loc 1 1081 0 is_stmt 0 discriminator 1
 4803 01ec 0D4B     		ldr	r3, .L247+20
 4804 01ee 6422     		movs	r2, #100
 4805 01f0 1A80     		strh	r2, [r3]	@ movhi
 4806              	.L246:
1082:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4807              		.loc 1 1082 0 is_stmt 1
 4808 01f2 0C4B     		ldr	r3, .L247+20
 4809 01f4 1B88     		ldrh	r3, [r3]
 4810 01f6 DBB2     		uxtb	r3, r3
 4811 01f8 1846     		mov	r0, r3
 4812 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
1083:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4813              		.loc 1 1083 0
 4814 01fe 0B4B     		ldr	r3, .L247+28
 4815 0200 1B88     		ldrh	r3, [r3]
 4816 0202 DBB2     		uxtb	r3, r3
 4817 0204 1846     		mov	r0, r3
 4818 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4819              	.L239:
1084:.\main.c      **** }
 4820              		.loc 1 1084 0
 4821 020a 2037     		adds	r7, r7, #32
 4822              		.cfi_def_cfa_offset 16
 4823 020c BD46     		mov	sp, r7
 4824              		.cfi_def_cfa_register 13
 4825              		@ sp needed
 4826 020e B0BD     		pop	{r4, r5, r7, pc}
 4827              	.L248:
 4828              		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 106


 4829              	.L247:
 4830 0210 00000000 		.word	flag_calc_wheelspeed
 4831 0214 00000000 		.word	quad_diff1
 4832 0218 00000000 		.word	quad_diff2
 4833 021c 0000F03F 		.word	1072693248
 4834 0220 00000000 		.word	leftSpeedLimit
 4835 0224 00000000 		.word	left_duty_cycle
 4836 0228 00000000 		.word	rightSpeedLimit
 4837 022c 00000000 		.word	right_duty_cycle
 4838              		.cfi_endproc
 4839              	.LFE96:
 4840              		.size	Quad_Dec_response, .-Quad_Dec_response
 4841              		.section	.text.trackLine,"ax",%progbits
 4842              		.align	2
 4843              		.global	trackLine
 4844              		.thumb
 4845              		.thumb_func
 4846              		.type	trackLine, %function
 4847              	trackLine:
 4848              	.LFB97:
1085:.\main.c      **** 
1086:.\main.c      **** void trackLine()
1087:.\main.c      **** {
 4849              		.loc 1 1087 0
 4850              		.cfi_startproc
 4851              		@ args = 0, pretend = 0, frame = 0
 4852              		@ frame_needed = 1, uses_anonymous_args = 0
 4853              		@ link register save eliminated.
 4854 0000 80B4     		push	{r7}
 4855              		.cfi_def_cfa_offset 4
 4856              		.cfi_offset 7, -4
 4857 0002 00AF     		add	r7, sp, #0
 4858              		.cfi_def_cfa_register 7
1088:.\main.c      ****  //removed from implementation
1089:.\main.c      **** }
 4859              		.loc 1 1089 0
 4860 0004 BD46     		mov	sp, r7
 4861              		.cfi_def_cfa_register 13
 4862              		@ sp needed
 4863 0006 5DF8047B 		ldr	r7, [sp], #4
 4864              		.cfi_restore 7
 4865              		.cfi_def_cfa_offset 0
 4866 000a 7047     		bx	lr
 4867              		.cfi_endproc
 4868              	.LFE97:
 4869              		.size	trackLine, .-trackLine
 4870              		.global	leftTurnCount
 4871              		.bss
 4872              		.align	1
 4873              		.type	leftTurnCount, %object
 4874              		.size	leftTurnCount, 2
 4875              	leftTurnCount:
 4876 28ec 0000     		.space	2
 4877              		.global	rightTurnCount
 4878              		.align	1
 4879              		.type	rightTurnCount, %object
 4880              		.size	rightTurnCount, 2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 107


 4881              	rightTurnCount:
 4882 28ee 0000     		.space	2
 4883              		.section	.text.trackLineZ,"ax",%progbits
 4884              		.align	2
 4885              		.global	trackLineZ
 4886              		.thumb
 4887              		.thumb_func
 4888              		.type	trackLineZ, %function
 4889              	trackLineZ:
 4890              	.LFB98:
1090:.\main.c      **** uint16 leftTurnCount = 0;
1091:.\main.c      **** uint16 rightTurnCount = 0;
1092:.\main.c      **** void trackLineZ()
1093:.\main.c      **** {
 4891              		.loc 1 1093 0
 4892              		.cfi_startproc
 4893              		@ args = 0, pretend = 0, frame = 8
 4894              		@ frame_needed = 1, uses_anonymous_args = 0
 4895 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4896              		.cfi_def_cfa_offset 24
 4897              		.cfi_offset 4, -24
 4898              		.cfi_offset 5, -20
 4899              		.cfi_offset 7, -16
 4900              		.cfi_offset 8, -12
 4901              		.cfi_offset 9, -8
 4902              		.cfi_offset 14, -4
 4903 0004 82B0     		sub	sp, sp, #8
 4904              		.cfi_def_cfa_offset 32
 4905 0006 00AF     		add	r7, sp, #0
 4906              		.cfi_def_cfa_register 7
1094:.\main.c      ****     //read the value of the three central-front sensors
1095:.\main.c      ****     
1096:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4907              		.loc 1 1096 0
 4908 0008 FFF7FEFF 		bl	NLSens_out_Read
 4909 000c 0346     		mov	r3, r0
 4910 000e FB71     		strb	r3, [r7, #7]
1097:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4911              		.loc 1 1097 0
 4912 0010 FFF7FEFF 		bl	NRSens_out_Read
 4913 0014 0346     		mov	r3, r0
 4914 0016 BB71     		strb	r3, [r7, #6]
1098:.\main.c      ****     uint8 mid = MSens_out_Read();
 4915              		.loc 1 1098 0
 4916 0018 FFF7FEFF 		bl	MSens_out_Read
 4917 001c 0346     		mov	r3, r0
 4918 001e 7B71     		strb	r3, [r7, #5]
1099:.\main.c      ****     
1100:.\main.c      ****         //if only the left one, hard left
1101:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4919              		.loc 1 1101 0
 4920 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4921 0022 002B     		cmp	r3, #0
 4922 0024 27D0     		beq	.L251
 4923              		.loc 1 1101 0 is_stmt 0 discriminator 1
 4924 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4925 0028 002B     		cmp	r3, #0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 108


 4926 002a 24D1     		bne	.L251
 4927              		.loc 1 1101 0 discriminator 2
 4928 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4929 002e 002B     		cmp	r3, #0
 4930 0030 21D1     		bne	.L251
1102:.\main.c      ****     {
1103:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4931              		.loc 1 1103 0 is_stmt 1
 4932 0032 454B     		ldr	r3, .L256+8
 4933 0034 D3E90023 		ldrd	r2, [r3]
 4934 0038 1046     		mov	r0, r2
 4935 003a 1946     		mov	r1, r3
 4936 003c 40A3     		adr	r3, .L256
 4937 003e D3E90023 		ldrd	r2, [r3]
 4938 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4939 0046 0246     		mov	r2, r0
 4940 0048 0B46     		mov	r3, r1
 4941 004a 1446     		mov	r4, r2
 4942 004c 1D46     		mov	r5, r3
 4943 004e 3E4B     		ldr	r3, .L256+8
 4944 0050 D3E90023 		ldrd	r2, [r3]
 4945 0054 9046     		mov	r8, r2
 4946 0056 83F00049 		eor	r9, r3, #-2147483648
 4947 005a 4046     		mov	r0, r8
 4948 005c 4946     		mov	r1, r9
 4949 005e 38A3     		adr	r3, .L256
 4950 0060 D3E90023 		ldrd	r2, [r3]
 4951 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4952 0068 0246     		mov	r2, r0
 4953 006a 0B46     		mov	r3, r1
 4954 006c 2046     		mov	r0, r4
 4955 006e 2946     		mov	r1, r5
 4956 0070 FFF7FEFF 		bl	setSpeed
 4957 0074 5FE0     		b	.L250
 4958              	.L251:
1104:.\main.c      ****     }
1105:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4959              		.loc 1 1105 0
 4960 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4961 0078 002B     		cmp	r3, #0
 4962 007a 0ED0     		beq	.L253
 4963              		.loc 1 1105 0 is_stmt 0 discriminator 1
 4964 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4965 007e 002B     		cmp	r3, #0
 4966 0080 0BD0     		beq	.L253
 4967              		.loc 1 1105 0 discriminator 2
 4968 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4969 0084 002B     		cmp	r3, #0
 4970 0086 08D1     		bne	.L253
1106:.\main.c      ****     {
1107:.\main.c      ****         setSpeed(speed,speed);
 4971              		.loc 1 1107 0 is_stmt 1
 4972 0088 2F4B     		ldr	r3, .L256+8
 4973 008a D3E90001 		ldrd	r0, [r3]
 4974 008e 2E4B     		ldr	r3, .L256+8
 4975 0090 D3E90023 		ldrd	r2, [r3]
 4976 0094 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 109


 4977 0098 4DE0     		b	.L250
 4978              	.L253:
1108:.\main.c      ****     }
1109:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4979              		.loc 1 1109 0
 4980 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4981 009c 002B     		cmp	r3, #0
 4982 009e 0ED0     		beq	.L254
 4983              		.loc 1 1109 0 is_stmt 0 discriminator 1
 4984 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4985 00a2 002B     		cmp	r3, #0
 4986 00a4 0BD0     		beq	.L254
 4987              		.loc 1 1109 0 discriminator 2
 4988 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4989 00a8 002B     		cmp	r3, #0
 4990 00aa 08D1     		bne	.L254
1110:.\main.c      ****     {
1111:.\main.c      ****         setSpeed(speed ,speed);
 4991              		.loc 1 1111 0 is_stmt 1
 4992 00ac 264B     		ldr	r3, .L256+8
 4993 00ae D3E90001 		ldrd	r0, [r3]
 4994 00b2 254B     		ldr	r3, .L256+8
 4995 00b4 D3E90023 		ldrd	r2, [r3]
 4996 00b8 FFF7FEFF 		bl	setSpeed
 4997 00bc 3BE0     		b	.L250
 4998              	.L254:
1112:.\main.c      ****     }
1113:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4999              		.loc 1 1113 0
 5000 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5001 00c0 002B     		cmp	r3, #0
 5002 00c2 27D0     		beq	.L255
 5003              		.loc 1 1113 0 is_stmt 0 discriminator 1
 5004 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5005 00c6 002B     		cmp	r3, #0
 5006 00c8 24D1     		bne	.L255
 5007              		.loc 1 1113 0 discriminator 2
 5008 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5009 00cc 002B     		cmp	r3, #0
 5010 00ce 21D1     		bne	.L255
1114:.\main.c      ****     {
1115:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 5011              		.loc 1 1115 0 is_stmt 1
 5012 00d0 1D4B     		ldr	r3, .L256+8
 5013 00d2 D3E90023 		ldrd	r2, [r3]
 5014 00d6 1446     		mov	r4, r2
 5015 00d8 83F00045 		eor	r5, r3, #-2147483648
 5016 00dc 2046     		mov	r0, r4
 5017 00de 2946     		mov	r1, r5
 5018 00e0 17A3     		adr	r3, .L256
 5019 00e2 D3E90023 		ldrd	r2, [r3]
 5020 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 5021 00ea 0246     		mov	r2, r0
 5022 00ec 0B46     		mov	r3, r1
 5023 00ee 1446     		mov	r4, r2
 5024 00f0 1D46     		mov	r5, r3
 5025 00f2 154B     		ldr	r3, .L256+8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 110


 5026 00f4 D3E90023 		ldrd	r2, [r3]
 5027 00f8 1046     		mov	r0, r2
 5028 00fa 1946     		mov	r1, r3
 5029 00fc 10A3     		adr	r3, .L256
 5030 00fe D3E90023 		ldrd	r2, [r3]
 5031 0102 FFF7FEFF 		bl	__aeabi_ddiv
 5032 0106 0246     		mov	r2, r0
 5033 0108 0B46     		mov	r3, r1
 5034 010a 2046     		mov	r0, r4
 5035 010c 2946     		mov	r1, r5
 5036 010e FFF7FEFF 		bl	setSpeed
 5037 0112 10E0     		b	.L250
 5038              	.L255:
1116:.\main.c      ****     }
1117:.\main.c      ****     else if (mid && !nr && !nl)
 5039              		.loc 1 1117 0
 5040 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5041 0116 002B     		cmp	r3, #0
 5042 0118 0DD0     		beq	.L250
 5043              		.loc 1 1117 0 is_stmt 0 discriminator 1
 5044 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5045 011c 002B     		cmp	r3, #0
 5046 011e 0AD1     		bne	.L250
 5047              		.loc 1 1117 0 discriminator 2
 5048 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5049 0122 002B     		cmp	r3, #0
 5050 0124 07D1     		bne	.L250
1118:.\main.c      ****     {
1119:.\main.c      ****         setSpeed(speed,speed);
 5051              		.loc 1 1119 0 is_stmt 1
 5052 0126 084B     		ldr	r3, .L256+8
 5053 0128 D3E90001 		ldrd	r0, [r3]
 5054 012c 064B     		ldr	r3, .L256+8
 5055 012e D3E90023 		ldrd	r2, [r3]
 5056 0132 FFF7FEFF 		bl	setSpeed
 5057              	.L250:
1120:.\main.c      ****     }
1121:.\main.c      **** }
 5058              		.loc 1 1121 0
 5059 0136 0837     		adds	r7, r7, #8
 5060              		.cfi_def_cfa_offset 24
 5061 0138 BD46     		mov	sp, r7
 5062              		.cfi_def_cfa_register 13
 5063              		@ sp needed
 5064 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 5065              	.L257:
 5066 013e 00BF     		.align	3
 5067              	.L256:
 5068 0140 9A999999 		.word	-1717986918
 5069 0144 9999F93F 		.word	1073322393
 5070 0148 00000000 		.word	speed
 5071              		.cfi_endproc
 5072              	.LFE98:
 5073              		.size	trackLineZ, .-trackLineZ
 5074 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 5075              		.align	2
 5076              		.global	trackLineU
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 111


 5077              		.thumb
 5078              		.thumb_func
 5079              		.type	trackLineU, %function
 5080              	trackLineU:
 5081              	.LFB99:
1122:.\main.c      **** 
1123:.\main.c      **** 
1124:.\main.c      **** void trackLineU()
1125:.\main.c      **** { 
 5082              		.loc 1 1125 0
 5083              		.cfi_startproc
 5084              		@ args = 0, pretend = 0, frame = 0
 5085              		@ frame_needed = 1, uses_anonymous_args = 0
 5086              		@ link register save eliminated.
 5087 0000 80B4     		push	{r7}
 5088              		.cfi_def_cfa_offset 4
 5089              		.cfi_offset 7, -4
 5090 0002 00AF     		add	r7, sp, #0
 5091              		.cfi_def_cfa_register 7
1126:.\main.c      **** //removed from final implementation
1127:.\main.c      **** }
 5092              		.loc 1 1127 0
 5093 0004 BD46     		mov	sp, r7
 5094              		.cfi_def_cfa_register 13
 5095              		@ sp needed
 5096 0006 5DF8047B 		ldr	r7, [sp], #4
 5097              		.cfi_restore 7
 5098              		.cfi_def_cfa_offset 0
 5099 000a 7047     		bx	lr
 5100              		.cfi_endproc
 5101              	.LFE99:
 5102              		.size	trackLineU, .-trackLineU
 5103              		.global	__aeabi_fadd
 5104              		.section	.rodata
 5105 011b 00       		.align	2
 5106              	.LC15:
 5107 011c 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 5107      65727920 
 5107      566F6C74 
 5107      6167653A 
 5107      2025646D 
 5108              		.section	.text.print_ADC,"ax",%progbits
 5109              		.align	2
 5110              		.global	print_ADC
 5111              		.thumb
 5112              		.thumb_func
 5113              		.type	print_ADC, %function
 5114              	print_ADC:
 5115              	.LFB100:
1128:.\main.c      **** 
1129:.\main.c      **** void print_ADC()
1130:.\main.c      **** {
 5116              		.loc 1 1130 0
 5117              		.cfi_startproc
 5118              		@ args = 0, pretend = 0, frame = 24
 5119              		@ frame_needed = 1, uses_anonymous_args = 0
 5120 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 112


 5121              		.cfi_def_cfa_offset 8
 5122              		.cfi_offset 7, -8
 5123              		.cfi_offset 14, -4
 5124 0002 86B0     		sub	sp, sp, #24
 5125              		.cfi_def_cfa_offset 32
 5126 0004 00AF     		add	r7, sp, #0
 5127              		.cfi_def_cfa_register 7
1131:.\main.c      ****    //usbPutString("HII\n");
1132:.\main.c      ****     if(flag_receive_ADC == 1)
 5128              		.loc 1 1132 0
 5129 0006 274B     		ldr	r3, .L262
 5130 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5131 000a 012B     		cmp	r3, #1
 5132 000c 46D1     		bne	.L259
 5133              	.LBB10:
1133:.\main.c      ****     {
1134:.\main.c      ****         //usbPutString("AAA\r\n");
1135:.\main.c      ****         flag_receive_ADC = 0;
 5134              		.loc 1 1135 0
 5135 000e 254B     		ldr	r3, .L262
 5136 0010 0022     		movs	r2, #0
 5137 0012 1A70     		strb	r2, [r3]
1136:.\main.c      ****         
1137:.\main.c      ****        // int8 channel = ADC_
1138:.\main.c      ****         float scalingFactor = 0.972;
 5138              		.loc 1 1138 0
 5139 0014 244B     		ldr	r3, .L262+4
 5140 0016 7B61     		str	r3, [r7, #20]	@ float
1139:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 5141              		.loc 1 1139 0
 5142 0018 244B     		ldr	r3, .L262+8
 5143 001a 1B88     		ldrh	r3, [r3]
 5144 001c 1BB2     		sxth	r3, r3
 5145 001e 41F28832 		movw	r2, #5000
 5146 0022 02FB03F3 		mul	r3, r2, r3
 5147 0026 002B     		cmp	r3, #0
 5148 0028 01DA     		bge	.L261
 5149 002a 03F6FF73 		addw	r3, r3, #4095
 5150              	.L261:
 5151 002e 1B13     		asrs	r3, r3, #12
 5152 0030 1846     		mov	r0, r3
 5153 0032 FFF7FEFF 		bl	__aeabi_i2f
 5154 0036 0346     		mov	r3, r0
 5155 0038 1846     		mov	r0, r3
 5156 003a 7969     		ldr	r1, [r7, #20]	@ float
 5157 003c FFF7FEFF 		bl	__aeabi_fmul
 5158 0040 0346     		mov	r3, r0
 5159 0042 1846     		mov	r0, r3
 5160 0044 1946     		mov	r1, r3
 5161 0046 FFF7FEFF 		bl	__aeabi_fadd
 5162 004a 0346     		mov	r3, r0
 5163 004c 1846     		mov	r0, r3
 5164 004e FFF7FEFF 		bl	__aeabi_f2iz
 5165 0052 0346     		mov	r3, r0
 5166 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1140:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 5167              		.loc 1 1140 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 113


 5168 0056 B7F91220 		ldrsh	r2, [r7, #18]
 5169 005a 154B     		ldr	r3, .L262+12
 5170 005c 1B88     		ldrh	r3, [r3]
 5171 005e 1BB2     		sxth	r3, r3
 5172 0060 1A44     		add	r2, r2, r3
 5173 0062 144B     		ldr	r3, .L262+16
 5174 0064 1B88     		ldrh	r3, [r3]
 5175 0066 1BB2     		sxth	r3, r3
 5176 0068 1344     		add	r3, r3, r2
 5177 006a 134A     		ldr	r2, .L262+20
 5178 006c 82FB0312 		smull	r1, r2, r2, r3
 5179 0070 DB17     		asrs	r3, r3, #31
 5180 0072 D31A     		subs	r3, r2, r3
 5181 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1141:.\main.c      ****         prevVoltage2 = prevVoltage;
 5182              		.loc 1 1141 0
 5183 0076 0E4B     		ldr	r3, .L262+12
 5184 0078 1A88     		ldrh	r2, [r3]
 5185 007a 0E4B     		ldr	r3, .L262+16
 5186 007c 1A80     		strh	r2, [r3]	@ movhi
1142:.\main.c      ****         prevVoltage = converted_val;
 5187              		.loc 1 1142 0
 5188 007e 0C4A     		ldr	r2, .L262+12
 5189 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5190 0082 1380     		strh	r3, [r2]	@ movhi
1143:.\main.c      ****         
1144:.\main.c      ****         char result_str[16];
1145:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 5191              		.loc 1 1145 0
 5192 0084 B7F91230 		ldrsh	r3, [r7, #18]
 5193 0088 3A46     		mov	r2, r7
 5194 008a 1046     		mov	r0, r2
 5195 008c 0B49     		ldr	r1, .L262+24
 5196 008e 1A46     		mov	r2, r3
 5197 0090 FFF7FEFF 		bl	sprintf
1146:.\main.c      ****         
1147:.\main.c      ****         usbPutString(result_str);
 5198              		.loc 1 1147 0
 5199 0094 3B46     		mov	r3, r7
 5200 0096 1846     		mov	r0, r3
 5201 0098 FFF7FEFF 		bl	usbPutString
 5202              	.L259:
 5203              	.LBE10:
1148:.\main.c      ****     }
1149:.\main.c      **** }
 5204              		.loc 1 1149 0
 5205 009c 1837     		adds	r7, r7, #24
 5206              		.cfi_def_cfa_offset 8
 5207 009e BD46     		mov	sp, r7
 5208              		.cfi_def_cfa_register 13
 5209              		@ sp needed
 5210 00a0 80BD     		pop	{r7, pc}
 5211              	.L263:
 5212 00a2 00BF     		.align	2
 5213              	.L262:
 5214 00a4 00000000 		.word	flag_receive_ADC
 5215 00a8 FED4783F 		.word	1064883454
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 114


 5216 00ac 00000000 		.word	adc_result
 5217 00b0 00000000 		.word	prevVoltage
 5218 00b4 00000000 		.word	prevVoltage2
 5219 00b8 56555555 		.word	1431655766
 5220 00bc 1C010000 		.word	.LC15
 5221              		.cfi_endproc
 5222              	.LFE100:
 5223              		.size	print_ADC, .-print_ADC
 5224              		.section	.rodata
 5225              		.align	2
 5226              	.LC16:
 5227 0134 52535349 		.ascii	"RSSI:\000"
 5227      3A00
 5228 013a 0000     		.align	2
 5229              	.LC17:
 5230 013c 25640D0A 		.ascii	"%d\015\012\000"
 5230      00
 5231 0141 000000   		.align	2
 5232              	.LC18:
 5233 0144 726F626F 		.ascii	"robot_x:\000"
 5233      745F783A 
 5233      00
 5234 014d 000000   		.align	2
 5235              	.LC19:
 5236 0150 726F626F 		.ascii	"robot_y:\000"
 5236      745F793A 
 5236      00
 5237 0159 000000   		.align	2
 5238              	.LC20:
 5239 015c 726F626F 		.ascii	"robot_dir:\000"
 5239      745F6469 
 5239      723A00
 5240 0167 00       		.section	.text.print_RF,"ax",%progbits
 5241              		.align	2
 5242              		.global	print_RF
 5243              		.thumb
 5244              		.thumb_func
 5245              		.type	print_RF, %function
 5246              	print_RF:
 5247              	.LFB101:
1150:.\main.c      **** 
1151:.\main.c      **** void print_RF()
1152:.\main.c      **** {
 5248              		.loc 1 1152 0
 5249              		.cfi_startproc
 5250              		@ args = 0, pretend = 0, frame = 16
 5251              		@ frame_needed = 1, uses_anonymous_args = 0
 5252 0000 80B5     		push	{r7, lr}
 5253              		.cfi_def_cfa_offset 8
 5254              		.cfi_offset 7, -8
 5255              		.cfi_offset 14, -4
 5256 0002 84B0     		sub	sp, sp, #16
 5257              		.cfi_def_cfa_offset 24
 5258 0004 00AF     		add	r7, sp, #0
 5259              		.cfi_def_cfa_register 7
1153:.\main.c      ****     if(flag_print_rf == 1)
 5260              		.loc 1 1153 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 115


 5261 0006 254B     		ldr	r3, .L266
 5262 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5263 000a 012B     		cmp	r3, #1
 5264 000c 42D1     		bne	.L264
 5265              	.LBB11:
1154:.\main.c      ****     {
1155:.\main.c      ****         char printString[16];
1156:.\main.c      ****         flag_print_rf = 0;
 5266              		.loc 1 1156 0
 5267 000e 234B     		ldr	r3, .L266
 5268 0010 0022     		movs	r2, #0
 5269 0012 1A70     		strb	r2, [r3]
1157:.\main.c      ****         usbPutString("RSSI:");
 5270              		.loc 1 1157 0
 5271 0014 2248     		ldr	r0, .L266+4
 5272 0016 FFF7FEFF 		bl	usbPutString
1158:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 5273              		.loc 1 1158 0
 5274 001a 224B     		ldr	r3, .L266+8
 5275 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5276 001e 5BB2     		sxtb	r3, r3
 5277 0020 3A46     		mov	r2, r7
 5278 0022 1046     		mov	r0, r2
 5279 0024 2049     		ldr	r1, .L266+12
 5280 0026 1A46     		mov	r2, r3
 5281 0028 FFF7FEFF 		bl	sprintf
1159:.\main.c      ****         usbPutString(printString);
 5282              		.loc 1 1159 0
 5283 002c 3B46     		mov	r3, r7
 5284 002e 1846     		mov	r0, r3
 5285 0030 FFF7FEFF 		bl	usbPutString
1160:.\main.c      ****         usbPutString("robot_x:");
 5286              		.loc 1 1160 0
 5287 0034 1D48     		ldr	r0, .L266+16
 5288 0036 FFF7FEFF 		bl	usbPutString
1161:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 5289              		.loc 1 1161 0
 5290 003a 1A4B     		ldr	r3, .L266+8
 5291 003c 5B88     		ldrh	r3, [r3, #2]
 5292 003e 1BB2     		sxth	r3, r3
 5293 0040 3A46     		mov	r2, r7
 5294 0042 1046     		mov	r0, r2
 5295 0044 1849     		ldr	r1, .L266+12
 5296 0046 1A46     		mov	r2, r3
 5297 0048 FFF7FEFF 		bl	sprintf
1162:.\main.c      ****         usbPutString(printString);
 5298              		.loc 1 1162 0
 5299 004c 3B46     		mov	r3, r7
 5300 004e 1846     		mov	r0, r3
 5301 0050 FFF7FEFF 		bl	usbPutString
1163:.\main.c      ****         usbPutString("robot_y:");
 5302              		.loc 1 1163 0
 5303 0054 1648     		ldr	r0, .L266+20
 5304 0056 FFF7FEFF 		bl	usbPutString
1164:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 5305              		.loc 1 1164 0
 5306 005a 124B     		ldr	r3, .L266+8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 116


 5307 005c 9B88     		ldrh	r3, [r3, #4]
 5308 005e 1BB2     		sxth	r3, r3
 5309 0060 3A46     		mov	r2, r7
 5310 0062 1046     		mov	r0, r2
 5311 0064 1049     		ldr	r1, .L266+12
 5312 0066 1A46     		mov	r2, r3
 5313 0068 FFF7FEFF 		bl	sprintf
1165:.\main.c      ****         usbPutString(printString);
 5314              		.loc 1 1165 0
 5315 006c 3B46     		mov	r3, r7
 5316 006e 1846     		mov	r0, r3
 5317 0070 FFF7FEFF 		bl	usbPutString
1166:.\main.c      ****         usbPutString("robot_dir:");
 5318              		.loc 1 1166 0
 5319 0074 0F48     		ldr	r0, .L266+24
 5320 0076 FFF7FEFF 		bl	usbPutString
1167:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 5321              		.loc 1 1167 0
 5322 007a 0A4B     		ldr	r3, .L266+8
 5323 007c DB88     		ldrh	r3, [r3, #6]
 5324 007e 1BB2     		sxth	r3, r3
 5325 0080 3A46     		mov	r2, r7
 5326 0082 1046     		mov	r0, r2
 5327 0084 0849     		ldr	r1, .L266+12
 5328 0086 1A46     		mov	r2, r3
 5329 0088 FFF7FEFF 		bl	sprintf
1168:.\main.c      ****         usbPutString(printString);
 5330              		.loc 1 1168 0
 5331 008c 3B46     		mov	r3, r7
 5332 008e 1846     		mov	r0, r3
 5333 0090 FFF7FEFF 		bl	usbPutString
 5334              	.L264:
 5335              	.LBE11:
1169:.\main.c      ****     }
1170:.\main.c      **** }
 5336              		.loc 1 1170 0
 5337 0094 1037     		adds	r7, r7, #16
 5338              		.cfi_def_cfa_offset 8
 5339 0096 BD46     		mov	sp, r7
 5340              		.cfi_def_cfa_register 13
 5341              		@ sp needed
 5342 0098 80BD     		pop	{r7, pc}
 5343              	.L267:
 5344 009a 00BF     		.align	2
 5345              	.L266:
 5346 009c 00000000 		.word	flag_print_rf
 5347 00a0 34010000 		.word	.LC16
 5348 00a4 00000000 		.word	system_state
 5349 00a8 3C010000 		.word	.LC17
 5350 00ac 44010000 		.word	.LC18
 5351 00b0 50010000 		.word	.LC19
 5352 00b4 5C010000 		.word	.LC20
 5353              		.cfi_endproc
 5354              	.LFE101:
 5355              		.size	print_RF, .-print_RF
 5356              		.section	.text.readFrontSensors,"ax",%progbits
 5357              		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 117


 5358              		.global	readFrontSensors
 5359              		.thumb
 5360              		.thumb_func
 5361              		.type	readFrontSensors, %function
 5362              	readFrontSensors:
 5363              	.LFB102:
1171:.\main.c      **** 
1172:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1173:.\main.c      **** {
 5364              		.loc 1 1173 0
 5365              		.cfi_startproc
 5366              		@ args = 0, pretend = 0, frame = 8
 5367              		@ frame_needed = 1, uses_anonymous_args = 0
 5368 0000 90B5     		push	{r4, r7, lr}
 5369              		.cfi_def_cfa_offset 12
 5370              		.cfi_offset 4, -12
 5371              		.cfi_offset 7, -8
 5372              		.cfi_offset 14, -4
 5373 0002 83B0     		sub	sp, sp, #12
 5374              		.cfi_def_cfa_offset 24
 5375 0004 00AF     		add	r7, sp, #0
 5376              		.cfi_def_cfa_register 7
 5377 0006 7860     		str	r0, [r7, #4]
1174:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 5378              		.loc 1 1174 0
 5379 0008 FFF7FEFF 		bl	FLSens_out_Read
 5380 000c 0346     		mov	r3, r0
 5381 000e 1A46     		mov	r2, r3
 5382 0010 7B68     		ldr	r3, [r7, #4]
 5383 0012 1A70     		strb	r2, [r3]
1175:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 5384              		.loc 1 1175 0
 5385 0014 7B68     		ldr	r3, [r7, #4]
 5386 0016 5C1C     		adds	r4, r3, #1
 5387 0018 FFF7FEFF 		bl	NLSens_out_Read
 5388 001c 0346     		mov	r3, r0
 5389 001e 2370     		strb	r3, [r4]
1176:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 5390              		.loc 1 1176 0
 5391 0020 7B68     		ldr	r3, [r7, #4]
 5392 0022 9C1C     		adds	r4, r3, #2
 5393 0024 FFF7FEFF 		bl	MSens_out_Read
 5394 0028 0346     		mov	r3, r0
 5395 002a 2370     		strb	r3, [r4]
1177:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 5396              		.loc 1 1177 0
 5397 002c 7B68     		ldr	r3, [r7, #4]
 5398 002e DC1C     		adds	r4, r3, #3
 5399 0030 FFF7FEFF 		bl	NRSens_out_Read
 5400 0034 0346     		mov	r3, r0
 5401 0036 2370     		strb	r3, [r4]
1178:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 5402              		.loc 1 1178 0
 5403 0038 7B68     		ldr	r3, [r7, #4]
 5404 003a 1C1D     		adds	r4, r3, #4
 5405 003c FFF7FEFF 		bl	FRSens_out_Read
 5406 0040 0346     		mov	r3, r0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 118


 5407 0042 2370     		strb	r3, [r4]
1179:.\main.c      **** }
 5408              		.loc 1 1179 0
 5409 0044 0C37     		adds	r7, r7, #12
 5410              		.cfi_def_cfa_offset 12
 5411 0046 BD46     		mov	sp, r7
 5412              		.cfi_def_cfa_register 13
 5413              		@ sp needed
 5414 0048 90BD     		pop	{r4, r7, pc}
 5415              		.cfi_endproc
 5416              	.LFE102:
 5417              		.size	readFrontSensors, .-readFrontSensors
 5418 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5419              		.align	2
 5420              		.global	usbPutString
 5421              		.thumb
 5422              		.thumb_func
 5423              		.type	usbPutString, %function
 5424              	usbPutString:
 5425              	.LFB103:
1180:.\main.c      **** 
1181:.\main.c      **** 
1182:.\main.c      **** //* ========================================
1183:.\main.c      **** void usbPutString(char *s)
1184:.\main.c      **** {
 5426              		.loc 1 1184 0
 5427              		.cfi_startproc
 5428              		@ args = 0, pretend = 0, frame = 16
 5429              		@ frame_needed = 1, uses_anonymous_args = 0
 5430 0000 80B5     		push	{r7, lr}
 5431              		.cfi_def_cfa_offset 8
 5432              		.cfi_offset 7, -8
 5433              		.cfi_offset 14, -4
 5434 0002 84B0     		sub	sp, sp, #16
 5435              		.cfi_def_cfa_offset 24
 5436 0004 00AF     		add	r7, sp, #0
 5437              		.cfi_def_cfa_register 7
 5438 0006 7860     		str	r0, [r7, #4]
1185:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1186:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1187:.\main.c      **** //  length to 62 char (63rd char is a '!')
1188:.\main.c      ****     if (USE_USB && portOpen)
 5439              		.loc 1 1188 0
 5440 0008 154B     		ldr	r3, .L273
 5441 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5442 000c 002B     		cmp	r3, #0
 5443 000e 23D0     		beq	.L269
 5444              	.LBB12:
1189:.\main.c      ****     {
1190:.\main.c      ****             uint32 cnt = 0;
 5445              		.loc 1 1190 0
 5446 0010 0023     		movs	r3, #0
 5447 0012 FB60     		str	r3, [r7, #12]
1191:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5448              		.loc 1 1191 0
 5449 0014 0AE0     		b	.L271
 5450              	.L272:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 119


1192:.\main.c      ****             {
1193:.\main.c      ****                 cnt++;
 5451              		.loc 1 1193 0
 5452 0016 FB68     		ldr	r3, [r7, #12]
 5453 0018 0133     		adds	r3, r3, #1
 5454 001a FB60     		str	r3, [r7, #12]
1194:.\main.c      ****                 if(cnt == 3000000){
 5455              		.loc 1 1194 0
 5456 001c FB68     		ldr	r3, [r7, #12]
 5457 001e 114A     		ldr	r2, .L273+4
 5458 0020 9342     		cmp	r3, r2
 5459 0022 03D1     		bne	.L271
1195:.\main.c      ****                     portOpen = 0;
 5460              		.loc 1 1195 0
 5461 0024 0E4B     		ldr	r3, .L273
 5462 0026 0022     		movs	r2, #0
 5463 0028 1A70     		strb	r2, [r3]
1196:.\main.c      ****                     return;
 5464              		.loc 1 1196 0
 5465 002a 15E0     		b	.L269
 5466              	.L271:
1191:.\main.c      ****             {
 5467              		.loc 1 1191 0
 5468 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5469 0030 0346     		mov	r3, r0
 5470 0032 002B     		cmp	r3, #0
 5471 0034 EFD0     		beq	.L272
1197:.\main.c      ****                 }
1198:.\main.c      ****             }
1199:.\main.c      ****             s[63]='\0';
 5472              		.loc 1 1199 0
 5473 0036 7B68     		ldr	r3, [r7, #4]
 5474 0038 3F33     		adds	r3, r3, #63
 5475 003a 0022     		movs	r2, #0
 5476 003c 1A70     		strb	r2, [r3]
1200:.\main.c      ****             s[62]='!';
 5477              		.loc 1 1200 0
 5478 003e 7B68     		ldr	r3, [r7, #4]
 5479 0040 3E33     		adds	r3, r3, #62
 5480 0042 2122     		movs	r2, #33
 5481 0044 1A70     		strb	r2, [r3]
1201:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5482              		.loc 1 1201 0
 5483 0046 7868     		ldr	r0, [r7, #4]
 5484 0048 FFF7FEFF 		bl	strlen
 5485 004c 0346     		mov	r3, r0
 5486 004e 9BB2     		uxth	r3, r3
 5487 0050 7868     		ldr	r0, [r7, #4]
 5488 0052 1946     		mov	r1, r3
 5489 0054 FFF7FEFF 		bl	USBUART_PutData
 5490              	.L269:
 5491              	.LBE12:
1202:.\main.c      ****     }
1203:.\main.c      **** }
 5492              		.loc 1 1203 0
 5493 0058 1037     		adds	r7, r7, #16
 5494              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 120


 5495 005a BD46     		mov	sp, r7
 5496              		.cfi_def_cfa_register 13
 5497              		@ sp needed
 5498 005c 80BD     		pop	{r7, pc}
 5499              	.L274:
 5500 005e 00BF     		.align	2
 5501              	.L273:
 5502 0060 00000000 		.word	portOpen
 5503 0064 C0C62D00 		.word	3000000
 5504              		.cfi_endproc
 5505              	.LFE103:
 5506              		.size	usbPutString, .-usbPutString
 5507              		.section	.text.usbPutChar,"ax",%progbits
 5508              		.align	2
 5509              		.global	usbPutChar
 5510              		.thumb
 5511              		.thumb_func
 5512              		.type	usbPutChar, %function
 5513              	usbPutChar:
 5514              	.LFB104:
1204:.\main.c      **** //* ========================================
1205:.\main.c      **** void usbPutChar(char c)
1206:.\main.c      **** {
 5515              		.loc 1 1206 0
 5516              		.cfi_startproc
 5517              		@ args = 0, pretend = 0, frame = 16
 5518              		@ frame_needed = 1, uses_anonymous_args = 0
 5519 0000 80B5     		push	{r7, lr}
 5520              		.cfi_def_cfa_offset 8
 5521              		.cfi_offset 7, -8
 5522              		.cfi_offset 14, -4
 5523 0002 84B0     		sub	sp, sp, #16
 5524              		.cfi_def_cfa_offset 24
 5525 0004 00AF     		add	r7, sp, #0
 5526              		.cfi_def_cfa_register 7
 5527 0006 0346     		mov	r3, r0
 5528 0008 FB71     		strb	r3, [r7, #7]
1207:.\main.c      ****     if (USE_USB && portOpen)    
 5529              		.loc 1 1207 0
 5530 000a 0F4B     		ldr	r3, .L279
 5531 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5532 000e 002B     		cmp	r3, #0
 5533 0010 16D0     		beq	.L275
 5534              	.LBB13:
1208:.\main.c      ****     {    
1209:.\main.c      ****         uint32 cnt = 0;
 5535              		.loc 1 1209 0
 5536 0012 0023     		movs	r3, #0
 5537 0014 FB60     		str	r3, [r7, #12]
1210:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5538              		.loc 1 1210 0
 5539 0016 0AE0     		b	.L277
 5540              	.L278:
1211:.\main.c      ****             cnt++;
 5541              		.loc 1 1211 0
 5542 0018 FB68     		ldr	r3, [r7, #12]
 5543 001a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 121


 5544 001c FB60     		str	r3, [r7, #12]
1212:.\main.c      ****             if(cnt == 3000000){
 5545              		.loc 1 1212 0
 5546 001e FB68     		ldr	r3, [r7, #12]
 5547 0020 0A4A     		ldr	r2, .L279+4
 5548 0022 9342     		cmp	r3, r2
 5549 0024 03D1     		bne	.L277
1213:.\main.c      ****                 portOpen = 0;
 5550              		.loc 1 1213 0
 5551 0026 084B     		ldr	r3, .L279
 5552 0028 0022     		movs	r2, #0
 5553 002a 1A70     		strb	r2, [r3]
1214:.\main.c      ****                 return;
 5554              		.loc 1 1214 0
 5555 002c 08E0     		b	.L275
 5556              	.L277:
1210:.\main.c      ****             cnt++;
 5557              		.loc 1 1210 0
 5558 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5559 0032 0346     		mov	r3, r0
 5560 0034 002B     		cmp	r3, #0
 5561 0036 EFD0     		beq	.L278
1215:.\main.c      ****             }
1216:.\main.c      ****         }
1217:.\main.c      ****         USBUART_PutChar(c);
 5562              		.loc 1 1217 0
 5563 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5564 003a 1846     		mov	r0, r3
 5565 003c FFF7FEFF 		bl	USBUART_PutChar
 5566              	.L275:
 5567              	.LBE13:
1218:.\main.c      ****     }    
1219:.\main.c      **** }
 5568              		.loc 1 1219 0
 5569 0040 1037     		adds	r7, r7, #16
 5570              		.cfi_def_cfa_offset 8
 5571 0042 BD46     		mov	sp, r7
 5572              		.cfi_def_cfa_register 13
 5573              		@ sp needed
 5574 0044 80BD     		pop	{r7, pc}
 5575              	.L280:
 5576 0046 00BF     		.align	2
 5577              	.L279:
 5578 0048 00000000 		.word	portOpen
 5579 004c C0C62D00 		.word	3000000
 5580              		.cfi_endproc
 5581              	.LFE104:
 5582              		.size	usbPutChar, .-usbPutChar
 5583              		.section	.text.uart_set_PWM,"ax",%progbits
 5584              		.align	2
 5585              		.global	uart_set_PWM
 5586              		.thumb
 5587              		.thumb_func
 5588              		.type	uart_set_PWM, %function
 5589              	uart_set_PWM:
 5590              	.LFB105:
1220:.\main.c      **** //* ========================================
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 122


1221:.\main.c      **** 
1222:.\main.c      **** void uart_set_PWM()
1223:.\main.c      **** {
 5591              		.loc 1 1223 0
 5592              		.cfi_startproc
 5593              		@ args = 0, pretend = 0, frame = 0
 5594              		@ frame_needed = 1, uses_anonymous_args = 0
 5595              		@ link register save eliminated.
 5596 0000 80B4     		push	{r7}
 5597              		.cfi_def_cfa_offset 4
 5598              		.cfi_offset 7, -4
 5599 0002 00AF     		add	r7, sp, #0
 5600              		.cfi_def_cfa_register 7
1224:.\main.c      ****     //removed from final implementation
1225:.\main.c      **** }
 5601              		.loc 1 1225 0
 5602 0004 BD46     		mov	sp, r7
 5603              		.cfi_def_cfa_register 13
 5604              		@ sp needed
 5605 0006 5DF8047B 		ldr	r7, [sp], #4
 5606              		.cfi_restore 7
 5607              		.cfi_def_cfa_offset 0
 5608 000a 7047     		bx	lr
 5609              		.cfi_endproc
 5610              	.LFE105:
 5611              		.size	uart_set_PWM, .-uart_set_PWM
 5612              		.text
 5613              	.Letext0:
 5614              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5615              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5616              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5617              		.file 5 ".\\vars.h"
 5618              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5619              		.file 7 ".\\pathfinder.h"
 5620              		.section	.debug_info,"",%progbits
 5621              	.Ldebug_info0:
 5622 0000 C50E0000 		.4byte	0xec5
 5623 0004 0400     		.2byte	0x4
 5624 0006 00000000 		.4byte	.Ldebug_abbrev0
 5625 000a 04       		.byte	0x4
 5626 000b 01       		.uleb128 0x1
 5627 000c 07050000 		.4byte	.LASF203
 5628 0010 01       		.byte	0x1
 5629 0011 9A090000 		.4byte	.LASF204
 5630 0015 B6070000 		.4byte	.LASF205
 5631 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5632 001d 00000000 		.4byte	0
 5633 0021 00000000 		.4byte	.Ldebug_line0
 5634 0025 02       		.uleb128 0x2
 5635 0026 01       		.byte	0x1
 5636 0027 06       		.byte	0x6
 5637 0028 3C010000 		.4byte	.LASF0
 5638 002c 02       		.uleb128 0x2
 5639 002d 01       		.byte	0x1
 5640 002e 08       		.byte	0x8
 5641 002f 8F060000 		.4byte	.LASF1
 5642 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 123


 5643 0034 02       		.byte	0x2
 5644 0035 05       		.byte	0x5
 5645 0036 C9060000 		.4byte	.LASF2
 5646 003a 02       		.uleb128 0x2
 5647 003b 02       		.byte	0x2
 5648 003c 07       		.byte	0x7
 5649 003d 8C030000 		.4byte	.LASF3
 5650 0041 03       		.uleb128 0x3
 5651 0042 12040000 		.4byte	.LASF5
 5652 0046 02       		.byte	0x2
 5653 0047 3F       		.byte	0x3f
 5654 0048 4C000000 		.4byte	0x4c
 5655 004c 02       		.uleb128 0x2
 5656 004d 04       		.byte	0x4
 5657 004e 05       		.byte	0x5
 5658 004f D2010000 		.4byte	.LASF4
 5659 0053 03       		.uleb128 0x3
 5660 0054 E0020000 		.4byte	.LASF6
 5661 0058 02       		.byte	0x2
 5662 0059 41       		.byte	0x41
 5663 005a 5E000000 		.4byte	0x5e
 5664 005e 02       		.uleb128 0x2
 5665 005f 04       		.byte	0x4
 5666 0060 07       		.byte	0x7
 5667 0061 4C030000 		.4byte	.LASF7
 5668 0065 02       		.uleb128 0x2
 5669 0066 08       		.byte	0x8
 5670 0067 05       		.byte	0x5
 5671 0068 2E010000 		.4byte	.LASF8
 5672 006c 02       		.uleb128 0x2
 5673 006d 08       		.byte	0x8
 5674 006e 07       		.byte	0x7
 5675 006f 99000000 		.4byte	.LASF9
 5676 0073 04       		.uleb128 0x4
 5677 0074 04       		.byte	0x4
 5678 0075 05       		.byte	0x5
 5679 0076 696E7400 		.ascii	"int\000"
 5680 007a 02       		.uleb128 0x2
 5681 007b 04       		.byte	0x4
 5682 007c 07       		.byte	0x7
 5683 007d F5020000 		.4byte	.LASF10
 5684 0081 02       		.uleb128 0x2
 5685 0082 04       		.byte	0x4
 5686 0083 07       		.byte	0x7
 5687 0084 85040000 		.4byte	.LASF11
 5688 0088 05       		.uleb128 0x5
 5689 0089 04       		.byte	0x4
 5690 008a 8E000000 		.4byte	0x8e
 5691 008e 02       		.uleb128 0x2
 5692 008f 01       		.byte	0x1
 5693 0090 08       		.byte	0x8
 5694 0091 79070000 		.4byte	.LASF12
 5695 0095 03       		.uleb128 0x3
 5696 0096 87060000 		.4byte	.LASF13
 5697 009a 03       		.byte	0x3
 5698 009b 2C       		.byte	0x2c
 5699 009c 41000000 		.4byte	0x41
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 124


 5700 00a0 03       		.uleb128 0x3
 5701 00a1 B9080000 		.4byte	.LASF14
 5702 00a5 03       		.byte	0x3
 5703 00a6 2D       		.byte	0x2d
 5704 00a7 53000000 		.4byte	0x53
 5705 00ab 06       		.uleb128 0x6
 5706 00ac ED010000 		.4byte	.LASF15
 5707 00b0 04       		.byte	0x4
 5708 00b1 9201     		.2byte	0x192
 5709 00b3 2C000000 		.4byte	0x2c
 5710 00b7 06       		.uleb128 0x6
 5711 00b8 9D060000 		.4byte	.LASF16
 5712 00bc 04       		.byte	0x4
 5713 00bd 9301     		.2byte	0x193
 5714 00bf 3A000000 		.4byte	0x3a
 5715 00c3 06       		.uleb128 0x6
 5716 00c4 39020000 		.4byte	.LASF17
 5717 00c8 04       		.byte	0x4
 5718 00c9 9401     		.2byte	0x194
 5719 00cb 5E000000 		.4byte	0x5e
 5720 00cf 06       		.uleb128 0x6
 5721 00d0 A8030000 		.4byte	.LASF18
 5722 00d4 04       		.byte	0x4
 5723 00d5 9501     		.2byte	0x195
 5724 00d7 25000000 		.4byte	0x25
 5725 00db 06       		.uleb128 0x6
 5726 00dc 59090000 		.4byte	.LASF19
 5727 00e0 04       		.byte	0x4
 5728 00e1 9601     		.2byte	0x196
 5729 00e3 33000000 		.4byte	0x33
 5730 00e7 02       		.uleb128 0x2
 5731 00e8 04       		.byte	0x4
 5732 00e9 04       		.byte	0x4
 5733 00ea ED050000 		.4byte	.LASF20
 5734 00ee 02       		.uleb128 0x2
 5735 00ef 08       		.byte	0x8
 5736 00f0 04       		.byte	0x4
 5737 00f1 0C020000 		.4byte	.LASF21
 5738 00f5 07       		.uleb128 0x7
 5739 00f6 A0000000 		.4byte	0xa0
 5740 00fa 05010000 		.4byte	0x105
 5741 00fe 08       		.uleb128 0x8
 5742 00ff 81000000 		.4byte	0x81
 5743 0103 01       		.byte	0x1
 5744 0104 00       		.byte	0
 5745 0105 02       		.uleb128 0x2
 5746 0106 08       		.byte	0x8
 5747 0107 04       		.byte	0x4
 5748 0108 5B070000 		.4byte	.LASF22
 5749 010c 09       		.uleb128 0x9
 5750 010d CC010000 		.4byte	.LASF31
 5751 0111 01       		.byte	0x1
 5752 0112 05       		.byte	0x5
 5753 0113 66       		.byte	0x66
 5754 0114 49010000 		.4byte	0x149
 5755 0118 0A       		.uleb128 0xa
 5756 0119 AD030000 		.4byte	.LASF23
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 125


 5757 011d 00       		.sleb128 0
 5758 011e 0A       		.uleb128 0xa
 5759 011f D0040000 		.4byte	.LASF24
 5760 0123 01       		.sleb128 1
 5761 0124 0A       		.uleb128 0xa
 5762 0125 CE020000 		.4byte	.LASF25
 5763 0129 02       		.sleb128 2
 5764 012a 0A       		.uleb128 0xa
 5765 012b 46070000 		.4byte	.LASF26
 5766 012f 03       		.sleb128 3
 5767 0130 0A       		.uleb128 0xa
 5768 0131 CB030000 		.4byte	.LASF27
 5769 0135 04       		.sleb128 4
 5770 0136 0A       		.uleb128 0xa
 5771 0137 F3050000 		.4byte	.LASF28
 5772 013b 05       		.sleb128 5
 5773 013c 0A       		.uleb128 0xa
 5774 013d 6D060000 		.4byte	.LASF29
 5775 0141 06       		.sleb128 6
 5776 0142 0A       		.uleb128 0xa
 5777 0143 DB010000 		.4byte	.LASF30
 5778 0147 07       		.sleb128 7
 5779 0148 00       		.byte	0
 5780 0149 09       		.uleb128 0x9
 5781 014a 7E070000 		.4byte	.LASF32
 5782 014e 01       		.byte	0x1
 5783 014f 05       		.byte	0x5
 5784 0150 67       		.byte	0x67
 5785 0151 86010000 		.4byte	0x186
 5786 0155 0A       		.uleb128 0xa
 5787 0156 D3060000 		.4byte	.LASF33
 5788 015a 00       		.sleb128 0
 5789 015b 0A       		.uleb128 0xa
 5790 015c 06040000 		.4byte	.LASF34
 5791 0160 01       		.sleb128 1
 5792 0161 0A       		.uleb128 0xa
 5793 0162 08010000 		.4byte	.LASF35
 5794 0166 02       		.sleb128 2
 5795 0167 0A       		.uleb128 0xa
 5796 0168 1C040000 		.4byte	.LASF36
 5797 016c 03       		.sleb128 3
 5798 016d 0A       		.uleb128 0xa
 5799 016e 1F000000 		.4byte	.LASF37
 5800 0172 04       		.sleb128 4
 5801 0173 0A       		.uleb128 0xa
 5802 0174 A4060000 		.4byte	.LASF38
 5803 0178 05       		.sleb128 5
 5804 0179 0A       		.uleb128 0xa
 5805 017a B9020000 		.4byte	.LASF39
 5806 017e 06       		.sleb128 6
 5807 017f 0A       		.uleb128 0xa
 5808 0180 10010000 		.4byte	.LASF40
 5809 0184 07       		.sleb128 7
 5810 0185 00       		.byte	0
 5811 0186 0B       		.uleb128 0xb
 5812 0187 13030000 		.4byte	.LASF206
 5813 018b 20       		.byte	0x20
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 126


 5814 018c 05       		.byte	0x5
 5815 018d 6D       		.byte	0x6d
 5816 018e 5F020000 		.4byte	0x25f
 5817 0192 0C       		.uleb128 0xc
 5818 0193 77040000 		.4byte	.LASF41
 5819 0197 05       		.byte	0x5
 5820 0198 6E       		.byte	0x6e
 5821 0199 CF000000 		.4byte	0xcf
 5822 019d 00       		.byte	0
 5823 019e 0C       		.uleb128 0xc
 5824 019f 90070000 		.4byte	.LASF42
 5825 01a3 05       		.byte	0x5
 5826 01a4 6F       		.byte	0x6f
 5827 01a5 AB000000 		.4byte	0xab
 5828 01a9 01       		.byte	0x1
 5829 01aa 0C       		.uleb128 0xc
 5830 01ab 2C080000 		.4byte	.LASF43
 5831 01af 05       		.byte	0x5
 5832 01b0 70       		.byte	0x70
 5833 01b1 DB000000 		.4byte	0xdb
 5834 01b5 02       		.byte	0x2
 5835 01b6 0C       		.uleb128 0xc
 5836 01b7 4E090000 		.4byte	.LASF44
 5837 01bb 05       		.byte	0x5
 5838 01bc 71       		.byte	0x71
 5839 01bd DB000000 		.4byte	0xdb
 5840 01c1 04       		.byte	0x4
 5841 01c2 0C       		.uleb128 0xc
 5842 01c3 D2090000 		.4byte	.LASF45
 5843 01c7 05       		.byte	0x5
 5844 01c8 72       		.byte	0x72
 5845 01c9 DB000000 		.4byte	0xdb
 5846 01cd 06       		.byte	0x6
 5847 01ce 0C       		.uleb128 0xc
 5848 01cf D6000000 		.4byte	.LASF46
 5849 01d3 05       		.byte	0x5
 5850 01d4 73       		.byte	0x73
 5851 01d5 DB000000 		.4byte	0xdb
 5852 01d9 08       		.byte	0x8
 5853 01da 0C       		.uleb128 0xc
 5854 01db 15080000 		.4byte	.LASF47
 5855 01df 05       		.byte	0x5
 5856 01e0 74       		.byte	0x74
 5857 01e1 DB000000 		.4byte	0xdb
 5858 01e5 0A       		.byte	0xa
 5859 01e6 0C       		.uleb128 0xc
 5860 01e7 C9090000 		.4byte	.LASF48
 5861 01eb 05       		.byte	0x5
 5862 01ec 75       		.byte	0x75
 5863 01ed DB000000 		.4byte	0xdb
 5864 01f1 0C       		.byte	0xc
 5865 01f2 0C       		.uleb128 0xc
 5866 01f3 7B000000 		.4byte	.LASF49
 5867 01f7 05       		.byte	0x5
 5868 01f8 76       		.byte	0x76
 5869 01f9 DB000000 		.4byte	0xdb
 5870 01fd 0E       		.byte	0xe
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 127


 5871 01fe 0C       		.uleb128 0xc
 5872 01ff 6D080000 		.4byte	.LASF50
 5873 0203 05       		.byte	0x5
 5874 0204 77       		.byte	0x77
 5875 0205 DB000000 		.4byte	0xdb
 5876 0209 10       		.byte	0x10
 5877 020a 0C       		.uleb128 0xc
 5878 020b A9040000 		.4byte	.LASF51
 5879 020f 05       		.byte	0x5
 5880 0210 78       		.byte	0x78
 5881 0211 DB000000 		.4byte	0xdb
 5882 0215 12       		.byte	0x12
 5883 0216 0C       		.uleb128 0xc
 5884 0217 7C040000 		.4byte	.LASF52
 5885 021b 05       		.byte	0x5
 5886 021c 79       		.byte	0x79
 5887 021d DB000000 		.4byte	0xdb
 5888 0221 14       		.byte	0x14
 5889 0222 0C       		.uleb128 0xc
 5890 0223 B1040000 		.4byte	.LASF53
 5891 0227 05       		.byte	0x5
 5892 0228 7A       		.byte	0x7a
 5893 0229 DB000000 		.4byte	0xdb
 5894 022d 16       		.byte	0x16
 5895 022e 0C       		.uleb128 0xc
 5896 022f B7060000 		.4byte	.LASF54
 5897 0233 05       		.byte	0x5
 5898 0234 7B       		.byte	0x7b
 5899 0235 DB000000 		.4byte	0xdb
 5900 0239 18       		.byte	0x18
 5901 023a 0C       		.uleb128 0xc
 5902 023b E0040000 		.4byte	.LASF55
 5903 023f 05       		.byte	0x5
 5904 0240 7C       		.byte	0x7c
 5905 0241 DB000000 		.4byte	0xdb
 5906 0245 1A       		.byte	0x1a
 5907 0246 0C       		.uleb128 0xc
 5908 0247 0B000000 		.4byte	.LASF56
 5909 024b 05       		.byte	0x5
 5910 024c 7D       		.byte	0x7d
 5911 024d DB000000 		.4byte	0xdb
 5912 0251 1C       		.byte	0x1c
 5913 0252 0C       		.uleb128 0xc
 5914 0253 66020000 		.4byte	.LASF57
 5915 0257 05       		.byte	0x5
 5916 0258 7E       		.byte	0x7e
 5917 0259 DB000000 		.4byte	0xdb
 5918 025d 1E       		.byte	0x1e
 5919 025e 00       		.byte	0
 5920 025f 0D       		.uleb128 0xd
 5921 0260 E3080000 		.4byte	.LASF58
 5922 0264 01       		.byte	0x1
 5923 0265 85       		.byte	0x85
 5924 0266 00000000 		.4byte	.LFB63
 5925 026a 0C000000 		.4byte	.LFE63-.LFB63
 5926 026e 01       		.uleb128 0x1
 5927 026f 9C       		.byte	0x9c
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 128


 5928 0270 0E       		.uleb128 0xe
 5929 0271 22020000 		.4byte	.LASF59
 5930 0275 01       		.byte	0x1
 5931 0276 8B       		.byte	0x8b
 5932 0277 00000000 		.4byte	.LFB64
 5933 027b 2C000000 		.4byte	.LFE64-.LFB64
 5934 027f 01       		.uleb128 0x1
 5935 0280 9C       		.byte	0x9c
 5936 0281 0E       		.uleb128 0xe
 5937 0282 EB020000 		.4byte	.LASF60
 5938 0286 01       		.byte	0x1
 5939 0287 94       		.byte	0x94
 5940 0288 00000000 		.4byte	.LFB65
 5941 028c 98010000 		.4byte	.LFE65-.LFB65
 5942 0290 01       		.uleb128 0x1
 5943 0291 9C       		.byte	0x9c
 5944 0292 0F       		.uleb128 0xf
 5945 0293 50040000 		.4byte	.LASF66
 5946 0297 01       		.byte	0x1
 5947 0298 BC       		.byte	0xbc
 5948 0299 00000000 		.4byte	.LFB66
 5949 029d A4010000 		.4byte	.LFE66-.LFB66
 5950 02a1 01       		.uleb128 0x1
 5951 02a2 9C       		.byte	0x9c
 5952 02a3 DC020000 		.4byte	0x2dc
 5953 02a7 10       		.uleb128 0x10
 5954 02a8 0E000000 		.4byte	.LBB2
 5955 02ac B0000000 		.4byte	.LBE2-.LBB2
 5956 02b0 C3020000 		.4byte	0x2c3
 5957 02b4 11       		.uleb128 0x11
 5958 02b5 88000000 		.4byte	.LASF61
 5959 02b9 01       		.byte	0x1
 5960 02ba C0       		.byte	0xc0
 5961 02bb B7000000 		.4byte	0xb7
 5962 02bf 02       		.uleb128 0x2
 5963 02c0 91       		.byte	0x91
 5964 02c1 76       		.sleb128 -10
 5965 02c2 00       		.byte	0
 5966 02c3 12       		.uleb128 0x12
 5967 02c4 C8000000 		.4byte	.LBB3
 5968 02c8 78000000 		.4byte	.LBE3-.LBB3
 5969 02cc 11       		.uleb128 0x11
 5970 02cd 88000000 		.4byte	.LASF61
 5971 02d1 01       		.byte	0x1
 5972 02d2 D6       		.byte	0xd6
 5973 02d3 B7000000 		.4byte	0xb7
 5974 02d7 02       		.uleb128 0x2
 5975 02d8 91       		.byte	0x91
 5976 02d9 74       		.sleb128 -12
 5977 02da 00       		.byte	0
 5978 02db 00       		.byte	0
 5979 02dc 0D       		.uleb128 0xd
 5980 02dd F9030000 		.4byte	.LASF62
 5981 02e1 01       		.byte	0x1
 5982 02e2 EE       		.byte	0xee
 5983 02e3 00000000 		.4byte	.LFB67
 5984 02e7 20000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 129


 5985 02eb 01       		.uleb128 0x1
 5986 02ec 9C       		.byte	0x9c
 5987 02ed 0E       		.uleb128 0xe
 5988 02ee 29000000 		.4byte	.LASF63
 5989 02f2 01       		.byte	0x1
 5990 02f3 F5       		.byte	0xf5
 5991 02f4 00000000 		.4byte	.LFB68
 5992 02f8 28000000 		.4byte	.LFE68-.LFB68
 5993 02fc 01       		.uleb128 0x1
 5994 02fd 9C       		.byte	0x9c
 5995 02fe 0E       		.uleb128 0xe
 5996 02ff 09070000 		.4byte	.LASF64
 5997 0303 01       		.byte	0x1
 5998 0304 FE       		.byte	0xfe
 5999 0305 00000000 		.4byte	.LFB69
 6000 0309 0A000000 		.4byte	.LFE69-.LFB69
 6001 030d 01       		.uleb128 0x1
 6002 030e 9C       		.byte	0x9c
 6003 030f 13       		.uleb128 0x13
 6004 0310 55000000 		.4byte	.LASF65
 6005 0314 01       		.byte	0x1
 6006 0315 0301     		.2byte	0x103
 6007 0317 00000000 		.4byte	.LFB70
 6008 031b 28000000 		.4byte	.LFE70-.LFB70
 6009 031f 01       		.uleb128 0x1
 6010 0320 9C       		.byte	0x9c
 6011 0321 14       		.uleb128 0x14
 6012 0322 BF090000 		.4byte	.LASF67
 6013 0326 01       		.byte	0x1
 6014 0327 0E01     		.2byte	0x10e
 6015 0329 73000000 		.4byte	0x73
 6016 032d 00000000 		.4byte	.LFB71
 6017 0331 40070000 		.4byte	.LFE71-.LFB71
 6018 0335 01       		.uleb128 0x1
 6019 0336 9C       		.byte	0x9c
 6020 0337 C2030000 		.4byte	0x3c2
 6021 033b 15       		.uleb128 0x15
 6022 033c 9D070000 		.4byte	.LASF68
 6023 0340 01       		.byte	0x1
 6024 0341 4C01     		.2byte	0x14c
 6025 0343 B7000000 		.4byte	0xb7
 6026 0347 02       		.uleb128 0x2
 6027 0348 91       		.byte	0x91
 6028 0349 6E       		.sleb128 -18
 6029 034a 12       		.uleb128 0x12
 6030 034b 4C010000 		.4byte	.LBB4
 6031 034f 74050000 		.4byte	.LBE4-.LBB4
 6032 0353 15       		.uleb128 0x15
 6033 0354 91090000 		.4byte	.LASF69
 6034 0358 01       		.byte	0x1
 6035 0359 8401     		.2byte	0x184
 6036 035b 8E000000 		.4byte	0x8e
 6037 035f 02       		.uleb128 0x2
 6038 0360 91       		.byte	0x91
 6039 0361 6B       		.sleb128 -21
 6040 0362 10       		.uleb128 0x10
 6041 0363 9C010000 		.4byte	.LBB5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 130


 6042 0367 F6020000 		.4byte	.LBE5-.LBB5
 6043 036b 8E030000 		.4byte	0x38e
 6044 036f 16       		.uleb128 0x16
 6045 0370 6D657300 		.ascii	"mes\000"
 6046 0374 01       		.byte	0x1
 6047 0375 9101     		.2byte	0x191
 6048 0377 C2030000 		.4byte	0x3c2
 6049 037b 02       		.uleb128 0x2
 6050 037c 91       		.byte	0x91
 6051 037d 48       		.sleb128 -56
 6052 037e 15       		.uleb128 0x15
 6053 037f CB080000 		.4byte	.LASF70
 6054 0383 01       		.byte	0x1
 6055 0384 9501     		.2byte	0x195
 6056 0386 AB000000 		.4byte	0xab
 6057 038a 02       		.uleb128 0x2
 6058 038b 91       		.byte	0x91
 6059 038c 6D       		.sleb128 -19
 6060 038d 00       		.byte	0
 6061 038e 12       		.uleb128 0x12
 6062 038f D2040000 		.4byte	.LBB6
 6063 0393 E2010000 		.4byte	.LBE6-.LBB6
 6064 0397 16       		.uleb128 0x16
 6065 0398 6D657300 		.ascii	"mes\000"
 6066 039c 01       		.byte	0x1
 6067 039d E101     		.2byte	0x1e1
 6068 039f C2030000 		.4byte	0x3c2
 6069 03a3 02       		.uleb128 0x2
 6070 03a4 91       		.byte	0x91
 6071 03a5 48       		.sleb128 -56
 6072 03a6 12       		.uleb128 0x12
 6073 03a7 FC040000 		.4byte	.LBB7
 6074 03ab B8010000 		.4byte	.LBE7-.LBB7
 6075 03af 15       		.uleb128 0x15
 6076 03b0 CB080000 		.4byte	.LASF70
 6077 03b4 01       		.byte	0x1
 6078 03b5 F201     		.2byte	0x1f2
 6079 03b7 AB000000 		.4byte	0xab
 6080 03bb 02       		.uleb128 0x2
 6081 03bc 91       		.byte	0x91
 6082 03bd 6C       		.sleb128 -20
 6083 03be 00       		.byte	0
 6084 03bf 00       		.byte	0
 6085 03c0 00       		.byte	0
 6086 03c1 00       		.byte	0
 6087 03c2 07       		.uleb128 0x7
 6088 03c3 8E000000 		.4byte	0x8e
 6089 03c7 D2030000 		.4byte	0x3d2
 6090 03cb 08       		.uleb128 0x8
 6091 03cc 81000000 		.4byte	0x81
 6092 03d0 1F       		.byte	0x1f
 6093 03d1 00       		.byte	0
 6094 03d2 17       		.uleb128 0x17
 6095 03d3 E8060000 		.4byte	.LASF76
 6096 03d7 01       		.byte	0x1
 6097 03d8 5102     		.2byte	0x251
 6098 03da 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 131


 6099 03de 60010000 		.4byte	.LFE72-.LFB72
 6100 03e2 01       		.uleb128 0x1
 6101 03e3 9C       		.byte	0x9c
 6102 03e4 20040000 		.4byte	0x420
 6103 03e8 12       		.uleb128 0x12
 6104 03e9 10000000 		.4byte	.LBB8
 6105 03ed 34010000 		.4byte	.LBE8-.LBB8
 6106 03f1 15       		.uleb128 0x15
 6107 03f2 4E070000 		.4byte	.LASF71
 6108 03f6 01       		.byte	0x1
 6109 03f7 5702     		.2byte	0x257
 6110 03f9 B7000000 		.4byte	0xb7
 6111 03fd 02       		.uleb128 0x2
 6112 03fe 91       		.byte	0x91
 6113 03ff 76       		.sleb128 -10
 6114 0400 15       		.uleb128 0x15
 6115 0401 40020000 		.4byte	.LASF72
 6116 0405 01       		.byte	0x1
 6117 0406 5802     		.2byte	0x258
 6118 0408 20040000 		.4byte	0x420
 6119 040c 02       		.uleb128 0x2
 6120 040d 91       		.byte	0x91
 6121 040e 68       		.sleb128 -24
 6122 040f 15       		.uleb128 0x15
 6123 0410 DF050000 		.4byte	.LASF73
 6124 0414 01       		.byte	0x1
 6125 0415 5902     		.2byte	0x259
 6126 0417 20040000 		.4byte	0x420
 6127 041b 02       		.uleb128 0x2
 6128 041c 91       		.byte	0x91
 6129 041d 5C       		.sleb128 -36
 6130 041e 00       		.byte	0
 6131 041f 00       		.byte	0
 6132 0420 07       		.uleb128 0x7
 6133 0421 8E000000 		.4byte	0x8e
 6134 0425 30040000 		.4byte	0x430
 6135 0429 08       		.uleb128 0x8
 6136 042a 81000000 		.4byte	0x81
 6137 042e 0B       		.byte	0xb
 6138 042f 00       		.byte	0
 6139 0430 18       		.uleb128 0x18
 6140 0431 01020000 		.4byte	.LASF74
 6141 0435 01       		.byte	0x1
 6142 0436 9202     		.2byte	0x292
 6143 0438 00000000 		.4byte	.LFB73
 6144 043c 18000000 		.4byte	.LFE73-.LFB73
 6145 0440 01       		.uleb128 0x1
 6146 0441 9C       		.byte	0x9c
 6147 0442 56040000 		.4byte	0x456
 6148 0446 19       		.uleb128 0x19
 6149 0447 64697200 		.ascii	"dir\000"
 6150 044b 01       		.byte	0x1
 6151 044c 9202     		.2byte	0x292
 6152 044e AB000000 		.4byte	0xab
 6153 0452 02       		.uleb128 0x2
 6154 0453 91       		.byte	0x91
 6155 0454 77       		.sleb128 -9
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 132


 6156 0455 00       		.byte	0
 6157 0456 18       		.uleb128 0x18
 6158 0457 3F060000 		.4byte	.LASF75
 6159 045b 01       		.byte	0x1
 6160 045c 9702     		.2byte	0x297
 6161 045e 00000000 		.4byte	.LFB74
 6162 0462 18000000 		.4byte	.LFE74-.LFB74
 6163 0466 01       		.uleb128 0x1
 6164 0467 9C       		.byte	0x9c
 6165 0468 7C040000 		.4byte	0x47c
 6166 046c 19       		.uleb128 0x19
 6167 046d 64697200 		.ascii	"dir\000"
 6168 0471 01       		.byte	0x1
 6169 0472 9702     		.2byte	0x297
 6170 0474 AB000000 		.4byte	0xab
 6171 0478 02       		.uleb128 0x2
 6172 0479 91       		.byte	0x91
 6173 047a 77       		.sleb128 -9
 6174 047b 00       		.byte	0
 6175 047c 1A       		.uleb128 0x1a
 6176 047d 8F080000 		.4byte	.LASF77
 6177 0481 01       		.byte	0x1
 6178 0482 9C02     		.2byte	0x29c
 6179 0484 00000000 		.4byte	.LFB75
 6180 0488 54000000 		.4byte	.LFE75-.LFB75
 6181 048c 01       		.uleb128 0x1
 6182 048d 9C       		.byte	0x9c
 6183 048e A2040000 		.4byte	0x4a2
 6184 0492 16       		.uleb128 0x16
 6185 0493 6D657300 		.ascii	"mes\000"
 6186 0497 01       		.byte	0x1
 6187 0498 A102     		.2byte	0x2a1
 6188 049a C2030000 		.4byte	0x3c2
 6189 049e 02       		.uleb128 0x2
 6190 049f 91       		.byte	0x91
 6191 04a0 58       		.sleb128 -40
 6192 04a1 00       		.byte	0
 6193 04a2 18       		.uleb128 0x18
 6194 04a3 9F030000 		.4byte	.LASF78
 6195 04a7 01       		.byte	0x1
 6196 04a8 A602     		.2byte	0x2a6
 6197 04aa 00000000 		.4byte	.LFB76
 6198 04ae F4000000 		.4byte	.LFE76-.LFB76
 6199 04b2 01       		.uleb128 0x1
 6200 04b3 9C       		.byte	0x9c
 6201 04b4 F5040000 		.4byte	0x4f5
 6202 04b8 1B       		.uleb128 0x1b
 6203 04b9 C4090000 		.4byte	.LASF79
 6204 04bd 01       		.byte	0x1
 6205 04be A602     		.2byte	0x2a6
 6206 04c0 EE000000 		.4byte	0xee
 6207 04c4 02       		.uleb128 0x2
 6208 04c5 91       		.byte	0x91
 6209 04c6 68       		.sleb128 -24
 6210 04c7 1B       		.uleb128 0x1b
 6211 04c8 1D010000 		.4byte	.LASF80
 6212 04cc 01       		.byte	0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 133


 6213 04cd A602     		.2byte	0x2a6
 6214 04cf EE000000 		.4byte	0xee
 6215 04d3 02       		.uleb128 0x2
 6216 04d4 91       		.byte	0x91
 6217 04d5 60       		.sleb128 -32
 6218 04d6 15       		.uleb128 0x15
 6219 04d7 5F090000 		.4byte	.LASF81
 6220 04db 01       		.byte	0x1
 6221 04dc BB02     		.2byte	0x2bb
 6222 04de DB000000 		.4byte	0xdb
 6223 04e2 02       		.uleb128 0x2
 6224 04e3 91       		.byte	0x91
 6225 04e4 76       		.sleb128 -10
 6226 04e5 15       		.uleb128 0x15
 6227 04e6 44080000 		.4byte	.LASF82
 6228 04ea 01       		.byte	0x1
 6229 04eb BC02     		.2byte	0x2bc
 6230 04ed DB000000 		.4byte	0xdb
 6231 04f1 02       		.uleb128 0x2
 6232 04f2 91       		.byte	0x91
 6233 04f3 74       		.sleb128 -12
 6234 04f4 00       		.byte	0
 6235 04f5 1C       		.uleb128 0x1c
 6236 04f6 59080000 		.4byte	.LASF83
 6237 04fa 01       		.byte	0x1
 6238 04fb C202     		.2byte	0x2c2
 6239 04fd 00000000 		.4byte	.LFB77
 6240 0501 18000000 		.4byte	.LFE77-.LFB77
 6241 0505 01       		.uleb128 0x1
 6242 0506 9C       		.byte	0x9c
 6243 0507 1C       		.uleb128 0x1c
 6244 0508 2B070000 		.4byte	.LASF84
 6245 050c 01       		.byte	0x1
 6246 050d C802     		.2byte	0x2c8
 6247 050f 00000000 		.4byte	.LFB78
 6248 0513 18000000 		.4byte	.LFE78-.LFB78
 6249 0517 01       		.uleb128 0x1
 6250 0518 9C       		.byte	0x9c
 6251 0519 1C       		.uleb128 0x1c
 6252 051a AC060000 		.4byte	.LASF85
 6253 051e 01       		.byte	0x1
 6254 051f CE02     		.2byte	0x2ce
 6255 0521 00000000 		.4byte	.LFB79
 6256 0525 22000000 		.4byte	.LFE79-.LFB79
 6257 0529 01       		.uleb128 0x1
 6258 052a 9C       		.byte	0x9c
 6259 052b 1C       		.uleb128 0x1c
 6260 052c 0C060000 		.4byte	.LASF86
 6261 0530 01       		.byte	0x1
 6262 0531 D402     		.2byte	0x2d4
 6263 0533 00000000 		.4byte	.LFB80
 6264 0537 1C000000 		.4byte	.LFE80-.LFB80
 6265 053b 01       		.uleb128 0x1
 6266 053c 9C       		.byte	0x9c
 6267 053d 1C       		.uleb128 0x1c
 6268 053e CC000000 		.4byte	.LASF87
 6269 0542 01       		.byte	0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 134


 6270 0543 D902     		.2byte	0x2d9
 6271 0545 00000000 		.4byte	.LFB81
 6272 0549 34000000 		.4byte	.LFE81-.LFB81
 6273 054d 01       		.uleb128 0x1
 6274 054e 9C       		.byte	0x9c
 6275 054f 1C       		.uleb128 0x1c
 6276 0550 C3010000 		.4byte	.LASF88
 6277 0554 01       		.byte	0x1
 6278 0555 DE02     		.2byte	0x2de
 6279 0557 00000000 		.4byte	.LFB82
 6280 055b 38000000 		.4byte	.LFE82-.LFB82
 6281 055f 01       		.uleb128 0x1
 6282 0560 9C       		.byte	0x9c
 6283 0561 1C       		.uleb128 0x1c
 6284 0562 37080000 		.4byte	.LASF89
 6285 0566 01       		.byte	0x1
 6286 0567 E302     		.2byte	0x2e3
 6287 0569 00000000 		.4byte	.LFB83
 6288 056d 4C000000 		.4byte	.LFE83-.LFB83
 6289 0571 01       		.uleb128 0x1
 6290 0572 9C       		.byte	0x9c
 6291 0573 1C       		.uleb128 0x1c
 6292 0574 B3030000 		.4byte	.LASF90
 6293 0578 01       		.byte	0x1
 6294 0579 E802     		.2byte	0x2e8
 6295 057b 00000000 		.4byte	.LFB84
 6296 057f 38000000 		.4byte	.LFE84-.LFB84
 6297 0583 01       		.uleb128 0x1
 6298 0584 9C       		.byte	0x9c
 6299 0585 1C       		.uleb128 0x1c
 6300 0586 92010000 		.4byte	.LASF91
 6301 058a 01       		.byte	0x1
 6302 058b F102     		.2byte	0x2f1
 6303 058d 00000000 		.4byte	.LFB85
 6304 0591 38000000 		.4byte	.LFE85-.LFB85
 6305 0595 01       		.uleb128 0x1
 6306 0596 9C       		.byte	0x9c
 6307 0597 1C       		.uleb128 0x1c
 6308 0598 68030000 		.4byte	.LASF92
 6309 059c 01       		.byte	0x1
 6310 059d FA02     		.2byte	0x2fa
 6311 059f 00000000 		.4byte	.LFB86
 6312 05a3 38000000 		.4byte	.LFE86-.LFB86
 6313 05a7 01       		.uleb128 0x1
 6314 05a8 9C       		.byte	0x9c
 6315 05a9 1C       		.uleb128 0x1c
 6316 05aa AD080000 		.4byte	.LASF93
 6317 05ae 01       		.byte	0x1
 6318 05af 0303     		.2byte	0x303
 6319 05b1 00000000 		.4byte	.LFB87
 6320 05b5 14000000 		.4byte	.LFE87-.LFB87
 6321 05b9 01       		.uleb128 0x1
 6322 05ba 9C       		.byte	0x9c
 6323 05bb 1D       		.uleb128 0x1d
 6324 05bc 71000000 		.4byte	.LASF94
 6325 05c0 01       		.byte	0x1
 6326 05c1 0803     		.2byte	0x308
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 135


 6327 05c3 00000000 		.4byte	.LFB88
 6328 05c7 18000000 		.4byte	.LFE88-.LFB88
 6329 05cb 01       		.uleb128 0x1
 6330 05cc 9C       		.byte	0x9c
 6331 05cd 1D       		.uleb128 0x1d
 6332 05ce 5E030000 		.4byte	.LASF95
 6333 05d2 01       		.byte	0x1
 6334 05d3 0C03     		.2byte	0x30c
 6335 05d5 00000000 		.4byte	.LFB89
 6336 05d9 18000000 		.4byte	.LFE89-.LFB89
 6337 05dd 01       		.uleb128 0x1
 6338 05de 9C       		.byte	0x9c
 6339 05df 1D       		.uleb128 0x1d
 6340 05e0 00000000 		.4byte	.LASF96
 6341 05e4 01       		.byte	0x1
 6342 05e5 1103     		.2byte	0x311
 6343 05e7 00000000 		.4byte	.LFB90
 6344 05eb 18000000 		.4byte	.LFE90-.LFB90
 6345 05ef 01       		.uleb128 0x1
 6346 05f0 9C       		.byte	0x9c
 6347 05f1 1D       		.uleb128 0x1d
 6348 05f2 19090000 		.4byte	.LASF97
 6349 05f6 01       		.byte	0x1
 6350 05f7 1503     		.2byte	0x315
 6351 05f9 00000000 		.4byte	.LFB91
 6352 05fd 18000000 		.4byte	.LFE91-.LFB91
 6353 0601 01       		.uleb128 0x1
 6354 0602 9C       		.byte	0x9c
 6355 0603 18       		.uleb128 0x18
 6356 0604 F9060000 		.4byte	.LASF98
 6357 0608 01       		.byte	0x1
 6358 0609 1C03     		.2byte	0x31c
 6359 060b 00000000 		.4byte	.LFB92
 6360 060f B8000000 		.4byte	.LFE92-.LFB92
 6361 0613 01       		.uleb128 0x1
 6362 0614 9C       		.byte	0x9c
 6363 0615 29060000 		.4byte	0x629
 6364 0619 15       		.uleb128 0x15
 6365 061a 75080000 		.4byte	.LASF99
 6366 061e 01       		.byte	0x1
 6367 061f 1D03     		.2byte	0x31d
 6368 0621 8E000000 		.4byte	0x8e
 6369 0625 02       		.uleb128 0x2
 6370 0626 91       		.byte	0x91
 6371 0627 6F       		.sleb128 -17
 6372 0628 00       		.byte	0
 6373 0629 18       		.uleb128 0x18
 6374 062a 95050000 		.4byte	.LASF100
 6375 062e 01       		.byte	0x1
 6376 062f 3903     		.2byte	0x339
 6377 0631 00000000 		.4byte	.LFB93
 6378 0635 E8050000 		.4byte	.LFE93-.LFB93
 6379 0639 01       		.uleb128 0x1
 6380 063a 9C       		.byte	0x9c
 6381 063b 91060000 		.4byte	0x691
 6382 063f 15       		.uleb128 0x15
 6383 0640 75080000 		.4byte	.LASF99
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 136


 6384 0644 01       		.byte	0x1
 6385 0645 3B03     		.2byte	0x33b
 6386 0647 8E000000 		.4byte	0x8e
 6387 064b 02       		.uleb128 0x2
 6388 064c 91       		.byte	0x91
 6389 064d 77       		.sleb128 -9
 6390 064e 12       		.uleb128 0x12
 6391 064f 4C010000 		.4byte	.LBB9
 6392 0653 6E040000 		.4byte	.LBE9-.LBB9
 6393 0657 16       		.uleb128 0x16
 6394 0658 6D657300 		.ascii	"mes\000"
 6395 065c 01       		.byte	0x1
 6396 065d 6103     		.2byte	0x361
 6397 065f C2030000 		.4byte	0x3c2
 6398 0663 02       		.uleb128 0x2
 6399 0664 91       		.byte	0x91
 6400 0665 48       		.sleb128 -56
 6401 0666 16       		.uleb128 0x16
 6402 0667 6900     		.ascii	"i\000"
 6403 0669 01       		.byte	0x1
 6404 066a 8E03     		.2byte	0x38e
 6405 066c 73000000 		.4byte	0x73
 6406 0670 02       		.uleb128 0x2
 6407 0671 91       		.byte	0x91
 6408 0672 70       		.sleb128 -16
 6409 0673 15       		.uleb128 0x15
 6410 0674 91090000 		.4byte	.LASF69
 6411 0678 01       		.byte	0x1
 6412 0679 A003     		.2byte	0x3a0
 6413 067b 8E000000 		.4byte	0x8e
 6414 067f 02       		.uleb128 0x2
 6415 0680 91       		.byte	0x91
 6416 0681 6B       		.sleb128 -21
 6417 0682 16       		.uleb128 0x16
 6418 0683 7800     		.ascii	"x\000"
 6419 0685 01       		.byte	0x1
 6420 0686 C803     		.2byte	0x3c8
 6421 0688 73000000 		.4byte	0x73
 6422 068c 02       		.uleb128 0x2
 6423 068d 91       		.byte	0x91
 6424 068e 6C       		.sleb128 -20
 6425 068f 00       		.byte	0
 6426 0690 00       		.byte	0
 6427 0691 1C       		.uleb128 0x1c
 6428 0692 14000000 		.4byte	.LASF101
 6429 0696 01       		.byte	0x1
 6430 0697 F603     		.2byte	0x3f6
 6431 0699 00000000 		.4byte	.LFB94
 6432 069d 40000000 		.4byte	.LFE94-.LFB94
 6433 06a1 01       		.uleb128 0x1
 6434 06a2 9C       		.byte	0x9c
 6435 06a3 1C       		.uleb128 0x1c
 6436 06a4 C0030000 		.4byte	.LASF102
 6437 06a8 01       		.byte	0x1
 6438 06a9 0504     		.2byte	0x405
 6439 06ab 00000000 		.4byte	.LFB95
 6440 06af 40000000 		.4byte	.LFE95-.LFB95
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 137


 6441 06b3 01       		.uleb128 0x1
 6442 06b4 9C       		.byte	0x9c
 6443 06b5 1A       		.uleb128 0x1a
 6444 06b6 BE040000 		.4byte	.LASF103
 6445 06ba 01       		.byte	0x1
 6446 06bb 1504     		.2byte	0x415
 6447 06bd 00000000 		.4byte	.LFB96
 6448 06c1 30020000 		.4byte	.LFE96-.LFB96
 6449 06c5 01       		.uleb128 0x1
 6450 06c6 9C       		.byte	0x9c
 6451 06c7 26070000 		.4byte	0x726
 6452 06cb 15       		.uleb128 0x15
 6453 06cc AC070000 		.4byte	.LASF104
 6454 06d0 01       		.byte	0x1
 6455 06d1 2304     		.2byte	0x423
 6456 06d3 DB000000 		.4byte	0xdb
 6457 06d7 02       		.uleb128 0x2
 6458 06d8 91       		.byte	0x91
 6459 06d9 5E       		.sleb128 -34
 6460 06da 15       		.uleb128 0x15
 6461 06db 48010000 		.4byte	.LASF105
 6462 06df 01       		.byte	0x1
 6463 06e0 2404     		.2byte	0x424
 6464 06e2 DB000000 		.4byte	0xdb
 6465 06e6 02       		.uleb128 0x2
 6466 06e7 91       		.byte	0x91
 6467 06e8 5C       		.sleb128 -36
 6468 06e9 15       		.uleb128 0x15
 6469 06ea DC060000 		.4byte	.LASF106
 6470 06ee 01       		.byte	0x1
 6471 06ef 2504     		.2byte	0x425
 6472 06f1 EE000000 		.4byte	0xee
 6473 06f5 02       		.uleb128 0x2
 6474 06f6 91       		.byte	0x91
 6475 06f7 68       		.sleb128 -24
 6476 06f8 15       		.uleb128 0x15
 6477 06f9 32090000 		.4byte	.LASF107
 6478 06fd 01       		.byte	0x1
 6479 06fe 2604     		.2byte	0x426
 6480 0700 EE000000 		.4byte	0xee
 6481 0704 02       		.uleb128 0x2
 6482 0705 91       		.byte	0x91
 6483 0706 60       		.sleb128 -32
 6484 0707 15       		.uleb128 0x15
 6485 0708 5F040000 		.4byte	.LASF108
 6486 070c 01       		.byte	0x1
 6487 070d 2F04     		.2byte	0x42f
 6488 070f 73000000 		.4byte	0x73
 6489 0713 02       		.uleb128 0x2
 6490 0714 91       		.byte	0x91
 6491 0715 58       		.sleb128 -40
 6492 0716 15       		.uleb128 0x15
 6493 0717 BF060000 		.4byte	.LASF109
 6494 071b 01       		.byte	0x1
 6495 071c 3004     		.2byte	0x430
 6496 071e 73000000 		.4byte	0x73
 6497 0722 02       		.uleb128 0x2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 138


 6498 0723 91       		.byte	0x91
 6499 0724 54       		.sleb128 -44
 6500 0725 00       		.byte	0
 6501 0726 1D       		.uleb128 0x1d
 6502 0727 16070000 		.4byte	.LASF110
 6503 072b 01       		.byte	0x1
 6504 072c 3E04     		.2byte	0x43e
 6505 072e 00000000 		.4byte	.LFB97
 6506 0732 0C000000 		.4byte	.LFE97-.LFB97
 6507 0736 01       		.uleb128 0x1
 6508 0737 9C       		.byte	0x9c
 6509 0738 1A       		.uleb128 0x1a
 6510 0739 B8010000 		.4byte	.LASF111
 6511 073d 01       		.byte	0x1
 6512 073e 4404     		.2byte	0x444
 6513 0740 00000000 		.4byte	.LFB98
 6514 0744 4C010000 		.4byte	.LFE98-.LFB98
 6515 0748 01       		.uleb128 0x1
 6516 0749 9C       		.byte	0x9c
 6517 074a 7A070000 		.4byte	0x77a
 6518 074e 16       		.uleb128 0x16
 6519 074f 6E6C00   		.ascii	"nl\000"
 6520 0752 01       		.byte	0x1
 6521 0753 4804     		.2byte	0x448
 6522 0755 AB000000 		.4byte	0xab
 6523 0759 02       		.uleb128 0x2
 6524 075a 91       		.byte	0x91
 6525 075b 67       		.sleb128 -25
 6526 075c 16       		.uleb128 0x16
 6527 075d 6E7200   		.ascii	"nr\000"
 6528 0760 01       		.byte	0x1
 6529 0761 4904     		.2byte	0x449
 6530 0763 AB000000 		.4byte	0xab
 6531 0767 02       		.uleb128 0x2
 6532 0768 91       		.byte	0x91
 6533 0769 66       		.sleb128 -26
 6534 076a 16       		.uleb128 0x16
 6535 076b 6D696400 		.ascii	"mid\000"
 6536 076f 01       		.byte	0x1
 6537 0770 4A04     		.2byte	0x44a
 6538 0772 AB000000 		.4byte	0xab
 6539 0776 02       		.uleb128 0x2
 6540 0777 91       		.byte	0x91
 6541 0778 65       		.sleb128 -27
 6542 0779 00       		.byte	0
 6543 077a 1D       		.uleb128 0x1d
 6544 077b 6E010000 		.4byte	.LASF112
 6545 077f 01       		.byte	0x1
 6546 0780 6404     		.2byte	0x464
 6547 0782 00000000 		.4byte	.LFB99
 6548 0786 0C000000 		.4byte	.LFE99-.LFB99
 6549 078a 01       		.uleb128 0x1
 6550 078b 9C       		.byte	0x9c
 6551 078c 1A       		.uleb128 0x1a
 6552 078d E4090000 		.4byte	.LASF113
 6553 0791 01       		.byte	0x1
 6554 0792 6904     		.2byte	0x469
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 139


 6555 0794 00000000 		.4byte	.LFB100
 6556 0798 C0000000 		.4byte	.LFE100-.LFB100
 6557 079c 01       		.uleb128 0x1
 6558 079d 9C       		.byte	0x9c
 6559 079e DA070000 		.4byte	0x7da
 6560 07a2 12       		.uleb128 0x12
 6561 07a3 0E000000 		.4byte	.LBB10
 6562 07a7 8E000000 		.4byte	.LBE10-.LBB10
 6563 07ab 15       		.uleb128 0x15
 6564 07ac 72030000 		.4byte	.LASF114
 6565 07b0 01       		.byte	0x1
 6566 07b1 7204     		.2byte	0x472
 6567 07b3 E7000000 		.4byte	0xe7
 6568 07b7 02       		.uleb128 0x2
 6569 07b8 91       		.byte	0x91
 6570 07b9 74       		.sleb128 -12
 6571 07ba 15       		.uleb128 0x15
 6572 07bb F3010000 		.4byte	.LASF115
 6573 07bf 01       		.byte	0x1
 6574 07c0 7304     		.2byte	0x473
 6575 07c2 DB000000 		.4byte	0xdb
 6576 07c6 02       		.uleb128 0x2
 6577 07c7 91       		.byte	0x91
 6578 07c8 72       		.sleb128 -14
 6579 07c9 15       		.uleb128 0x15
 6580 07ca E8040000 		.4byte	.LASF116
 6581 07ce 01       		.byte	0x1
 6582 07cf 7804     		.2byte	0x478
 6583 07d1 DA070000 		.4byte	0x7da
 6584 07d5 02       		.uleb128 0x2
 6585 07d6 91       		.byte	0x91
 6586 07d7 60       		.sleb128 -32
 6587 07d8 00       		.byte	0
 6588 07d9 00       		.byte	0
 6589 07da 07       		.uleb128 0x7
 6590 07db 8E000000 		.4byte	0x8e
 6591 07df EA070000 		.4byte	0x7ea
 6592 07e3 08       		.uleb128 0x8
 6593 07e4 81000000 		.4byte	0x81
 6594 07e8 0F       		.byte	0xf
 6595 07e9 00       		.byte	0
 6596 07ea 1A       		.uleb128 0x1a
 6597 07eb 50080000 		.4byte	.LASF117
 6598 07ef 01       		.byte	0x1
 6599 07f0 7F04     		.2byte	0x47f
 6600 07f2 00000000 		.4byte	.LFB101
 6601 07f6 B8000000 		.4byte	.LFE101-.LFB101
 6602 07fa 01       		.uleb128 0x1
 6603 07fb 9C       		.byte	0x9c
 6604 07fc 1A080000 		.4byte	0x81a
 6605 0800 12       		.uleb128 0x12
 6606 0801 0E000000 		.4byte	.LBB11
 6607 0805 86000000 		.4byte	.LBE11-.LBB11
 6608 0809 15       		.uleb128 0x15
 6609 080a 1A060000 		.4byte	.LASF118
 6610 080e 01       		.byte	0x1
 6611 080f 8304     		.2byte	0x483
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 140


 6612 0811 DA070000 		.4byte	0x7da
 6613 0815 02       		.uleb128 0x2
 6614 0816 91       		.byte	0x91
 6615 0817 68       		.sleb128 -24
 6616 0818 00       		.byte	0
 6617 0819 00       		.byte	0
 6618 081a 18       		.uleb128 0x18
 6619 081b EE090000 		.4byte	.LASF119
 6620 081f 01       		.byte	0x1
 6621 0820 9404     		.2byte	0x494
 6622 0822 00000000 		.4byte	.LFB102
 6623 0826 4A000000 		.4byte	.LFE102-.LFB102
 6624 082a 01       		.uleb128 0x1
 6625 082b 9C       		.byte	0x9c
 6626 082c 40080000 		.4byte	0x840
 6627 0830 1B       		.uleb128 0x1b
 6628 0831 23010000 		.4byte	.LASF120
 6629 0835 01       		.byte	0x1
 6630 0836 9404     		.2byte	0x494
 6631 0838 40080000 		.4byte	0x840
 6632 083c 02       		.uleb128 0x2
 6633 083d 91       		.byte	0x91
 6634 083e 6C       		.sleb128 -20
 6635 083f 00       		.byte	0
 6636 0840 05       		.uleb128 0x5
 6637 0841 04       		.byte	0x4
 6638 0842 AB000000 		.4byte	0xab
 6639 0846 18       		.uleb128 0x18
 6640 0847 EC030000 		.4byte	.LASF121
 6641 084b 01       		.byte	0x1
 6642 084c 9F04     		.2byte	0x49f
 6643 084e 00000000 		.4byte	.LFB103
 6644 0852 68000000 		.4byte	.LFE103-.LFB103
 6645 0856 01       		.uleb128 0x1
 6646 0857 9C       		.byte	0x9c
 6647 0858 83080000 		.4byte	0x883
 6648 085c 19       		.uleb128 0x19
 6649 085d 7300     		.ascii	"s\000"
 6650 085f 01       		.byte	0x1
 6651 0860 9F04     		.2byte	0x49f
 6652 0862 88000000 		.4byte	0x88
 6653 0866 02       		.uleb128 0x2
 6654 0867 91       		.byte	0x91
 6655 0868 6C       		.sleb128 -20
 6656 0869 12       		.uleb128 0x12
 6657 086a 10000000 		.4byte	.LBB12
 6658 086e 48000000 		.4byte	.LBE12-.LBB12
 6659 0872 16       		.uleb128 0x16
 6660 0873 636E7400 		.ascii	"cnt\000"
 6661 0877 01       		.byte	0x1
 6662 0878 A604     		.2byte	0x4a6
 6663 087a C3000000 		.4byte	0xc3
 6664 087e 02       		.uleb128 0x2
 6665 087f 91       		.byte	0x91
 6666 0880 74       		.sleb128 -12
 6667 0881 00       		.byte	0
 6668 0882 00       		.byte	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 141


 6669 0883 18       		.uleb128 0x18
 6670 0884 0E090000 		.4byte	.LASF122
 6671 0888 01       		.byte	0x1
 6672 0889 B504     		.2byte	0x4b5
 6673 088b 00000000 		.4byte	.LFB104
 6674 088f 50000000 		.4byte	.LFE104-.LFB104
 6675 0893 01       		.uleb128 0x1
 6676 0894 9C       		.byte	0x9c
 6677 0895 C0080000 		.4byte	0x8c0
 6678 0899 19       		.uleb128 0x19
 6679 089a 6300     		.ascii	"c\000"
 6680 089c 01       		.byte	0x1
 6681 089d B504     		.2byte	0x4b5
 6682 089f 8E000000 		.4byte	0x8e
 6683 08a3 02       		.uleb128 0x2
 6684 08a4 91       		.byte	0x91
 6685 08a5 6F       		.sleb128 -17
 6686 08a6 12       		.uleb128 0x12
 6687 08a7 12000000 		.4byte	.LBB13
 6688 08ab 2E000000 		.4byte	.LBE13-.LBB13
 6689 08af 16       		.uleb128 0x16
 6690 08b0 636E7400 		.ascii	"cnt\000"
 6691 08b4 01       		.byte	0x1
 6692 08b5 B904     		.2byte	0x4b9
 6693 08b7 C3000000 		.4byte	0xc3
 6694 08bb 02       		.uleb128 0x2
 6695 08bc 91       		.byte	0x91
 6696 08bd 74       		.sleb128 -12
 6697 08be 00       		.byte	0
 6698 08bf 00       		.byte	0
 6699 08c0 1D       		.uleb128 0x1d
 6700 08c1 34040000 		.4byte	.LASF123
 6701 08c5 01       		.byte	0x1
 6702 08c6 C604     		.2byte	0x4c6
 6703 08c8 00000000 		.4byte	.LFB105
 6704 08cc 0C000000 		.4byte	.LFE105-.LFB105
 6705 08d0 01       		.uleb128 0x1
 6706 08d1 9C       		.byte	0x9c
 6707 08d2 1E       		.uleb128 0x1e
 6708 08d3 DE000000 		.4byte	.LASF124
 6709 08d7 06       		.byte	0x6
 6710 08d8 9606     		.2byte	0x696
 6711 08da DE080000 		.4byte	0x8de
 6712 08de 1F       		.uleb128 0x1f
 6713 08df 95000000 		.4byte	0x95
 6714 08e3 20       		.uleb128 0x20
 6715 08e4 747300   		.ascii	"ts\000"
 6716 08e7 05       		.byte	0x5
 6717 08e8 10       		.byte	0x10
 6718 08e9 AB000000 		.4byte	0xab
 6719 08ed 05       		.uleb128 0x5
 6720 08ee 03       		.byte	0x3
 6721 08ef 00000000 		.4byte	ts
 6722 08f3 21       		.uleb128 0x21
 6723 08f4 2A020000 		.4byte	.LASF125
 6724 08f8 05       		.byte	0x5
 6725 08f9 11       		.byte	0x11
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 142


 6726 08fa B7000000 		.4byte	0xb7
 6727 08fe 05       		.uleb128 0x5
 6728 08ff 03       		.byte	0x3
 6729 0900 00000000 		.4byte	ts_enc
 6730 0904 21       		.uleb128 0x21
 6731 0905 FE000000 		.4byte	.LASF126
 6732 0909 05       		.byte	0x5
 6733 090a 12       		.byte	0x12
 6734 090b B7000000 		.4byte	0xb7
 6735 090f 05       		.uleb128 0x5
 6736 0910 03       		.byte	0x3
 6737 0911 00000000 		.4byte	ts_update
 6738 0915 21       		.uleb128 0x21
 6739 0916 30000000 		.4byte	.LASF127
 6740 091a 05       		.byte	0x5
 6741 091b 13       		.byte	0x13
 6742 091c B7000000 		.4byte	0xb7
 6743 0920 05       		.uleb128 0x5
 6744 0921 03       		.byte	0x3
 6745 0922 00000000 		.4byte	ts_speed
 6746 0926 21       		.uleb128 0x21
 6747 0927 29040000 		.4byte	.LASF128
 6748 092b 05       		.byte	0x5
 6749 092c 14       		.byte	0x14
 6750 092d B7000000 		.4byte	0xb7
 6751 0931 05       		.uleb128 0x5
 6752 0932 03       		.byte	0x3
 6753 0933 00000000 		.4byte	ts_display
 6754 0937 21       		.uleb128 0x21
 6755 0938 79010000 		.4byte	.LASF129
 6756 093c 05       		.byte	0x5
 6757 093d 16       		.byte	0x16
 6758 093e AB000000 		.4byte	0xab
 6759 0942 05       		.uleb128 0x5
 6760 0943 03       		.byte	0x3
 6761 0944 00000000 		.4byte	flag_ts_enc
 6762 0948 21       		.uleb128 0x21
 6763 0949 F8070000 		.4byte	.LASF130
 6764 094d 05       		.byte	0x5
 6765 094e 17       		.byte	0x17
 6766 094f AB000000 		.4byte	0xab
 6767 0953 05       		.uleb128 0x5
 6768 0954 03       		.byte	0x3
 6769 0955 00000000 		.4byte	flag_ts_update
 6770 0959 21       		.uleb128 0x21
 6771 095a 69040000 		.4byte	.LASF131
 6772 095e 05       		.byte	0x5
 6773 095f 18       		.byte	0x18
 6774 0960 AB000000 		.4byte	0xab
 6775 0964 05       		.uleb128 0x5
 6776 0965 03       		.byte	0x3
 6777 0966 00000000 		.4byte	flag_ts_speed
 6778 096a 21       		.uleb128 0x21
 6779 096b 36070000 		.4byte	.LASF132
 6780 096f 05       		.byte	0x5
 6781 0970 19       		.byte	0x19
 6782 0971 AB000000 		.4byte	0xab
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 143


 6783 0975 05       		.uleb128 0x5
 6784 0976 03       		.byte	0x3
 6785 0977 00000000 		.4byte	flag_ts_display
 6786 097b 21       		.uleb128 0x21
 6787 097c 31020000 		.4byte	.LASF133
 6788 0980 05       		.byte	0x5
 6789 0981 1C       		.byte	0x1c
 6790 0982 AB000000 		.4byte	0xab
 6791 0986 05       		.uleb128 0x5
 6792 0987 03       		.byte	0x3
 6793 0988 00000000 		.4byte	flag_rx
 6794 098c 21       		.uleb128 0x21
 6795 098d C0000000 		.4byte	.LASF134
 6796 0991 05       		.byte	0x5
 6797 0992 1D       		.byte	0x1d
 6798 0993 AB000000 		.4byte	0xab
 6799 0997 05       		.uleb128 0x5
 6800 0998 03       		.byte	0x3
 6801 0999 00000000 		.4byte	flag_packet
 6802 099d 21       		.uleb128 0x21
 6803 099e A9010000 		.4byte	.LASF135
 6804 09a2 05       		.byte	0x5
 6805 09a3 1E       		.byte	0x1e
 6806 09a4 AB000000 		.4byte	0xab
 6807 09a8 05       		.uleb128 0x5
 6808 09a9 03       		.byte	0x3
 6809 09aa 00000000 		.4byte	flag_KB_string
 6810 09ae 21       		.uleb128 0x21
 6811 09af 13020000 		.4byte	.LASF136
 6812 09b3 05       		.byte	0x5
 6813 09b4 20       		.byte	0x20
 6814 09b5 AB000000 		.4byte	0xab
 6815 09b9 05       		.uleb128 0x5
 6816 09ba 03       		.byte	0x3
 6817 09bb 00000000 		.4byte	dataready_flag
 6818 09bf 21       		.uleb128 0x21
 6819 09c0 B3050000 		.4byte	.LASF137
 6820 09c4 05       		.byte	0x5
 6821 09c5 22       		.byte	0x22
 6822 09c6 AB000000 		.4byte	0xab
 6823 09ca 05       		.uleb128 0x5
 6824 09cb 03       		.byte	0x3
 6825 09cc 00000000 		.4byte	flag_rf_transmission_active
 6826 09d0 21       		.uleb128 0x21
 6827 09d1 8E040000 		.4byte	.LASF138
 6828 09d5 05       		.byte	0x5
 6829 09d6 23       		.byte	0x23
 6830 09d7 AB000000 		.4byte	0xab
 6831 09db 05       		.uleb128 0x5
 6832 09dc 03       		.byte	0x3
 6833 09dd 00000000 		.4byte	flag_print_rf
 6834 09e1 21       		.uleb128 0x21
 6835 09e2 3B030000 		.4byte	.LASF139
 6836 09e6 05       		.byte	0x5
 6837 09e7 25       		.byte	0x25
 6838 09e8 AB000000 		.4byte	0xab
 6839 09ec 05       		.uleb128 0x5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 144


 6840 09ed 03       		.byte	0x3
 6841 09ee 00000000 		.4byte	flag_receive_ADC
 6842 09f2 21       		.uleb128 0x21
 6843 09f3 20070000 		.4byte	.LASF140
 6844 09f7 05       		.byte	0x5
 6845 09f8 26       		.byte	0x26
 6846 09f9 DB000000 		.4byte	0xdb
 6847 09fd 05       		.uleb128 0x5
 6848 09fe 03       		.byte	0x3
 6849 09ff 00000000 		.4byte	adc_result
 6850 0a03 21       		.uleb128 0x21
 6851 0a04 C2080000 		.4byte	.LASF141
 6852 0a08 05       		.byte	0x5
 6853 0a09 28       		.byte	0x28
 6854 0a0a AB000000 		.4byte	0xab
 6855 0a0e 05       		.uleb128 0x5
 6856 0a0f 03       		.byte	0x3
 6857 0a10 00000000 		.4byte	LostFlag
 6858 0a14 21       		.uleb128 0x21
 6859 0a15 62000000 		.4byte	.LASF142
 6860 0a19 05       		.byte	0x5
 6861 0a1a 2A       		.byte	0x2a
 6862 0a1b AB000000 		.4byte	0xab
 6863 0a1f 05       		.uleb128 0x5
 6864 0a20 03       		.byte	0x3
 6865 0a21 00000000 		.4byte	direction
 6866 0a25 21       		.uleb128 0x21
 6867 0a26 7B060000 		.4byte	.LASF143
 6868 0a2a 05       		.byte	0x5
 6869 0a2b 2D       		.byte	0x2d
 6870 0a2c AB000000 		.4byte	0xab
 6871 0a30 05       		.uleb128 0x5
 6872 0a31 03       		.byte	0x3
 6873 0a32 00000000 		.4byte	BIN_ENABLED
 6874 0a36 21       		.uleb128 0x21
 6875 0a37 03090000 		.4byte	.LASF144
 6876 0a3b 05       		.byte	0x5
 6877 0a3c 2F       		.byte	0x2f
 6878 0a3d AB000000 		.4byte	0xab
 6879 0a41 05       		.uleb128 0x5
 6880 0a42 03       		.byte	0x3
 6881 0a43 00000000 		.4byte	BT_ENABLED
 6882 0a47 21       		.uleb128 0x21
 6883 0a48 51020000 		.4byte	.LASF145
 6884 0a4c 05       		.byte	0x5
 6885 0a4d 34       		.byte	0x34
 6886 0a4e AB000000 		.4byte	0xab
 6887 0a52 05       		.uleb128 0x5
 6888 0a53 03       		.byte	0x3
 6889 0a54 00000000 		.4byte	flag_calc_wheelspeed
 6890 0a58 21       		.uleb128 0x21
 6891 0a59 7F020000 		.4byte	.LASF146
 6892 0a5d 05       		.byte	0x5
 6893 0a5e 35       		.byte	0x35
 6894 0a5f DB000000 		.4byte	0xdb
 6895 0a63 05       		.uleb128 0x5
 6896 0a64 03       		.byte	0x3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 145


 6897 0a65 00000000 		.4byte	quad_count1
 6898 0a69 21       		.uleb128 0x21
 6899 0a6a 8B020000 		.4byte	.LASF147
 6900 0a6e 05       		.byte	0x5
 6901 0a6f 36       		.byte	0x36
 6902 0a70 DB000000 		.4byte	0xdb
 6903 0a74 05       		.uleb128 0x5
 6904 0a75 03       		.byte	0x3
 6905 0a76 00000000 		.4byte	quad_count2
 6906 0a7a 21       		.uleb128 0x21
 6907 0a7b 4B060000 		.4byte	.LASF148
 6908 0a7f 05       		.byte	0x5
 6909 0a80 37       		.byte	0x37
 6910 0a81 DB000000 		.4byte	0xdb
 6911 0a85 05       		.uleb128 0x5
 6912 0a86 03       		.byte	0x3
 6913 0a87 00000000 		.4byte	last_quad_count1
 6914 0a8b 21       		.uleb128 0x21
 6915 0a8c 5C060000 		.4byte	.LASF149
 6916 0a90 05       		.byte	0x5
 6917 0a91 38       		.byte	0x38
 6918 0a92 DB000000 		.4byte	0xdb
 6919 0a96 05       		.uleb128 0x5
 6920 0a97 03       		.byte	0x3
 6921 0a98 00000000 		.4byte	last_quad_count2
 6922 0a9c 21       		.uleb128 0x21
 6923 0a9d A3090000 		.4byte	.LASF150
 6924 0aa1 05       		.byte	0x5
 6925 0aa2 39       		.byte	0x39
 6926 0aa3 DB000000 		.4byte	0xdb
 6927 0aa7 05       		.uleb128 0x5
 6928 0aa8 03       		.byte	0x3
 6929 0aa9 00000000 		.4byte	quad_diff1
 6930 0aad 21       		.uleb128 0x21
 6931 0aae AE090000 		.4byte	.LASF151
 6932 0ab2 05       		.byte	0x5
 6933 0ab3 3A       		.byte	0x3a
 6934 0ab4 DB000000 		.4byte	0xdb
 6935 0ab8 05       		.uleb128 0x5
 6936 0ab9 03       		.byte	0x3
 6937 0aba 00000000 		.4byte	quad_diff2
 6938 0abe 21       		.uleb128 0x21
 6939 0abf A0010000 		.4byte	.LASF152
 6940 0ac3 05       		.byte	0x5
 6941 0ac4 3B       		.byte	0x3b
 6942 0ac5 AB000000 		.4byte	0xab
 6943 0ac9 05       		.uleb128 0x5
 6944 0aca 03       		.byte	0x3
 6945 0acb 00000000 		.4byte	deadzone
 6946 0acf 21       		.uleb128 0x21
 6947 0ad0 6A090000 		.4byte	.LASF153
 6948 0ad4 05       		.byte	0x5
 6949 0ad5 3E       		.byte	0x3e
 6950 0ad6 DB000000 		.4byte	0xdb
 6951 0ada 05       		.uleb128 0x5
 6952 0adb 03       		.byte	0x3
 6953 0adc 00000000 		.4byte	start_turn_count
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 146


 6954 0ae0 21       		.uleb128 0x21
 6955 0ae1 CF050000 		.4byte	.LASF154
 6956 0ae5 05       		.byte	0x5
 6957 0ae6 41       		.byte	0x41
 6958 0ae7 DB000000 		.4byte	0xdb
 6959 0aeb 05       		.uleb128 0x5
 6960 0aec 03       		.byte	0x3
 6961 0aed 00000000 		.4byte	left_duty_cycle
 6962 0af1 21       		.uleb128 0x21
 6963 0af2 02030000 		.4byte	.LASF155
 6964 0af6 05       		.byte	0x5
 6965 0af7 42       		.byte	0x42
 6966 0af8 DB000000 		.4byte	0xdb
 6967 0afc 05       		.uleb128 0x5
 6968 0afd 03       		.byte	0x3
 6969 0afe 00000000 		.4byte	right_duty_cycle
 6970 0b02 21       		.uleb128 0x21
 6971 0b03 1D080000 		.4byte	.LASF156
 6972 0b07 05       		.byte	0x5
 6973 0b08 45       		.byte	0x45
 6974 0b09 DB000000 		.4byte	0xdb
 6975 0b0d 05       		.uleb128 0x5
 6976 0b0e 03       		.byte	0x3
 6977 0b0f 00000000 		.4byte	leftSpeedLimit
 6978 0b13 21       		.uleb128 0x21
 6979 0b14 97020000 		.4byte	.LASF157
 6980 0b18 05       		.byte	0x5
 6981 0b19 46       		.byte	0x46
 6982 0b1a DB000000 		.4byte	0xdb
 6983 0b1e 05       		.uleb128 0x5
 6984 0b1f 03       		.byte	0x3
 6985 0b20 00000000 		.4byte	rightSpeedLimit
 6986 0b24 21       		.uleb128 0x21
 6987 0b25 EB000000 		.4byte	.LASF158
 6988 0b29 05       		.byte	0x5
 6989 0b2a 49       		.byte	0x49
 6990 0b2b DB000000 		.4byte	0xdb
 6991 0b2f 05       		.uleb128 0x5
 6992 0b30 03       		.byte	0x3
 6993 0b31 00000000 		.4byte	target_distance_cm
 6994 0b35 21       		.uleb128 0x21
 6995 0b36 D8080000 		.4byte	.LASF159
 6996 0b3a 05       		.byte	0x5
 6997 0b3b 4B       		.byte	0x4b
 6998 0b3c DB000000 		.4byte	0xdb
 6999 0b40 05       		.uleb128 0x5
 7000 0b41 03       		.byte	0x3
 7001 0b42 00000000 		.4byte	accum_dist
 7002 0b46 21       		.uleb128 0x21
 7003 0b47 9E050000 		.4byte	.LASF160
 7004 0b4b 05       		.byte	0x5
 7005 0b4c 4C       		.byte	0x4c
 7006 0b4d DB000000 		.4byte	0xdb
 7007 0b51 05       		.uleb128 0x5
 7008 0b52 03       		.byte	0x3
 7009 0b53 00000000 		.4byte	target_distance_quad
 7010 0b57 21       		.uleb128 0x21
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 147


 7011 0b58 3F090000 		.4byte	.LASF161
 7012 0b5c 05       		.byte	0x5
 7013 0b5d 4D       		.byte	0x4d
 7014 0b5e AB000000 		.4byte	0xab
 7015 0b62 05       		.uleb128 0x5
 7016 0b63 03       		.byte	0x3
 7017 0b64 00000000 		.4byte	reached_target
 7018 0b68 21       		.uleb128 0x21
 7019 0b69 81090000 		.4byte	.LASF162
 7020 0b6d 05       		.byte	0x5
 7021 0b6e 4E       		.byte	0x4e
 7022 0b6f AB000000 		.4byte	0xab
 7023 0b73 05       		.uleb128 0x5
 7024 0b74 03       		.byte	0x3
 7025 0b75 00000000 		.4byte	overshot_target
 7026 0b79 21       		.uleb128 0x21
 7027 0b7a E1010000 		.4byte	.LASF163
 7028 0b7e 05       		.byte	0x5
 7029 0b7f 4F       		.byte	0x4f
 7030 0b80 E7000000 		.4byte	0xe7
 7031 0b84 05       		.uleb128 0x5
 7032 0b85 03       		.byte	0x3
 7033 0b86 00000000 		.4byte	quad_per_cm
 7034 0b8a 21       		.uleb128 0x21
 7035 0b8b 7D080000 		.4byte	.LASF164
 7036 0b8f 05       		.byte	0x5
 7037 0b90 52       		.byte	0x52
 7038 0b91 AB000000 		.4byte	0xab
 7039 0b95 05       		.uleb128 0x5
 7040 0b96 03       		.byte	0x3
 7041 0b97 00000000 		.4byte	initial_pos_valid
 7042 0b9b 21       		.uleb128 0x21
 7043 0b9c FE050000 		.4byte	.LASF165
 7044 0ba0 05       		.byte	0x5
 7045 0ba1 53       		.byte	0x53
 7046 0ba2 DB000000 		.4byte	0xdb
 7047 0ba6 05       		.uleb128 0x5
 7048 0ba7 03       		.byte	0x3
 7049 0ba8 00000000 		.4byte	initial_x_pos
 7050 0bac 21       		.uleb128 0x21
 7051 0bad 47000000 		.4byte	.LASF166
 7052 0bb1 05       		.byte	0x5
 7053 0bb2 54       		.byte	0x54
 7054 0bb3 DB000000 		.4byte	0xdb
 7055 0bb7 05       		.uleb128 0x5
 7056 0bb8 03       		.byte	0x3
 7057 0bb9 00000000 		.4byte	initial_y_pos
 7058 0bbd 21       		.uleb128 0x21
 7059 0bbe D6040000 		.4byte	.LASF167
 7060 0bc2 05       		.byte	0x5
 7061 0bc3 57       		.byte	0x57
 7062 0bc4 AB000000 		.4byte	0xab
 7063 0bc8 05       		.uleb128 0x5
 7064 0bc9 03       		.byte	0x3
 7065 0bca 00000000 		.4byte	brakeFlag
 7066 0bce 21       		.uleb128 0x21
 7067 0bcf 36060000 		.4byte	.LASF168
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 148


 7068 0bd3 05       		.byte	0x5
 7069 0bd4 58       		.byte	0x58
 7070 0bd5 AB000000 		.4byte	0xab
 7071 0bd9 05       		.uleb128 0x5
 7072 0bda 03       		.byte	0x3
 7073 0bdb 00000000 		.4byte	portOpen
 7074 0bdf 07       		.uleb128 0x7
 7075 0be0 AB000000 		.4byte	0xab
 7076 0be4 EF0B0000 		.4byte	0xbef
 7077 0be8 08       		.uleb128 0x8
 7078 0be9 81000000 		.4byte	0x81
 7079 0bed 04       		.byte	0x4
 7080 0bee 00       		.byte	0
 7081 0bef 21       		.uleb128 0x21
 7082 0bf0 61010000 		.4byte	.LASF169
 7083 0bf4 05       		.byte	0x5
 7084 0bf5 5B       		.byte	0x5b
 7085 0bf6 DF0B0000 		.4byte	0xbdf
 7086 0bfa 05       		.uleb128 0x5
 7087 0bfb 03       		.byte	0x3
 7088 0bfc 00000000 		.4byte	frontSensors
 7089 0c00 21       		.uleb128 0x21
 7090 0c01 E5030000 		.4byte	.LASF170
 7091 0c05 05       		.byte	0x5
 7092 0c06 5C       		.byte	0x5c
 7093 0c07 AB000000 		.4byte	0xab
 7094 0c0b 05       		.uleb128 0x5
 7095 0c0c 03       		.byte	0x3
 7096 0c0d 00000000 		.4byte	leftOn
 7097 0c11 21       		.uleb128 0x21
 7098 0c12 FB080000 		.4byte	.LASF171
 7099 0c16 05       		.byte	0x5
 7100 0c17 5D       		.byte	0x5d
 7101 0c18 AB000000 		.4byte	0xab
 7102 0c1c 05       		.uleb128 0x5
 7103 0c1d 03       		.byte	0x3
 7104 0c1e 00000000 		.4byte	rightOn
 7105 0c22 21       		.uleb128 0x21
 7106 0c23 53010000 		.4byte	.LASF172
 7107 0c27 05       		.byte	0x5
 7108 0c28 5E       		.byte	0x5e
 7109 0c29 B7000000 		.4byte	0xb7
 7110 0c2d 05       		.uleb128 0x5
 7111 0c2e 03       		.byte	0x3
 7112 0c2f 00000000 		.4byte	min_turn_quad
 7113 0c33 21       		.uleb128 0x21
 7114 0c34 1D030000 		.4byte	.LASF173
 7115 0c38 05       		.byte	0x5
 7116 0c39 5F       		.byte	0x5f
 7117 0c3a B7000000 		.4byte	0xb7
 7118 0c3e 05       		.uleb128 0x5
 7119 0c3f 03       		.byte	0x3
 7120 0c40 00000000 		.4byte	max_turn_quad
 7121 0c44 21       		.uleb128 0x21
 7122 0c45 73020000 		.4byte	.LASF174
 7123 0c49 05       		.byte	0x5
 7124 0c4a 62       		.byte	0x62
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 149


 7125 0c4b DB000000 		.4byte	0xdb
 7126 0c4f 05       		.uleb128 0x5
 7127 0c50 03       		.byte	0x3
 7128 0c51 00000000 		.4byte	prevVoltage
 7129 0c55 21       		.uleb128 0x21
 7130 0c56 A0080000 		.4byte	.LASF175
 7131 0c5a 05       		.byte	0x5
 7132 0c5b 63       		.byte	0x63
 7133 0c5c DB000000 		.4byte	0xdb
 7134 0c60 05       		.uleb128 0x5
 7135 0c61 03       		.byte	0x3
 7136 0c62 00000000 		.4byte	prevVoltage2
 7137 0c66 07       		.uleb128 0x7
 7138 0c67 8E000000 		.4byte	0x8e
 7139 0c6b 760C0000 		.4byte	0xc76
 7140 0c6f 08       		.uleb128 0x8
 7141 0c70 81000000 		.4byte	0x81
 7142 0c74 3F       		.byte	0x3f
 7143 0c75 00       		.byte	0
 7144 0c76 21       		.uleb128 0x21
 7145 0c77 07080000 		.4byte	.LASF176
 7146 0c7b 05       		.byte	0x5
 7147 0c7c 69       		.byte	0x69
 7148 0c7d 660C0000 		.4byte	0xc66
 7149 0c81 05       		.uleb128 0x5
 7150 0c82 03       		.byte	0x3
 7151 0c83 00000000 		.4byte	displaystring
 7152 0c87 21       		.uleb128 0x21
 7153 0c88 4C020000 		.4byte	.LASF177
 7154 0c8c 05       		.byte	0x5
 7155 0c8d 6A       		.byte	0x6a
 7156 0c8e 660C0000 		.4byte	0xc66
 7157 0c92 05       		.uleb128 0x5
 7158 0c93 03       		.byte	0x3
 7159 0c94 00000000 		.4byte	line
 7160 0c98 21       		.uleb128 0x21
 7161 0c99 93000000 		.4byte	.LASF178
 7162 0c9d 05       		.byte	0x5
 7163 0c9e 6A       		.byte	0x6a
 7164 0c9f 660C0000 		.4byte	0xc66
 7165 0ca3 05       		.uleb128 0x5
 7166 0ca4 03       		.byte	0x3
 7167 0ca5 00000000 		.4byte	entry
 7168 0ca9 07       		.uleb128 0x7
 7169 0caa AB000000 		.4byte	0xab
 7170 0cae B90C0000 		.4byte	0xcb9
 7171 0cb2 08       		.uleb128 0x8
 7172 0cb3 81000000 		.4byte	0x81
 7173 0cb7 3F       		.byte	0x3f
 7174 0cb8 00       		.byte	0
 7175 0cb9 21       		.uleb128 0x21
 7176 0cba 63080000 		.4byte	.LASF179
 7177 0cbe 05       		.byte	0x5
 7178 0cbf 6B       		.byte	0x6b
 7179 0cc0 A90C0000 		.4byte	0xca9
 7180 0cc4 05       		.uleb128 0x5
 7181 0cc5 03       		.byte	0x3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 150


 7182 0cc6 00000000 		.4byte	usbBuffer
 7183 0cca 21       		.uleb128 0x21
 7184 0ccb 85010000 		.4byte	.LASF180
 7185 0ccf 05       		.byte	0x5
 7186 0cd0 80       		.byte	0x80
 7187 0cd1 86010000 		.4byte	0x186
 7188 0cd5 05       		.uleb128 0x5
 7189 0cd6 03       		.byte	0x3
 7190 0cd7 00000000 		.4byte	buffer_state
 7191 0cdb 21       		.uleb128 0x21
 7192 0cdc 9C040000 		.4byte	.LASF181
 7193 0ce0 05       		.byte	0x5
 7194 0ce1 81       		.byte	0x81
 7195 0ce2 86010000 		.4byte	0x186
 7196 0ce6 05       		.uleb128 0x5
 7197 0ce7 03       		.byte	0x3
 7198 0ce8 00000000 		.4byte	system_state
 7199 0cec 21       		.uleb128 0x21
 7200 0ced F3040000 		.4byte	.LASF182
 7201 0cf1 05       		.byte	0x5
 7202 0cf2 83       		.byte	0x83
 7203 0cf3 0C010000 		.4byte	0x10c
 7204 0cf7 05       		.uleb128 0x5
 7205 0cf8 03       		.byte	0x3
 7206 0cf9 00000000 		.4byte	prev_movement_state
 7207 0cfd 21       		.uleb128 0x21
 7208 0cfe EC080000 		.4byte	.LASF183
 7209 0d02 05       		.byte	0x5
 7210 0d03 84       		.byte	0x84
 7211 0d04 0C010000 		.4byte	0x10c
 7212 0d08 05       		.uleb128 0x5
 7213 0d09 03       		.byte	0x3
 7214 0d0a 00000000 		.4byte	movement_state
 7215 0d0e 21       		.uleb128 0x21
 7216 0d0f C3020000 		.4byte	.LASF184
 7217 0d13 05       		.byte	0x5
 7218 0d14 85       		.byte	0x85
 7219 0d15 49010000 		.4byte	0x149
 7220 0d19 05       		.uleb128 0x5
 7221 0d1a 03       		.byte	0x3
 7222 0d1b 00000000 		.4byte	track_mode
 7223 0d1f 21       		.uleb128 0x21
 7224 0d20 FF060000 		.4byte	.LASF185
 7225 0d24 05       		.byte	0x5
 7226 0d25 87       		.byte	0x87
 7227 0d26 AB000000 		.4byte	0xab
 7228 0d2a 05       		.uleb128 0x5
 7229 0d2b 03       		.byte	0x3
 7230 0d2c 00000000 		.4byte	byteCount
 7231 0d30 07       		.uleb128 0x7
 7232 0d31 8E000000 		.4byte	0x8e
 7233 0d35 400D0000 		.4byte	0xd40
 7234 0d39 08       		.uleb128 0x8
 7235 0d3a 81000000 		.4byte	0x81
 7236 0d3e 01       		.byte	0x1
 7237 0d3f 00       		.byte	0
 7238 0d40 21       		.uleb128 0x21
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 151


 7239 0d41 3D080000 		.4byte	.LASF186
 7240 0d45 05       		.byte	0x5
 7241 0d46 88       		.byte	0x88
 7242 0d47 300D0000 		.4byte	0xd30
 7243 0d4b 05       		.uleb128 0x5
 7244 0d4c 03       		.byte	0x3
 7245 0d4d 00000000 		.4byte	packet
 7246 0d51 21       		.uleb128 0x21
 7247 0d52 7B090000 		.4byte	.LASF187
 7248 0d56 05       		.byte	0x5
 7249 0d57 8C       		.byte	0x8c
 7250 0d58 EE000000 		.4byte	0xee
 7251 0d5c 05       		.uleb128 0x5
 7252 0d5d 03       		.byte	0x3
 7253 0d5e 00000000 		.4byte	speed
 7254 0d62 21       		.uleb128 0x21
 7255 0d63 D4030000 		.4byte	.LASF188
 7256 0d67 01       		.byte	0x1
 7257 0d68 25       		.byte	0x25
 7258 0d69 B7000000 		.4byte	0xb7
 7259 0d6d 05       		.uleb128 0x5
 7260 0d6e 03       		.byte	0x3
 7261 0d6f 00000000 		.4byte	instructionCount
 7262 0d73 21       		.uleb128 0x21
 7263 0d74 2B030000 		.4byte	.LASF189
 7264 0d78 01       		.byte	0x1
 7265 0d79 27       		.byte	0x27
 7266 0d7a A0000000 		.4byte	0xa0
 7267 0d7e 05       		.uleb128 0x5
 7268 0d7f 03       		.byte	0x3
 7269 0d80 00000000 		.4byte	sensorsDisabled
 7270 0d84 07       		.uleb128 0x7
 7271 0d85 A0000000 		.4byte	0xa0
 7272 0d89 9A0D0000 		.4byte	0xd9a
 7273 0d8d 08       		.uleb128 0x8
 7274 0d8e 81000000 		.4byte	0x81
 7275 0d92 0E       		.byte	0xe
 7276 0d93 08       		.uleb128 0x8
 7277 0d94 81000000 		.4byte	0x81
 7278 0d98 12       		.byte	0x12
 7279 0d99 00       		.byte	0
 7280 0d9a 20       		.uleb128 0x20
 7281 0d9b 6D617000 		.ascii	"map\000"
 7282 0d9f 01       		.byte	0x1
 7283 0da0 55       		.byte	0x55
 7284 0da1 840D0000 		.4byte	0xd84
 7285 0da5 05       		.uleb128 0x5
 7286 0da6 03       		.byte	0x3
 7287 0da7 00000000 		.4byte	map
 7288 0dab 07       		.uleb128 0x7
 7289 0dac A0000000 		.4byte	0xa0
 7290 0db0 C10D0000 		.4byte	0xdc1
 7291 0db4 08       		.uleb128 0x8
 7292 0db5 81000000 		.4byte	0x81
 7293 0db9 05       		.byte	0x5
 7294 0dba 08       		.uleb128 0x8
 7295 0dbb 81000000 		.4byte	0x81
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 152


 7296 0dbf 01       		.byte	0x1
 7297 0dc0 00       		.byte	0
 7298 0dc1 21       		.uleb128 0x21
 7299 0dc2 28090000 		.4byte	.LASF190
 7300 0dc6 01       		.byte	0x1
 7301 0dc7 68       		.byte	0x68
 7302 0dc8 AB0D0000 		.4byte	0xdab
 7303 0dcc 05       		.uleb128 0x5
 7304 0dcd 03       		.byte	0x3
 7305 0dce 00000000 		.4byte	food_list
 7306 0dd2 07       		.uleb128 0x7
 7307 0dd3 A0000000 		.4byte	0xa0
 7308 0dd7 E90D0000 		.4byte	0xde9
 7309 0ddb 22       		.uleb128 0x22
 7310 0ddc 81000000 		.4byte	0x81
 7311 0de0 1F03     		.2byte	0x31f
 7312 0de2 08       		.uleb128 0x8
 7313 0de3 81000000 		.4byte	0x81
 7314 0de7 02       		.byte	0x2
 7315 0de8 00       		.byte	0
 7316 0de9 21       		.uleb128 0x21
 7317 0dea 6C000000 		.4byte	.LASF191
 7318 0dee 01       		.byte	0x1
 7319 0def 2B       		.byte	0x2b
 7320 0df0 D20D0000 		.4byte	0xdd2
 7321 0df4 05       		.uleb128 0x5
 7322 0df5 03       		.byte	0x3
 7323 0df6 00000000 		.4byte	path
 7324 0dfa 21       		.uleb128 0x21
 7325 0dfb B9090000 		.4byte	.LASF192
 7326 0dff 01       		.byte	0x1
 7327 0e00 2C       		.byte	0x2c
 7328 0e01 F5000000 		.4byte	0xf5
 7329 0e05 05       		.uleb128 0x5
 7330 0e06 03       		.byte	0x3
 7331 0e07 00000000 		.4byte	start
 7332 0e0b 21       		.uleb128 0x21
 7333 0e0c D4020000 		.4byte	.LASF193
 7334 0e10 01       		.byte	0x1
 7335 0e11 2D       		.byte	0x2d
 7336 0e12 F5000000 		.4byte	0xf5
 7337 0e16 05       		.uleb128 0x5
 7338 0e17 03       		.byte	0x3
 7339 0e18 00000000 		.4byte	destination
 7340 0e1c 21       		.uleb128 0x21
 7341 0e1d B0000000 		.4byte	.LASF194
 7342 0e21 01       		.byte	0x1
 7343 0e22 29       		.byte	0x29
 7344 0e23 A0000000 		.4byte	0xa0
 7345 0e27 05       		.uleb128 0x5
 7346 0e28 03       		.byte	0x3
 7347 0e29 00000000 		.4byte	robot_direction
 7348 0e2d 21       		.uleb128 0x21
 7349 0e2e 67070000 		.4byte	.LASF195
 7350 0e32 07       		.byte	0x7
 7351 0e33 22       		.byte	0x22
 7352 0e34 A0000000 		.4byte	0xa0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 153


 7353 0e38 05       		.uleb128 0x5
 7354 0e39 03       		.byte	0x3
 7355 0e3a 00000000 		.4byte	tracked_direction
 7356 0e3e 21       		.uleb128 0x21
 7357 0e3f 80030000 		.4byte	.LASF196
 7358 0e43 01       		.byte	0x1
 7359 0e44 6A       		.byte	0x6a
 7360 0e45 A0000000 		.4byte	0xa0
 7361 0e49 05       		.uleb128 0x5
 7362 0e4a 03       		.byte	0x3
 7363 0e4b 00000000 		.4byte	food_length
 7364 0e4f 07       		.uleb128 0x7
 7365 0e50 8E000000 		.4byte	0x8e
 7366 0e54 600E0000 		.4byte	0xe60
 7367 0e58 22       		.uleb128 0x22
 7368 0e59 81000000 		.4byte	0x81
 7369 0e5d 1F03     		.2byte	0x31f
 7370 0e5f 00       		.byte	0
 7371 0e60 21       		.uleb128 0x21
 7372 0e61 83070000 		.4byte	.LASF197
 7373 0e65 01       		.byte	0x1
 7374 0e66 24       		.byte	0x24
 7375 0e67 4F0E0000 		.4byte	0xe4f
 7376 0e6b 05       		.uleb128 0x5
 7377 0e6c 03       		.byte	0x3
 7378 0e6d 00000000 		.4byte	instructions
 7379 0e71 21       		.uleb128 0x21
 7380 0e72 A7020000 		.4byte	.LASF198
 7381 0e76 01       		.byte	0x1
 7382 0e77 26       		.byte	0x26
 7383 0e78 B7000000 		.4byte	0xb7
 7384 0e7c 05       		.uleb128 0x5
 7385 0e7d 03       		.byte	0x3
 7386 0e7e 00000000 		.4byte	instructionLength
 7387 0e82 21       		.uleb128 0x21
 7388 0e83 96070000 		.4byte	.LASF199
 7389 0e87 01       		.byte	0x1
 7390 0e88 B9       		.byte	0xb9
 7391 0e89 AB000000 		.4byte	0xab
 7392 0e8d 05       		.uleb128 0x5
 7393 0e8e 03       		.byte	0x3
 7394 0e8f 00000000 		.4byte	nTurns
 7395 0e93 21       		.uleb128 0x21
 7396 0e94 26060000 		.4byte	.LASF200
 7397 0e98 01       		.byte	0x1
 7398 0e99 BA       		.byte	0xba
 7399 0e9a B7000000 		.4byte	0xb7
 7400 0e9e 05       		.uleb128 0x5
 7401 0e9f 03       		.byte	0x3
 7402 0ea0 00000000 		.4byte	prev_distTurned
 7403 0ea4 23       		.uleb128 0x23
 7404 0ea5 39000000 		.4byte	.LASF201
 7405 0ea9 01       		.byte	0x1
 7406 0eaa 4204     		.2byte	0x442
 7407 0eac B7000000 		.4byte	0xb7
 7408 0eb0 05       		.uleb128 0x5
 7409 0eb1 03       		.byte	0x3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 154


 7410 0eb2 00000000 		.4byte	leftTurnCount
 7411 0eb6 23       		.uleb128 0x23
 7412 0eb7 41040000 		.4byte	.LASF202
 7413 0ebb 01       		.byte	0x1
 7414 0ebc 4304     		.2byte	0x443
 7415 0ebe B7000000 		.4byte	0xb7
 7416 0ec2 05       		.uleb128 0x5
 7417 0ec3 03       		.byte	0x3
 7418 0ec4 00000000 		.4byte	rightTurnCount
 7419 0ec8 00       		.byte	0
 7420              		.section	.debug_abbrev,"",%progbits
 7421              	.Ldebug_abbrev0:
 7422 0000 01       		.uleb128 0x1
 7423 0001 11       		.uleb128 0x11
 7424 0002 01       		.byte	0x1
 7425 0003 25       		.uleb128 0x25
 7426 0004 0E       		.uleb128 0xe
 7427 0005 13       		.uleb128 0x13
 7428 0006 0B       		.uleb128 0xb
 7429 0007 03       		.uleb128 0x3
 7430 0008 0E       		.uleb128 0xe
 7431 0009 1B       		.uleb128 0x1b
 7432 000a 0E       		.uleb128 0xe
 7433 000b 55       		.uleb128 0x55
 7434 000c 17       		.uleb128 0x17
 7435 000d 11       		.uleb128 0x11
 7436 000e 01       		.uleb128 0x1
 7437 000f 10       		.uleb128 0x10
 7438 0010 17       		.uleb128 0x17
 7439 0011 00       		.byte	0
 7440 0012 00       		.byte	0
 7441 0013 02       		.uleb128 0x2
 7442 0014 24       		.uleb128 0x24
 7443 0015 00       		.byte	0
 7444 0016 0B       		.uleb128 0xb
 7445 0017 0B       		.uleb128 0xb
 7446 0018 3E       		.uleb128 0x3e
 7447 0019 0B       		.uleb128 0xb
 7448 001a 03       		.uleb128 0x3
 7449 001b 0E       		.uleb128 0xe
 7450 001c 00       		.byte	0
 7451 001d 00       		.byte	0
 7452 001e 03       		.uleb128 0x3
 7453 001f 16       		.uleb128 0x16
 7454 0020 00       		.byte	0
 7455 0021 03       		.uleb128 0x3
 7456 0022 0E       		.uleb128 0xe
 7457 0023 3A       		.uleb128 0x3a
 7458 0024 0B       		.uleb128 0xb
 7459 0025 3B       		.uleb128 0x3b
 7460 0026 0B       		.uleb128 0xb
 7461 0027 49       		.uleb128 0x49
 7462 0028 13       		.uleb128 0x13
 7463 0029 00       		.byte	0
 7464 002a 00       		.byte	0
 7465 002b 04       		.uleb128 0x4
 7466 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 155


 7467 002d 00       		.byte	0
 7468 002e 0B       		.uleb128 0xb
 7469 002f 0B       		.uleb128 0xb
 7470 0030 3E       		.uleb128 0x3e
 7471 0031 0B       		.uleb128 0xb
 7472 0032 03       		.uleb128 0x3
 7473 0033 08       		.uleb128 0x8
 7474 0034 00       		.byte	0
 7475 0035 00       		.byte	0
 7476 0036 05       		.uleb128 0x5
 7477 0037 0F       		.uleb128 0xf
 7478 0038 00       		.byte	0
 7479 0039 0B       		.uleb128 0xb
 7480 003a 0B       		.uleb128 0xb
 7481 003b 49       		.uleb128 0x49
 7482 003c 13       		.uleb128 0x13
 7483 003d 00       		.byte	0
 7484 003e 00       		.byte	0
 7485 003f 06       		.uleb128 0x6
 7486 0040 16       		.uleb128 0x16
 7487 0041 00       		.byte	0
 7488 0042 03       		.uleb128 0x3
 7489 0043 0E       		.uleb128 0xe
 7490 0044 3A       		.uleb128 0x3a
 7491 0045 0B       		.uleb128 0xb
 7492 0046 3B       		.uleb128 0x3b
 7493 0047 05       		.uleb128 0x5
 7494 0048 49       		.uleb128 0x49
 7495 0049 13       		.uleb128 0x13
 7496 004a 00       		.byte	0
 7497 004b 00       		.byte	0
 7498 004c 07       		.uleb128 0x7
 7499 004d 01       		.uleb128 0x1
 7500 004e 01       		.byte	0x1
 7501 004f 49       		.uleb128 0x49
 7502 0050 13       		.uleb128 0x13
 7503 0051 01       		.uleb128 0x1
 7504 0052 13       		.uleb128 0x13
 7505 0053 00       		.byte	0
 7506 0054 00       		.byte	0
 7507 0055 08       		.uleb128 0x8
 7508 0056 21       		.uleb128 0x21
 7509 0057 00       		.byte	0
 7510 0058 49       		.uleb128 0x49
 7511 0059 13       		.uleb128 0x13
 7512 005a 2F       		.uleb128 0x2f
 7513 005b 0B       		.uleb128 0xb
 7514 005c 00       		.byte	0
 7515 005d 00       		.byte	0
 7516 005e 09       		.uleb128 0x9
 7517 005f 04       		.uleb128 0x4
 7518 0060 01       		.byte	0x1
 7519 0061 03       		.uleb128 0x3
 7520 0062 0E       		.uleb128 0xe
 7521 0063 0B       		.uleb128 0xb
 7522 0064 0B       		.uleb128 0xb
 7523 0065 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 156


 7524 0066 0B       		.uleb128 0xb
 7525 0067 3B       		.uleb128 0x3b
 7526 0068 0B       		.uleb128 0xb
 7527 0069 01       		.uleb128 0x1
 7528 006a 13       		.uleb128 0x13
 7529 006b 00       		.byte	0
 7530 006c 00       		.byte	0
 7531 006d 0A       		.uleb128 0xa
 7532 006e 28       		.uleb128 0x28
 7533 006f 00       		.byte	0
 7534 0070 03       		.uleb128 0x3
 7535 0071 0E       		.uleb128 0xe
 7536 0072 1C       		.uleb128 0x1c
 7537 0073 0D       		.uleb128 0xd
 7538 0074 00       		.byte	0
 7539 0075 00       		.byte	0
 7540 0076 0B       		.uleb128 0xb
 7541 0077 13       		.uleb128 0x13
 7542 0078 01       		.byte	0x1
 7543 0079 03       		.uleb128 0x3
 7544 007a 0E       		.uleb128 0xe
 7545 007b 0B       		.uleb128 0xb
 7546 007c 0B       		.uleb128 0xb
 7547 007d 3A       		.uleb128 0x3a
 7548 007e 0B       		.uleb128 0xb
 7549 007f 3B       		.uleb128 0x3b
 7550 0080 0B       		.uleb128 0xb
 7551 0081 01       		.uleb128 0x1
 7552 0082 13       		.uleb128 0x13
 7553 0083 00       		.byte	0
 7554 0084 00       		.byte	0
 7555 0085 0C       		.uleb128 0xc
 7556 0086 0D       		.uleb128 0xd
 7557 0087 00       		.byte	0
 7558 0088 03       		.uleb128 0x3
 7559 0089 0E       		.uleb128 0xe
 7560 008a 3A       		.uleb128 0x3a
 7561 008b 0B       		.uleb128 0xb
 7562 008c 3B       		.uleb128 0x3b
 7563 008d 0B       		.uleb128 0xb
 7564 008e 49       		.uleb128 0x49
 7565 008f 13       		.uleb128 0x13
 7566 0090 38       		.uleb128 0x38
 7567 0091 0B       		.uleb128 0xb
 7568 0092 00       		.byte	0
 7569 0093 00       		.byte	0
 7570 0094 0D       		.uleb128 0xd
 7571 0095 2E       		.uleb128 0x2e
 7572 0096 00       		.byte	0
 7573 0097 3F       		.uleb128 0x3f
 7574 0098 19       		.uleb128 0x19
 7575 0099 03       		.uleb128 0x3
 7576 009a 0E       		.uleb128 0xe
 7577 009b 3A       		.uleb128 0x3a
 7578 009c 0B       		.uleb128 0xb
 7579 009d 3B       		.uleb128 0x3b
 7580 009e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 157


 7581 009f 27       		.uleb128 0x27
 7582 00a0 19       		.uleb128 0x19
 7583 00a1 11       		.uleb128 0x11
 7584 00a2 01       		.uleb128 0x1
 7585 00a3 12       		.uleb128 0x12
 7586 00a4 06       		.uleb128 0x6
 7587 00a5 40       		.uleb128 0x40
 7588 00a6 18       		.uleb128 0x18
 7589 00a7 9742     		.uleb128 0x2117
 7590 00a9 19       		.uleb128 0x19
 7591 00aa 00       		.byte	0
 7592 00ab 00       		.byte	0
 7593 00ac 0E       		.uleb128 0xe
 7594 00ad 2E       		.uleb128 0x2e
 7595 00ae 00       		.byte	0
 7596 00af 3F       		.uleb128 0x3f
 7597 00b0 19       		.uleb128 0x19
 7598 00b1 03       		.uleb128 0x3
 7599 00b2 0E       		.uleb128 0xe
 7600 00b3 3A       		.uleb128 0x3a
 7601 00b4 0B       		.uleb128 0xb
 7602 00b5 3B       		.uleb128 0x3b
 7603 00b6 0B       		.uleb128 0xb
 7604 00b7 27       		.uleb128 0x27
 7605 00b8 19       		.uleb128 0x19
 7606 00b9 11       		.uleb128 0x11
 7607 00ba 01       		.uleb128 0x1
 7608 00bb 12       		.uleb128 0x12
 7609 00bc 06       		.uleb128 0x6
 7610 00bd 40       		.uleb128 0x40
 7611 00be 18       		.uleb128 0x18
 7612 00bf 9642     		.uleb128 0x2116
 7613 00c1 19       		.uleb128 0x19
 7614 00c2 00       		.byte	0
 7615 00c3 00       		.byte	0
 7616 00c4 0F       		.uleb128 0xf
 7617 00c5 2E       		.uleb128 0x2e
 7618 00c6 01       		.byte	0x1
 7619 00c7 3F       		.uleb128 0x3f
 7620 00c8 19       		.uleb128 0x19
 7621 00c9 03       		.uleb128 0x3
 7622 00ca 0E       		.uleb128 0xe
 7623 00cb 3A       		.uleb128 0x3a
 7624 00cc 0B       		.uleb128 0xb
 7625 00cd 3B       		.uleb128 0x3b
 7626 00ce 0B       		.uleb128 0xb
 7627 00cf 27       		.uleb128 0x27
 7628 00d0 19       		.uleb128 0x19
 7629 00d1 11       		.uleb128 0x11
 7630 00d2 01       		.uleb128 0x1
 7631 00d3 12       		.uleb128 0x12
 7632 00d4 06       		.uleb128 0x6
 7633 00d5 40       		.uleb128 0x40
 7634 00d6 18       		.uleb128 0x18
 7635 00d7 9642     		.uleb128 0x2116
 7636 00d9 19       		.uleb128 0x19
 7637 00da 01       		.uleb128 0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 158


 7638 00db 13       		.uleb128 0x13
 7639 00dc 00       		.byte	0
 7640 00dd 00       		.byte	0
 7641 00de 10       		.uleb128 0x10
 7642 00df 0B       		.uleb128 0xb
 7643 00e0 01       		.byte	0x1
 7644 00e1 11       		.uleb128 0x11
 7645 00e2 01       		.uleb128 0x1
 7646 00e3 12       		.uleb128 0x12
 7647 00e4 06       		.uleb128 0x6
 7648 00e5 01       		.uleb128 0x1
 7649 00e6 13       		.uleb128 0x13
 7650 00e7 00       		.byte	0
 7651 00e8 00       		.byte	0
 7652 00e9 11       		.uleb128 0x11
 7653 00ea 34       		.uleb128 0x34
 7654 00eb 00       		.byte	0
 7655 00ec 03       		.uleb128 0x3
 7656 00ed 0E       		.uleb128 0xe
 7657 00ee 3A       		.uleb128 0x3a
 7658 00ef 0B       		.uleb128 0xb
 7659 00f0 3B       		.uleb128 0x3b
 7660 00f1 0B       		.uleb128 0xb
 7661 00f2 49       		.uleb128 0x49
 7662 00f3 13       		.uleb128 0x13
 7663 00f4 02       		.uleb128 0x2
 7664 00f5 18       		.uleb128 0x18
 7665 00f6 00       		.byte	0
 7666 00f7 00       		.byte	0
 7667 00f8 12       		.uleb128 0x12
 7668 00f9 0B       		.uleb128 0xb
 7669 00fa 01       		.byte	0x1
 7670 00fb 11       		.uleb128 0x11
 7671 00fc 01       		.uleb128 0x1
 7672 00fd 12       		.uleb128 0x12
 7673 00fe 06       		.uleb128 0x6
 7674 00ff 00       		.byte	0
 7675 0100 00       		.byte	0
 7676 0101 13       		.uleb128 0x13
 7677 0102 2E       		.uleb128 0x2e
 7678 0103 00       		.byte	0
 7679 0104 3F       		.uleb128 0x3f
 7680 0105 19       		.uleb128 0x19
 7681 0106 03       		.uleb128 0x3
 7682 0107 0E       		.uleb128 0xe
 7683 0108 3A       		.uleb128 0x3a
 7684 0109 0B       		.uleb128 0xb
 7685 010a 3B       		.uleb128 0x3b
 7686 010b 05       		.uleb128 0x5
 7687 010c 27       		.uleb128 0x27
 7688 010d 19       		.uleb128 0x19
 7689 010e 11       		.uleb128 0x11
 7690 010f 01       		.uleb128 0x1
 7691 0110 12       		.uleb128 0x12
 7692 0111 06       		.uleb128 0x6
 7693 0112 40       		.uleb128 0x40
 7694 0113 18       		.uleb128 0x18
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 159


 7695 0114 9642     		.uleb128 0x2116
 7696 0116 19       		.uleb128 0x19
 7697 0117 00       		.byte	0
 7698 0118 00       		.byte	0
 7699 0119 14       		.uleb128 0x14
 7700 011a 2E       		.uleb128 0x2e
 7701 011b 01       		.byte	0x1
 7702 011c 3F       		.uleb128 0x3f
 7703 011d 19       		.uleb128 0x19
 7704 011e 03       		.uleb128 0x3
 7705 011f 0E       		.uleb128 0xe
 7706 0120 3A       		.uleb128 0x3a
 7707 0121 0B       		.uleb128 0xb
 7708 0122 3B       		.uleb128 0x3b
 7709 0123 05       		.uleb128 0x5
 7710 0124 49       		.uleb128 0x49
 7711 0125 13       		.uleb128 0x13
 7712 0126 11       		.uleb128 0x11
 7713 0127 01       		.uleb128 0x1
 7714 0128 12       		.uleb128 0x12
 7715 0129 06       		.uleb128 0x6
 7716 012a 40       		.uleb128 0x40
 7717 012b 18       		.uleb128 0x18
 7718 012c 9642     		.uleb128 0x2116
 7719 012e 19       		.uleb128 0x19
 7720 012f 01       		.uleb128 0x1
 7721 0130 13       		.uleb128 0x13
 7722 0131 00       		.byte	0
 7723 0132 00       		.byte	0
 7724 0133 15       		.uleb128 0x15
 7725 0134 34       		.uleb128 0x34
 7726 0135 00       		.byte	0
 7727 0136 03       		.uleb128 0x3
 7728 0137 0E       		.uleb128 0xe
 7729 0138 3A       		.uleb128 0x3a
 7730 0139 0B       		.uleb128 0xb
 7731 013a 3B       		.uleb128 0x3b
 7732 013b 05       		.uleb128 0x5
 7733 013c 49       		.uleb128 0x49
 7734 013d 13       		.uleb128 0x13
 7735 013e 02       		.uleb128 0x2
 7736 013f 18       		.uleb128 0x18
 7737 0140 00       		.byte	0
 7738 0141 00       		.byte	0
 7739 0142 16       		.uleb128 0x16
 7740 0143 34       		.uleb128 0x34
 7741 0144 00       		.byte	0
 7742 0145 03       		.uleb128 0x3
 7743 0146 08       		.uleb128 0x8
 7744 0147 3A       		.uleb128 0x3a
 7745 0148 0B       		.uleb128 0xb
 7746 0149 3B       		.uleb128 0x3b
 7747 014a 05       		.uleb128 0x5
 7748 014b 49       		.uleb128 0x49
 7749 014c 13       		.uleb128 0x13
 7750 014d 02       		.uleb128 0x2
 7751 014e 18       		.uleb128 0x18
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 160


 7752 014f 00       		.byte	0
 7753 0150 00       		.byte	0
 7754 0151 17       		.uleb128 0x17
 7755 0152 2E       		.uleb128 0x2e
 7756 0153 01       		.byte	0x1
 7757 0154 3F       		.uleb128 0x3f
 7758 0155 19       		.uleb128 0x19
 7759 0156 03       		.uleb128 0x3
 7760 0157 0E       		.uleb128 0xe
 7761 0158 3A       		.uleb128 0x3a
 7762 0159 0B       		.uleb128 0xb
 7763 015a 3B       		.uleb128 0x3b
 7764 015b 05       		.uleb128 0x5
 7765 015c 11       		.uleb128 0x11
 7766 015d 01       		.uleb128 0x1
 7767 015e 12       		.uleb128 0x12
 7768 015f 06       		.uleb128 0x6
 7769 0160 40       		.uleb128 0x40
 7770 0161 18       		.uleb128 0x18
 7771 0162 9742     		.uleb128 0x2117
 7772 0164 19       		.uleb128 0x19
 7773 0165 01       		.uleb128 0x1
 7774 0166 13       		.uleb128 0x13
 7775 0167 00       		.byte	0
 7776 0168 00       		.byte	0
 7777 0169 18       		.uleb128 0x18
 7778 016a 2E       		.uleb128 0x2e
 7779 016b 01       		.byte	0x1
 7780 016c 3F       		.uleb128 0x3f
 7781 016d 19       		.uleb128 0x19
 7782 016e 03       		.uleb128 0x3
 7783 016f 0E       		.uleb128 0xe
 7784 0170 3A       		.uleb128 0x3a
 7785 0171 0B       		.uleb128 0xb
 7786 0172 3B       		.uleb128 0x3b
 7787 0173 05       		.uleb128 0x5
 7788 0174 27       		.uleb128 0x27
 7789 0175 19       		.uleb128 0x19
 7790 0176 11       		.uleb128 0x11
 7791 0177 01       		.uleb128 0x1
 7792 0178 12       		.uleb128 0x12
 7793 0179 06       		.uleb128 0x6
 7794 017a 40       		.uleb128 0x40
 7795 017b 18       		.uleb128 0x18
 7796 017c 9642     		.uleb128 0x2116
 7797 017e 19       		.uleb128 0x19
 7798 017f 01       		.uleb128 0x1
 7799 0180 13       		.uleb128 0x13
 7800 0181 00       		.byte	0
 7801 0182 00       		.byte	0
 7802 0183 19       		.uleb128 0x19
 7803 0184 05       		.uleb128 0x5
 7804 0185 00       		.byte	0
 7805 0186 03       		.uleb128 0x3
 7806 0187 08       		.uleb128 0x8
 7807 0188 3A       		.uleb128 0x3a
 7808 0189 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 161


 7809 018a 3B       		.uleb128 0x3b
 7810 018b 05       		.uleb128 0x5
 7811 018c 49       		.uleb128 0x49
 7812 018d 13       		.uleb128 0x13
 7813 018e 02       		.uleb128 0x2
 7814 018f 18       		.uleb128 0x18
 7815 0190 00       		.byte	0
 7816 0191 00       		.byte	0
 7817 0192 1A       		.uleb128 0x1a
 7818 0193 2E       		.uleb128 0x2e
 7819 0194 01       		.byte	0x1
 7820 0195 3F       		.uleb128 0x3f
 7821 0196 19       		.uleb128 0x19
 7822 0197 03       		.uleb128 0x3
 7823 0198 0E       		.uleb128 0xe
 7824 0199 3A       		.uleb128 0x3a
 7825 019a 0B       		.uleb128 0xb
 7826 019b 3B       		.uleb128 0x3b
 7827 019c 05       		.uleb128 0x5
 7828 019d 11       		.uleb128 0x11
 7829 019e 01       		.uleb128 0x1
 7830 019f 12       		.uleb128 0x12
 7831 01a0 06       		.uleb128 0x6
 7832 01a1 40       		.uleb128 0x40
 7833 01a2 18       		.uleb128 0x18
 7834 01a3 9642     		.uleb128 0x2116
 7835 01a5 19       		.uleb128 0x19
 7836 01a6 01       		.uleb128 0x1
 7837 01a7 13       		.uleb128 0x13
 7838 01a8 00       		.byte	0
 7839 01a9 00       		.byte	0
 7840 01aa 1B       		.uleb128 0x1b
 7841 01ab 05       		.uleb128 0x5
 7842 01ac 00       		.byte	0
 7843 01ad 03       		.uleb128 0x3
 7844 01ae 0E       		.uleb128 0xe
 7845 01af 3A       		.uleb128 0x3a
 7846 01b0 0B       		.uleb128 0xb
 7847 01b1 3B       		.uleb128 0x3b
 7848 01b2 05       		.uleb128 0x5
 7849 01b3 49       		.uleb128 0x49
 7850 01b4 13       		.uleb128 0x13
 7851 01b5 02       		.uleb128 0x2
 7852 01b6 18       		.uleb128 0x18
 7853 01b7 00       		.byte	0
 7854 01b8 00       		.byte	0
 7855 01b9 1C       		.uleb128 0x1c
 7856 01ba 2E       		.uleb128 0x2e
 7857 01bb 00       		.byte	0
 7858 01bc 3F       		.uleb128 0x3f
 7859 01bd 19       		.uleb128 0x19
 7860 01be 03       		.uleb128 0x3
 7861 01bf 0E       		.uleb128 0xe
 7862 01c0 3A       		.uleb128 0x3a
 7863 01c1 0B       		.uleb128 0xb
 7864 01c2 3B       		.uleb128 0x3b
 7865 01c3 05       		.uleb128 0x5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 162


 7866 01c4 11       		.uleb128 0x11
 7867 01c5 01       		.uleb128 0x1
 7868 01c6 12       		.uleb128 0x12
 7869 01c7 06       		.uleb128 0x6
 7870 01c8 40       		.uleb128 0x40
 7871 01c9 18       		.uleb128 0x18
 7872 01ca 9642     		.uleb128 0x2116
 7873 01cc 19       		.uleb128 0x19
 7874 01cd 00       		.byte	0
 7875 01ce 00       		.byte	0
 7876 01cf 1D       		.uleb128 0x1d
 7877 01d0 2E       		.uleb128 0x2e
 7878 01d1 00       		.byte	0
 7879 01d2 3F       		.uleb128 0x3f
 7880 01d3 19       		.uleb128 0x19
 7881 01d4 03       		.uleb128 0x3
 7882 01d5 0E       		.uleb128 0xe
 7883 01d6 3A       		.uleb128 0x3a
 7884 01d7 0B       		.uleb128 0xb
 7885 01d8 3B       		.uleb128 0x3b
 7886 01d9 05       		.uleb128 0x5
 7887 01da 11       		.uleb128 0x11
 7888 01db 01       		.uleb128 0x1
 7889 01dc 12       		.uleb128 0x12
 7890 01dd 06       		.uleb128 0x6
 7891 01de 40       		.uleb128 0x40
 7892 01df 18       		.uleb128 0x18
 7893 01e0 9742     		.uleb128 0x2117
 7894 01e2 19       		.uleb128 0x19
 7895 01e3 00       		.byte	0
 7896 01e4 00       		.byte	0
 7897 01e5 1E       		.uleb128 0x1e
 7898 01e6 34       		.uleb128 0x34
 7899 01e7 00       		.byte	0
 7900 01e8 03       		.uleb128 0x3
 7901 01e9 0E       		.uleb128 0xe
 7902 01ea 3A       		.uleb128 0x3a
 7903 01eb 0B       		.uleb128 0xb
 7904 01ec 3B       		.uleb128 0x3b
 7905 01ed 05       		.uleb128 0x5
 7906 01ee 49       		.uleb128 0x49
 7907 01ef 13       		.uleb128 0x13
 7908 01f0 3F       		.uleb128 0x3f
 7909 01f1 19       		.uleb128 0x19
 7910 01f2 3C       		.uleb128 0x3c
 7911 01f3 19       		.uleb128 0x19
 7912 01f4 00       		.byte	0
 7913 01f5 00       		.byte	0
 7914 01f6 1F       		.uleb128 0x1f
 7915 01f7 35       		.uleb128 0x35
 7916 01f8 00       		.byte	0
 7917 01f9 49       		.uleb128 0x49
 7918 01fa 13       		.uleb128 0x13
 7919 01fb 00       		.byte	0
 7920 01fc 00       		.byte	0
 7921 01fd 20       		.uleb128 0x20
 7922 01fe 34       		.uleb128 0x34
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 163


 7923 01ff 00       		.byte	0
 7924 0200 03       		.uleb128 0x3
 7925 0201 08       		.uleb128 0x8
 7926 0202 3A       		.uleb128 0x3a
 7927 0203 0B       		.uleb128 0xb
 7928 0204 3B       		.uleb128 0x3b
 7929 0205 0B       		.uleb128 0xb
 7930 0206 49       		.uleb128 0x49
 7931 0207 13       		.uleb128 0x13
 7932 0208 3F       		.uleb128 0x3f
 7933 0209 19       		.uleb128 0x19
 7934 020a 02       		.uleb128 0x2
 7935 020b 18       		.uleb128 0x18
 7936 020c 00       		.byte	0
 7937 020d 00       		.byte	0
 7938 020e 21       		.uleb128 0x21
 7939 020f 34       		.uleb128 0x34
 7940 0210 00       		.byte	0
 7941 0211 03       		.uleb128 0x3
 7942 0212 0E       		.uleb128 0xe
 7943 0213 3A       		.uleb128 0x3a
 7944 0214 0B       		.uleb128 0xb
 7945 0215 3B       		.uleb128 0x3b
 7946 0216 0B       		.uleb128 0xb
 7947 0217 49       		.uleb128 0x49
 7948 0218 13       		.uleb128 0x13
 7949 0219 3F       		.uleb128 0x3f
 7950 021a 19       		.uleb128 0x19
 7951 021b 02       		.uleb128 0x2
 7952 021c 18       		.uleb128 0x18
 7953 021d 00       		.byte	0
 7954 021e 00       		.byte	0
 7955 021f 22       		.uleb128 0x22
 7956 0220 21       		.uleb128 0x21
 7957 0221 00       		.byte	0
 7958 0222 49       		.uleb128 0x49
 7959 0223 13       		.uleb128 0x13
 7960 0224 2F       		.uleb128 0x2f
 7961 0225 05       		.uleb128 0x5
 7962 0226 00       		.byte	0
 7963 0227 00       		.byte	0
 7964 0228 23       		.uleb128 0x23
 7965 0229 34       		.uleb128 0x34
 7966 022a 00       		.byte	0
 7967 022b 03       		.uleb128 0x3
 7968 022c 0E       		.uleb128 0xe
 7969 022d 3A       		.uleb128 0x3a
 7970 022e 0B       		.uleb128 0xb
 7971 022f 3B       		.uleb128 0x3b
 7972 0230 05       		.uleb128 0x5
 7973 0231 49       		.uleb128 0x49
 7974 0232 13       		.uleb128 0x13
 7975 0233 3F       		.uleb128 0x3f
 7976 0234 19       		.uleb128 0x19
 7977 0235 02       		.uleb128 0x2
 7978 0236 18       		.uleb128 0x18
 7979 0237 00       		.byte	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 164


 7980 0238 00       		.byte	0
 7981 0239 00       		.byte	0
 7982              		.section	.debug_aranges,"",%progbits
 7983 0000 6C010000 		.4byte	0x16c
 7984 0004 0200     		.2byte	0x2
 7985 0006 00000000 		.4byte	.Ldebug_info0
 7986 000a 04       		.byte	0x4
 7987 000b 00       		.byte	0
 7988 000c 0000     		.2byte	0
 7989 000e 0000     		.2byte	0
 7990 0010 00000000 		.4byte	.LFB63
 7991 0014 0C000000 		.4byte	.LFE63-.LFB63
 7992 0018 00000000 		.4byte	.LFB64
 7993 001c 2C000000 		.4byte	.LFE64-.LFB64
 7994 0020 00000000 		.4byte	.LFB65
 7995 0024 98010000 		.4byte	.LFE65-.LFB65
 7996 0028 00000000 		.4byte	.LFB66
 7997 002c A4010000 		.4byte	.LFE66-.LFB66
 7998 0030 00000000 		.4byte	.LFB67
 7999 0034 20000000 		.4byte	.LFE67-.LFB67
 8000 0038 00000000 		.4byte	.LFB68
 8001 003c 28000000 		.4byte	.LFE68-.LFB68
 8002 0040 00000000 		.4byte	.LFB69
 8003 0044 0A000000 		.4byte	.LFE69-.LFB69
 8004 0048 00000000 		.4byte	.LFB70
 8005 004c 28000000 		.4byte	.LFE70-.LFB70
 8006 0050 00000000 		.4byte	.LFB71
 8007 0054 40070000 		.4byte	.LFE71-.LFB71
 8008 0058 00000000 		.4byte	.LFB72
 8009 005c 60010000 		.4byte	.LFE72-.LFB72
 8010 0060 00000000 		.4byte	.LFB73
 8011 0064 18000000 		.4byte	.LFE73-.LFB73
 8012 0068 00000000 		.4byte	.LFB74
 8013 006c 18000000 		.4byte	.LFE74-.LFB74
 8014 0070 00000000 		.4byte	.LFB75
 8015 0074 54000000 		.4byte	.LFE75-.LFB75
 8016 0078 00000000 		.4byte	.LFB76
 8017 007c F4000000 		.4byte	.LFE76-.LFB76
 8018 0080 00000000 		.4byte	.LFB77
 8019 0084 18000000 		.4byte	.LFE77-.LFB77
 8020 0088 00000000 		.4byte	.LFB78
 8021 008c 18000000 		.4byte	.LFE78-.LFB78
 8022 0090 00000000 		.4byte	.LFB79
 8023 0094 22000000 		.4byte	.LFE79-.LFB79
 8024 0098 00000000 		.4byte	.LFB80
 8025 009c 1C000000 		.4byte	.LFE80-.LFB80
 8026 00a0 00000000 		.4byte	.LFB81
 8027 00a4 34000000 		.4byte	.LFE81-.LFB81
 8028 00a8 00000000 		.4byte	.LFB82
 8029 00ac 38000000 		.4byte	.LFE82-.LFB82
 8030 00b0 00000000 		.4byte	.LFB83
 8031 00b4 4C000000 		.4byte	.LFE83-.LFB83
 8032 00b8 00000000 		.4byte	.LFB84
 8033 00bc 38000000 		.4byte	.LFE84-.LFB84
 8034 00c0 00000000 		.4byte	.LFB85
 8035 00c4 38000000 		.4byte	.LFE85-.LFB85
 8036 00c8 00000000 		.4byte	.LFB86
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 165


 8037 00cc 38000000 		.4byte	.LFE86-.LFB86
 8038 00d0 00000000 		.4byte	.LFB87
 8039 00d4 14000000 		.4byte	.LFE87-.LFB87
 8040 00d8 00000000 		.4byte	.LFB88
 8041 00dc 18000000 		.4byte	.LFE88-.LFB88
 8042 00e0 00000000 		.4byte	.LFB89
 8043 00e4 18000000 		.4byte	.LFE89-.LFB89
 8044 00e8 00000000 		.4byte	.LFB90
 8045 00ec 18000000 		.4byte	.LFE90-.LFB90
 8046 00f0 00000000 		.4byte	.LFB91
 8047 00f4 18000000 		.4byte	.LFE91-.LFB91
 8048 00f8 00000000 		.4byte	.LFB92
 8049 00fc B8000000 		.4byte	.LFE92-.LFB92
 8050 0100 00000000 		.4byte	.LFB93
 8051 0104 E8050000 		.4byte	.LFE93-.LFB93
 8052 0108 00000000 		.4byte	.LFB94
 8053 010c 40000000 		.4byte	.LFE94-.LFB94
 8054 0110 00000000 		.4byte	.LFB95
 8055 0114 40000000 		.4byte	.LFE95-.LFB95
 8056 0118 00000000 		.4byte	.LFB96
 8057 011c 30020000 		.4byte	.LFE96-.LFB96
 8058 0120 00000000 		.4byte	.LFB97
 8059 0124 0C000000 		.4byte	.LFE97-.LFB97
 8060 0128 00000000 		.4byte	.LFB98
 8061 012c 4C010000 		.4byte	.LFE98-.LFB98
 8062 0130 00000000 		.4byte	.LFB99
 8063 0134 0C000000 		.4byte	.LFE99-.LFB99
 8064 0138 00000000 		.4byte	.LFB100
 8065 013c C0000000 		.4byte	.LFE100-.LFB100
 8066 0140 00000000 		.4byte	.LFB101
 8067 0144 B8000000 		.4byte	.LFE101-.LFB101
 8068 0148 00000000 		.4byte	.LFB102
 8069 014c 4A000000 		.4byte	.LFE102-.LFB102
 8070 0150 00000000 		.4byte	.LFB103
 8071 0154 68000000 		.4byte	.LFE103-.LFB103
 8072 0158 00000000 		.4byte	.LFB104
 8073 015c 50000000 		.4byte	.LFE104-.LFB104
 8074 0160 00000000 		.4byte	.LFB105
 8075 0164 0C000000 		.4byte	.LFE105-.LFB105
 8076 0168 00000000 		.4byte	0
 8077 016c 00000000 		.4byte	0
 8078              		.section	.debug_ranges,"",%progbits
 8079              	.Ldebug_ranges0:
 8080 0000 00000000 		.4byte	.LFB63
 8081 0004 0C000000 		.4byte	.LFE63
 8082 0008 00000000 		.4byte	.LFB64
 8083 000c 2C000000 		.4byte	.LFE64
 8084 0010 00000000 		.4byte	.LFB65
 8085 0014 98010000 		.4byte	.LFE65
 8086 0018 00000000 		.4byte	.LFB66
 8087 001c A4010000 		.4byte	.LFE66
 8088 0020 00000000 		.4byte	.LFB67
 8089 0024 20000000 		.4byte	.LFE67
 8090 0028 00000000 		.4byte	.LFB68
 8091 002c 28000000 		.4byte	.LFE68
 8092 0030 00000000 		.4byte	.LFB69
 8093 0034 0A000000 		.4byte	.LFE69
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 166


 8094 0038 00000000 		.4byte	.LFB70
 8095 003c 28000000 		.4byte	.LFE70
 8096 0040 00000000 		.4byte	.LFB71
 8097 0044 40070000 		.4byte	.LFE71
 8098 0048 00000000 		.4byte	.LFB72
 8099 004c 60010000 		.4byte	.LFE72
 8100 0050 00000000 		.4byte	.LFB73
 8101 0054 18000000 		.4byte	.LFE73
 8102 0058 00000000 		.4byte	.LFB74
 8103 005c 18000000 		.4byte	.LFE74
 8104 0060 00000000 		.4byte	.LFB75
 8105 0064 54000000 		.4byte	.LFE75
 8106 0068 00000000 		.4byte	.LFB76
 8107 006c F4000000 		.4byte	.LFE76
 8108 0070 00000000 		.4byte	.LFB77
 8109 0074 18000000 		.4byte	.LFE77
 8110 0078 00000000 		.4byte	.LFB78
 8111 007c 18000000 		.4byte	.LFE78
 8112 0080 00000000 		.4byte	.LFB79
 8113 0084 22000000 		.4byte	.LFE79
 8114 0088 00000000 		.4byte	.LFB80
 8115 008c 1C000000 		.4byte	.LFE80
 8116 0090 00000000 		.4byte	.LFB81
 8117 0094 34000000 		.4byte	.LFE81
 8118 0098 00000000 		.4byte	.LFB82
 8119 009c 38000000 		.4byte	.LFE82
 8120 00a0 00000000 		.4byte	.LFB83
 8121 00a4 4C000000 		.4byte	.LFE83
 8122 00a8 00000000 		.4byte	.LFB84
 8123 00ac 38000000 		.4byte	.LFE84
 8124 00b0 00000000 		.4byte	.LFB85
 8125 00b4 38000000 		.4byte	.LFE85
 8126 00b8 00000000 		.4byte	.LFB86
 8127 00bc 38000000 		.4byte	.LFE86
 8128 00c0 00000000 		.4byte	.LFB87
 8129 00c4 14000000 		.4byte	.LFE87
 8130 00c8 00000000 		.4byte	.LFB88
 8131 00cc 18000000 		.4byte	.LFE88
 8132 00d0 00000000 		.4byte	.LFB89
 8133 00d4 18000000 		.4byte	.LFE89
 8134 00d8 00000000 		.4byte	.LFB90
 8135 00dc 18000000 		.4byte	.LFE90
 8136 00e0 00000000 		.4byte	.LFB91
 8137 00e4 18000000 		.4byte	.LFE91
 8138 00e8 00000000 		.4byte	.LFB92
 8139 00ec B8000000 		.4byte	.LFE92
 8140 00f0 00000000 		.4byte	.LFB93
 8141 00f4 E8050000 		.4byte	.LFE93
 8142 00f8 00000000 		.4byte	.LFB94
 8143 00fc 40000000 		.4byte	.LFE94
 8144 0100 00000000 		.4byte	.LFB95
 8145 0104 40000000 		.4byte	.LFE95
 8146 0108 00000000 		.4byte	.LFB96
 8147 010c 30020000 		.4byte	.LFE96
 8148 0110 00000000 		.4byte	.LFB97
 8149 0114 0C000000 		.4byte	.LFE97
 8150 0118 00000000 		.4byte	.LFB98
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 167


 8151 011c 4C010000 		.4byte	.LFE98
 8152 0120 00000000 		.4byte	.LFB99
 8153 0124 0C000000 		.4byte	.LFE99
 8154 0128 00000000 		.4byte	.LFB100
 8155 012c C0000000 		.4byte	.LFE100
 8156 0130 00000000 		.4byte	.LFB101
 8157 0134 B8000000 		.4byte	.LFE101
 8158 0138 00000000 		.4byte	.LFB102
 8159 013c 4A000000 		.4byte	.LFE102
 8160 0140 00000000 		.4byte	.LFB103
 8161 0144 68000000 		.4byte	.LFE103
 8162 0148 00000000 		.4byte	.LFB104
 8163 014c 50000000 		.4byte	.LFE104
 8164 0150 00000000 		.4byte	.LFB105
 8165 0154 0C000000 		.4byte	.LFE105
 8166 0158 00000000 		.4byte	0
 8167 015c 00000000 		.4byte	0
 8168              		.section	.debug_line,"",%progbits
 8169              	.Ldebug_line0:
 8170 0000 06080000 		.section	.debug_str,"MS",%progbits,1
 8170      02006701 
 8170      00000201 
 8170      FB0E0D00 
 8170      01010101 
 8171              	.LASF96:
 8172 0000 696E6974 		.ascii	"initTrackU\000"
 8172      54726163 
 8172      6B5500
 8173              	.LASF56:
 8174 000b 67325F73 		.ascii	"g2_speed\000"
 8174      70656564 
 8174      00
 8175              	.LASF101:
 8176 0014 6368616E 		.ascii	"changeToRF\000"
 8176      6765546F 
 8176      524600
 8177              	.LASF37:
 8178 001f 51554144 		.ascii	"QUAD_STOP\000"
 8178      5F53544F 
 8178      5000
 8179              	.LASF63:
 8180 0029 62757474 		.ascii	"button\000"
 8180      6F6E00
 8181              	.LASF127:
 8182 0030 74735F73 		.ascii	"ts_speed\000"
 8182      70656564 
 8182      00
 8183              	.LASF201:
 8184 0039 6C656674 		.ascii	"leftTurnCount\000"
 8184      5475726E 
 8184      436F756E 
 8184      7400
 8185              	.LASF166:
 8186 0047 696E6974 		.ascii	"initial_y_pos\000"
 8186      69616C5F 
 8186      795F706F 
 8186      7300
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 168


 8187              	.LASF65:
 8188 0055 6973725F 		.ascii	"isr_deadzone\000"
 8188      64656164 
 8188      7A6F6E65 
 8188      00
 8189              	.LASF142:
 8190 0062 64697265 		.ascii	"direction\000"
 8190      6374696F 
 8190      6E00
 8191              	.LASF191:
 8192 006c 70617468 		.ascii	"path\000"
 8192      00
 8193              	.LASF94:
 8194 0071 696E6974 		.ascii	"initBrake\000"
 8194      4272616B 
 8194      6500
 8195              	.LASF49:
 8196 007b 67305F64 		.ascii	"g0_direction\000"
 8196      69726563 
 8196      74696F6E 
 8196      00
 8197              	.LASF61:
 8198 0088 64697374 		.ascii	"distTurned\000"
 8198      5475726E 
 8198      656400
 8199              	.LASF178:
 8200 0093 656E7472 		.ascii	"entry\000"
 8200      7900
 8201              	.LASF9:
 8202 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 8202      206C6F6E 
 8202      6720756E 
 8202      7369676E 
 8202      65642069 
 8203              	.LASF194:
 8204 00b0 726F626F 		.ascii	"robot_direction\000"
 8204      745F6469 
 8204      72656374 
 8204      696F6E00 
 8205              	.LASF134:
 8206 00c0 666C6167 		.ascii	"flag_packet\000"
 8206      5F706163 
 8206      6B657400 
 8207              	.LASF87:
 8208 00cc 7475726E 		.ascii	"turnRight\000"
 8208      52696768 
 8208      7400
 8209              	.LASF46:
 8210 00d6 67305F78 		.ascii	"g0_xpos\000"
 8210      706F7300 
 8211              	.LASF124:
 8212 00de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8212      52784275 
 8212      66666572 
 8212      00
 8213              	.LASF158:
 8214 00eb 74617267 		.ascii	"target_distance_cm\000"
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 169


 8214      65745F64 
 8214      69737461 
 8214      6E63655F 
 8214      636D00
 8215              	.LASF126:
 8216 00fe 74735F75 		.ascii	"ts_update\000"
 8216      70646174 
 8216      6500
 8217              	.LASF35:
 8218 0108 555F5452 		.ascii	"U_TRACK\000"
 8218      41434B00 
 8219              	.LASF40:
 8220 0110 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8220      54524156 
 8220      45525345 
 8220      00
 8221              	.LASF80:
 8222 011d 72696768 		.ascii	"right\000"
 8222      7400
 8223              	.LASF120:
 8224 0123 73656E73 		.ascii	"sensorVals\000"
 8224      6F725661 
 8224      6C7300
 8225              	.LASF8:
 8226 012e 6C6F6E67 		.ascii	"long long int\000"
 8226      206C6F6E 
 8226      6720696E 
 8226      7400
 8227              	.LASF0:
 8228 013c 7369676E 		.ascii	"signed char\000"
 8228      65642063 
 8228      68617200 
 8229              	.LASF105:
 8230 0148 72696768 		.ascii	"rightSpeed\000"
 8230      74537065 
 8230      656400
 8231              	.LASF172:
 8232 0153 6D696E5F 		.ascii	"min_turn_quad\000"
 8232      7475726E 
 8232      5F717561 
 8232      6400
 8233              	.LASF169:
 8234 0161 66726F6E 		.ascii	"frontSensors\000"
 8234      7453656E 
 8234      736F7273 
 8234      00
 8235              	.LASF112:
 8236 016e 74726163 		.ascii	"trackLineU\000"
 8236      6B4C696E 
 8236      655500
 8237              	.LASF129:
 8238 0179 666C6167 		.ascii	"flag_ts_enc\000"
 8238      5F74735F 
 8238      656E6300 
 8239              	.LASF180:
 8240 0185 62756666 		.ascii	"buffer_state\000"
 8240      65725F73 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 170


 8240      74617465 
 8240      00
 8241              	.LASF91:
 8242 0192 696E6974 		.ascii	"initTurnRight\000"
 8242      5475726E 
 8242      52696768 
 8242      7400
 8243              	.LASF152:
 8244 01a0 64656164 		.ascii	"deadzone\000"
 8244      7A6F6E65 
 8244      00
 8245              	.LASF135:
 8246 01a9 666C6167 		.ascii	"flag_KB_string\000"
 8246      5F4B425F 
 8246      73747269 
 8246      6E6700
 8247              	.LASF111:
 8248 01b8 74726163 		.ascii	"trackLineZ\000"
 8248      6B4C696E 
 8248      655A00
 8249              	.LASF88:
 8250 01c3 7475726E 		.ascii	"turnLeft\000"
 8250      4C656674 
 8250      00
 8251              	.LASF31:
 8252 01cc 73746174 		.ascii	"state\000"
 8252      6500
 8253              	.LASF4:
 8254 01d2 6C6F6E67 		.ascii	"long int\000"
 8254      20696E74 
 8254      00
 8255              	.LASF30:
 8256 01db 55545552 		.ascii	"UTURN\000"
 8256      4E00
 8257              	.LASF163:
 8258 01e1 71756164 		.ascii	"quad_per_cm\000"
 8258      5F706572 
 8258      5F636D00 
 8259              	.LASF15:
 8260 01ed 75696E74 		.ascii	"uint8\000"
 8260      3800
 8261              	.LASF115:
 8262 01f3 636F6E76 		.ascii	"converted_val\000"
 8262      65727465 
 8262      645F7661 
 8262      6C00
 8263              	.LASF74:
 8264 0201 7365744C 		.ascii	"setLeftDir\000"
 8264      65667444 
 8264      697200
 8265              	.LASF21:
 8266 020c 646F7562 		.ascii	"double\000"
 8266      6C6500
 8267              	.LASF136:
 8268 0213 64617461 		.ascii	"dataready_flag\000"
 8268      72656164 
 8268      795F666C 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 171


 8268      616700
 8269              	.LASF59:
 8270 0222 6164635F 		.ascii	"adc_isr\000"
 8270      69737200 
 8271              	.LASF125:
 8272 022a 74735F65 		.ascii	"ts_enc\000"
 8272      6E6300
 8273              	.LASF133:
 8274 0231 666C6167 		.ascii	"flag_rx\000"
 8274      5F727800 
 8275              	.LASF17:
 8276 0239 75696E74 		.ascii	"uint32\000"
 8276      333200
 8277              	.LASF72:
 8278 0240 62797465 		.ascii	"byte_packet\000"
 8278      5F706163 
 8278      6B657400 
 8279              	.LASF177:
 8280 024c 6C696E65 		.ascii	"line\000"
 8280      00
 8281              	.LASF145:
 8282 0251 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 8282      5F63616C 
 8282      635F7768 
 8282      65656C73 
 8282      70656564 
 8283              	.LASF57:
 8284 0266 67325F64 		.ascii	"g2_direction\000"
 8284      69726563 
 8284      74696F6E 
 8284      00
 8285              	.LASF174:
 8286 0273 70726576 		.ascii	"prevVoltage\000"
 8286      566F6C74 
 8286      61676500 
 8287              	.LASF146:
 8288 027f 71756164 		.ascii	"quad_count1\000"
 8288      5F636F75 
 8288      6E743100 
 8289              	.LASF147:
 8290 028b 71756164 		.ascii	"quad_count2\000"
 8290      5F636F75 
 8290      6E743200 
 8291              	.LASF157:
 8292 0297 72696768 		.ascii	"rightSpeedLimit\000"
 8292      74537065 
 8292      65644C69 
 8292      6D697400 
 8293              	.LASF198:
 8294 02a7 696E7374 		.ascii	"instructionLength\000"
 8294      72756374 
 8294      696F6E4C 
 8294      656E6774 
 8294      6800
 8295              	.LASF39:
 8296 02b9 44455354 		.ascii	"DEST_TEST\000"
 8296      5F544553 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 172


 8296      5400
 8297              	.LASF184:
 8298 02c3 74726163 		.ascii	"track_mode\000"
 8298      6B5F6D6F 
 8298      646500
 8299              	.LASF25:
 8300 02ce 52545552 		.ascii	"RTURN\000"
 8300      4E00
 8301              	.LASF193:
 8302 02d4 64657374 		.ascii	"destination\000"
 8302      696E6174 
 8302      696F6E00 
 8303              	.LASF6:
 8304 02e0 5F5F7569 		.ascii	"__uint32_t\000"
 8304      6E743332 
 8304      5F7400
 8305              	.LASF60:
 8306 02eb 6973725F 		.ascii	"isr_quad1\000"
 8306      71756164 
 8306      3100
 8307              	.LASF10:
 8308 02f5 756E7369 		.ascii	"unsigned int\000"
 8308      676E6564 
 8308      20696E74 
 8308      00
 8309              	.LASF155:
 8310 0302 72696768 		.ascii	"right_duty_cycle\000"
 8310      745F6475 
 8310      74795F63 
 8310      79636C65 
 8310      00
 8311              	.LASF206:
 8312 0313 64617461 		.ascii	"data_main\000"
 8312      5F6D6169 
 8312      6E00
 8313              	.LASF173:
 8314 031d 6D61785F 		.ascii	"max_turn_quad\000"
 8314      7475726E 
 8314      5F717561 
 8314      6400
 8315              	.LASF189:
 8316 032b 73656E73 		.ascii	"sensorsDisabled\000"
 8316      6F727344 
 8316      69736162 
 8316      6C656400 
 8317              	.LASF139:
 8318 033b 666C6167 		.ascii	"flag_receive_ADC\000"
 8318      5F726563 
 8318      65697665 
 8318      5F414443 
 8318      00
 8319              	.LASF7:
 8320 034c 6C6F6E67 		.ascii	"long unsigned int\000"
 8320      20756E73 
 8320      69676E65 
 8320      6420696E 
 8320      7400
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 173


 8321              	.LASF95:
 8322 035e 696E6974 		.ascii	"initTrack\000"
 8322      54726163 
 8322      6B00
 8323              	.LASF92:
 8324 0368 696E6974 		.ascii	"initTurnU\000"
 8324      5475726E 
 8324      5500
 8325              	.LASF114:
 8326 0372 7363616C 		.ascii	"scalingFactor\000"
 8326      696E6746 
 8326      6163746F 
 8326      7200
 8327              	.LASF196:
 8328 0380 666F6F64 		.ascii	"food_length\000"
 8328      5F6C656E 
 8328      67746800 
 8329              	.LASF3:
 8330 038c 73686F72 		.ascii	"short unsigned int\000"
 8330      7420756E 
 8330      7369676E 
 8330      65642069 
 8330      6E7400
 8331              	.LASF78:
 8332 039f 73657453 		.ascii	"setSpeed\000"
 8332      70656564 
 8332      00
 8333              	.LASF18:
 8334 03a8 696E7438 		.ascii	"int8\000"
 8334      00
 8335              	.LASF23:
 8336 03ad 44524956 		.ascii	"DRIVE\000"
 8336      4500
 8337              	.LASF90:
 8338 03b3 696E6974 		.ascii	"initTurnLeft\000"
 8338      5475726E 
 8338      4C656674 
 8338      00
 8339              	.LASF102:
 8340 03c0 6368616E 		.ascii	"changeToBT\000"
 8340      6765546F 
 8340      425400
 8341              	.LASF27:
 8342 03cb 54524143 		.ascii	"TRACKING\000"
 8342      4B494E47 
 8342      00
 8343              	.LASF188:
 8344 03d4 696E7374 		.ascii	"instructionCount\000"
 8344      72756374 
 8344      696F6E43 
 8344      6F756E74 
 8344      00
 8345              	.LASF170:
 8346 03e5 6C656674 		.ascii	"leftOn\000"
 8346      4F6E00
 8347              	.LASF121:
 8348 03ec 75736250 		.ascii	"usbPutString\000"
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 174


 8348      75745374 
 8348      72696E67 
 8348      00
 8349              	.LASF62:
 8350 03f9 53746F70 		.ascii	"Stop_on_line\000"
 8350      5F6F6E5F 
 8350      6C696E65 
 8350      00
 8351              	.LASF34:
 8352 0406 43555256 		.ascii	"CURVE_TRACK\000"
 8352      455F5452 
 8352      41434B00 
 8353              	.LASF5:
 8354 0412 5F5F696E 		.ascii	"__int32_t\000"
 8354      7433325F 
 8354      7400
 8355              	.LASF36:
 8356 041c 53515541 		.ascii	"SQUARE_TRACK\000"
 8356      52455F54 
 8356      5241434B 
 8356      00
 8357              	.LASF128:
 8358 0429 74735F64 		.ascii	"ts_display\000"
 8358      6973706C 
 8358      617900
 8359              	.LASF123:
 8360 0434 75617274 		.ascii	"uart_set_PWM\000"
 8360      5F736574 
 8360      5F50574D 
 8360      00
 8361              	.LASF202:
 8362 0441 72696768 		.ascii	"rightTurnCount\000"
 8362      74547572 
 8362      6E436F75 
 8362      6E7400
 8363              	.LASF66:
 8364 0450 6973725F 		.ascii	"isr_turn_timer\000"
 8364      7475726E 
 8364      5F74696D 
 8364      657200
 8365              	.LASF108:
 8366 045f 696E7465 		.ascii	"interCalc\000"
 8366      7243616C 
 8366      6300
 8367              	.LASF131:
 8368 0469 666C6167 		.ascii	"flag_ts_speed\000"
 8368      5F74735F 
 8368      73706565 
 8368      6400
 8369              	.LASF41:
 8370 0477 72737369 		.ascii	"rssi\000"
 8370      00
 8371              	.LASF52:
 8372 047c 67315F73 		.ascii	"g1_speed\000"
 8372      70656564 
 8372      00
 8373              	.LASF11:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 175


 8374 0485 73697A65 		.ascii	"sizetype\000"
 8374      74797065 
 8374      00
 8375              	.LASF138:
 8376 048e 666C6167 		.ascii	"flag_print_rf\000"
 8376      5F707269 
 8376      6E745F72 
 8376      6600
 8377              	.LASF181:
 8378 049c 73797374 		.ascii	"system_state\000"
 8378      656D5F73 
 8378      74617465 
 8378      00
 8379              	.LASF51:
 8380 04a9 67315F79 		.ascii	"g1_ypos\000"
 8380      706F7300 
 8381              	.LASF53:
 8382 04b1 67315F64 		.ascii	"g1_direction\000"
 8382      69726563 
 8382      74696F6E 
 8382      00
 8383              	.LASF103:
 8384 04be 51756164 		.ascii	"Quad_Dec_response\000"
 8384      5F446563 
 8384      5F726573 
 8384      706F6E73 
 8384      6500
 8385              	.LASF24:
 8386 04d0 4C545552 		.ascii	"LTURN\000"
 8386      4E00
 8387              	.LASF167:
 8388 04d6 6272616B 		.ascii	"brakeFlag\000"
 8388      65466C61 
 8388      6700
 8389              	.LASF55:
 8390 04e0 67325F79 		.ascii	"g2_ypos\000"
 8390      706F7300 
 8391              	.LASF116:
 8392 04e8 72657375 		.ascii	"result_str\000"
 8392      6C745F73 
 8392      747200
 8393              	.LASF182:
 8394 04f3 70726576 		.ascii	"prev_movement_state\000"
 8394      5F6D6F76 
 8394      656D656E 
 8394      745F7374 
 8394      61746500 
 8395              	.LASF203:
 8396 0507 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8396      4320342E 
 8396      392E3320 
 8396      32303135 
 8396      30333033 
 8397 053a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8397      20726576 
 8397      6973696F 
 8397      6E203232 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 176


 8397      31323230 
 8398 056d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8398      66756E63 
 8398      74696F6E 
 8398      2D736563 
 8398      74696F6E 
 8399              	.LASF100:
 8400 0595 42545F72 		.ascii	"BT_rxInt\000"
 8400      78496E74 
 8400      00
 8401              	.LASF160:
 8402 059e 74617267 		.ascii	"target_distance_quad\000"
 8402      65745F64 
 8402      69737461 
 8402      6E63655F 
 8402      71756164 
 8403              	.LASF137:
 8404 05b3 666C6167 		.ascii	"flag_rf_transmission_active\000"
 8404      5F72665F 
 8404      7472616E 
 8404      736D6973 
 8404      73696F6E 
 8405              	.LASF154:
 8406 05cf 6C656674 		.ascii	"left_duty_cycle\000"
 8406      5F647574 
 8406      795F6379 
 8406      636C6500 
 8407              	.LASF73:
 8408 05df 73747269 		.ascii	"string_packet\000"
 8408      6E675F70 
 8408      61636B65 
 8408      7400
 8409              	.LASF20:
 8410 05ed 666C6F61 		.ascii	"float\000"
 8410      7400
 8411              	.LASF28:
 8412 05f3 54524143 		.ascii	"TRACKING_U\000"
 8412      4B494E47 
 8412      5F5500
 8413              	.LASF165:
 8414 05fe 696E6974 		.ascii	"initial_x_pos\000"
 8414      69616C5F 
 8414      785F706F 
 8414      7300
 8415              	.LASF86:
 8416 060c 64726976 		.ascii	"driveForwards\000"
 8416      65466F72 
 8416      77617264 
 8416      7300
 8417              	.LASF118:
 8418 061a 7072696E 		.ascii	"printString\000"
 8418      74537472 
 8418      696E6700 
 8419              	.LASF200:
 8420 0626 70726576 		.ascii	"prev_distTurned\000"
 8420      5F646973 
 8420      74547572 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 177


 8420      6E656400 
 8421              	.LASF168:
 8422 0636 706F7274 		.ascii	"portOpen\000"
 8422      4F70656E 
 8422      00
 8423              	.LASF75:
 8424 063f 73657452 		.ascii	"setRightDir\000"
 8424      69676874 
 8424      44697200 
 8425              	.LASF148:
 8426 064b 6C617374 		.ascii	"last_quad_count1\000"
 8426      5F717561 
 8426      645F636F 
 8426      756E7431 
 8426      00
 8427              	.LASF149:
 8428 065c 6C617374 		.ascii	"last_quad_count2\000"
 8428      5F717561 
 8428      645F636F 
 8428      756E7432 
 8428      00
 8429              	.LASF29:
 8430 066d 54524143 		.ascii	"TRACKING_SOFT\000"
 8430      4B494E47 
 8430      5F534F46 
 8430      5400
 8431              	.LASF143:
 8432 067b 42494E5F 		.ascii	"BIN_ENABLED\000"
 8432      454E4142 
 8432      4C454400 
 8433              	.LASF13:
 8434 0687 696E7433 		.ascii	"int32_t\000"
 8434      325F7400 
 8435              	.LASF1:
 8436 068f 756E7369 		.ascii	"unsigned char\000"
 8436      676E6564 
 8436      20636861 
 8436      7200
 8437              	.LASF16:
 8438 069d 75696E74 		.ascii	"uint16\000"
 8438      313600
 8439              	.LASF38:
 8440 06a4 52465F53 		.ascii	"RF_STOP\000"
 8440      544F5000 
 8441              	.LASF85:
 8442 06ac 6272616B 		.ascii	"brakeMotor\000"
 8442      654D6F74 
 8442      6F7200
 8443              	.LASF54:
 8444 06b7 67325F78 		.ascii	"g2_xpos\000"
 8444      706F7300 
 8445              	.LASF109:
 8446 06bf 6E657874 		.ascii	"nextSpeed\000"
 8446      53706565 
 8446      6400
 8447              	.LASF2:
 8448 06c9 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 178


 8448      7420696E 
 8448      7400
 8449              	.LASF33:
 8450 06d3 4E4F5F54 		.ascii	"NO_TRACK\000"
 8450      5241434B 
 8450      00
 8451              	.LASF106:
 8452 06dc 7363616C 		.ascii	"scalingLeft\000"
 8452      696E674C 
 8452      65667400 
 8453              	.LASF76:
 8454 06e8 68616E64 		.ascii	"handle_rx_binary\000"
 8454      6C655F72 
 8454      785F6269 
 8454      6E617279 
 8454      00
 8455              	.LASF98:
 8456 06f9 7278496E 		.ascii	"rxInt\000"
 8456      7400
 8457              	.LASF185:
 8458 06ff 62797465 		.ascii	"byteCount\000"
 8458      436F756E 
 8458      7400
 8459              	.LASF64:
 8460 0709 6973725F 		.ascii	"isr_adcTimer\000"
 8460      61646354 
 8460      696D6572 
 8460      00
 8461              	.LASF110:
 8462 0716 74726163 		.ascii	"trackLine\000"
 8462      6B4C696E 
 8462      6500
 8463              	.LASF140:
 8464 0720 6164635F 		.ascii	"adc_result\000"
 8464      72657375 
 8464      6C7400
 8465              	.LASF84:
 8466 072b 6272616B 		.ascii	"brakeRight\000"
 8466      65526967 
 8466      687400
 8467              	.LASF132:
 8468 0736 666C6167 		.ascii	"flag_ts_display\000"
 8468      5F74735F 
 8468      64697370 
 8468      6C617900 
 8469              	.LASF26:
 8470 0746 53544F50 		.ascii	"STOPPED\000"
 8470      50454400 
 8471              	.LASF71:
 8472 074e 7061636B 		.ascii	"packet_bytes\000"
 8472      65745F62 
 8472      79746573 
 8472      00
 8473              	.LASF22:
 8474 075b 6C6F6E67 		.ascii	"long double\000"
 8474      20646F75 
 8474      626C6500 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 179


 8475              	.LASF195:
 8476 0767 74726163 		.ascii	"tracked_direction\000"
 8476      6B65645F 
 8476      64697265 
 8476      6374696F 
 8476      6E00
 8477              	.LASF12:
 8478 0779 63686172 		.ascii	"char\000"
 8478      00
 8479              	.LASF32:
 8480 077e 6D6F6465 		.ascii	"mode\000"
 8480      00
 8481              	.LASF197:
 8482 0783 696E7374 		.ascii	"instructions\000"
 8482      72756374 
 8482      696F6E73 
 8482      00
 8483              	.LASF42:
 8484 0790 696E6465 		.ascii	"index\000"
 8484      7800
 8485              	.LASF199:
 8486 0796 6E547572 		.ascii	"nTurns\000"
 8486      6E7300
 8487              	.LASF68:
 8488 079d 61637469 		.ascii	"actionDebounce\000"
 8488      6F6E4465 
 8488      626F756E 
 8488      636500
 8489              	.LASF104:
 8490 07ac 6C656674 		.ascii	"leftSpeed\000"
 8490      53706565 
 8490      6400
 8491              	.LASF205:
 8492 07b6 433A5C55 		.ascii	"C:\\Users\\Tomas\\Google_Drive\\301\\CS301-Team-Rep"
 8492      73657273 
 8492      5C546F6D 
 8492      61735C47 
 8492      6F6F676C 
 8493 07e4 6F5C4353 		.ascii	"o\\CS301_Class.cydsn\000"
 8493      3330315F 
 8493      436C6173 
 8493      732E6379 
 8493      64736E00 
 8494              	.LASF130:
 8495 07f8 666C6167 		.ascii	"flag_ts_update\000"
 8495      5F74735F 
 8495      75706461 
 8495      746500
 8496              	.LASF176:
 8497 0807 64697370 		.ascii	"displaystring\000"
 8497      6C617973 
 8497      7472696E 
 8497      6700
 8498              	.LASF47:
 8499 0815 67305F79 		.ascii	"g0_ypos\000"
 8499      706F7300 
 8500              	.LASF156:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 180


 8501 081d 6C656674 		.ascii	"leftSpeedLimit\000"
 8501      53706565 
 8501      644C696D 
 8501      697400
 8502              	.LASF43:
 8503 082c 726F626F 		.ascii	"robot_xpos\000"
 8503      745F7870 
 8503      6F7300
 8504              	.LASF89:
 8505 0837 7475726E 		.ascii	"turnU\000"
 8505      5500
 8506              	.LASF186:
 8507 083d 7061636B 		.ascii	"packet\000"
 8507      657400
 8508              	.LASF82:
 8509 0844 636F756E 		.ascii	"countsRight\000"
 8509      74735269 
 8509      67687400 
 8510              	.LASF117:
 8511 0850 7072696E 		.ascii	"print_RF\000"
 8511      745F5246 
 8511      00
 8512              	.LASF83:
 8513 0859 6272616B 		.ascii	"brakeLeft\000"
 8513      654C6566 
 8513      7400
 8514              	.LASF179:
 8515 0863 75736242 		.ascii	"usbBuffer\000"
 8515      75666665 
 8515      7200
 8516              	.LASF50:
 8517 086d 67315F78 		.ascii	"g1_xpos\000"
 8517      706F7300 
 8518              	.LASF99:
 8519 0875 72665F63 		.ascii	"rf_char\000"
 8519      68617200 
 8520              	.LASF164:
 8521 087d 696E6974 		.ascii	"initial_pos_valid\000"
 8521      69616C5F 
 8521      706F735F 
 8521      76616C69 
 8521      6400
 8522              	.LASF77:
 8523 088f 72657665 		.ascii	"reverseDirection\000"
 8523      72736544 
 8523      69726563 
 8523      74696F6E 
 8523      00
 8524              	.LASF175:
 8525 08a0 70726576 		.ascii	"prevVoltage2\000"
 8525      566F6C74 
 8525      61676532 
 8525      00
 8526              	.LASF93:
 8527 08ad 696E6974 		.ascii	"initForward\000"
 8527      466F7277 
 8527      61726400 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 181


 8528              	.LASF14:
 8529 08b9 75696E74 		.ascii	"uint32_t\000"
 8529      33325F74 
 8529      00
 8530              	.LASF141:
 8531 08c2 4C6F7374 		.ascii	"LostFlag\000"
 8531      466C6167 
 8531      00
 8532              	.LASF70:
 8533 08cb 6E657874 		.ascii	"nextStepDist\000"
 8533      53746570 
 8533      44697374 
 8533      00
 8534              	.LASF159:
 8535 08d8 61636375 		.ascii	"accum_dist\000"
 8535      6D5F6469 
 8535      737400
 8536              	.LASF58:
 8537 08e3 42545F74 		.ascii	"BT_txInt\000"
 8537      78496E74 
 8537      00
 8538              	.LASF183:
 8539 08ec 6D6F7665 		.ascii	"movement_state\000"
 8539      6D656E74 
 8539      5F737461 
 8539      746500
 8540              	.LASF171:
 8541 08fb 72696768 		.ascii	"rightOn\000"
 8541      744F6E00 
 8542              	.LASF144:
 8543 0903 42545F45 		.ascii	"BT_ENABLED\000"
 8543      4E41424C 
 8543      454400
 8544              	.LASF122:
 8545 090e 75736250 		.ascii	"usbPutChar\000"
 8545      75744368 
 8545      617200
 8546              	.LASF97:
 8547 0919 696E6974 		.ascii	"inittrackLineZ\000"
 8547      74726163 
 8547      6B4C696E 
 8547      655A00
 8548              	.LASF190:
 8549 0928 666F6F64 		.ascii	"food_list\000"
 8549      5F6C6973 
 8549      7400
 8550              	.LASF107:
 8551 0932 7363616C 		.ascii	"scalingRight\000"
 8551      696E6752 
 8551      69676874 
 8551      00
 8552              	.LASF161:
 8553 093f 72656163 		.ascii	"reached_target\000"
 8553      6865645F 
 8553      74617267 
 8553      657400
 8554              	.LASF44:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 182


 8555 094e 726F626F 		.ascii	"robot_ypos\000"
 8555      745F7970 
 8555      6F7300
 8556              	.LASF19:
 8557 0959 696E7431 		.ascii	"int16\000"
 8557      3600
 8558              	.LASF81:
 8559 095f 636F756E 		.ascii	"countsLeft\000"
 8559      74734C65 
 8559      667400
 8560              	.LASF153:
 8561 096a 73746172 		.ascii	"start_turn_count\000"
 8561      745F7475 
 8561      726E5F63 
 8561      6F756E74 
 8561      00
 8562              	.LASF187:
 8563 097b 73706565 		.ascii	"speed\000"
 8563      6400
 8564              	.LASF162:
 8565 0981 6F766572 		.ascii	"overshot_target\000"
 8565      73686F74 
 8565      5F746172 
 8565      67657400 
 8566              	.LASF69:
 8567 0991 6E657874 		.ascii	"nextStep\000"
 8567      53746570 
 8567      00
 8568              	.LASF204:
 8569 099a 2E5C6D61 		.ascii	".\\main.c\000"
 8569      696E2E63 
 8569      00
 8570              	.LASF150:
 8571 09a3 71756164 		.ascii	"quad_diff1\000"
 8571      5F646966 
 8571      663100
 8572              	.LASF151:
 8573 09ae 71756164 		.ascii	"quad_diff2\000"
 8573      5F646966 
 8573      663200
 8574              	.LASF192:
 8575 09b9 73746172 		.ascii	"start\000"
 8575      7400
 8576              	.LASF67:
 8577 09bf 6D61696E 		.ascii	"main\000"
 8577      00
 8578              	.LASF79:
 8579 09c4 6C656674 		.ascii	"left\000"
 8579      00
 8580              	.LASF48:
 8581 09c9 67305F73 		.ascii	"g0_speed\000"
 8581      70656564 
 8581      00
 8582              	.LASF45:
 8583 09d2 726F626F 		.ascii	"robot_orientation\000"
 8583      745F6F72 
 8583      69656E74 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\cctwCZYf.s 			page 183


 8583      6174696F 
 8583      6E00
 8584              	.LASF113:
 8585 09e4 7072696E 		.ascii	"print_ADC\000"
 8585      745F4144 
 8585      4300
 8586              	.LASF119:
 8587 09ee 72656164 		.ascii	"readFrontSensors\000"
 8587      46726F6E 
 8587      7453656E 
 8587      736F7273 
 8587      00
 8588              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
